local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/OrionLibKeybind.lua')))()

OrionLib:MakeNotification({
    Name = "制作者",
    Content = "R-Exploit",
    Image = "rbxassetid://4483345998",
    Time = 5
})
local Window = OrionLib:MakeWindow({
    Name = "REG00KA 2.1.2",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest",
    IntroText = "CSUI"
})
local Tab = Window:MakeTab({
    Name = "main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
Tab:AddButton({
	Name = "Alysee",
	Callback = function()
--loadstring(game:HttpGet("https://raw.githubusercontent.com/NathTheDev/AlysseAndroid/main/AlysseUI.lua"))()

function identifyexecutor()
    return "Alysse Android"
 end
 
 local KeySystemUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/MaGiXxScripter0/keysystemv2api/master/ui/xrer_mstudio45.lua"))()
 KeySystemUI.New({
     ApplicationName = "AlysseAndroid", -- Your Key System Application Name
     Name = "Alysse Android", -- Your Script name
     Info = "Get Key To Access Alysse Android🔥", -- Info text in the GUI, keep empty for default text.
     DiscordInvite = "", -- Optional.
     AuthType = "clientid" -- Can select verifycation with ClientId or IP ("clientid" or "ip")
 })
 repeat task.wait() until KeySystemUI.Finished() or KeySystemUI.Closed
 if KeySystemUI.Finished() and KeySystemUI.Closed == false then
 local AlysseAndroid = Instance.new("ScreenGui")
 local main = Instance.new("Frame")
 local sidebar = Instance.new("Frame")
 local UICorner = Instance.new("UICorner")
 local UIStroke = Instance.new("UIStroke")
 local UIListLayout = Instance.new("UIListLayout")
 local UIPadding = Instance.new("UIPadding")
 local home = Instance.new("ImageButton")
 local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
 local player = Instance.new("ImageButton")
 local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
 local executor = Instance.new("ImageButton")
 local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
 local visuals = Instance.new("ImageButton")
 local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
 local cloud = Instance.new("ImageButton")
 local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
 local settings = Instance.new("ImageButton")
 local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
 local UICorner_2 = Instance.new("UICorner")
 local tabs = Instance.new("Folder")
 local home_2 = Instance.new("Frame")
 local UICorner_3 = Instance.new("UICorner")
 local UIListLayout_2 = Instance.new("UIListLayout")
 local UIPadding_2 = Instance.new("UIPadding")
 local firstsec = Instance.new("Frame")
 local UICorner_4 = Instance.new("UICorner")
 local greet = Instance.new("TextLabel")
 local UIStroke_2 = Instance.new("UIStroke")
 local profile = Instance.new("ImageLabel")
 local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
 local UICorner_5 = Instance.new("UICorner")
 local secondsec = Instance.new("Frame")
 local UICorner_6 = Instance.new("UICorner")
 local UIStroke_3 = Instance.new("UIStroke")
 local gamethumb = Instance.new("ImageLabel")
 local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
 local UICorner_7 = Instance.new("UICorner")
 local UIStroke_4 = Instance.new("UIStroke")
 local rightside = Instance.new("Frame")
 local UICorner_8 = Instance.new("UICorner")
 local UIStroke_5 = Instance.new("UIStroke")
 local UIListLayout_3 = Instance.new("UIListLayout")
 local gamename = Instance.new("TextLabel")
 local UIStroke_6 = Instance.new("UIStroke")
 local maxplayers = Instance.new("TextLabel")
 local UIStroke_7 = Instance.new("UIStroke")
 local UIPadding_3 = Instance.new("UIPadding")
 local created = Instance.new("TextLabel")
 local UIStroke_8 = Instance.new("UIStroke")
 local updated = Instance.new("TextLabel")
 local UIStroke_9 = Instance.new("UIStroke")
 local exec = Instance.new("Frame")
 local UICorner_9 = Instance.new("UICorner")
 local sect = Instance.new("ScrollingFrame")
 local UICorner_10 = Instance.new("UICorner")
 local UIStroke_10 = Instance.new("UIStroke")
 local execbox = Instance.new("TextBox")
 local UICorner_11 = Instance.new("UICorner")
 local execute = Instance.new("TextButton")
 local UIStroke_11 = Instance.new("UIStroke")
 local UICorner_12 = Instance.new("UICorner")
 local copy = Instance.new("TextButton")
 local UIStroke_12 = Instance.new("UIStroke")
 local UICorner_13 = Instance.new("UICorner")
 local clear = Instance.new("TextButton")
 local UIStroke_13 = Instance.new("UIStroke")
 local UICorner_14 = Instance.new("UICorner")
 local paste = Instance.new("TextButton")
 local UIStroke_14 = Instance.new("UIStroke")
 local UICorner_15 = Instance.new("UICorner")
 local executeclipboard = Instance.new("TextButton")
 local UIStroke_15 = Instance.new("UIStroke")
 local UICorner_16 = Instance.new("UICorner")
 local visuals_2 = Instance.new("Frame")
 local UICorner_17 = Instance.new("UICorner")
 local UIListLayout_4 = Instance.new("UIListLayout")
 local UIPadding_4 = Instance.new("UIPadding")
 local enableesp = Instance.new("Frame")
 local UIStroke_16 = Instance.new("UIStroke")
 local UICorner_18 = Instance.new("UICorner")
 local enable = Instance.new("TextButton")
 local UICorner_19 = Instance.new("UICorner")
 local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")
 local text = Instance.new("TextLabel")
 local UICorner_20 = Instance.new("UICorner")
 local tracers = Instance.new("Frame")
 local UIStroke_17 = Instance.new("UIStroke")
 local UICorner_21 = Instance.new("UICorner")
 local enable_2 = Instance.new("TextButton")
 local UICorner_22 = Instance.new("UICorner")
 local UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint")
 local text_2 = Instance.new("TextLabel")
 local UICorner_23 = Instance.new("UICorner")
 local headdot = Instance.new("Frame")
 local UIStroke_18 = Instance.new("UIStroke")
 local UICorner_24 = Instance.new("UICorner")
 local enable_3 = Instance.new("TextButton")
 local UICorner_25 = Instance.new("UICorner")
 local UIAspectRatioConstraint_11 = Instance.new("UIAspectRatioConstraint")
 local text_3 = Instance.new("TextLabel")
 local UICorner_26 = Instance.new("UICorner")
 local settings_2 = Instance.new("Frame")
 local UICorner_27 = Instance.new("UICorner")
 local comingsoon = Instance.new("TextLabel")
 local cloud_2 = Instance.new("Frame")
 local UICorner_28 = Instance.new("UICorner")
 local section = Instance.new("ScrollingFrame")
 local UICorner_29 = Instance.new("UICorner")
 local UIStroke_19 = Instance.new("UIStroke")
 local UIGridLayout = Instance.new("UIGridLayout")
 local UIPadding_5 = Instance.new("UIPadding")
 local scriptexample = Instance.new("Frame")
 local UIStroke_20 = Instance.new("UIStroke")
 local UICorner_30 = Instance.new("UICorner")
 local scriptname = Instance.new("TextLabel")
 local UIStroke_21 = Instance.new("UIStroke")
 local copy_2 = Instance.new("TextButton")
 local UIStroke_22 = Instance.new("UIStroke")
 local UICorner_31 = Instance.new("UICorner")
 local execute_2 = Instance.new("TextButton")
 local UIStroke_23 = Instance.new("UIStroke")
 local UICorner_32 = Instance.new("UICorner")
 local scriptimg = Instance.new("ImageLabel")
 local searchbox = Instance.new("TextBox")
 local UIStroke_24 = Instance.new("UIStroke")
 local UICorner_33 = Instance.new("UICorner")
 local search = Instance.new("ImageButton")
 local UIAspectRatioConstraint_12 = Instance.new("UIAspectRatioConstraint")
 local UIStroke_25 = Instance.new("UIStroke")
 local UICorner_34 = Instance.new("UICorner")
 local player_2 = Instance.new("Frame")
 local UICorner_35 = Instance.new("UICorner")
 local UIListLayout_5 = Instance.new("UIListLayout")
 local UIPadding_6 = Instance.new("UIPadding")
 local firstsec_2 = Instance.new("Frame")
 local UICorner_36 = Instance.new("UICorner")
 local UIStroke_26 = Instance.new("UIStroke")
 local walkspeed = Instance.new("TextBox")
 local UICorner_37 = Instance.new("UICorner")
 local UIStroke_27 = Instance.new("UIStroke")
 local UIListLayout_6 = Instance.new("UIListLayout")
 local UIPadding_7 = Instance.new("UIPadding")
 local jumppower = Instance.new("TextBox")
 local UICorner_38 = Instance.new("UICorner")
 local UIStroke_28 = Instance.new("UIStroke")
 local secondsec_2 = Instance.new("Frame")
 local UICorner_39 = Instance.new("UICorner")
 local UIStroke_29 = Instance.new("UIStroke")
 local UIListLayout_7 = Instance.new("UIListLayout")
 local UIPadding_8 = Instance.new("UIPadding")
 local autojump = Instance.new("Frame")
 local UIStroke_30 = Instance.new("UIStroke")
 local UICorner_40 = Instance.new("UICorner")
 local enable_4 = Instance.new("TextButton")
 local UICorner_41 = Instance.new("UICorner")
 local UIAspectRatioConstraint_13 = Instance.new("UIAspectRatioConstraint")
 local text_4 = Instance.new("TextLabel")
 local UICorner_42 = Instance.new("UICorner")
 local autojump_2 = Instance.new("Frame")
 local UIStroke_31 = Instance.new("UIStroke")
 local UICorner_43 = Instance.new("UICorner")
 local enable_5 = Instance.new("TextButton")
 local UICorner_44 = Instance.new("UICorner")
 local UIAspectRatioConstraint_14 = Instance.new("UIAspectRatioConstraint")
 local text_5 = Instance.new("TextLabel")
 local UICorner_45 = Instance.new("UICorner")
 local autojump_3 = Instance.new("Frame")
 local UIStroke_32 = Instance.new("UIStroke")
 local UICorner_46 = Instance.new("UICorner")
 local enable_6 = Instance.new("TextButton")
 local UICorner_47 = Instance.new("UICorner")
 local UIAspectRatioConstraint_15 = Instance.new("UIAspectRatioConstraint")
 local text_6 = Instance.new("TextLabel")
 local UICorner_48 = Instance.new("UICorner")
 local updatetext = Instance.new("TextLabel")
 local close = Instance.new("ImageButton")
 local UIAspectRatioConstraint_16 = Instance.new("UIAspectRatioConstraint")
 local open = Instance.new("ImageButton")
 local UIStroke_33 = Instance.new("UIStroke")
 local UICorner_49 = Instance.new("UICorner")
 local UIAspectRatioConstraint_17 = Instance.new("UIAspectRatioConstraint")
 
 --Properties:
 
 AlysseAndroid.Name = "AlysseAndroid"
 AlysseAndroid.Parent = (game:GetService("CoreGui") or gethui())
 AlysseAndroid.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
 
 main.Name = "main"
 main.Parent = AlysseAndroid
 main.AnchorPoint = Vector2.new(0.5, 0.5)
 main.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
 main.BorderColor3 = Color3.fromRGB(0, 0, 0)
 main.BorderSizePixel = 0
 main.Position = UDim2.new(0.499551564, 0, 0.515306115, 0)
 main.Size = UDim2.new(0, 519, 0, 311)
 main.Visible = false
 
 sidebar.Name = "sidebar"
 sidebar.Parent = main
 sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 sidebar.BorderColor3 = Color3.fromRGB(0, 0, 0)
 sidebar.BorderSizePixel = 0
 sidebar.Position = UDim2.new(0, 0, 4.90636296e-08, 0)
 sidebar.Size = UDim2.new(0, 55, 0, 311)
 
 UICorner.CornerRadius = UDim.new(0, 4)
 UICorner.Parent = sidebar
 
 UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke.Color = Color3.fromRGB(143, 143, 143)
 UIStroke.Thickness = 0.800
 UIStroke.Transparency = 0.800
 UIStroke.Parent = sidebar
 
 UIListLayout.Parent = sidebar
 UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
 UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout.Padding = UDim.new(0, 10)
 
 UIPadding.Parent = sidebar
 UIPadding.PaddingBottom = UDim.new(0, 10)
 UIPadding.PaddingLeft = UDim.new(0, 1)
 UIPadding.PaddingRight = UDim.new(0, 3)
 UIPadding.PaddingTop = UDim.new(0, 10)
 
 home.Name = "home"
 home.Parent = sidebar
 home.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 home.BackgroundTransparency = 1.000
 home.BorderColor3 = Color3.fromRGB(0, 0, 0)
 home.BorderSizePixel = 0
 home.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
 home.Size = UDim2.new(0, 30, 0, 30)
 home.Image = "rbxassetid://12967526257"
 home.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint.Parent = home
 
 player.Name = "player"
 player.Parent = sidebar
 player.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 player.BackgroundTransparency = 1.000
 player.BorderColor3 = Color3.fromRGB(0, 0, 0)
 player.BorderSizePixel = 0
 player.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
 player.Size = UDim2.new(0, 30, 0, 30)
 player.Image = "rbxassetid://12974429433"
 player.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_2.Parent = player
 
 executor.Name = "executor"
 executor.Parent = sidebar
 executor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 executor.BackgroundTransparency = 1.000
 executor.BorderColor3 = Color3.fromRGB(0, 0, 0)
 executor.BorderSizePixel = 0
 executor.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
 executor.Size = UDim2.new(0, 30, 0, 30)
 executor.Image = "rbxassetid://11419714821"
 executor.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_3.Parent = executor
 
 visuals.Name = "visuals"
 visuals.Parent = sidebar
 visuals.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 visuals.BackgroundTransparency = 1.000
 visuals.BorderColor3 = Color3.fromRGB(0, 0, 0)
 visuals.BorderSizePixel = 0
 visuals.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
 visuals.Size = UDim2.new(0, 30, 0, 30)
 visuals.Visible = false
 visuals.Image = "rbxassetid://11963367322"
 visuals.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_4.Parent = visuals
 
 cloud.Name = "cloud"
 cloud.Parent = sidebar
 cloud.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 cloud.BackgroundTransparency = 1.000
 cloud.BorderColor3 = Color3.fromRGB(0, 0, 0)
 cloud.BorderSizePixel = 0
 cloud.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
 cloud.Size = UDim2.new(0, 30, 0, 30)
 cloud.Image = "rbxassetid://12975590427"
 cloud.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_5.Parent = cloud
 
 settings.Name = "settings"
 settings.Parent = sidebar
 settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 settings.BackgroundTransparency = 1.000
 settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
 settings.BorderSizePixel = 0
 settings.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
 settings.Size = UDim2.new(0, 30, 0, 30)
 settings.Image = "rbxassetid://11293977610"
 settings.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_6.Parent = settings
 
 UICorner_2.CornerRadius = UDim.new(0, 4)
 UICorner_2.Parent = main
 
 tabs.Name = "tabs"
 tabs.Parent = main
 
 home_2.Name = "home"
 home_2.Parent = tabs
 home_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 home_2.BackgroundTransparency = 1.000
 home_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 home_2.BorderSizePixel = 0
 home_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
 home_2.Size = UDim2.new(0, 464, 0, 311)
 
 UICorner_3.CornerRadius = UDim.new(0, 4)
 UICorner_3.Parent = home_2
 
 UIListLayout_2.Parent = home_2
 UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
 UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout_2.Padding = UDim.new(0, 10)
 
 UIPadding_2.Parent = home_2
 UIPadding_2.PaddingTop = UDim.new(0, 10)
 
 firstsec.Name = "firstsec"
 firstsec.Parent = home_2
 firstsec.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 firstsec.BorderColor3 = Color3.fromRGB(0, 0, 0)
 firstsec.BorderSizePixel = 0
 firstsec.Position = UDim2.new(0.0172413792, 0, 0, 0)
 firstsec.Size = UDim2.new(0, 448, 0, 87)
 
 UICorner_4.CornerRadius = UDim.new(0, 4)
 UICorner_4.Parent = firstsec
 
 greet.Name = "greet"
 greet.Parent = firstsec
 greet.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 greet.BackgroundTransparency = 1.000
 greet.BorderColor3 = Color3.fromRGB(0, 0, 0)
 greet.BorderSizePixel = 0
 greet.Position = UDim2.new(0.22301729, 0, 0.284686744, 0)
 greet.Size = UDim2.new(0, 342, 0, 37)
 greet.Font = Enum.Font.Gotham
 greet.Text = "Greetings, Name"
 greet.TextColor3 = Color3.fromRGB(145, 145, 145)
 greet.TextSize = 18.000
 greet.TextWrapped = true
 greet.TextXAlignment = Enum.TextXAlignment.Left
 
 UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_2.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_2.Thickness = 0.800
 UIStroke_2.Transparency = 0.800
 UIStroke_2.Parent = firstsec
 
 profile.Name = "profile"
 profile.Parent = firstsec
 profile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 profile.BackgroundTransparency = 1.000
 profile.BorderColor3 = Color3.fromRGB(0, 0, 0)
 profile.BorderSizePixel = 0
 profile.Position = UDim2.new(0.0454223491, 0, 0.107577272, 0)
 profile.Size = UDim2.new(0, 89, 0, 65)
 profile.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
 
 UIAspectRatioConstraint_7.Parent = profile
 
 UICorner_5.CornerRadius = UDim.new(0, 100)
 UICorner_5.Parent = profile
 
 secondsec.Name = "secondsec"
 secondsec.Parent = home_2
 secondsec.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 secondsec.BorderColor3 = Color3.fromRGB(0, 0, 0)
 secondsec.BorderSizePixel = 0
 secondsec.Position = UDim2.new(0.00215517241, 0, 0.322259128, 0)
 secondsec.Size = UDim2.new(0, 448, 0, 196)
 
 UICorner_6.CornerRadius = UDim.new(0, 4)
 UICorner_6.Parent = secondsec
 
 UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_3.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_3.Thickness = 0.800
 UIStroke_3.Transparency = 0.800
 UIStroke_3.Parent = secondsec
 
 gamethumb.Name = "gamethumb"
 gamethumb.Parent = secondsec
 gamethumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 gamethumb.BackgroundTransparency = 1.000
 gamethumb.BorderColor3 = Color3.fromRGB(0, 0, 0)
 gamethumb.BorderSizePixel = 0
 gamethumb.Position = UDim2.new(0.0431902744, 0, 0.0663265288, 0)
 gamethumb.Size = UDim2.new(0, 174, 0, 173)
 gamethumb.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
 
 UIAspectRatioConstraint_8.Parent = gamethumb
 
 UICorner_7.CornerRadius = UDim.new(0, 4)
 UICorner_7.Parent = gamethumb
 
 UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_4.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_4.Thickness = 0.800
 UIStroke_4.Transparency = 0.800
 UIStroke_4.Parent = gamethumb
 
 rightside.Name = "rightside"
 rightside.Parent = secondsec
 rightside.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 rightside.BackgroundTransparency = 1.000
 rightside.BorderColor3 = Color3.fromRGB(0, 0, 0)
 rightside.BorderSizePixel = 0
 rightside.Position = UDim2.new(0.448660702, 0, 0.0663265288, 0)
 rightside.Size = UDim2.new(0, 240, 0, 173)
 
 UICorner_8.CornerRadius = UDim.new(0, 4)
 UICorner_8.Parent = rightside
 
 UIStroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_5.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_5.Thickness = 0.800
 UIStroke_5.Transparency = 0.800
 UIStroke_5.Parent = rightside
 
 UIListLayout_3.Parent = rightside
 UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout_3.Padding = UDim.new(0, 8)
 
 gamename.Name = "gamename"
 gamename.Parent = rightside
 gamename.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 gamename.BackgroundTransparency = 1.000
 gamename.BorderColor3 = Color3.fromRGB(0, 0, 0)
 gamename.BorderSizePixel = 0
 gamename.Position = UDim2.new(0.450695843, 0, 0.0652989, 0)
 gamename.Size = UDim2.new(0, 240, 0, 37)
 gamename.Font = Enum.Font.Gotham
 gamename.Text = "Game Name"
 gamename.TextColor3 = Color3.fromRGB(145, 145, 145)
 gamename.TextSize = 16.000
 gamename.TextWrapped = true
 
 UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_6.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_6.Thickness = 0.800
 UIStroke_6.Transparency = 0.800
 UIStroke_6.Parent = gamename
 
 maxplayers.Name = "maxplayers"
 maxplayers.Parent = rightside
 maxplayers.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 maxplayers.BackgroundTransparency = 1.000
 maxplayers.BorderColor3 = Color3.fromRGB(0, 0, 0)
 maxplayers.BorderSizePixel = 0
 maxplayers.Position = UDim2.new(0.12926729, 0, 0.595911145, 0)
 maxplayers.Size = UDim2.new(0, 240, 0, 37)
 maxplayers.Font = Enum.Font.Gotham
 maxplayers.Text = "0 / 0"
 maxplayers.TextColor3 = Color3.fromRGB(145, 145, 145)
 maxplayers.TextSize = 16.000
 maxplayers.TextWrapped = true
 
 UIStroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_7.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_7.Thickness = 0.800
 UIStroke_7.Transparency = 0.800
 UIStroke_7.Parent = maxplayers
 
 UIPadding_3.Parent = rightside
 UIPadding_3.PaddingBottom = UDim.new(0, 5)
 
 created.Name = "created"
 created.Parent = rightside
 created.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 created.BackgroundTransparency = 1.000
 created.BorderColor3 = Color3.fromRGB(0, 0, 0)
 created.BorderSizePixel = 0
 created.Position = UDim2.new(0.12926729, 0, 0.595911145, 0)
 created.Size = UDim2.new(0, 240, 0, 37)
 created.Font = Enum.Font.Gotham
 created.Text = "Created:"
 created.TextColor3 = Color3.fromRGB(145, 145, 145)
 created.TextSize = 16.000
 created.TextWrapped = true
 
 UIStroke_8.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_8.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_8.Thickness = 0.800
 UIStroke_8.Transparency = 0.800
 UIStroke_8.Parent = created
 
 updated.Name = "updated"
 updated.Parent = rightside
 updated.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 updated.BackgroundTransparency = 1.000
 updated.BorderColor3 = Color3.fromRGB(0, 0, 0)
 updated.BorderSizePixel = 0
 updated.Position = UDim2.new(0.12926729, 0, 0.595911145, 0)
 updated.Size = UDim2.new(0, 240, 0, 37)
 updated.Font = Enum.Font.Gotham
 updated.Text = "Updated:"
 updated.TextColor3 = Color3.fromRGB(145, 145, 145)
 updated.TextSize = 16.000
 updated.TextWrapped = true
 
 UIStroke_9.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_9.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_9.Thickness = 0.800
 UIStroke_9.Transparency = 0.800
 UIStroke_9.Parent = updated
 
 exec.Name = "exec"
 exec.Parent = tabs
 exec.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 exec.BackgroundTransparency = 1.000
 exec.BorderColor3 = Color3.fromRGB(0, 0, 0)
 exec.BorderSizePixel = 0
 exec.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
 exec.Size = UDim2.new(0, 464, 0, 311)
 exec.Visible = false
 
 UICorner_9.CornerRadius = UDim.new(0, 4)
 UICorner_9.Parent = exec
 
 sect.Name = "sect"
 sect.Parent = exec
 sect.Active = true
 sect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 sect.BackgroundTransparency = 1.000
 sect.BorderColor3 = Color3.fromRGB(0, 0, 0)
 sect.BorderSizePixel = 0
 sect.Position = UDim2.new(0.019396551, 0, 0.0321543664, 0)
 sect.Size = UDim2.new(0, 448, 0, 249)
 sect.ZIndex = 2
 sect.CanvasSize = UDim2.new(0, 0, 0, 0)
 sect.ScrollBarThickness = 5
 
 UICorner_10.CornerRadius = UDim.new(0, 4)
 UICorner_10.Parent = sect
 
 UIStroke_10.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_10.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_10.Thickness = 0.800
 UIStroke_10.Transparency = 0.800
 UIStroke_10.Parent = sect
 
 execbox.Name = "execbox"
 execbox.Parent = sect
 execbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 execbox.BackgroundTransparency = 1.000
 execbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
 execbox.BorderSizePixel = 0
 execbox.Position = UDim2.new(0.0178571437, 0, 0, 0)
 execbox.Size = UDim2.new(0, 434, 0, 307)
 execbox.ClearTextOnFocus = false
 execbox.Font = Enum.Font.Gotham
 execbox.MultiLine = true
 execbox.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
 execbox.PlaceholderText = "-- Welcome To Alysse!"
 execbox.Text = ""
 execbox.TextColor3 = Color3.fromRGB(145, 145, 145)
 execbox.TextSize = 14.000
 execbox.TextWrapped = true
 execbox.TextXAlignment = Enum.TextXAlignment.Left
 execbox.TextYAlignment = Enum.TextYAlignment.Top
 
 UICorner_11.CornerRadius = UDim.new(0, 4)
 UICorner_11.Parent = execbox
 
 execute.Name = "execute"
 execute.Parent = exec
 execute.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 execute.BorderColor3 = Color3.fromRGB(0, 0, 0)
 execute.BorderSizePixel = 0
 execute.Position = UDim2.new(0.0294797178, 0, 0.859954357, 0)
 execute.Size = UDim2.new(0, 74, 0, 36)
 execute.AutoButtonColor = false
 execute.Font = Enum.Font.Gotham
 execute.Text = "Execute"
 execute.TextColor3 = Color3.fromRGB(145, 145, 145)
 execute.TextSize = 14.000
 
 UIStroke_11.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_11.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_11.Thickness = 0.800
 UIStroke_11.Transparency = 0.800
 UIStroke_11.Parent = execute
 
 UICorner_12.CornerRadius = UDim.new(0, 4)
 UICorner_12.Parent = execute
 
 copy.Name = "copy"
 copy.Parent = exec
 copy.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 copy.BorderColor3 = Color3.fromRGB(0, 0, 0)
 copy.BorderSizePixel = 0
 copy.Position = UDim2.new(0.206203848, 0, 0.859954357, 0)
 copy.Size = UDim2.new(0, 74, 0, 36)
 copy.AutoButtonColor = false
 copy.Font = Enum.Font.Gotham
 copy.Text = "Copy"
 copy.TextColor3 = Color3.fromRGB(145, 145, 145)
 copy.TextSize = 14.000
 
 UIStroke_12.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_12.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_12.Thickness = 0.800
 UIStroke_12.Transparency = 0.800
 UIStroke_12.Parent = copy
 
 UICorner_13.CornerRadius = UDim.new(0, 4)
 UICorner_13.Parent = copy
 
 clear.Name = "clear"
 clear.Parent = exec
 clear.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
 clear.BorderSizePixel = 0
 clear.Position = UDim2.new(0.380772829, 0, 0.859954357, 0)
 clear.Size = UDim2.new(0, 74, 0, 36)
 clear.AutoButtonColor = false
 clear.Font = Enum.Font.Gotham
 clear.Text = "Clear"
 clear.TextColor3 = Color3.fromRGB(145, 145, 145)
 clear.TextSize = 14.000
 
 UIStroke_13.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_13.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_13.Thickness = 0.800
 UIStroke_13.Transparency = 0.800
 UIStroke_13.Parent = clear
 
 UICorner_14.CornerRadius = UDim.new(0, 4)
 UICorner_14.Parent = clear
 
 paste.Name = "paste"
 paste.Parent = exec
 paste.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 paste.BorderColor3 = Color3.fromRGB(0, 0, 0)
 paste.BorderSizePixel = 0
 paste.Position = UDim2.new(0.55534178, 0, 0.859954357, 0)
 paste.Size = UDim2.new(0, 74, 0, 36)
 paste.AutoButtonColor = false
 paste.Font = Enum.Font.Gotham
 paste.Text = "Paste"
 paste.TextColor3 = Color3.fromRGB(145, 145, 145)
 paste.TextSize = 14.000
 
 UIStroke_14.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_14.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_14.Thickness = 0.800
 UIStroke_14.Transparency = 0.800
 UIStroke_14.Parent = paste
 
 UICorner_15.CornerRadius = UDim.new(0, 4)
 UICorner_15.Parent = paste
 
 executeclipboard.Name = "executeclipboard"
 executeclipboard.Parent = exec
 executeclipboard.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 executeclipboard.BorderColor3 = Color3.fromRGB(0, 0, 0)
 executeclipboard.BorderSizePixel = 0
 executeclipboard.Position = UDim2.new(0.729910731, 0, 0.859954357, 0)
 executeclipboard.Size = UDim2.new(0, 119, 0, 36)
 executeclipboard.AutoButtonColor = false
 executeclipboard.Font = Enum.Font.Gotham
 executeclipboard.Text = "Execute CB"
 executeclipboard.TextColor3 = Color3.fromRGB(145, 145, 145)
 executeclipboard.TextSize = 14.000
 
 UIStroke_15.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_15.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_15.Thickness = 0.800
 UIStroke_15.Transparency = 0.800
 UIStroke_15.Parent = executeclipboard
 
 UICorner_16.CornerRadius = UDim.new(0, 4)
 UICorner_16.Parent = executeclipboard
 
 visuals_2.Name = "visuals"
 visuals_2.Parent = tabs
 visuals_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 visuals_2.BackgroundTransparency = 1.000
 visuals_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 visuals_2.BorderSizePixel = 0
 visuals_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
 visuals_2.Size = UDim2.new(0, 464, 0, 311)
 visuals_2.Visible = false
 
 UICorner_17.CornerRadius = UDim.new(0, 4)
 UICorner_17.Parent = visuals_2
 
 UIListLayout_4.Parent = visuals_2
 UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout_4.Padding = UDim.new(0, 5)
 
 UIPadding_4.Parent = visuals_2
 UIPadding_4.PaddingLeft = UDim.new(0, 10)
 UIPadding_4.PaddingTop = UDim.new(0, 10)
 
 enableesp.Name = "enableesp"
 enableesp.Parent = visuals_2
 enableesp.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 enableesp.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enableesp.BorderSizePixel = 0
 enableesp.Size = UDim2.new(0, 445, 0, 40)
 
 UIStroke_16.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_16.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_16.Thickness = 0.800
 UIStroke_16.Transparency = 0.800
 UIStroke_16.Parent = enableesp
 
 UICorner_18.CornerRadius = UDim.new(0, 4)
 UICorner_18.Parent = enableesp
 
 enable.Name = "enable"
 enable.Parent = enableesp
 enable.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
 enable.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enable.BorderSizePixel = 0
 enable.Position = UDim2.new(0.909816921, 0, 0.0897544846, 0)
 enable.Size = UDim2.new(0, 32, 0, 54)
 enable.AutoButtonColor = false
 enable.Font = Enum.Font.Gotham
 enable.Text = ""
 enable.TextColor3 = Color3.fromRGB(145, 145, 145)
 enable.TextSize = 14.000
 
 UICorner_19.CornerRadius = UDim.new(0, 5)
 UICorner_19.Parent = enable
 
 UIAspectRatioConstraint_9.Parent = enable
 
 text.Name = "text"
 text.Parent = enableesp
 text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 text.BackgroundTransparency = 1.000
 text.BorderColor3 = Color3.fromRGB(0, 0, 0)
 text.BorderSizePixel = 0
 text.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
 text.Size = UDim2.new(0, 96, 0, 21)
 text.Font = Enum.Font.Gotham
 text.Text = "Enable ESP"
 text.TextColor3 = Color3.fromRGB(145, 145, 145)
 text.TextSize = 16.000
 text.TextWrapped = true
 
 UICorner_20.CornerRadius = UDim.new(0, 4)
 UICorner_20.Parent = text
 
 tracers.Name = "tracers"
 tracers.Parent = visuals_2
 tracers.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 tracers.BorderColor3 = Color3.fromRGB(0, 0, 0)
 tracers.BorderSizePixel = 0
 tracers.Size = UDim2.new(0, 445, 0, 40)
 
 UIStroke_17.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_17.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_17.Thickness = 0.800
 UIStroke_17.Transparency = 0.800
 UIStroke_17.Parent = tracers
 
 UICorner_21.CornerRadius = UDim.new(0, 4)
 UICorner_21.Parent = tracers
 
 enable_2.Name = "enable"
 enable_2.Parent = tracers
 enable_2.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
 enable_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enable_2.BorderSizePixel = 0
 enable_2.Position = UDim2.new(0.909816921, 0, 0.0897544846, 0)
 enable_2.Size = UDim2.new(0, 32, 0, 54)
 enable_2.AutoButtonColor = false
 enable_2.Font = Enum.Font.Gotham
 enable_2.Text = ""
 enable_2.TextColor3 = Color3.fromRGB(145, 145, 145)
 enable_2.TextSize = 14.000
 
 UICorner_22.CornerRadius = UDim.new(0, 5)
 UICorner_22.Parent = enable_2
 
 UIAspectRatioConstraint_10.Parent = enable_2
 
 text_2.Name = "text"
 text_2.Parent = tracers
 text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 text_2.BackgroundTransparency = 1.000
 text_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 text_2.BorderSizePixel = 0
 text_2.Position = UDim2.new(0.0169076975, 0, 0.217340082, 0)
 text_2.Size = UDim2.new(0, 62, 0, 21)
 text_2.Font = Enum.Font.Gotham
 text_2.Text = "Tracers"
 text_2.TextColor3 = Color3.fromRGB(145, 145, 145)
 text_2.TextSize = 16.000
 text_2.TextWrapped = true
 
 UICorner_23.CornerRadius = UDim.new(0, 4)
 UICorner_23.Parent = text_2
 
 headdot.Name = "headdot"
 headdot.Parent = visuals_2
 headdot.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 headdot.BorderColor3 = Color3.fromRGB(0, 0, 0)
 headdot.BorderSizePixel = 0
 headdot.Size = UDim2.new(0, 445, 0, 40)
 
 UIStroke_18.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_18.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_18.Thickness = 0.800
 UIStroke_18.Transparency = 0.800
 UIStroke_18.Parent = headdot
 
 UICorner_24.CornerRadius = UDim.new(0, 4)
 UICorner_24.Parent = headdot
 
 enable_3.Name = "enable"
 enable_3.Parent = headdot
 enable_3.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
 enable_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enable_3.BorderSizePixel = 0
 enable_3.Position = UDim2.new(0.909816921, 0, 0.0897544846, 0)
 enable_3.Size = UDim2.new(0, 32, 0, 54)
 enable_3.AutoButtonColor = false
 enable_3.Font = Enum.Font.Gotham
 enable_3.Text = ""
 enable_3.TextColor3 = Color3.fromRGB(145, 145, 145)
 enable_3.TextSize = 14.000
 
 UICorner_25.CornerRadius = UDim.new(0, 5)
 UICorner_25.Parent = enable_3
 
 UIAspectRatioConstraint_11.Parent = enable_3
 
 text_3.Name = "text"
 text_3.Parent = headdot
 text_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 text_3.BackgroundTransparency = 1.000
 text_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
 text_3.BorderSizePixel = 0
 text_3.Position = UDim2.new(0.0169076975, 0, 0.217340082, 0)
 text_3.Size = UDim2.new(0, 79, 0, 21)
 text_3.Font = Enum.Font.Gotham
 text_3.Text = "Head Dot"
 text_3.TextColor3 = Color3.fromRGB(145, 145, 145)
 text_3.TextSize = 16.000
 text_3.TextWrapped = true
 
 UICorner_26.CornerRadius = UDim.new(0, 4)
 UICorner_26.Parent = text_3
 
 settings_2.Name = "settings"
 settings_2.Parent = tabs
 settings_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 settings_2.BackgroundTransparency = 1.000
 settings_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 settings_2.BorderSizePixel = 0
 settings_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
 settings_2.Size = UDim2.new(0, 464, 0, 311)
 settings_2.Visible = false
 
 UICorner_27.CornerRadius = UDim.new(0, 4)
 UICorner_27.Parent = settings_2
 
 comingsoon.Name = "comingsoon"
 comingsoon.Parent = settings_2
 comingsoon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 comingsoon.BackgroundTransparency = 1.000
 comingsoon.BorderColor3 = Color3.fromRGB(0, 0, 0)
 comingsoon.BorderSizePixel = 0
 comingsoon.Position = UDim2.new(0.0258620698, 0, 0.0200083442, 0)
 comingsoon.Size = UDim2.new(0, 320, 0, 37)
 comingsoon.Font = Enum.Font.Gotham
 comingsoon.Text = "Options in this page are coming soon."
 comingsoon.TextColor3 = Color3.fromRGB(145, 145, 145)
 comingsoon.TextSize = 18.000
 comingsoon.TextWrapped = true
 comingsoon.TextXAlignment = Enum.TextXAlignment.Left
 
 cloud_2.Name = "cloud"
 cloud_2.Parent = tabs
 cloud_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 cloud_2.BackgroundTransparency = 1.000
 cloud_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 cloud_2.BorderSizePixel = 0
 cloud_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
 cloud_2.Size = UDim2.new(0, 464, 0, 311)
 cloud_2.Visible = false
 
 UICorner_28.CornerRadius = UDim.new(0, 4)
 UICorner_28.Parent = cloud_2
 
 section.Name = "section"
 section.Parent = cloud_2
 section.Active = true
 section.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 section.BorderColor3 = Color3.fromRGB(0, 0, 0)
 section.BorderSizePixel = 0
 section.Position = UDim2.new(0.0172413792, 0, 0.199356914, 0)
 section.Size = UDim2.new(0, 441, 0, 235)
 section.CanvasSize = UDim2.new(0, 0, 1, 0)
 section.ScrollBarThickness = 5
 
 UICorner_29.CornerRadius = UDim.new(0, 4)
 UICorner_29.Parent = section
 
 UIStroke_19.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_19.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_19.Thickness = 0.800
 UIStroke_19.Transparency = 0.800
 UIStroke_19.Parent = section
 
 UIGridLayout.Parent = section
 UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
 UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
 UIGridLayout.CellSize = UDim2.new(0, 215, 0, 170)
 UIGridLayout.FillDirectionMaxCells = 3
 
 UIPadding_5.Parent = section
 UIPadding_5.PaddingLeft = UDim.new(0, 5)
 UIPadding_5.PaddingTop = UDim.new(0, 5)
 
 scriptexample.Name = "scriptexample"
 scriptexample.Parent = section
 scriptexample.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
 scriptexample.BorderColor3 = Color3.fromRGB(0, 0, 0)
 scriptexample.BorderSizePixel = 0
 scriptexample.Position = UDim2.new(0.294724762, 0, 0, 0)
 scriptexample.Size = UDim2.new(0, 209, 0, 155)
 scriptexample.Visible = false
 
 UIStroke_20.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_20.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_20.Thickness = 0.800
 UIStroke_20.Transparency = 0.800
 UIStroke_20.Parent = scriptexample
 
 UICorner_30.CornerRadius = UDim.new(0, 4)
 UICorner_30.Parent = scriptexample
 
 scriptname.Name = "scriptname"
 scriptname.Parent = scriptexample
 scriptname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 scriptname.BackgroundTransparency = 1.000
 scriptname.BorderColor3 = Color3.fromRGB(0, 0, 0)
 scriptname.BorderSizePixel = 0
 scriptname.Size = UDim2.new(0, 215, 0, 35)
 scriptname.Font = Enum.Font.Gotham
 scriptname.Text = "Script"
 scriptname.TextColor3 = Color3.fromRGB(145, 145, 145)
 scriptname.TextSize = 14.000
 scriptname.TextWrapped = true
 
 UIStroke_21.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_21.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_21.Thickness = 0.800
 UIStroke_21.Transparency = 0.800
 UIStroke_21.Parent = scriptname
 
 copy_2.Name = "copy"
 copy_2.Parent = scriptexample
 copy_2.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 copy_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 copy_2.BorderSizePixel = 0
 copy_2.Position = UDim2.new(0.61837101, 0, 0.799857616, 0)
 copy_2.Size = UDim2.new(0, 74, 0, 24)
 copy_2.AutoButtonColor = false
 copy_2.Font = Enum.Font.Gotham
 copy_2.Text = "Copy"
 copy_2.TextColor3 = Color3.fromRGB(145, 145, 145)
 copy_2.TextSize = 14.000
 
 UIStroke_22.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_22.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_22.Thickness = 0.800
 UIStroke_22.Transparency = 0.800
 UIStroke_22.Parent = copy_2
 
 UICorner_31.CornerRadius = UDim.new(0, 4)
 UICorner_31.Parent = copy_2
 
 execute_2.Name = "execute"
 execute_2.Parent = scriptexample
 execute_2.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 execute_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 execute_2.BorderSizePixel = 0
 execute_2.Position = UDim2.new(0.0399165675, 0, 0.79411763, 0)
 execute_2.Size = UDim2.new(0, 74, 0, 24)
 execute_2.AutoButtonColor = false
 execute_2.Font = Enum.Font.Gotham
 execute_2.Text = "Execute"
 execute_2.TextColor3 = Color3.fromRGB(145, 145, 145)
 execute_2.TextSize = 14.000
 
 UIStroke_23.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_23.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_23.Thickness = 0.800
 UIStroke_23.Transparency = 0.800
 UIStroke_23.Parent = execute_2
 
 UICorner_32.CornerRadius = UDim.new(0, 4)
 UICorner_32.Parent = execute_2
 
 scriptimg.Name = "scriptimg"
 scriptimg.Parent = scriptexample
 scriptimg.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 scriptimg.BackgroundTransparency = 1.000
 scriptimg.BorderColor3 = Color3.fromRGB(0, 0, 0)
 scriptimg.BorderSizePixel = 0
 scriptimg.Position = UDim2.new(0.0724745616, 0, 0.256356984, 0)
 scriptimg.Size = UDim2.new(0, 182, 0, 86)
 scriptimg.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
 scriptimg.ScaleType = Enum.ScaleType.Fit
 
 searchbox.Name = "searchbox"
 searchbox.Parent = cloud_2
 searchbox.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 searchbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
 searchbox.BorderSizePixel = 0
 searchbox.Position = UDim2.new(0.0172413792, 0, 0.0546623804, 0)
 searchbox.Size = UDim2.new(0, 440, 0, 33)
 searchbox.Font = Enum.Font.Gotham
 searchbox.PlaceholderColor3 = Color3.fromRGB(145, 145, 145)
 searchbox.PlaceholderText = "Powered By ScriptBlox"
 searchbox.Text = ""
 searchbox.TextColor3 = Color3.fromRGB(145, 145, 145)
 searchbox.TextSize = 14.000
 
 UIStroke_24.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_24.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_24.Thickness = 0.800
 UIStroke_24.Transparency = 0.800
 UIStroke_24.Parent = searchbox
 
 UICorner_33.CornerRadius = UDim.new(0, 4)
 UICorner_33.Parent = searchbox
 
 search.Name = "search"
 search.Parent = cloud_2
 search.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 search.BackgroundTransparency = 1.000
 search.BorderColor3 = Color3.fromRGB(0, 0, 0)
 search.BorderSizePixel = 0
 search.Position = UDim2.new(0.862578273, 0, 0.0353697762, 0)
 search.Size = UDim2.new(0, 46, 0, 36)
 search.Visible = false
 search.Image = "rbxassetid://11293977875"
 search.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_12.Parent = search
 
 UIStroke_25.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_25.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_25.Thickness = 0.800
 UIStroke_25.Transparency = 0.800
 UIStroke_25.Parent = search
 
 UICorner_34.CornerRadius = UDim.new(0, 4)
 UICorner_34.Parent = search
 
 player_2.Name = "player"
 player_2.Parent = tabs
 player_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 player_2.BackgroundTransparency = 1.000
 player_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 player_2.BorderSizePixel = 0
 player_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
 player_2.Size = UDim2.new(0, 464, 0, 311)
 player_2.Visible = false
 
 UICorner_35.CornerRadius = UDim.new(0, 4)
 UICorner_35.Parent = player_2
 
 UIListLayout_5.Parent = player_2
 UIListLayout_5.HorizontalAlignment = Enum.HorizontalAlignment.Center
 UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout_5.Padding = UDim.new(0, 10)
 
 UIPadding_6.Parent = player_2
 UIPadding_6.PaddingTop = UDim.new(0, 10)
 
 firstsec_2.Name = "firstsec"
 firstsec_2.Parent = player_2
 firstsec_2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 firstsec_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 firstsec_2.BorderSizePixel = 0
 firstsec_2.Position = UDim2.new(0.0172413792, 0, -5.06936502e-08, 0)
 firstsec_2.Size = UDim2.new(0, 448, 0, 87)
 
 UICorner_36.CornerRadius = UDim.new(0, 4)
 UICorner_36.Parent = firstsec_2
 
 UIStroke_26.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_26.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_26.Thickness = 0.800
 UIStroke_26.Transparency = 0.800
 UIStroke_26.Parent = firstsec_2
 
 walkspeed.Name = "walkspeed"
 walkspeed.Parent = firstsec_2
 walkspeed.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 walkspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
 walkspeed.BorderSizePixel = 0
 walkspeed.Position = UDim2.new(0.0336360931, 0, 0.141523659, 0)
 walkspeed.Size = UDim2.new(0, 416, 0, 26)
 walkspeed.ClearTextOnFocus = false
 walkspeed.Font = Enum.Font.Gotham
 walkspeed.MultiLine = true
 walkspeed.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
 walkspeed.PlaceholderText = "WalkSpeed (Default: xx)"
 walkspeed.Text = ""
 walkspeed.TextColor3 = Color3.fromRGB(145, 145, 145)
 walkspeed.TextSize = 14.000
 
 UICorner_37.CornerRadius = UDim.new(0, 4)
 UICorner_37.Parent = walkspeed
 
 UIStroke_27.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_27.Color = Color3.fromRGB(145, 145, 145)
 UIStroke_27.Thickness = 0.800
 UIStroke_27.Transparency = 0.800
 UIStroke_27.Parent = walkspeed
 
 UIListLayout_6.Parent = firstsec_2
 UIListLayout_6.HorizontalAlignment = Enum.HorizontalAlignment.Center
 UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout_6.Padding = UDim.new(0, 10)
 
 UIPadding_7.Parent = firstsec_2
 UIPadding_7.PaddingTop = UDim.new(0, 10)
 
 jumppower.Name = "jumppower"
 jumppower.Parent = firstsec_2
 jumppower.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 jumppower.BorderColor3 = Color3.fromRGB(0, 0, 0)
 jumppower.BorderSizePixel = 0
 jumppower.Position = UDim2.new(0.0336360931, 0, 0.141523659, 0)
 jumppower.Size = UDim2.new(0, 416, 0, 26)
 jumppower.ClearTextOnFocus = false
 jumppower.Font = Enum.Font.Gotham
 jumppower.MultiLine = true
 jumppower.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
 jumppower.PlaceholderText = "JumpPower (Default: xx)"
 jumppower.Text = ""
 jumppower.TextColor3 = Color3.fromRGB(145, 145, 145)
 jumppower.TextSize = 14.000
 
 UICorner_38.CornerRadius = UDim.new(0, 4)
 UICorner_38.Parent = jumppower
 
 UIStroke_28.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_28.Color = Color3.fromRGB(145, 145, 145)
 UIStroke_28.Thickness = 0.800
 UIStroke_28.Transparency = 0.800
 UIStroke_28.Parent = jumppower
 
 secondsec_2.Name = "secondsec"
 secondsec_2.Parent = player_2
 secondsec_2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 secondsec_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 secondsec_2.BorderSizePixel = 0
 secondsec_2.Position = UDim2.new(0.0172413792, 0, 0.322259128, 0)
 secondsec_2.Size = UDim2.new(0, 448, 0, 147)
 secondsec_2.Visible = false
 
 UICorner_39.CornerRadius = UDim.new(0, 4)
 UICorner_39.Parent = secondsec_2
 
 UIStroke_29.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_29.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_29.Thickness = 0.800
 UIStroke_29.Transparency = 0.800
 UIStroke_29.Parent = secondsec_2
 
 UIListLayout_7.Parent = secondsec_2
 UIListLayout_7.HorizontalAlignment = Enum.HorizontalAlignment.Center
 UIListLayout_7.SortOrder = Enum.SortOrder.LayoutOrder
 UIListLayout_7.Padding = UDim.new(0, 10)
 
 UIPadding_8.Parent = secondsec_2
 UIPadding_8.PaddingTop = UDim.new(0, 10)
 
 autojump.Name = "autojump"
 autojump.Parent = secondsec_2
 autojump.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 autojump.BorderColor3 = Color3.fromRGB(0, 0, 0)
 autojump.BorderSizePixel = 0
 autojump.Position = UDim2.new(0.0334821418, 0, 0.038961038, 0)
 autojump.Size = UDim2.new(0, 418, 0, 36)
 
 UIStroke_30.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_30.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_30.Thickness = 0.800
 UIStroke_30.Transparency = 0.800
 UIStroke_30.Parent = autojump
 
 UICorner_40.CornerRadius = UDim.new(0, 4)
 UICorner_40.Parent = autojump
 
 enable_4.Name = "enable"
 enable_4.Parent = autojump
 enable_4.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
 enable_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enable_4.BorderSizePixel = 0
 enable_4.Position = UDim2.new(0.926563323, 0, 0.0897530466, 0)
 enable_4.Size = UDim2.new(0, 29, 0, 32)
 enable_4.AutoButtonColor = false
 enable_4.Font = Enum.Font.Gotham
 enable_4.Text = ""
 enable_4.TextColor3 = Color3.fromRGB(145, 145, 145)
 enable_4.TextSize = 14.000
 
 UICorner_41.CornerRadius = UDim.new(0, 5)
 UICorner_41.Parent = enable_4
 
 UIAspectRatioConstraint_13.Parent = enable_4
 
 text_4.Name = "text"
 text_4.Parent = autojump
 text_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 text_4.BackgroundTransparency = 1.000
 text_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
 text_4.BorderSizePixel = 0
 text_4.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
 text_4.Size = UDim2.new(0, 96, 0, 21)
 text_4.Font = Enum.Font.Gotham
 text_4.Text = "Auto Jump"
 text_4.TextColor3 = Color3.fromRGB(145, 145, 145)
 text_4.TextSize = 16.000
 text_4.TextWrapped = true
 
 UICorner_42.CornerRadius = UDim.new(0, 4)
 UICorner_42.Parent = text_4
 
 autojump_2.Name = "autojump"
 autojump_2.Parent = secondsec_2
 autojump_2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 autojump_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
 autojump_2.BorderSizePixel = 0
 autojump_2.Position = UDim2.new(0.0334821418, 0, 0.038961038, 0)
 autojump_2.Size = UDim2.new(0, 418, 0, 36)
 
 UIStroke_31.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_31.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_31.Thickness = 0.800
 UIStroke_31.Transparency = 0.800
 UIStroke_31.Parent = autojump_2
 
 UICorner_43.CornerRadius = UDim.new(0, 4)
 UICorner_43.Parent = autojump_2
 
 enable_5.Name = "enable"
 enable_5.Parent = autojump_2
 enable_5.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
 enable_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enable_5.BorderSizePixel = 0
 enable_5.Position = UDim2.new(0.926563323, 0, 0.0897530466, 0)
 enable_5.Size = UDim2.new(0, 29, 0, 32)
 enable_5.AutoButtonColor = false
 enable_5.Font = Enum.Font.Gotham
 enable_5.Text = ""
 enable_5.TextColor3 = Color3.fromRGB(145, 145, 145)
 enable_5.TextSize = 14.000
 
 UICorner_44.CornerRadius = UDim.new(0, 5)
 UICorner_44.Parent = enable_5
 
 UIAspectRatioConstraint_14.Parent = enable_5
 
 text_5.Name = "text"
 text_5.Parent = autojump_2
 text_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 text_5.BackgroundTransparency = 1.000
 text_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
 text_5.BorderSizePixel = 0
 text_5.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
 text_5.Size = UDim2.new(0, 96, 0, 21)
 text_5.Font = Enum.Font.Gotham
 text_5.Text = "Auto Jump"
 text_5.TextColor3 = Color3.fromRGB(145, 145, 145)
 text_5.TextSize = 16.000
 text_5.TextWrapped = true
 
 UICorner_45.CornerRadius = UDim.new(0, 4)
 UICorner_45.Parent = text_5
 
 autojump_3.Name = "autojump"
 autojump_3.Parent = secondsec_2
 autojump_3.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
 autojump_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
 autojump_3.BorderSizePixel = 0
 autojump_3.Position = UDim2.new(0.0334821418, 0, 0.038961038, 0)
 autojump_3.Size = UDim2.new(0, 418, 0, 36)
 
 UIStroke_32.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_32.Color = Color3.fromRGB(143, 143, 143)
 UIStroke_32.Thickness = 0.800
 UIStroke_32.Transparency = 0.800
 UIStroke_32.Parent = autojump_3
 
 UICorner_46.CornerRadius = UDim.new(0, 4)
 UICorner_46.Parent = autojump_3
 
 enable_6.Name = "enable"
 enable_6.Parent = autojump_3
 enable_6.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
 enable_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
 enable_6.BorderSizePixel = 0
 enable_6.Position = UDim2.new(0.926563323, 0, 0.0897530466, 0)
 enable_6.Size = UDim2.new(0, 29, 0, 32)
 enable_6.AutoButtonColor = false
 enable_6.Font = Enum.Font.Gotham
 enable_6.Text = ""
 enable_6.TextColor3 = Color3.fromRGB(145, 145, 145)
 enable_6.TextSize = 14.000
 
 UICorner_47.CornerRadius = UDim.new(0, 5)
 UICorner_47.Parent = enable_6
 
 UIAspectRatioConstraint_15.Parent = enable_6
 
 text_6.Name = "text"
 text_6.Parent = autojump_3
 text_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 text_6.BackgroundTransparency = 1.000
 text_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
 text_6.BorderSizePixel = 0
 text_6.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
 text_6.Size = UDim2.new(0, 96, 0, 21)
 text_6.Font = Enum.Font.Gotham
 text_6.Text = "Auto Jump"
 text_6.TextColor3 = Color3.fromRGB(145, 145, 145)
 text_6.TextSize = 16.000
 text_6.TextWrapped = true
 
 UICorner_48.CornerRadius = UDim.new(0, 4)
 UICorner_48.Parent = text_6
 
 updatetext.Name = "updatetext"
 updatetext.Parent = player_2
 updatetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 updatetext.BackgroundTransparency = 1.000
 updatetext.BorderColor3 = Color3.fromRGB(0, 0, 0)
 updatetext.BorderSizePixel = 0
 updatetext.Position = UDim2.new(0.131465524, 0, 0.322259128, 0)
 updatetext.Size = UDim2.new(0, 442, 0, 37)
 updatetext.Font = Enum.Font.Gotham
 updatetext.Text = "More features / options will be added in another update. Stay tuned!"
 updatetext.TextColor3 = Color3.fromRGB(145, 145, 145)
 updatetext.TextSize = 18.000
 updatetext.TextWrapped = true
 updatetext.TextXAlignment = Enum.TextXAlignment.Left
 
 close.Name = "close"
 close.Parent = main
 close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 close.BackgroundTransparency = 1.000
 close.BorderColor3 = Color3.fromRGB(0, 0, 0)
 close.BorderSizePixel = 0
 close.Position = UDim2.new(0.023394987, 0, 0.855848908, 0)
 close.Size = UDim2.new(0, 30, 0, 30)
 close.Image = "rbxassetid://11293981586"
 close.ImageColor3 = Color3.fromRGB(143, 143, 143)
 
 UIAspectRatioConstraint_16.Parent = close
 
 open.Name = "open"
 open.Parent = AlysseAndroid
 open.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 open.BorderColor3 = Color3.fromRGB(0, 0, 0)
 open.BorderSizePixel = 0
 open.Position = UDim2.new(0.0715561211, 0, 0.43751955, 0)
 open.Size = UDim2.new(0, 51, 0, 38)
 open.Image = "rbxassetid://16682044534"
 
 UIStroke_33.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
 UIStroke_33.Color = Color3.fromRGB(145, 145, 145)
 UIStroke_33.Parent = open
 
 UICorner_49.CornerRadius = UDim.new(0, 100)
 UICorner_49.Parent = open
 
 UIAspectRatioConstraint_17.Parent = open
 
 -- Scripts:
 
 local function WVUHU_fake_script() -- main.LocalScript 
     local script = Instance.new('LocalScript', main)
 
     print("Welcome, "..game.Players.LocalPlayer.Name.. " to Alysse!")
     
     local mainframe = script.Parent
     local sidebar = mainframe.sidebar
     local tabsfolder = mainframe.tabs
     local screengui = script.Parent.Parent
     local homebutton = sidebar.home
     local cloudsearchbutton = sidebar.cloud
     local settingsbutton = sidebar.settings
     local lplr = game:GetService("Players").LocalPlayer
     local plrs = game:GetService("Players")
     local plrname = lplr.Name
     local sidebaruistroke = sidebar.UIStroke
     local hometab = tabsfolder.home
     local TweenService = game:GetService("TweenService")
     local RunService = game:GetService("RunService")
     local info = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
     local hometab = tabsfolder.home
     local executortab = tabsfolder.exec
     local visualstab = tabsfolder.visuals
     local cloudtab = tabsfolder.cloud
     local settingstab = tabsfolder.settings
     local homebutton = sidebar.home
     local executorbutton = sidebar.executor
     local visualsbutton = sidebar.visuals
     local cloudbutton = sidebar.cloud
     local settingsbutton = sidebar.settings
     local homewelcometext = hometab.firstsec.greet
     local RunService = game:GetService("RunService")
     local usid = lplr.UserId
     local thumbt = Enum.ThumbnailType.HeadShot
     local thumbs = Enum.ThumbnailSize.Size420x420
     local content  = plrs:GetUserThumbnailAsync(usid, thumbt, thumbs)
     local profileimg = hometab.firstsec.profile
     local placeid = game.PlaceId
     local gameimg = hometab.secondsec.gamethumb
     local gamenamelabel = hometab.secondsec.rightside.gamename
     local gname = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
     local ginfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
     local createdlabel = hometab.secondsec.rightside.created
     local updatedlabel = hometab.secondsec.rightside.updated
     local maxplayerslabel = hometab.secondsec.rightside.maxplayers
     local getcorrectcreationdate = string.sub(ginfo.Created, 1, 10)
     local getcorrectupdateddate = string.sub(ginfo.Updated, 1, 10) 
     local execbox = executortab.sect.execbox
     local scrollexecframe = executortab.sect
     local executeexecbutton = executortab.execute
     local copyexecbutton = executortab.copy
     local clearexecbutton = executortab.clear
     local pasteexecbutton = executortab.paste
     local executeclipboard = executortab.executeclipboard
     local scriptexample = cloudtab.section.scriptexample
     local scriptexampleexecute = scriptexample.execute
     local scriptexamplecopy = scriptexample.copy
     local close = mainframe.close
     local openalysse = screengui.open
     local searchboxcloud = cloudtab.searchbox
     local searchbutton = cloudtab.search
     local walkspeedtextbox = tabsfolder.player.firstsec.walkspeed
     local jumppowertextbox = tabsfolder.player.firstsec.jumppower
     
     mainframe.Active = true
     mainframe.Draggable = true
     -- // Functions \\ --
     
     function click(b, cf)
         if b and (b:IsA("TextButton") or b:IsA("ImageButton")) and type(cf) == "function" then
             b.MouseButton1Click:Connect(cf)
         else
             warn("real")
         end
     end
     
     function hover(b, cf)
         if b and (b:IsA("TextButton") or b:IsA("ImageButton")) and type(cf) == "function" then
             b.MouseEnter:Connect(cf)
         else
             warn("real")
         end
     end
     
     function unhover(b, cf)
         if b and (b:IsA("TextButton") or b:IsA("ImageButton")) and type(cf) == "function" then
             b.MouseLeave:Connect(cf)
         else
             warn("real")
         end
     end
     
     function chsize(obj, sz)
         if obj and sz and typeof(sz) == "UDim2" then
             local info = TweenInfo.new(0.30, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
                 TweenService:Create(obj, info, {Size = sz}):Play()
         else
             warn("real")
         end
     end
     
     function stabtest(show)
         for _, v in pairs(tabsfolder:GetChildren()) do
             if v:IsA("Frame") then
                 if v ~= show then
                     v.Visible = false
                     print("hiding:", v.Name)
                 else
                     v.Visible = true
                 end
             end
         end
     end
     
     function stab(show)
         for _, v in pairs(tabsfolder:GetChildren()) do
             if v:IsA("Frame") then
                 if v ~= show then
                     v.Visible = false
                 else
                     v.Visible = true
                 end
             end
         end
     end
     
     -- // Functions \\ --
     
     --------------------
     -- // Tabs + Buttons \\ --
     
     click(openalysse, function()
         openalysse.Visible = false
         mainframe.Visible = true
         openalysse.Draggable = true
     end)
      
     click(homebutton, function()
         stab(hometab)
     end)
     
     hover(homebutton, function()
         TweenService:Create(homebutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
     end)
     
     unhover(homebutton, function()
         TweenService:Create(homebutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
     end)
     
     click(executorbutton, function()
         stab(executortab)
     end)
     
     hover(executorbutton, function()
         TweenService:Create(executorbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
     end)
     
     unhover(executorbutton, function()
         TweenService:Create(executorbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
     end)
     
     click(visualsbutton, function()
         stab(visualstab)
     end)
     
     hover(visualsbutton, function()
         TweenService:Create(visualsbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
     end)
     
     unhover(visualsbutton, function()
         TweenService:Create(visualsbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
     end)
     
     click(cloudbutton, function()
         stab(cloudtab)
     end)
     
     hover(cloudbutton, function()
         TweenService:Create(cloudbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
     end)
     
     unhover(cloudbutton, function()
         TweenService:Create(cloudbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
     end)
     
     click(settingsbutton, function()
         stab(settingstab)
     end)
     
     hover(settingsbutton, function()
         TweenService:Create(settingsbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
     end)
     
     unhover(settingsbutton, function()
         TweenService:Create(settingsbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
     end)
     
     click(executeexecbutton, function()
         loadstring(execbox.Text)()
     end)
     
     click(clearexecbutton, function()
         execbox.Text = ""
     end)
     
     click(copyexecbutton, function()
         setclipboard(execbox.Text)
     end)
     
     click(pasteexecbutton, function()
     execbox.Text = getclipboard()
     end)
     
     click(executeclipboard, function()
         loadstring(getclipboard())()
     end)
     
     hover(close, function()
         TweenService:Create(close, info, {ImageColor3 = Color3.fromRGB(131, 0, 0)}):Play()
     end)
     
     unhover(close, function()
         TweenService:Create(close, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
     end)
     
     click(close, function()
         mainframe.Visible = false
         openalysse.Visible = true
     end)
     
     local searchedquery = searchboxcloud.Text
     local searched = false
     
     local issearching = false
     
     searchboxcloud.FocusLost:Connect(function()
         if issearching then
             game.StarterGui:SetCore("SendNotification", {
                 Title = "Alysse",
                 Text = "A search is currently in progress! Please wait",
                 Duration = 1,
             })
             return
         end
     
         issearching = true
         TweenService:Create(searchbutton, info, {ImageTransparency = 1}):Play()
         wait(0.05)
         searchbutton.Image = "rbxassetid://11419715891"
         wait(0.05)
         TweenService:Create(searchbutton, info, {ImageTransparency = 0}):Play()
     
         for _, existingscript in pairs(cloudtab.section.scriptexample.Parent:GetChildren()) do
             if existingscript:IsA("Frame") and existingscript.Name == "scriptlol" then
                 existingscript:Destroy()
                 local canvassizelol = cloudtab.section.CanvasSize
                 local sectiontf = cloudtab.section
                 sectiontf.CanvasSize = UDim2.new(0, 0, 0, 0)
             end
         end
     
         for _, scriptthing in pairs(cloudtab.section:GetChildren()) do
             if scriptthing:IsA("Frame") and scriptthing.Name:match("scriptexample") then
                 local currentpage = 1
                 local httpservice = game:GetService("HttpService")
                 local searchedquery = searchboxcloud.Text
                 repeat
                     local gameresp = request({
                         Url = "https://scriptblox.com/api/script/search?q=" ..httpservice:UrlEncode(searchedquery).. "&max=100&mode=free&page=" ..currentpage,
                         Method = "GET"
                     })
     
                     local decodedgames = httpservice:JSONDecode(gameresp.Body)
                     local gamedata = decodedgames.result.scripts
     
                     if next(gamedata) == nil then
                         print("Alysse has found no results.")
                     else
                         for i, v in pairs(gamedata) do
                             local canvassizelol = cloudtab.section.CanvasSize
                             local sectiontf = cloudtab.section
                             sectiontf.CanvasSize = UDim2.new(canvassizelol.X.Scale, canvassizelol.X.Offset, canvassizelol.Y.Scale + 0.5, canvassizelol.Y.Offset)
                             local title = v.title or "nothing"
                             local scriptload = v.script or "nothing"
     
                             local real = scriptexample:Clone()
                             real.Name = "scriptlol"
                             real.Parent = cloudtab.section.scriptexample.Parent
                             real.Visible = true
     
                             real.scriptname.Text = title
                             real.execute.MouseButton1Click:Connect(function()
                                 loadstring(scriptload)()
                                 real.Text = "Executed"
                                 wait(0.5)
                                 real.Text = "Execute"
                             end)
     
                             real.copy.MouseButton1Click:Connect(function()
                                 real.copy.Text = "Copied"
                                 wait(0.5)
                                 real.copy.Text = "Copy"
                                 setclipboard(scriptload)
                             end)
                         end
                     end
     
                     currentpage = currentpage + 1
                 until currentpage > decodedgames.result.totalPages
             end
         end
     
         issearching = false
         TweenService:Create(searchbutton, info, {ImageTransparency = 1}):Play()
         wait(0.2)
         searchbutton.Image = "rbxassetid://11293977875"
         wait(0.2)
         TweenService:Create(searchbutton, info, {ImageTransparency = 0}):Play()
         game.StarterGui:SetCore("SendNotification", {
             Title = "Alysse",
             Text = "Search is complete.",
             Duration = 3,
         })
     end)
     
     
     local c = 0
     
     coroutine.wrap(function()
     while wait(0.01) do
     
         for _, f in pairs(tabsfolder.cloud.section:GetChildren()) do
             if f:IsA("Frame") and f.Name:match("scriptexample") and not f:FindFirstChild("scriptappliedlol") then
                 c = c + 1
                 local s = c > 1 and (" (" .. c .. ")") or ""
     
                 for _, b in pairs(f:GetChildren()) do
                     if b:IsA("TextButton") then
                         local n = b.Name:lower()
                         local color = n == "execute" and Color3.fromRGB(55, 55, 55) or (n == "copy" and Color3.fromRGB(75, 75, 75))
     
                         b.MouseEnter:Connect(function()
                             TweenService:Create(b, info, {BackgroundColor3 = color}):Play()
                         end)
     
                         b.MouseLeave:Connect(function()
                             TweenService:Create(b, info, {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}):Play()
                         end)
                     end
                 end
     
                 local marker = Instance.new("BoolValue")
                 marker.Name = "scriptappliedlol"
                 marker.Parent = f
             end
         end
     end
     end)
     
     
     -- // Tabs + Buttons \\ --
     
     -- // Label Stuff \\ - - / First Section
     
     RunService.Heartbeat:Connect(function()
         local hour = tonumber(os.date("%H"))
     
         local greeting = ""
         if hour >= 5 and hour < 12 then
             greeting = "Good morning, " .. plrname .. "!"
         elseif hour >= 12 and hour < 17 then
             greeting = "Good afternoon, " .. plrname .. "!"
         elseif hour >= 17 and hour < 21 then
             greeting = "Good evening, " .. plrname .. "!"
         else
             greeting = "Good night, " .. plrname .. "!"
         end
     
         homewelcometext.Text = greeting
     end)
     
     profileimg.Image = content
     gamenamelabel.Text = gname
     
     -- Home Second Section --
     gameimg.Image = "rbxthumb://type=GameThumbnail&id="..placeid.."&w=256&h=144"
     createdlabel.Text = "Created: "..getcorrectcreationdate
     updatedlabel.Text = "Updated: "..getcorrectupdateddate
     local maxplayerslabel = hometab.secondsec.rightside.maxplayers
     game:GetService("RunService").Stepped:Connect(function(deltaTime)
         local cplrs = #plrs:GetPlayers()
         local maxplrs = plrs.MaxPlayers
         local maxplayerslabel = hometab.secondsec.rightside.maxplayers
         maxplayerslabel.Text = cplrs .. " / " .. maxplrs
         wait(1)
     end)
     
     execbox:GetPropertyChangedSignal("TextFits"):Connect(function()
         if not execbox.TextFits then
             wait(0.01)
             local canvassizelol = scrollexecframe.CanvasSize
             scrollexecframe.CanvasSize = UDim2.new(canvassizelol.X.Scale, canvassizelol.X.Offset, canvassizelol.Y.Scale + 0.5, canvassizelol.Y.Offset)
             execbox.Size = UDim2.new(execbox.Size.X.Scale, execbox.Size.X.Offset, execbox.Size.Y.Scale, execbox.Size.Y.Offset + 5)
         end
     end)
     
     execbox:GetPropertyChangedSignal("Text"):Connect(function()
         if execbox.Text == "" then
             scrollexecframe.CanvasSize = UDim2.new(0, 0, 0, 0)
         end
     end)
         
 
     walkspeedtextbox.PlaceholderText = "WalkSpeed (Default: "..plrs.LocalPlayer.Character.Humanoid.WalkSpeed.. ")"
     jumppowertextbox.PlaceholderText = "JumpPower (Default: "..plrs.LocalPlayer.Character.Humanoid.JumpPower.. ")"
     
     walkspeedtextbox.FocusLost:Connect(function()
         plrs.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(walkspeedtextbox.Text)
         walkspeedtextbox.Text = ""
     end)
     
     jumppowertextbox.FocusLost:Connect(function()
         plrs.LocalPlayer.Character.Humanoid.JumpPower = tonumber(jumppowertextbox.Text)
         jumppowertextbox.Text = ""
     end)
     
     click(sidebar.player, function()
         stab(tabsfolder.player)
     end)
 end
 coroutine.wrap(WVUHU_fake_script)()
 else
     warn("The Key System GUI was closed.")
 end
  	end
})
Tab:AddButton({
	Name = "Arceus X V3",
	Callback = function()
--[=[

    ___      _  _     __     _         _         ____   
  ,"___".   FJ  L]    FJ    FJ        FJ        [__  '. 
  FJ---L]  J |__| L  J  L  J |       J |        `--7 .' 
 J |   LJ  |  __  |  |  |  | |       | |         .'.'.' 
 | \___--. F L__J J  F  J  F L_____  F L_____  .' (_(__ 
 J\_____/FJ__L  J__LJ____LJ________LJ________LJ________L
  J_____F |__L  J__||____||________||________||________|
                                                        
 
]=]

--Huge thanks for Bread for good textbox and remake the sliders :D
--GuiToLua By Creator of Backdoor.exe

-- Arceus X v3 Remake
local AZY = {};

-- StarterGui.ArceusXV3
AZY["1"] = Instance.new("ScreenGui", game.CoreGui);
AZY["1"]["Name"] = [[ArceusXV3]];
AZY["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
AZY["1"]["ResetOnSpawn"] = false;

-- StarterGui.ArceusXV3.Welcome
AZY["2"] = Instance.new("Folder", AZY["1"]);
AZY["2"]["Name"] = [[Welcome]];

-- StarterGui.ArceusXV3.Welcome.Frame
AZY["3"] = Instance.new("Frame", AZY["2"]);
AZY["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3"]["BackgroundTransparency"] = 0.699999988079071;
AZY["3"]["Size"] = UDim2.new(100.58300018310547, 0, 10.576000213623047, 0);
AZY["3"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
AZY["3"]["Position"] = UDim2.new(-0.012608751654624939, 0, -1.0678343772888184, 0);

-- StarterGui.ArceusXV3.Welcome.Frame.UIAspectRatioConstraint
AZY["4"] = Instance.new("UIAspectRatioConstraint", AZY["3"]);
AZY["4"]["AspectRatio"] = 2.0052521228790283;

-- StarterGui.ArceusXV3.Welcome.Welcome
AZY["5"] = Instance.new("Frame", AZY["2"]);
AZY["5"]["BackgroundColor3"] = Color3.fromRGB(52, 52, 52);
AZY["5"]["Size"] = UDim2.new(0.666020393371582, 0, 0.8211921453475952, 0);
AZY["5"]["Position"] = UDim2.new(0.17622511088848114, 0, 0.0894039198756218, 0);
AZY["5"]["Name"] = [[Welcome]];

-- StarterGui.ArceusXV3.Welcome.Welcome.UIAspectRatioConstraint
AZY["6"] = Instance.new("UIAspectRatioConstraint", AZY["5"]);
AZY["6"]["AspectRatio"] = 1.6193960905075073;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame
AZY["7"] = Instance.new("ScrollingFrame", AZY["5"]);
AZY["7"]["Active"] = true;
AZY["7"]["CanvasSize"] = UDim2.new(0, 0, 1.2000000476837158, 0);
AZY["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7"]["BackgroundTransparency"] = 1;
AZY["7"]["Size"] = UDim2.new(1.0180450677871704, 0, 1, 0);
AZY["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
AZY["7"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7"]["ScrollBarThickness"] = 7;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text
AZY["8"] = Instance.new("TextLabel", AZY["7"]);
AZY["8"]["TextWrapped"] = true;
AZY["8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["8"]["TextScaled"] = true;
AZY["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["8"]["TextSize"] = 29;
AZY["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8"]["Size"] = UDim2.new(0.8902860283851624, 0, 0.6482642889022827, 0);
AZY["8"]["Text"] = [[Dear User,

We are writing to welcome you as one of you first bete testers of Arceus X!
We are thrilled to have your collaboration and to offer you the oppoturnity
to try out the new features we are developing.

We are confident that your experience and creativity will help us make
Arceus X an even more effective and user-friendly application.
Please feel free to share any feedback and suggestion that can help us further
improve our platform.

Thank you so much your support, and we look forward to working with
you in this exciting journey!

Best regards,
SPDM Team]];
AZY["8"]["Name"] = [[Text]];
AZY["8"]["BackgroundTransparency"] = 1;
AZY["8"]["Position"] = UDim2.new(0.04280221089720726, 0, 0.14032021164894104, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text.LocalScript
AZY["9"] = Instance.new("LocalScript", AZY["8"]);


-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton
AZY["a"] = Instance.new("TextButton", AZY["7"]);
AZY["a"]["TextWrapped"] = true;
AZY["a"]["TextScaled"] = true;
AZY["a"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["a"]["TextSize"] = 24;
AZY["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a"]["Size"] = UDim2.new(0.2372465580701828, 0, 0.10296772420406342, 0);
AZY["a"]["Text"] = [[Get started]];
AZY["a"]["Position"] = UDim2.new(0.3705448806285858, 0, 0.8786289095878601, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.UICorner
AZY["b"] = Instance.new("UICorner", AZY["a"]);
AZY["b"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.UITextSizeConstraint
AZY["c"] = Instance.new("UITextSizeConstraint", AZY["a"]);
AZY["c"]["MaxTextSize"] = 24;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.LocalScriptNew
AZY["d"] = Instance.new("LocalScript", AZY["a"]);
AZY["d"]["Name"] = [[LocalScriptNew]];

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Title
AZY["e"] = Instance.new("TextLabel", AZY["7"]);
AZY["e"]["TextWrapped"] = true;
AZY["e"]["TextScaled"] = true;
AZY["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["e"]["TextSize"] = 45;
AZY["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e"]["Size"] = UDim2.new(0.624912440776825, 0, 0.12905988097190857, 0);
AZY["e"]["Text"] = [[Welcome to Arceus X 3.0!]];
AZY["e"]["Name"] = [[Title]];
AZY["e"]["BackgroundTransparency"] = 1;
AZY["e"]["Position"] = UDim2.new(0.1773233860731125, 0, 0.011320043355226517, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Title.UITextSizeConstraint
AZY["f"] = Instance.new("UITextSizeConstraint", AZY["e"]);
AZY["f"]["MaxTextSize"] = 45;

-- StarterGui.ArceusXV3.Welcome.Welcome.UICorner
AZY["10"] = Instance.new("UICorner", AZY["5"]);
AZY["10"]["CornerRadius"] = UDim.new(0, 40);

-- StarterGui.ArceusXV3.AnimationIntro
AZY["11"] = Instance.new("Folder", AZY["1"]);
AZY["11"]["Name"] = [[AnimationIntro]];

-- StarterGui.ArceusXV3.AnimationIntro.Background
AZY["12"] = Instance.new("Frame", AZY["11"]);
AZY["12"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
AZY["12"]["Size"] = UDim2.new(0, 1806, 0, 1604);
AZY["12"]["Position"] = UDim2.new(-0.11024535447359085, 0, -0.16887417435646057, 0);
AZY["12"]["Visible"] = false;
AZY["12"]["Name"] = [[Background]];

-- StarterGui.ArceusXV3.AnimationIntro.Frame
AZY["13"] = Instance.new("Frame", AZY["11"]);
AZY["13"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["13"]["Size"] = UDim2.new(0.03313452750444412, 0, 0.06622516363859177, 0);
AZY["13"]["Position"] = UDim2.new(0.48293575644493103, 0, 0.4668874144554138, 0);
AZY["13"]["Visible"] = false;

-- StarterGui.ArceusXV3.AnimationIntro.Frame.UICorner
AZY["14"] = Instance.new("UICorner", AZY["13"]);
AZY["14"]["CornerRadius"] = UDim.new(1, 100);

-- StarterGui.ArceusXV3.AnimationIntro.ImageLabel
AZY["15"] = Instance.new("ImageLabel", AZY["11"]);
AZY["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["15"]["ImageTransparency"] = 1;
AZY["15"]["Visible"] = false;
AZY["15"]["Image"] = [[rbxassetid://12564267060]];
AZY["15"]["Size"] = UDim2.new(0.09526176750659943, 0, 0.27649006247520447, 0);
AZY["15"]["BackgroundTransparency"] = 1;
AZY["15"]["Position"] = UDim2.new(0.4423459470272064, 0, 0.36092716455459595, 0);

-- StarterGui.ArceusXV3.AnimationIntro.NameLogo
AZY["16"] = Instance.new("TextLabel", AZY["11"]);
AZY["16"]["TextWrapped"] = true;
AZY["16"]["TextScaled"] = true;
AZY["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["16"]["TextTransparency"] = 1;
AZY["16"]["TextSize"] = 50;
AZY["16"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["16"]["Size"] = UDim2.new(0.13893571496009827, 0, 0.09271523356437683, 0);
AZY["16"]["Text"] = [[Arceus X]];
AZY["16"]["Name"] = [[NameLogo]];
AZY["16"]["Visible"] = false;
AZY["16"]["BackgroundTransparency"] = 1;
AZY["16"]["Position"] = UDim2.new(0.3928734362125397, 0, 0.4523245096206665, 0);

-- StarterGui.ArceusXV3.AnimationIntro.NameLogo.UITextSizeConstraint
AZY["17"] = Instance.new("UITextSizeConstraint", AZY["16"]);
AZY["17"]["MaxTextSize"] = 50;

-- StarterGui.ArceusXV3.MainUI
AZY["18"] = Instance.new("Folder", AZY["1"]);
AZY["18"]["Name"] = [[MainUI]];

-- StarterGui.ArceusXV3.MainUI.MainFrame
AZY["19"] = Instance.new("Frame", AZY["18"]);
AZY["19"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["19"]["BackgroundTransparency"] = 0.44999998807907104;
AZY["19"]["Size"] = UDim2.new(0, 459, 0, 276);
AZY["19"]["Position"] = UDim2.new(0.1498919129371643, 0, 0.12086091935634613, 0);
AZY["19"]["Visible"] = false;
AZY["19"]["Name"] = [[MainFrame]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.UICorner
AZY["1a"] = Instance.new("UICorner", AZY["19"]);
AZY["1a"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel
AZY["1b"] = Instance.new("Frame", AZY["19"]);
AZY["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["1b"]["BackgroundTransparency"] = 0.550000011920929;
AZY["1b"]["Size"] = UDim2.new(0.9417322874069214, 0, 0.11706378310918808, 0);
AZY["1b"]["Position"] = UDim2.new(0.03099355846643448, 0, 0.0474083386361599, 0);
AZY["1b"]["Name"] = [[Panel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.UICorner
AZY["1c"] = Instance.new("UICorner", AZY["1b"]);
AZY["1c"]["CornerRadius"] = UDim.new(0, 14);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Logo
AZY["1d"] = Instance.new("ImageLabel", AZY["1b"]);
AZY["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1d"]["Image"] = [[rbxassetid://12564267060]];
AZY["1d"]["Size"] = UDim2.new(0.05029655620455742, 0, 0.9125484824180603, 0);
AZY["1d"]["Name"] = [[Logo]];
AZY["1d"]["BackgroundTransparency"] = 1;
AZY["1d"]["Position"] = UDim2.new(0.4099465012550354, 0, 0.03155198320746422, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TextLogo
AZY["1e"] = Instance.new("TextLabel", AZY["1b"]);
AZY["1e"]["TextWrapped"] = true;
AZY["1e"]["TextScaled"] = true;
AZY["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["1e"]["TextSize"] = 85;
AZY["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1e"]["Size"] = UDim2.new(0.1371736377477646, 0, 0.6307170391082764, 0);
AZY["1e"]["Text"] = [[Arceus X]];
AZY["1e"]["Name"] = [[TextLogo]];
AZY["1e"]["BackgroundTransparency"] = 1;
AZY["1e"]["Position"] = UDim2.new(0.4679349362850189, 0, 0.16660596430301666, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TextLogo.UITextSizeConstraint
AZY["1f"] = Instance.new("UITextSizeConstraint", AZY["1e"]);
AZY["1f"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close
AZY["20"] = Instance.new("ImageButton", AZY["1b"]);
AZY["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["20"]["Image"] = [[rbxassetid://12566509152]];
AZY["20"]["Size"] = UDim2.new(0.06670181453227997, 0, 1, 0);
AZY["20"]["Name"] = [[Close]];
AZY["20"]["Position"] = UDim2.new(0.9171510338783264, 0, 0, 0);
AZY["20"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close.LocalScript
AZY["21"] = Instance.new("LocalScript", AZY["20"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand
AZY["22"] = Instance.new("ImageButton", AZY["1b"]);
AZY["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["22"]["Image"] = [[rbxassetid://12566545357]];
AZY["22"]["Size"] = UDim2.new(0.06901533156633377, 0, 1, 0);
AZY["22"]["Name"] = [[Expand]];
AZY["22"]["Position"] = UDim2.new(0.8481356501579285, 0, -0.024522678926587105, 0);
AZY["22"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand.LocalScript
AZY["23"] = Instance.new("LocalScript", AZY["22"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft
AZY["24"] = Instance.new("TextLabel", AZY["1b"]);
AZY["24"]["TextWrapped"] = true;
AZY["24"]["TextScaled"] = true;
AZY["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["24"]["TextSize"] = 35;
AZY["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["24"]["Size"] = UDim2.new(0.13600000739097595, 0, 0.38600000739097595, 0);
AZY["24"]["Text"] = [[24h 00m left]];
AZY["24"]["Name"] = [[TimeLeft]];
AZY["24"]["BackgroundTransparency"] = 1;
AZY["24"]["Position"] = UDim2.new(0.07365596294403076, 0, 0.28405851125717163, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft.LocalScript
AZY["25"] = Instance.new("LocalScript", AZY["24"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore
AZY["26"] = Instance.new("TextButton", AZY["1b"]);
AZY["26"]["TextWrapped"] = true;
AZY["26"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["26"]["TextSize"] = 12;
AZY["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["26"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["26"]["Size"] = UDim2.new(0.10400000214576721, 0, 0.503000020980835, 0);
AZY["26"]["Name"] = [[Restore]];
AZY["26"]["Text"] = [[Restore]];
AZY["26"]["Position"] = UDim2.new(0.21463949978351593, 0, 0.22850705683231354, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.UICorner
AZY["27"] = Instance.new("UICorner", AZY["26"]);
AZY["27"]["CornerRadius"] = UDim.new(0, 6);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.LocalScript
AZY["28"] = Instance.new("LocalScript", AZY["26"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon
AZY["29"] = Instance.new("ImageButton", AZY["1b"]);
AZY["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["29"]["Image"] = [[rbxassetid://12584810787]];
AZY["29"]["Size"] = UDim2.new(0.05783621221780777, 0, 0.7737637162208557, 0);
AZY["29"]["Name"] = [[Icon]];
AZY["29"]["Position"] = UDim2.new(0.01600000075995922, 0, 0.09300000220537186, 0);
AZY["29"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon.LocalScript
AZY["2a"] = Instance.new("LocalScript", AZY["29"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs
AZY["2b"] = Instance.new("Folder", AZY["19"]);
AZY["2b"]["Name"] = [[Tabs]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home
AZY["2c"] = Instance.new("Frame", AZY["2b"]);
AZY["2c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["2c"]["BackgroundTransparency"] = 1;
AZY["2c"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7336452603340149, 0);
AZY["2c"]["Position"] = UDim2.new(0.1409204602241516, 0, 0.18711426854133606, 0);
AZY["2c"]["Name"] = [[Home]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage
AZY["2d"] = Instance.new("Frame", AZY["2c"]);
AZY["2d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["2d"]["BackgroundTransparency"] = 0.550000011920929;
AZY["2d"]["Size"] = UDim2.new(0.37270405888557434, 0, 0.2492256611585617, 0);
AZY["2d"]["Position"] = UDim2.new(-0.0007835610886104405, 0, 0.025084324181079865, 0);
AZY["2d"]["Name"] = [[UserPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.UICorner
AZY["2e"] = Instance.new("UICorner", AZY["2d"]);
AZY["2e"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.ImageLabel
AZY["2f"] = Instance.new("ImageLabel", AZY["2d"]);
AZY["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["2f"]["Image"] = [[rbxassetid://12566434374]];
AZY["2f"]["Size"] = UDim2.new(0.3031076192855835, 0, 0.8659517168998718, 0);
AZY["2f"]["BackgroundTransparency"] = 1;
AZY["2f"]["Position"] = UDim2.new(0.22370131313800812, 0, 0.0670241266489029, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel
AZY["30"] = Instance.new("TextLabel", AZY["2d"]);
AZY["30"]["TextWrapped"] = true;
AZY["30"]["TextScaled"] = true;
AZY["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["30"]["TextSize"] = 25;
AZY["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["30"]["Size"] = UDim2.new(0.20524734258651733, 0, 0.3535553812980652, 0);
AZY["30"]["Text"] = [[Hi,]];
AZY["30"]["BackgroundTransparency"] = 1;
AZY["30"]["Position"] = UDim2.new(0.5262826681137085, 0, 0.14745301008224487, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel
AZY["31"] = Instance.new("TextLabel", AZY["2d"]);
AZY["31"]["TextWrapped"] = true;
AZY["31"]["TextScaled"] = true;
AZY["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["31"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["31"]["TextSize"] = 25;
AZY["31"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["31"]["Size"] = UDim2.new(0.3468869626522064, 0, 0.3007456660270691, 0);
AZY["31"]["Text"] = [[User]];
AZY["31"]["BackgroundTransparency"] = 1;
AZY["31"]["Position"] = UDim2.new(0.5669999122619629, 0, 0.5350000262260437, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.UITextSizeConstraint
AZY["32"] = Instance.new("UITextSizeConstraint", AZY["31"]);
AZY["32"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.LocalScript
AZY["33"] = Instance.new("LocalScript", AZY["31"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage
AZY["34"] = Instance.new("Frame", AZY["2c"]);
AZY["34"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["34"]["BackgroundTransparency"] = 0.550000011920929;
AZY["34"]["Size"] = UDim2.new(0.374349445104599, 0, 0.7526744604110718, 0);
AZY["34"]["Position"] = UDim2.new(-0.002428855048492551, 0, 0.3016669452190399, 0);
AZY["34"]["Name"] = [[KeySystemPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.UICorner
AZY["35"] = Instance.new("UICorner", AZY["34"]);
AZY["35"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["36"] = Instance.new("TextLabel", AZY["34"]);
AZY["36"]["TextWrapped"] = true;
AZY["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["36"]["TextSize"] = 16;
AZY["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["36"]["Size"] = UDim2.new(0.8114322423934937, 0, 0.15531843900680542, 0);
AZY["36"]["Text"] = [[Key System Status]];
AZY["36"]["BackgroundTransparency"] = 1;
AZY["36"]["Position"] = UDim2.new(0.05482717230916023, 0, 0.06104206293821335, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["37"] = Instance.new("TextLabel", AZY["34"]);
AZY["37"]["TextWrapped"] = true;
AZY["37"]["TextScaled"] = true;
AZY["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["37"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["37"]["TextSize"] = 35;
AZY["37"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
AZY["37"]["Size"] = UDim2.new(0.30206844210624695, 0, 0.09149397909641266, 0);
AZY["37"]["Text"] = [[Online]];
AZY["37"]["BackgroundTransparency"] = 1;
AZY["37"]["Position"] = UDim2.new(0.08498311042785645, 0, 0.1731228232383728, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["38"] = Instance.new("TextLabel", AZY["34"]);
AZY["38"]["TextWrapped"] = true;
AZY["38"]["TextScaled"] = true;
AZY["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["38"]["TextSize"] = 35;
AZY["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["38"]["Size"] = UDim2.new(0.423105388879776, 0, 0.0994054526090622, 0);
AZY["38"]["Text"] = [[Expires In:]];
AZY["38"]["BackgroundTransparency"] = 1;
AZY["38"]["Position"] = UDim2.new(0.054827168583869934, 0, 0.31500908732414246, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft
AZY["39"] = Instance.new("TextLabel", AZY["34"]);
AZY["39"]["TextWrapped"] = true;
AZY["39"]["TextScaled"] = true;
AZY["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["39"]["TextSize"] = 35;
AZY["39"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
AZY["39"]["Size"] = UDim2.new(0.30206844210624695, 0, 0.0994054526090622, 0);
AZY["39"]["Text"] = [[24h 00m]];
AZY["39"]["Name"] = [[TimeLeft]];
AZY["39"]["BackgroundTransparency"] = 1;
AZY["39"]["Position"] = UDim2.new(0.49440309405326843, 0, 0.31500908732414246, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft.LocalScript
AZY["3a"] = Instance.new("LocalScript", AZY["39"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar
AZY["3b"] = Instance.new("Frame", AZY["34"]);
AZY["3b"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 0);
AZY["3b"]["Size"] = UDim2.new(0.8291789293289185, 0, 0.07132068276405334, 0);
AZY["3b"]["Position"] = UDim2.new(0.05709991604089737, 0, 0.44679027795791626, 0);
AZY["3b"]["Name"] = [[Bar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar.UICorner
AZY["3c"] = Instance.new("UICorner", AZY["3b"]);
AZY["3c"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar.TextLabel
AZY["3d"] = Instance.new("TextLabel", AZY["3b"]);
AZY["3d"]["TextWrapped"] = true;
AZY["3d"]["TextScaled"] = true;
AZY["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3d"]["TextTransparency"] = 0.6000000238418579;
AZY["3d"]["TextSize"] = 35;
AZY["3d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["3d"]["Size"] = UDim2.new(0.2189580649137497, 0, 0.9389510154724121, 0);
AZY["3d"]["Text"] = [[100%]];
AZY["3d"]["BackgroundTransparency"] = 1;
AZY["3d"]["Position"] = UDim2.new(0.7810419201850891, 0, 0.061042893677949905, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["3e"] = Instance.new("TextLabel", AZY["34"]);
AZY["3e"]["TextWrapped"] = true;
AZY["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3e"]["TextSize"] = 12;
AZY["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3e"]["Size"] = UDim2.new(0.5709924697875977, 0, 0.11561357975006104, 0);
AZY["3e"]["Text"] = [[Last activation:]];
AZY["3e"]["BackgroundTransparency"] = 1;
AZY["3e"]["Position"] = UDim2.new(0.05010330677032471, 0, 0.5460530519485474, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time
AZY["3f"] = Instance.new("TextLabel", AZY["34"]);
AZY["3f"]["TextWrapped"] = true;
AZY["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3f"]["TextSize"] = 12;
AZY["3f"]["TextColor3"] = Color3.fromRGB(178, 178, 178);
AZY["3f"]["Size"] = UDim2.new(0.6227233409881592, 0, 0.09644854068756104, 0);
AZY["3f"]["Text"] = [[Today, HH:MM AM]];
AZY["3f"]["Name"] = [[Time]];
AZY["3f"]["BackgroundTransparency"] = 1;
AZY["3f"]["Position"] = UDim2.new(0.08199998736381531, 0, 0.6469999551773071, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time.LocalScript
AZY["40"] = Instance.new("LocalScript", AZY["3f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore
AZY["41"] = Instance.new("TextButton", AZY["34"]);
AZY["41"]["TextWrapped"] = true;
AZY["41"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["41"]["TextSize"] = 15;
AZY["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["41"]["Size"] = UDim2.new(0.7855679988861084, 0, 0.17807699739933014, 0);
AZY["41"]["Name"] = [[Restore]];
AZY["41"]["Text"] = [[Restore]];
AZY["41"]["Position"] = UDim2.new(0.10590747743844986, 0, 0.7775270342826843, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.UICorner
AZY["42"] = Instance.new("UICorner", AZY["41"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.LocalScript
AZY["43"] = Instance.new("LocalScript", AZY["41"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage
AZY["44"] = Instance.new("Frame", AZY["2c"]);
AZY["44"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["44"]["BackgroundTransparency"] = 0.550000011920929;
AZY["44"]["Size"] = UDim2.new(0.6116291880607605, 0, 1.0292569398880005, 0);
AZY["44"]["Position"] = UDim2.new(0.3883708119392395, 0, 0.025084195658564568, 0);
AZY["44"]["Name"] = [[HaxPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.UICorner
AZY["45"] = Instance.new("UICorner", AZY["44"]);
AZY["45"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextLabel
AZY["46"] = Instance.new("TextLabel", AZY["44"]);
AZY["46"]["TextWrapped"] = true;
AZY["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["46"]["TextSize"] = 18;
AZY["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["46"]["Size"] = UDim2.new(0.3717169165611267, 0, 0.10439325869083405, 0);
AZY["46"]["Text"] = [[Quick Hacks]];
AZY["46"]["BackgroundTransparency"] = 1;
AZY["46"]["Position"] = UDim2.new(0.01899999938905239, 0, 0.03400000184774399, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Grav
AZY["47"] = Instance.new("BoolValue", AZY["44"]);
AZY["47"]["Name"] = [[Grav]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts
AZY["48"] = Instance.new("Folder", AZY["44"]);
AZY["48"]["Name"] = [[Scripts]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot
AZY["49"] = Instance.new("TextButton", AZY["48"]);
AZY["49"]["TextWrapped"] = true;
AZY["49"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["49"]["TextSize"] = 11;
AZY["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["49"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["49"]["Name"] = [[Aimbot]];
AZY["49"]["Text"] = [[AimBot]];
AZY["49"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.5989999771118164, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.UICorner
AZY["4a"] = Instance.new("UICorner", AZY["49"]);
AZY["4a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.LocalScript
AZY["4b"] = Instance.new("LocalScript", AZY["49"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools
AZY["4c"] = Instance.new("TextButton", AZY["48"]);
AZY["4c"]["TextWrapped"] = true;
AZY["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["4c"]["TextSize"] = 11;
AZY["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["4c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["4c"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["4c"]["Name"] = [[Btools]];
AZY["4c"]["Text"] = [[Btools]];
AZY["4c"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.4830000102519989, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.UICorner
AZY["4d"] = Instance.new("UICorner", AZY["4c"]);
AZY["4d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.LocalScript
AZY["4e"] = Instance.new("LocalScript", AZY["4c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex
AZY["4f"] = Instance.new("TextButton", AZY["48"]);
AZY["4f"]["TextWrapped"] = true;
AZY["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["4f"]["TextSize"] = 11;
AZY["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["4f"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["4f"]["Name"] = [[Dex]];
AZY["4f"]["Text"] = [[DEX Explorer]];
AZY["4f"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.2564218044281006, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.UICorner
AZY["50"] = Instance.new("UICorner", AZY["4f"]);
AZY["50"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.LocalScript
AZY["51"] = Instance.new("LocalScript", AZY["4f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP
AZY["52"] = Instance.new("TextButton", AZY["48"]);
AZY["52"]["TextWrapped"] = true;
AZY["52"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["52"]["TextSize"] = 11;
AZY["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["52"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["52"]["Name"] = [[FatesESP]];
AZY["52"]["Text"] = [[Fates ESP]];
AZY["52"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.3709999918937683, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.UICorner
AZY["53"] = Instance.new("UICorner", AZY["52"]);
AZY["53"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.LocalScript
AZY["54"] = Instance.new("LocalScript", AZY["52"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly
AZY["55"] = Instance.new("TextButton", AZY["48"]);
AZY["55"]["TextWrapped"] = true;
AZY["55"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["55"]["TextSize"] = 11;
AZY["55"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["55"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["55"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["55"]["Name"] = [[Fly]];
AZY["55"]["Text"] = [[Fly]];
AZY["55"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.7070000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.UICorner
AZY["56"] = Instance.new("UICorner", AZY["55"]);
AZY["56"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.LocalScript
AZY["57"] = Instance.new("LocalScript", AZY["55"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY
AZY["58"] = Instance.new("TextButton", AZY["48"]);
AZY["58"]["TextWrapped"] = true;
AZY["58"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["58"]["TextSize"] = 11;
AZY["58"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["58"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["58"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["58"]["Name"] = [[IY]];
AZY["58"]["Text"] = [[Infinite Yield]];
AZY["58"]["Position"] = UDim2.new(0.04595530033111572, 0, 0.13954126834869385, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.UICorner
AZY["59"] = Instance.new("UICorner", AZY["58"]);
AZY["59"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.LocalScript
AZY["5a"] = Instance.new("LocalScript", AZY["58"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub
AZY["5b"] = Instance.new("TextButton", AZY["48"]);
AZY["5b"]["TextWrapped"] = true;
AZY["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["5b"]["TextSize"] = 11;
AZY["5b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5b"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["5b"]["Name"] = [[PwnHub]];
AZY["5b"]["Text"] = [[Pwner Hub]];
AZY["5b"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.8209999799728394, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.UICorner
AZY["5c"] = Instance.new("UICorner", AZY["5b"]);
AZY["5c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.LocalScript
AZY["5d"] = Instance.new("LocalScript", AZY["5b"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextGrav
AZY["5e"] = Instance.new("TextLabel", AZY["44"]);
AZY["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5e"]["TextSize"] = 12;
AZY["5e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5e"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["5e"]["Text"] = [[Gravity]];
AZY["5e"]["Name"] = [[TextGrav]];
AZY["5e"]["BackgroundTransparency"] = 1;
AZY["5e"]["Position"] = UDim2.new(0.3269999921321869, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextWs
AZY["5f"] = Instance.new("TextLabel", AZY["44"]);
AZY["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5f"]["TextSize"] = 12;
AZY["5f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5f"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["5f"]["Text"] = [[Speed]];
AZY["5f"]["Name"] = [[TextWs]];
AZY["5f"]["BackgroundTransparency"] = 1;
AZY["5f"]["Position"] = UDim2.new(0.5411151647567749, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextJp
AZY["60"] = Instance.new("TextLabel", AZY["44"]);
AZY["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["60"]["TextSize"] = 12;
AZY["60"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["60"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["60"]["Text"] = [[Jump]];
AZY["60"]["Name"] = [[TextJp]];
AZY["60"]["BackgroundTransparency"] = 1;
AZY["60"]["Position"] = UDim2.new(0.7466657161712646, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Ws
AZY["61"] = Instance.new("BoolValue", AZY["44"]);
AZY["61"]["Name"] = [[Ws]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Jp
AZY["62"] = Instance.new("BoolValue", AZY["44"]);
AZY["62"]["Name"] = [[Jp]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav
AZY["63"] = Instance.new("TextButton", AZY["44"]);
AZY["63"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["63"]["TextSize"] = 14;
AZY["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["63"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["63"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["63"]["Name"] = [[ToggleGrav]];
AZY["63"]["Text"] = [[]];
AZY["63"]["Position"] = UDim2.new(0.40253645181655884, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.UICorner
AZY["64"] = Instance.new("UICorner", AZY["63"]);
AZY["64"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.LocalScript
AZY["65"] = Instance.new("LocalScript", AZY["63"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs
AZY["66"] = Instance.new("TextButton", AZY["44"]);
AZY["66"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["66"]["TextSize"] = 14;
AZY["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["66"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["66"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["66"]["Name"] = [[ToggleWs]];
AZY["66"]["Text"] = [[]];
AZY["66"]["Position"] = UDim2.new(0.6166515946388245, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.UICorner
AZY["67"] = Instance.new("UICorner", AZY["66"]);
AZY["67"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.LocalScript
AZY["68"] = Instance.new("LocalScript", AZY["66"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp
AZY["69"] = Instance.new("TextButton", AZY["44"]);
AZY["69"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["69"]["TextSize"] = 14;
AZY["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["69"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["69"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["69"]["Name"] = [[ToggleJp]];
AZY["69"]["Text"] = [[]];
AZY["69"]["Position"] = UDim2.new(0.8222021460533142, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.UICorner
AZY["6a"] = Instance.new("UICorner", AZY["69"]);
AZY["6a"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.LocalScript
AZY["6b"] = Instance.new("LocalScript", AZY["69"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS
AZY["6c"] = Instance.new("ImageButton", AZY["44"]);
AZY["6c"]["Active"] = false;
AZY["6c"]["BorderSizePixel"] = 0;
AZY["6c"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6c"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6c"]["SliceScale"] = 0.11999999731779099;
AZY["6c"]["ImageTransparency"] = 1;
AZY["6c"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["6c"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["6c"]["Selectable"] = false;
AZY["6c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["6c"]["Image"] = [[rbxassetid://3570695787]];
AZY["6c"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["6c"]["Name"] = [[JpS]];
AZY["6c"]["Rotation"] = -90;
AZY["6c"]["Position"] = UDim2.new(0.8600000143051147, 0, 0.4399999976158142, 0);
AZY["6c"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton
AZY["6d"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["6d"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6d"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6d"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["6d"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["6d"]["SliceScale"] = 0.11999999731779099;
AZY["6d"]["Selectable"] = true;
AZY["6d"]["Image"] = [[rbxassetid://3570695787]];
AZY["6d"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["6d"]["Active"] = true;
AZY["6d"]["Name"] = [[SliderButton]];
AZY["6d"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton.LocalScript
AZY["6e"] = Instance.new("LocalScript", AZY["6d"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.Border
AZY["6f"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["6f"]["ZIndex"] = -1;
AZY["6f"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6f"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6f"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["6f"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["6f"]["SliceScale"] = 0.23999999463558197;
AZY["6f"]["ImageTransparency"] = 1;
AZY["6f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["6f"]["Image"] = [[rbxassetid://3570695787]];
AZY["6f"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["6f"]["Name"] = [[Border]];
AZY["6f"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["6f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.Border.UICorner
AZY["70"] = Instance.new("UICorner", AZY["6f"]);
AZY["70"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.StripedPattern
AZY["71"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["71"]["BorderSizePixel"] = 0;
AZY["71"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["71"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["71"]["ImageTransparency"] = 1;
AZY["71"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["71"]["Image"] = [[rbxassetid://4925116997]];
AZY["71"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["71"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["71"]["Name"] = [[StripedPattern]];
AZY["71"]["BackgroundTransparency"] = 1;
AZY["71"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.StripedPattern.UIGradient
AZY["72"] = Instance.new("UIGradient", AZY["71"]);
AZY["72"]["Rotation"] = 90;
AZY["72"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.ImageLabel
AZY["73"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["73"]["Image"] = [[rbxassetid://12582573514]];
AZY["73"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["73"]["Rotation"] = 90;
AZY["73"]["BackgroundTransparency"] = 1;
AZY["73"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.TextLabel
AZY["74"] = Instance.new("TextBox", AZY["6c"]);
AZY["74"]["ZIndex"] = 2;
AZY["74"]["TextSize"] = 13;
AZY["74"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["74"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["74"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["74"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["74"]["BackgroundTransparency"] = 1;
AZY["74"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["74"]["Text"] = [[0%]];
AZY["74"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["74"]["Rotation"] = 90;
AZY["74"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS
AZY["75"] = Instance.new("ImageButton", AZY["44"]);
AZY["75"]["Active"] = false;
AZY["75"]["BorderSizePixel"] = 0;
AZY["75"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["75"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["75"]["SliceScale"] = 0.11999999731779099;
AZY["75"]["ImageTransparency"] = 1;
AZY["75"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["75"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["75"]["Selectable"] = false;
AZY["75"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["75"]["Image"] = [[rbxassetid://3570695787]];
AZY["75"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["75"]["Name"] = [[WsS]];
AZY["75"]["Rotation"] = -90;
AZY["75"]["Position"] = UDim2.new(0.6499999761581421, 0, 0.4399999976158142, 0);
AZY["75"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton
AZY["76"] = Instance.new("ImageLabel", AZY["75"]);
AZY["76"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["76"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["76"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["76"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["76"]["SliceScale"] = 0.11999999731779099;
AZY["76"]["Selectable"] = true;
AZY["76"]["Image"] = [[rbxassetid://3570695787]];
AZY["76"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["76"]["Active"] = true;
AZY["76"]["Name"] = [[SliderButton]];
AZY["76"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton.LocalScript
AZY["77"] = Instance.new("LocalScript", AZY["76"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.Border
AZY["78"] = Instance.new("ImageLabel", AZY["75"]);
AZY["78"]["ZIndex"] = -1;
AZY["78"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["78"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["78"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["78"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["78"]["SliceScale"] = 0.23999999463558197;
AZY["78"]["ImageTransparency"] = 1;
AZY["78"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["78"]["Image"] = [[rbxassetid://3570695787]];
AZY["78"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["78"]["Name"] = [[Border]];
AZY["78"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["78"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.Border.UICorner
AZY["79"] = Instance.new("UICorner", AZY["78"]);
AZY["79"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.StripedPattern
AZY["7a"] = Instance.new("ImageLabel", AZY["75"]);
AZY["7a"]["BorderSizePixel"] = 0;
AZY["7a"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7a"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["7a"]["ImageTransparency"] = 1;
AZY["7a"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["7a"]["Image"] = [[rbxassetid://4925116997]];
AZY["7a"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["7a"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["7a"]["Name"] = [[StripedPattern]];
AZY["7a"]["BackgroundTransparency"] = 1;
AZY["7a"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.StripedPattern.UIGradient
AZY["7b"] = Instance.new("UIGradient", AZY["7a"]);
AZY["7b"]["Rotation"] = 90;
AZY["7b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.ImageLabel
AZY["7c"] = Instance.new("ImageLabel", AZY["75"]);
AZY["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7c"]["Image"] = [[rbxassetid://12572149271]];
AZY["7c"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["7c"]["Rotation"] = 90;
AZY["7c"]["BackgroundTransparency"] = 1;
AZY["7c"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.TextLabel
AZY["7d"] = Instance.new("TextBox", AZY["75"]);
AZY["7d"]["ZIndex"] = 2;
AZY["7d"]["TextSize"] = 13;
AZY["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["7d"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["7d"]["BackgroundTransparency"] = 1;
AZY["7d"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["7d"]["Text"] = [[0%]];
AZY["7d"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["7d"]["Rotation"] = 90;
AZY["7d"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS
AZY["7e"] = Instance.new("ImageButton", AZY["44"]);
AZY["7e"]["Active"] = false;
AZY["7e"]["BorderSizePixel"] = 0;
AZY["7e"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["7e"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["7e"]["SliceScale"] = 0.11999999731779099;
AZY["7e"]["ImageTransparency"] = 1;
AZY["7e"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["7e"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["7e"]["Selectable"] = false;
AZY["7e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["7e"]["Image"] = [[rbxassetid://3570695787]];
AZY["7e"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["7e"]["Name"] = [[GravS]];
AZY["7e"]["Rotation"] = -90;
AZY["7e"]["Position"] = UDim2.new(0.4359999895095825, 0, 0.4399999976158142, 0);
AZY["7e"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton
AZY["7f"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["7f"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["7f"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["7f"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["7f"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["7f"]["SliceScale"] = 0.11999999731779099;
AZY["7f"]["Selectable"] = true;
AZY["7f"]["Image"] = [[rbxassetid://3570695787]];
AZY["7f"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["7f"]["Active"] = true;
AZY["7f"]["Name"] = [[SliderButton]];
AZY["7f"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton.LocalScript
AZY["80"] = Instance.new("LocalScript", AZY["7f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.Border
AZY["81"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["81"]["ZIndex"] = -1;
AZY["81"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["81"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["81"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["81"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["81"]["SliceScale"] = 0.23999999463558197;
AZY["81"]["ImageTransparency"] = 1;
AZY["81"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["81"]["Image"] = [[rbxassetid://3570695787]];
AZY["81"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["81"]["Name"] = [[Border]];
AZY["81"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["81"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.Border.UICorner
AZY["82"] = Instance.new("UICorner", AZY["81"]);
AZY["82"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.StripedPattern
AZY["83"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["83"]["BorderSizePixel"] = 0;
AZY["83"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["83"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["83"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["83"]["ImageTransparency"] = 1;
AZY["83"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["83"]["Image"] = [[rbxassetid://4925116997]];
AZY["83"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["83"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["83"]["Name"] = [[StripedPattern]];
AZY["83"]["BackgroundTransparency"] = 1;
AZY["83"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.StripedPattern.UIGradient
AZY["84"] = Instance.new("UIGradient", AZY["83"]);
AZY["84"]["Rotation"] = 90;
AZY["84"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.ImageLabel
AZY["85"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["85"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["85"]["Image"] = [[rbxassetid://12582575947]];
AZY["85"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["85"]["Rotation"] = 90;
AZY["85"]["BackgroundTransparency"] = 1;
AZY["85"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.TextLabel
AZY["86"] = Instance.new("TextBox", AZY["7e"]);
AZY["86"]["ZIndex"] = 2;
AZY["86"]["TextSize"] = 13;
AZY["86"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["86"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["86"]["BackgroundTransparency"] = 1;
AZY["86"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["86"]["Text"] = [[0%]];
AZY["86"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["86"]["Rotation"] = 90;
AZY["86"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs
AZY["87"] = Instance.new("Frame", AZY["2b"]);
AZY["87"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["87"]["BackgroundTransparency"] = 1;
AZY["87"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7735126614570618, 0);
AZY["87"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.18711429834365845, 0);
AZY["87"]["Visible"] = false;
AZY["87"]["Name"] = [[Changelogs]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage
AZY["88"] = Instance.new("Frame", AZY["87"]);
AZY["88"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["88"]["BackgroundTransparency"] = 0.550000011920929;
AZY["88"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.2235966920852661, 0);
AZY["88"]["Position"] = UDim2.new(0.0059703318402171135, 0, 0.020400146022439003, 0);
AZY["88"]["Name"] = [[TitlePage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.UICorner
AZY["89"] = Instance.new("UICorner", AZY["88"]);
AZY["89"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.ImageLabel
AZY["8a"] = Instance.new("ImageLabel", AZY["88"]);
AZY["8a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8a"]["Image"] = [[rbxassetid://12585006598]];
AZY["8a"]["Size"] = UDim2.new(0, 48, 0, 48);
AZY["8a"]["BackgroundTransparency"] = 1;
AZY["8a"]["Position"] = UDim2.new(0.16064772009849548, 0, -0.020948588848114014, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.TextLogo
AZY["8b"] = Instance.new("TextLabel", AZY["88"]);
AZY["8b"]["TextWrapped"] = true;
AZY["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["8b"]["TextSize"] = 17;
AZY["8b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8b"]["Size"] = UDim2.new(0.48227599263191223, 0, 0.442178338766098, 0);
AZY["8b"]["Text"] = [[SPDM Team]];
AZY["8b"]["Name"] = [[TextLogo]];
AZY["8b"]["BackgroundTransparency"] = 1;
AZY["8b"]["Position"] = UDim2.new(0.3840000033378601, 0, 0.2709999978542328, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.TextLogo.UITextSizeConstraint
AZY["8c"] = Instance.new("UITextSizeConstraint", AZY["8b"]);
AZY["8c"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits
AZY["8d"] = Instance.new("Frame", AZY["87"]);
AZY["8d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["8d"]["BackgroundTransparency"] = 0.550000011920929;
AZY["8d"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.7172916531562805, 0);
AZY["8d"]["Position"] = UDim2.new(0.0059703318402171135, 0, 0.28270816802978516, 0);
AZY["8d"]["Name"] = [[Credits]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.UICorner
AZY["8e"] = Instance.new("UICorner", AZY["8d"]);
AZY["8e"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.Title
AZY["8f"] = Instance.new("TextLabel", AZY["8d"]);
AZY["8f"]["TextWrapped"] = true;
AZY["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["8f"]["TextSize"] = 17;
AZY["8f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8f"]["Size"] = UDim2.new(0.32700005173683167, 0, 0.14513146877288818, 0);
AZY["8f"]["Text"] = [[About us]];
AZY["8f"]["Name"] = [[Title]];
AZY["8f"]["BackgroundTransparency"] = 1;
AZY["8f"]["Position"] = UDim2.new(0.056999966502189636, 0, 0.048999954015016556, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.Title.UITextSizeConstraint
AZY["90"] = Instance.new("UITextSizeConstraint", AZY["8f"]);
AZY["90"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame
AZY["91"] = Instance.new("ScrollingFrame", AZY["8d"]);
AZY["91"]["Active"] = true;
AZY["91"]["CanvasSize"] = UDim2.new(0, 0, 1.5, 0);
AZY["91"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["91"]["BackgroundTransparency"] = 1;
AZY["91"]["Size"] = UDim2.new(0, 175, 0, 110);
AZY["91"]["ScrollBarImageColor3"] = Color3.fromRGB(255, 0, 14);
AZY["91"]["BorderColor3"] = Color3.fromRGB(54, 0, 2);
AZY["91"]["ScrollBarThickness"] = 5;
AZY["91"]["Position"] = UDim2.new(-4.226361483006258e-08, 0, 0.20896700024604797, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["92"] = Instance.new("Frame", AZY["91"]);
AZY["92"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["92"]["BackgroundTransparency"] = 1;
AZY["92"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["92"]["Position"] = UDim2.new(0.11400000005960464, 0, 0, 0);
AZY["92"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["93"] = Instance.new("ImageLabel", AZY["92"]);
AZY["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["93"]["Image"] = [[rbxassetid://12585390334]];
AZY["93"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["93"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["94"] = Instance.new("TextLabel", AZY["92"]);
AZY["94"]["TextWrapped"] = true;
AZY["94"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["94"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["94"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["94"]["TextSize"] = 13;
AZY["94"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["94"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["94"]["Text"] = [[Chillz]];
AZY["94"]["Name"] = [[TextLogo]];
AZY["94"]["BackgroundTransparency"] = 1;
AZY["94"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["95"] = Instance.new("UITextSizeConstraint", AZY["94"]);
AZY["95"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["96"] = Instance.new("TextLabel", AZY["92"]);
AZY["96"]["TextWrapped"] = true;
AZY["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["96"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["96"]["TextSize"] = 11;
AZY["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["96"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["96"]["Text"] = [[UI Everything]];
AZY["96"]["Name"] = [[Desc]];
AZY["96"]["BackgroundTransparency"] = 1;
AZY["96"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["97"] = Instance.new("UITextSizeConstraint", AZY["96"]);
AZY["97"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["98"] = Instance.new("Frame", AZY["91"]);
AZY["98"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["98"]["BackgroundTransparency"] = 1;
AZY["98"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["98"]["Position"] = UDim2.new(0.11400000005960464, 0, 0.19155307114124298, 0);
AZY["98"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["99"] = Instance.new("ImageLabel", AZY["98"]);
AZY["99"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["99"]["Image"] = [[rbxassetid://12585434446]];
AZY["99"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["99"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["9a"] = Instance.new("TextLabel", AZY["98"]);
AZY["9a"]["TextWrapped"] = true;
AZY["9a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["9a"]["TextSize"] = 13;
AZY["9a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9a"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["9a"]["Text"] = [[Ash01#0947]];
AZY["9a"]["Name"] = [[TextLogo]];
AZY["9a"]["BackgroundTransparency"] = 1;
AZY["9a"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["9b"] = Instance.new("UITextSizeConstraint", AZY["9a"]);
AZY["9b"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["9c"] = Instance.new("TextLabel", AZY["98"]);
AZY["9c"]["TextWrapped"] = true;
AZY["9c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["9c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["9c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9c"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["9c"]["Text"] = [[Pwner Hub Owner / Creator]];
AZY["9c"]["Name"] = [[Desc]];
AZY["9c"]["BackgroundTransparency"] = 1;
AZY["9c"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["9d"] = Instance.new("UITextSizeConstraint", AZY["9c"]);
AZY["9d"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["9e"] = Instance.new("Frame", AZY["91"]);
AZY["9e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["9e"]["BackgroundTransparency"] = 1;
AZY["9e"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["9e"]["Position"] = UDim2.new(0.11400000005960464, 0, 0.38310614228248596, 0);
AZY["9e"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["9f"] = Instance.new("ImageLabel", AZY["9e"]);
AZY["9f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9f"]["Image"] = [[http://www.roblox.com/asset/?id=12642988505]];
AZY["9f"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["9f"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["a0"] = Instance.new("TextLabel", AZY["9e"]);
AZY["a0"]["TextWrapped"] = true;
AZY["a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a0"]["TextSize"] = 13;
AZY["a0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a0"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["a0"]["Text"] = [[Bread!]];
AZY["a0"]["Name"] = [[TextLogo]];
AZY["a0"]["BackgroundTransparency"] = 1;
AZY["a0"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["a1"] = Instance.new("UITextSizeConstraint", AZY["a0"]);
AZY["a1"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["a2"] = Instance.new("TextLabel", AZY["9e"]);
AZY["a2"]["TextWrapped"] = true;
AZY["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a2"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["a2"]["Text"] = [[UI Slider Fixes And Textbox]];
AZY["a2"]["Name"] = [[Desc]];
AZY["a2"]["BackgroundTransparency"] = 1;
AZY["a2"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["a3"] = Instance.new("UITextSizeConstraint", AZY["a2"]);
AZY["a3"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog
AZY["a4"] = Instance.new("Frame", AZY["87"]);
AZY["a4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["a4"]["BackgroundTransparency"] = 0.550000011920929;
AZY["a4"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.7172916531562805, 0);
AZY["a4"]["Position"] = UDim2.new(0.5088531970977783, 0, 0.020400196313858032, 0);
AZY["a4"]["Name"] = [[Changelog]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.UICorner
AZY["a5"] = Instance.new("UICorner", AZY["a4"]);
AZY["a5"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.TextLogo
AZY["a6"] = Instance.new("TextLabel", AZY["a4"]);
AZY["a6"]["TextWrapped"] = true;
AZY["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a6"]["TextSize"] = 19;
AZY["a6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a6"]["Size"] = UDim2.new(0.39918234944343567, 0, 0.14513146877288818, 0);
AZY["a6"]["Text"] = [[Changelog]];
AZY["a6"]["Name"] = [[TextLogo]];
AZY["a6"]["BackgroundTransparency"] = 1;
AZY["a6"]["Position"] = UDim2.new(0.05700000002980232, 0, 0.04899999871850014, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.TextLogo.UITextSizeConstraint
AZY["a7"] = Instance.new("UITextSizeConstraint", AZY["a6"]);
AZY["a7"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver
AZY["a8"] = Instance.new("TextLabel", AZY["a4"]);
AZY["a8"]["TextWrapped"] = true;
AZY["a8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a8"]["TextSize"] = 13;
AZY["a8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a8"]["Size"] = UDim2.new(0.240515798330307, 0, 0.14513146877288818, 0);
AZY["a8"]["Text"] = [[v3.0.1]];
AZY["a8"]["Name"] = [[Ver]];
AZY["a8"]["BackgroundTransparency"] = 1;
AZY["a8"]["Position"] = UDim2.new(0.6331158876419067, 0, 0.04900005832314491, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver.UITextSizeConstraint
AZY["a9"] = Instance.new("UITextSizeConstraint", AZY["a8"]);
AZY["a9"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver
AZY["aa"] = Instance.new("TextLabel", AZY["a4"]);
AZY["aa"]["TextWrapped"] = true;
AZY["aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["aa"]["TextSize"] = 9;
AZY["aa"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["aa"]["Size"] = UDim2.new(0.0997123271226883, 0, 0.08936085551977158, 0);
AZY["aa"]["Text"] = [[beta]];
AZY["aa"]["Name"] = [[Ver]];
AZY["aa"]["BackgroundTransparency"] = 1;
AZY["aa"]["Position"] = UDim2.new(0.8399999737739563, 0, 0.0820000022649765, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver.UITextSizeConstraint
AZY["ab"] = Instance.new("UITextSizeConstraint", AZY["aa"]);
AZY["ab"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame
AZY["ac"] = Instance.new("ScrollingFrame", AZY["a4"]);
AZY["ac"]["Active"] = true;
AZY["ac"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ac"]["BackgroundTransparency"] = 1;
AZY["ac"]["Size"] = UDim2.new(0, 165, 0, 113);
AZY["ac"]["ScrollBarImageColor3"] = Color3.fromRGB(255, 0, 14);
AZY["ac"]["BorderColor3"] = Color3.fromRGB(54, 0, 2);
AZY["ac"]["ScrollBarThickness"] = 5;
AZY["ac"]["Position"] = UDim2.new(0.05699992552399635, 0, 0.20896704494953156, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab
AZY["ad"] = Instance.new("Frame", AZY["ac"]);
AZY["ad"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["ad"]["BackgroundTransparency"] = 1;
AZY["ad"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["ad"]["Position"] = UDim2.new(-0.001135505735874176, 0, 0.008439034223556519, 0);
AZY["ad"]["Name"] = [[ChangelogTab]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.UICorner
AZY["ae"] = Instance.new("UICorner", AZY["ad"]);
AZY["ae"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["af"] = Instance.new("TextLabel", AZY["ad"]);
AZY["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["af"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["af"]["TextSize"] = 56;
AZY["af"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["af"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["af"]["Text"] = [[.]];
AZY["af"]["BackgroundTransparency"] = 1;
AZY["af"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["b0"] = Instance.new("TextLabel", AZY["ad"]);
AZY["b0"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["b0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["b0"]["TextSize"] = 14;
AZY["b0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b0"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["b0"]["Text"] = [[New]];
AZY["b0"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel.UICorner
AZY["b1"] = Instance.new("UICorner", AZY["b0"]);
AZY["b1"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["b2"] = Instance.new("TextLabel", AZY["ad"]);
AZY["b2"]["TextWrapped"] = true;
AZY["b2"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["b2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b2"]["TextSize"] = 11;
AZY["b2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b2"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["b2"]["Text"] = [[Floating icon now with addec functionality! In addition to opening the mod menu, holding it down will take you directly to your desired page]];
AZY["b2"]["BackgroundTransparency"] = 1;
AZY["b2"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1
AZY["b3"] = Instance.new("Frame", AZY["ac"]);
AZY["b3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["b3"]["BackgroundTransparency"] = 1;
AZY["b3"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["b3"]["Position"] = UDim2.new(-0.0071961116045713425, 0, 0.20108048617839813, 0);
AZY["b3"]["Name"] = [[ChangelogTab1]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.UICorner
AZY["b4"] = Instance.new("UICorner", AZY["b3"]);
AZY["b4"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b5"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b5"]["TextSize"] = 56;
AZY["b5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b5"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["b5"]["Text"] = [[.]];
AZY["b5"]["BackgroundTransparency"] = 1;
AZY["b5"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b6"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b6"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["b6"]["TextSize"] = 14;
AZY["b6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b6"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["b6"]["Text"] = [[New]];
AZY["b6"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel.UICorner
AZY["b7"] = Instance.new("UICorner", AZY["b6"]);
AZY["b7"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b8"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b8"]["TextWrapped"] = true;
AZY["b8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b8"]["TextSize"] = 11;
AZY["b8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b8"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["b8"]["Text"] = [[Stunning Design with breathtaking graphical elements, animations, colors and beautiful icons!]];
AZY["b8"]["BackgroundTransparency"] = 1;
AZY["b8"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2
AZY["b9"] = Instance.new("Frame", AZY["ac"]);
AZY["b9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["b9"]["BackgroundTransparency"] = 1;
AZY["b9"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["b9"]["Position"] = UDim2.new(-0.0010000000474974513, 0, 0.3869999945163727, 0);
AZY["b9"]["Name"] = [[ChangelogTab2]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.UICorner
AZY["ba"] = Instance.new("UICorner", AZY["b9"]);
AZY["ba"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["bb"] = Instance.new("TextLabel", AZY["b9"]);
AZY["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["bb"]["TextSize"] = 56;
AZY["bb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bb"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["bb"]["Text"] = [[.]];
AZY["bb"]["BackgroundTransparency"] = 1;
AZY["bb"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["bc"] = Instance.new("TextLabel", AZY["b9"]);
AZY["bc"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["bc"]["TextSize"] = 14;
AZY["bc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bc"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["bc"]["Text"] = [[New]];
AZY["bc"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel.UICorner
AZY["bd"] = Instance.new("UICorner", AZY["bc"]);
AZY["bd"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["be"] = Instance.new("TextLabel", AZY["b9"]);
AZY["be"]["TextWrapped"] = true;
AZY["be"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["be"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["be"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["be"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["be"]["TextSize"] = 11;
AZY["be"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["be"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["be"]["Text"] = [[Window design with comfortable UI movement and a semi-transparent mod menu for a less intrusive gaming experience!]];
AZY["be"]["BackgroundTransparency"] = 1;
AZY["be"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3
AZY["bf"] = Instance.new("Frame", AZY["ac"]);
AZY["bf"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["bf"]["BackgroundTransparency"] = 1;
AZY["bf"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["bf"]["Position"] = UDim2.new(0.005060605704784393, 0, 0.5927019119262695, 0);
AZY["bf"]["Name"] = [[ChangelogTab3]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.UICorner
AZY["c0"] = Instance.new("UICorner", AZY["bf"]);
AZY["c0"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c1"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["c1"]["TextSize"] = 56;
AZY["c1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c1"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["c1"]["Text"] = [[.]];
AZY["c1"]["BackgroundTransparency"] = 1;
AZY["c1"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c2"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c2"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["c2"]["TextSize"] = 14;
AZY["c2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c2"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["c2"]["Text"] = [[New]];
AZY["c2"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel.UICorner
AZY["c3"] = Instance.new("UICorner", AZY["c2"]);
AZY["c3"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c4"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c4"]["TextWrapped"] = true;
AZY["c4"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["c4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["c4"]["TextSize"] = 11;
AZY["c4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c4"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["c4"]["Text"] = [[Info page with all information about our team and our social media! Plus an intuitive and well-designed changelog.]];
AZY["c4"]["BackgroundTransparency"] = 1;
AZY["c4"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications
AZY["c5"] = Instance.new("Frame", AZY["87"]);
AZY["c5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["c5"]["BackgroundTransparency"] = 0.550000011920929;
AZY["c5"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.2235966920852661, 0);
AZY["c5"]["Position"] = UDim2.new(0.5088531970977783, 0, 0.774535596370697, 0);
AZY["c5"]["Name"] = [[Communications]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.UICorner
AZY["c6"] = Instance.new("UICorner", AZY["c5"]);
AZY["c6"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy
AZY["c7"] = Instance.new("TextButton", AZY["c5"]);
AZY["c7"]["TextWrapped"] = true;
AZY["c7"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["c7"]["TextSize"] = 12;
AZY["c7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["c7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c7"]["Size"] = UDim2.new(0.41421639919281006, 0, 0.503000020980835, 0);
AZY["c7"]["Name"] = [[Copy]];
AZY["c7"]["Text"] = [[Copy Link]];
AZY["c7"]["Position"] = UDim2.new(0.03737286850810051, 0, 0.22850681841373444, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.UICorner
AZY["c8"] = Instance.new("UICorner", AZY["c7"]);
AZY["c8"]["CornerRadius"] = UDim.new(0, 6);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.LocalScript
AZY["c9"] = Instance.new("LocalScript", AZY["c7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo
AZY["ca"] = Instance.new("TextLabel", AZY["c5"]);
AZY["ca"]["TextWrapped"] = true;
AZY["ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ca"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["ca"]["TextSize"] = 19;
AZY["ca"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ca"]["Size"] = UDim2.new(0.14990141987800598, 0, 0.2844810485839844, 0);
AZY["ca"]["Text"] = [[Or]];
AZY["ca"]["Name"] = [[TextLogo]];
AZY["ca"]["BackgroundTransparency"] = 1;
AZY["ca"]["Position"] = UDim2.new(0.45584943890571594, 0, 0.30038517713546753, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo.UITextSizeConstraint
AZY["cb"] = Instance.new("UITextSizeConstraint", AZY["ca"]);
AZY["cb"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo
AZY["cc"] = Instance.new("TextLabel", AZY["c5"]);
AZY["cc"]["TextWrapped"] = true;
AZY["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["cc"]["TextSize"] = 19;
AZY["cc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["cc"]["Size"] = UDim2.new(0.4056611955165863, 0, 0.2844810485839844, 0);
AZY["cc"]["Text"] = [[AZY#0348]];
AZY["cc"]["Name"] = [[TextLogo]];
AZY["cc"]["BackgroundTransparency"] = 1;
AZY["cc"]["Position"] = UDim2.new(0.5839999914169312, 0, 0.29899999499320984, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo.UITextSizeConstraint
AZY["cd"] = Instance.new("UITextSizeConstraint", AZY["cc"]);
AZY["cd"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax
AZY["ce"] = Instance.new("Frame", AZY["2b"]);
AZY["ce"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["ce"]["BackgroundTransparency"] = 0.550000011920929;
AZY["ce"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7551097869873047, 0);
AZY["ce"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.20551720261573792, 0);
AZY["ce"]["Visible"] = false;
AZY["ce"]["Name"] = [[BuiltInHax]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.UICorner
AZY["cf"] = Instance.new("UICorner", AZY["ce"]);
AZY["cf"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage
AZY["d0"] = Instance.new("Frame", AZY["ce"]);
AZY["d0"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d0"]["BackgroundTransparency"] = 1;
AZY["d0"]["Size"] = UDim2.new(0.6116291880607605, 0, 1.0292569398880005, 0);
AZY["d0"]["Position"] = UDim2.new(0.3700365424156189, 0, -0.03249453008174896, 0);
AZY["d0"]["Name"] = [[HaxPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextWs
AZY["d1"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d1"]["TextSize"] = 12;
AZY["d1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d1"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d1"]["Text"] = [[Speed]];
AZY["d1"]["Name"] = [[TextWs]];
AZY["d1"]["BackgroundTransparency"] = 1;
AZY["d1"]["Position"] = UDim2.new(0.5411151647567749, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextJp
AZY["d2"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d2"]["TextSize"] = 12;
AZY["d2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d2"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d2"]["Text"] = [[Jump]];
AZY["d2"]["Name"] = [[TextJp]];
AZY["d2"]["BackgroundTransparency"] = 1;
AZY["d2"]["Position"] = UDim2.new(0.7466657161712646, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextGrav
AZY["d3"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d3"]["TextSize"] = 12;
AZY["d3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d3"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d3"]["Text"] = [[Gravity]];
AZY["d3"]["Name"] = [[TextGrav]];
AZY["d3"]["BackgroundTransparency"] = 1;
AZY["d3"]["Position"] = UDim2.new(0.3269999921321869, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav
AZY["d4"] = Instance.new("TextButton", AZY["d0"]);
AZY["d4"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["d4"]["TextSize"] = 14;
AZY["d4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["d4"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d4"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["d4"]["Name"] = [[ToggleGrav]];
AZY["d4"]["Text"] = [[]];
AZY["d4"]["Position"] = UDim2.new(0.40253645181655884, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.UICorner
AZY["d5"] = Instance.new("UICorner", AZY["d4"]);
AZY["d5"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.LocalScript
AZY["d6"] = Instance.new("LocalScript", AZY["d4"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp
AZY["d7"] = Instance.new("TextButton", AZY["d0"]);
AZY["d7"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["d7"]["TextSize"] = 14;
AZY["d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["d7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d7"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["d7"]["Name"] = [[ToggleJp]];
AZY["d7"]["Text"] = [[]];
AZY["d7"]["Position"] = UDim2.new(0.8222021460533142, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.UICorner
AZY["d8"] = Instance.new("UICorner", AZY["d7"]);
AZY["d8"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.LocalScript
AZY["d9"] = Instance.new("LocalScript", AZY["d7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs
AZY["da"] = Instance.new("TextButton", AZY["d0"]);
AZY["da"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["da"]["TextSize"] = 14;
AZY["da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["da"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["da"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["da"]["Name"] = [[ToggleWs]];
AZY["da"]["Text"] = [[]];
AZY["da"]["Position"] = UDim2.new(0.6166515946388245, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.UICorner
AZY["db"] = Instance.new("UICorner", AZY["da"]);
AZY["db"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.LocalScript
AZY["dc"] = Instance.new("LocalScript", AZY["da"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS
AZY["dd"] = Instance.new("ImageButton", AZY["d0"]);
AZY["dd"]["Active"] = false;
AZY["dd"]["BorderSizePixel"] = 0;
AZY["dd"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["dd"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["dd"]["SliceScale"] = 0.11999999731779099;
AZY["dd"]["ImageTransparency"] = 1;
AZY["dd"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["dd"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["dd"]["Selectable"] = false;
AZY["dd"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["dd"]["Image"] = [[rbxassetid://3570695787]];
AZY["dd"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["dd"]["Name"] = [[WsS]];
AZY["dd"]["Rotation"] = -90;
AZY["dd"]["Position"] = UDim2.new(0.6499999761581421, 0, 0.4399999976158142, 0);
AZY["dd"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton
AZY["de"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["de"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["de"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["de"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["de"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["de"]["SliceScale"] = 0.11999999731779099;
AZY["de"]["Selectable"] = true;
AZY["de"]["Image"] = [[rbxassetid://3570695787]];
AZY["de"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["de"]["Active"] = true;
AZY["de"]["Name"] = [[SliderButton]];
AZY["de"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton.LocalScript
AZY["df"] = Instance.new("LocalScript", AZY["de"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.Border
AZY["e0"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e0"]["ZIndex"] = -1;
AZY["e0"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e0"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e0"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["e0"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e0"]["SliceScale"] = 0.23999999463558197;
AZY["e0"]["ImageTransparency"] = 1;
AZY["e0"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e0"]["Image"] = [[rbxassetid://3570695787]];
AZY["e0"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["e0"]["Name"] = [[Border]];
AZY["e0"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["e0"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.Border.UICorner
AZY["e1"] = Instance.new("UICorner", AZY["e0"]);
AZY["e1"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.StripedPattern
AZY["e2"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e2"]["BorderSizePixel"] = 0;
AZY["e2"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["e2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e2"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["e2"]["ImageTransparency"] = 1;
AZY["e2"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["e2"]["Image"] = [[rbxassetid://4925116997]];
AZY["e2"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["e2"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["e2"]["Name"] = [[StripedPattern]];
AZY["e2"]["BackgroundTransparency"] = 1;
AZY["e2"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.StripedPattern.UIGradient
AZY["e3"] = Instance.new("UIGradient", AZY["e2"]);
AZY["e3"]["Rotation"] = 90;
AZY["e3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.ImageLabel
AZY["e4"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e4"]["Image"] = [[rbxassetid://12572149271]];
AZY["e4"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["e4"]["Rotation"] = 90;
AZY["e4"]["BackgroundTransparency"] = 1;
AZY["e4"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.TextLabel
AZY["e5"] = Instance.new("TextBox", AZY["dd"]);
AZY["e5"]["CursorPosition"] = -1;
AZY["e5"]["ZIndex"] = 2;
AZY["e5"]["TextSize"] = 13;
AZY["e5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["e5"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["e5"]["BackgroundTransparency"] = 1;
AZY["e5"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["e5"]["Text"] = [[0%]];
AZY["e5"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["e5"]["Rotation"] = 90;
AZY["e5"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS
AZY["e6"] = Instance.new("ImageButton", AZY["d0"]);
AZY["e6"]["Active"] = false;
AZY["e6"]["BorderSizePixel"] = 0;
AZY["e6"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e6"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e6"]["SliceScale"] = 0.11999999731779099;
AZY["e6"]["ImageTransparency"] = 1;
AZY["e6"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["e6"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["e6"]["Selectable"] = false;
AZY["e6"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e6"]["Image"] = [[rbxassetid://3570695787]];
AZY["e6"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["e6"]["Name"] = [[JpS]];
AZY["e6"]["Rotation"] = -90;
AZY["e6"]["Position"] = UDim2.new(0.8600000143051147, 0, 0.4399999976158142, 0);
AZY["e6"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton
AZY["e7"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["e7"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e7"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e7"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e7"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["e7"]["SliceScale"] = 0.11999999731779099;
AZY["e7"]["Selectable"] = true;
AZY["e7"]["Image"] = [[rbxassetid://3570695787]];
AZY["e7"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["e7"]["Active"] = true;
AZY["e7"]["Name"] = [[SliderButton]];
AZY["e7"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton.LocalScript
AZY["e8"] = Instance.new("LocalScript", AZY["e7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.Border
AZY["e9"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["e9"]["ZIndex"] = -1;
AZY["e9"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e9"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e9"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["e9"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e9"]["SliceScale"] = 0.23999999463558197;
AZY["e9"]["ImageTransparency"] = 1;
AZY["e9"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e9"]["Image"] = [[rbxassetid://3570695787]];
AZY["e9"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["e9"]["Name"] = [[Border]];
AZY["e9"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["e9"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.Border.UICorner
AZY["ea"] = Instance.new("UICorner", AZY["e9"]);
AZY["ea"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.StripedPattern
AZY["eb"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["eb"]["BorderSizePixel"] = 0;
AZY["eb"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["eb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["eb"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["eb"]["ImageTransparency"] = 1;
AZY["eb"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["eb"]["Image"] = [[rbxassetid://4925116997]];
AZY["eb"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["eb"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["eb"]["Name"] = [[StripedPattern]];
AZY["eb"]["BackgroundTransparency"] = 1;
AZY["eb"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.StripedPattern.UIGradient
AZY["ec"] = Instance.new("UIGradient", AZY["eb"]);
AZY["ec"]["Rotation"] = 90;
AZY["ec"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.ImageLabel
AZY["ed"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ed"]["Image"] = [[rbxassetid://12582573514]];
AZY["ed"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["ed"]["Rotation"] = 90;
AZY["ed"]["BackgroundTransparency"] = 1;
AZY["ed"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.TextLabel
AZY["ee"] = Instance.new("TextBox", AZY["e6"]);
AZY["ee"]["ZIndex"] = 2;
AZY["ee"]["TextSize"] = 13;
AZY["ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ee"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["ee"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["ee"]["BackgroundTransparency"] = 1;
AZY["ee"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["ee"]["Text"] = [[0%]];
AZY["ee"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["ee"]["Rotation"] = 90;
AZY["ee"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS
AZY["ef"] = Instance.new("ImageButton", AZY["d0"]);
AZY["ef"]["Active"] = false;
AZY["ef"]["BorderSizePixel"] = 0;
AZY["ef"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["ef"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["ef"]["SliceScale"] = 0.11999999731779099;
AZY["ef"]["ImageTransparency"] = 1;
AZY["ef"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["ef"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["ef"]["Selectable"] = false;
AZY["ef"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["ef"]["Image"] = [[rbxassetid://3570695787]];
AZY["ef"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["ef"]["Name"] = [[GravS]];
AZY["ef"]["Rotation"] = -90;
AZY["ef"]["Position"] = UDim2.new(0.4359999895095825, 0, 0.4399999976158142, 0);
AZY["ef"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton
AZY["f0"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f0"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["f0"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["f0"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["f0"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["f0"]["SliceScale"] = 0.11999999731779099;
AZY["f0"]["Selectable"] = true;
AZY["f0"]["Image"] = [[rbxassetid://3570695787]];
AZY["f0"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["f0"]["Active"] = true;
AZY["f0"]["Name"] = [[SliderButton]];
AZY["f0"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton.LocalScript
AZY["f1"] = Instance.new("LocalScript", AZY["f0"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.Border
AZY["f2"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f2"]["ZIndex"] = -1;
AZY["f2"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["f2"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["f2"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["f2"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["f2"]["SliceScale"] = 0.23999999463558197;
AZY["f2"]["ImageTransparency"] = 1;
AZY["f2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["f2"]["Image"] = [[rbxassetid://3570695787]];
AZY["f2"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["f2"]["Name"] = [[Border]];
AZY["f2"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["f2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.Border.UICorner
AZY["f3"] = Instance.new("UICorner", AZY["f2"]);
AZY["f3"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.StripedPattern
AZY["f4"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f4"]["BorderSizePixel"] = 0;
AZY["f4"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["f4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f4"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["f4"]["ImageTransparency"] = 1;
AZY["f4"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["f4"]["Image"] = [[rbxassetid://4925116997]];
AZY["f4"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["f4"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["f4"]["Name"] = [[StripedPattern]];
AZY["f4"]["BackgroundTransparency"] = 1;
AZY["f4"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.StripedPattern.UIGradient
AZY["f5"] = Instance.new("UIGradient", AZY["f4"]);
AZY["f5"]["Rotation"] = 90;
AZY["f5"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.ImageLabel
AZY["f6"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f6"]["Image"] = [[rbxassetid://12582575947]];
AZY["f6"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["f6"]["Rotation"] = 90;
AZY["f6"]["BackgroundTransparency"] = 1;
AZY["f6"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.TextLabel
AZY["f7"] = Instance.new("TextBox", AZY["ef"]);
AZY["f7"]["ZIndex"] = 2;
AZY["f7"]["TextSize"] = 13;
AZY["f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["f7"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["f7"]["BackgroundTransparency"] = 1;
AZY["f7"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["f7"]["Text"] = [[0%]];
AZY["f7"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["f7"]["Rotation"] = 90;
AZY["f7"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Grav
AZY["f8"] = Instance.new("BoolValue", AZY["d0"]);
AZY["f8"]["Name"] = [[Grav]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Jp
AZY["f9"] = Instance.new("BoolValue", AZY["d0"]);
AZY["f9"]["Name"] = [[Jp]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Ws
AZY["fa"] = Instance.new("BoolValue", AZY["d0"]);
AZY["fa"]["Name"] = [[Ws]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts
AZY["fb"] = Instance.new("Folder", AZY["ce"]);
AZY["fb"]["Name"] = [[Scripts]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot
AZY["fc"] = Instance.new("TextButton", AZY["fb"]);
AZY["fc"]["TextWrapped"] = true;
AZY["fc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["fc"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["fc"]["TextSize"] = 13;
AZY["fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["fc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["fc"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["fc"]["Name"] = [[Aimbot]];
AZY["fc"]["Text"] = [[       AimBot]];
AZY["fc"]["Position"] = UDim2.new(0.030552715063095093, 0, 0.3302992284297943, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.UICorner
AZY["fd"] = Instance.new("UICorner", AZY["fc"]);
AZY["fd"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.LocalScript
AZY["fe"] = Instance.new("LocalScript", AZY["fc"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.Info
AZY["ff"] = Instance.new("ImageLabel", AZY["fc"]);
AZY["ff"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ff"]["Image"] = [[rbxassetid://12585776892]];
AZY["ff"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["ff"]["Name"] = [[Info]];
AZY["ff"]["BackgroundTransparency"] = 1;
AZY["ff"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools
AZY["100"] = Instance.new("TextButton", AZY["fb"]);
AZY["100"]["TextWrapped"] = true;
AZY["100"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["100"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["100"]["TextSize"] = 13;
AZY["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["100"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["100"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["100"]["Name"] = [[Btools]];
AZY["100"]["Text"] = [[         BTools]];
AZY["100"]["Position"] = UDim2.new(0.2924708425998688, 0, 0.18550994992256165, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.UICorner
AZY["101"] = Instance.new("UICorner", AZY["100"]);
AZY["101"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.LocalScript
AZY["102"] = Instance.new("LocalScript", AZY["100"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.Info
AZY["103"] = Instance.new("ImageLabel", AZY["100"]);
AZY["103"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["103"]["Image"] = [[rbxassetid://12585776892]];
AZY["103"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["103"]["Name"] = [[Info]];
AZY["103"]["BackgroundTransparency"] = 1;
AZY["103"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex
AZY["104"] = Instance.new("TextButton", AZY["fb"]);
AZY["104"]["TextWrapped"] = true;
AZY["104"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["104"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["104"]["TextSize"] = 13;
AZY["104"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["104"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["104"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["104"]["Name"] = [[Dex]];
AZY["104"]["Text"] = [[  DEX Explorer]];
AZY["104"]["Position"] = UDim2.new(0.2938356399536133, 0, 0.04143177345395088, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.UICorner
AZY["105"] = Instance.new("UICorner", AZY["104"]);
AZY["105"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.LocalScript
AZY["106"] = Instance.new("LocalScript", AZY["104"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.Info
AZY["107"] = Instance.new("ImageLabel", AZY["104"]);
AZY["107"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["107"]["Image"] = [[rbxassetid://12585776892]];
AZY["107"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["107"]["Name"] = [[Info]];
AZY["107"]["BackgroundTransparency"] = 1;
AZY["107"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP
AZY["108"] = Instance.new("TextButton", AZY["fb"]);
AZY["108"]["TextWrapped"] = true;
AZY["108"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["108"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["108"]["TextSize"] = 13;
AZY["108"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["108"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["108"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["108"]["Name"] = [[FatesESP]];
AZY["108"]["Text"] = [[      Fates ESP]];
AZY["108"]["Position"] = UDim2.new(0.0331718735396862, 0, 0.18866735696792603, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.UICorner
AZY["109"] = Instance.new("UICorner", AZY["108"]);
AZY["109"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.LocalScript
AZY["10a"] = Instance.new("LocalScript", AZY["108"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.Info
AZY["10b"] = Instance.new("ImageLabel", AZY["108"]);
AZY["10b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10b"]["Image"] = [[rbxassetid://12585776892]];
AZY["10b"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["10b"]["Name"] = [[Info]];
AZY["10b"]["BackgroundTransparency"] = 1;
AZY["10b"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly
AZY["10c"] = Instance.new("TextButton", AZY["fb"]);
AZY["10c"]["TextWrapped"] = true;
AZY["10c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["10c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["10c"]["TextSize"] = 13;
AZY["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["10c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10c"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["10c"]["Name"] = [[Fly]];
AZY["10c"]["Text"] = [[           Fly]];
AZY["10c"]["Position"] = UDim2.new(0.28985166549682617, 0, 0.3375365436077118, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.UICorner
AZY["10d"] = Instance.new("UICorner", AZY["10c"]);
AZY["10d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.LocalScript
AZY["10e"] = Instance.new("LocalScript", AZY["10c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.Info
AZY["10f"] = Instance.new("ImageLabel", AZY["10c"]);
AZY["10f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10f"]["Image"] = [[rbxassetid://12585776892]];
AZY["10f"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["10f"]["Name"] = [[Info]];
AZY["10f"]["BackgroundTransparency"] = 1;
AZY["10f"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY
AZY["110"] = Instance.new("TextButton", AZY["fb"]);
AZY["110"]["TextWrapped"] = true;
AZY["110"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["110"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["110"]["TextSize"] = 13;
AZY["110"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["110"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["110"]["Size"] = UDim2.new(0.22804169356822968, 0, 0.0958060473203659, 0);
AZY["110"]["Name"] = [[IY]];
AZY["110"]["Text"] = [[  Infinite Yield]];
AZY["110"]["Position"] = UDim2.new(0.03485134616494179, 0, 0.04589534550905228, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.UICorner
AZY["111"] = Instance.new("UICorner", AZY["110"]);
AZY["111"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.LocalScript
AZY["112"] = Instance.new("LocalScript", AZY["110"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.Info
AZY["113"] = Instance.new("ImageLabel", AZY["110"]);
AZY["113"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["113"]["Image"] = [[rbxassetid://12585776892]];
AZY["113"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["113"]["Name"] = [[Info]];
AZY["113"]["BackgroundTransparency"] = 1;
AZY["113"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub
AZY["114"] = Instance.new("TextButton", AZY["fb"]);
AZY["114"]["TextWrapped"] = true;
AZY["114"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["114"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["114"]["TextSize"] = 13;
AZY["114"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["114"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["114"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["114"]["Name"] = [[PwnHub]];
AZY["114"]["Text"] = [[    Pwner Hub]];
AZY["114"]["Position"] = UDim2.new(0.03055272251367569, 0, 0.4659311771392822, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.UICorner
AZY["115"] = Instance.new("UICorner", AZY["114"]);
AZY["115"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.LocalScript
AZY["116"] = Instance.new("LocalScript", AZY["114"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.Info
AZY["117"] = Instance.new("ImageLabel", AZY["114"]);
AZY["117"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["117"]["Image"] = [[rbxassetid://12585776892]];
AZY["117"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["117"]["Name"] = [[Info]];
AZY["117"]["BackgroundTransparency"] = 1;
AZY["117"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Title
AZY["118"] = Instance.new("TextLabel", AZY["ce"]);
AZY["118"]["TextWrapped"] = true;
AZY["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["118"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["118"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["118"]["TextSize"] = 12;
AZY["118"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["118"]["Size"] = UDim2.new(0.5070894360542297, 0, 0.10439325869083405, 0);
AZY["118"]["Text"] = [[Welcome in the Built-In Hacks section!]];
AZY["118"]["Name"] = [[Title]];
AZY["118"]["BackgroundTransparency"] = 1;
AZY["118"]["Position"] = UDim2.new(0.033080533146858215, 0, 0.7568540573120117, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Title
AZY["119"] = Instance.new("TextLabel", AZY["ce"]);
AZY["119"]["TextWrapped"] = true;
AZY["119"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["119"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["119"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["119"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["119"]["TextSize"] = 10;
AZY["119"]["TextColor3"] = Color3.fromRGB(171, 171, 171);
AZY["119"]["Size"] = UDim2.new(0.5410764813423157, 0, 0.10439325869083405, 0);
AZY["119"]["Text"] = [[Here you can easily change your player gravity, speed and jump power. You can execute our built-in scripts too!]];
AZY["119"]["Name"] = [[Title]];
AZY["119"]["BackgroundTransparency"] = 1;
AZY["119"]["Position"] = UDim2.new(0.030461372807621956, 0, 0.862415075302124, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor
AZY["11a"] = Instance.new("Frame", AZY["2b"]);
AZY["11a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["11a"]["BackgroundTransparency"] = 0.550000011920929;
AZY["11a"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7551097869873047, 0);
AZY["11a"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.20551720261573792, 0);
AZY["11a"]["Visible"] = false;
AZY["11a"]["Name"] = [[Executor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.UICorner
AZY["11b"] = Instance.new("UICorner", AZY["11a"]);
AZY["11b"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute
AZY["11c"] = Instance.new("TextButton", AZY["11a"]);
AZY["11c"]["TextWrapped"] = true;
AZY["11c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["11c"]["TextSize"] = 18;
AZY["11c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["11c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["11c"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["11c"]["Name"] = [[Execute]];
AZY["11c"]["Text"] = [[Execute]];
AZY["11c"]["Position"] = UDim2.new(0.026000000536441803, 0, 0.8319999575614929, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.UICorner
AZY["11d"] = Instance.new("UICorner", AZY["11c"]);
AZY["11d"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.LocalScript
AZY["11e"] = Instance.new("LocalScript", AZY["11c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear
AZY["11f"] = Instance.new("TextButton", AZY["11a"]);
AZY["11f"]["TextWrapped"] = true;
AZY["11f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["11f"]["TextSize"] = 18;
AZY["11f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["11f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["11f"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["11f"]["Name"] = [[Clear]];
AZY["11f"]["Text"] = [[Clear]];
AZY["11f"]["Position"] = UDim2.new(0.2630000114440918, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.UICorner
AZY["120"] = Instance.new("UICorner", AZY["11f"]);
AZY["120"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.LocalScript
AZY["121"] = Instance.new("LocalScript", AZY["11f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy
AZY["122"] = Instance.new("TextButton", AZY["11a"]);
AZY["122"]["TextWrapped"] = true;
AZY["122"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["122"]["TextSize"] = 18;
AZY["122"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["122"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["122"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["122"]["Name"] = [[Copy]];
AZY["122"]["Text"] = [[Copy]];
AZY["122"]["Position"] = UDim2.new(0.5009999871253967, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.UICorner
AZY["123"] = Instance.new("UICorner", AZY["122"]);
AZY["123"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.LocalScript
AZY["124"] = Instance.new("LocalScript", AZY["122"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste
AZY["125"] = Instance.new("TextButton", AZY["11a"]);
AZY["125"]["TextWrapped"] = true;
AZY["125"]["TextScaled"] = true;
AZY["125"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["125"]["TextSize"] = 18;
AZY["125"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["125"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["125"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["125"]["Name"] = [[Paste]];
AZY["125"]["Text"] = [[Paste]];
AZY["125"]["Position"] = UDim2.new(0.7360000014305115, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.UICorner
AZY["126"] = Instance.new("UICorner", AZY["125"]);
AZY["126"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.LocalScript
AZY["127"] = Instance.new("LocalScript", AZY["125"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.UITextSizeConstraint
AZY["128"] = Instance.new("UITextSizeConstraint", AZY["125"]);
AZY["128"]["MaxTextSize"] = 18;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar
AZY["129"] = Instance.new("Frame", AZY["11a"]);
AZY["129"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["129"]["BackgroundTransparency"] = 1;
AZY["129"]["Size"] = UDim2.new(0.9533820152282715, 0, 0.7485234141349792, 0);
AZY["129"]["Position"] = UDim2.new(0.026000019162893295, 0, 0.04687291383743286, 0);
AZY["129"]["Name"] = [[TextboxBar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript
AZY["12a"] = Instance.new("LocalScript", AZY["129"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor
AZY["12b"] = Instance.new("ModuleScript", AZY["12a"]);
AZY["12b"]["Name"] = [[ScriptEditor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Syntax
AZY["12c"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12c"]["Name"] = [[Syntax]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Theme
AZY["12d"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12d"]["Name"] = [[Theme]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetLines
AZY["12e"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12e"]["Name"] = [[GetLines]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.FakeEditor
AZY["12f"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12f"]["Name"] = [[FakeEditor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetLine
AZY["130"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["130"]["Name"] = [[GetLine]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.TweenLibrary
AZY["131"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["131"]["Name"] = [[TweenLibrary]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetWord
AZY["132"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["132"]["Name"] = [[GetWord]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Lexer
AZY["133"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["133"]["Name"] = [[Lexer]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Suggestions
AZY["134"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["134"]["Name"] = [[Suggestions]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Words
AZY["135"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["135"]["Name"] = [[Words]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor
AZY["136"] = Instance.new("Frame", AZY["12b"]);
AZY["136"]["BorderSizePixel"] = 0;
AZY["136"]["BackgroundColor3"] = Color3.fromRGB(23, 27, 23);
AZY["136"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["136"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["136"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
AZY["136"]["Name"] = [[Editor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll
AZY["137"] = Instance.new("ScrollingFrame", AZY["136"]);
AZY["137"]["Active"] = true;
AZY["137"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
AZY["137"]["ElasticBehavior"] = Enum.ElasticBehavior.Always;
AZY["137"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
AZY["137"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["137"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
AZY["137"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["137"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["137"]["ScrollBarImageColor3"] = Color3.fromRGB(64, 64, 64);
AZY["137"]["BorderColor3"] = Color3.fromRGB(53, 53, 53);
AZY["137"]["Name"] = [[Scroll]];
AZY["137"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source
AZY["138"] = Instance.new("TextBox", AZY["137"]);
AZY["138"]["TextSize"] = 17;
AZY["138"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["138"]["TextStrokeColor3"] = Color3.fromRGB(41, 41, 41);
AZY["138"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["138"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["138"]["TextColor3"] = Color3.fromRGB(239, 239, 239);
AZY["138"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["138"]["MultiLine"] = true;
AZY["138"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["138"]["Size"] = UDim2.new(1, -44, 1, -5);
AZY["138"]["Text"] = [[]];
AZY["138"]["Position"] = UDim2.new(0, 44, 0, 5);
AZY["138"]["AutomaticSize"] = Enum.AutomaticSize.XY;
AZY["138"]["Name"] = [[Source]];
AZY["138"]["ClearTextOnFocus"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.LineHighlight
AZY["139"] = Instance.new("Frame", AZY["138"]);
AZY["139"]["BorderSizePixel"] = 0;
AZY["139"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["139"]["AnchorPoint"] = Vector2.new(0, 0.5);
AZY["139"]["BackgroundTransparency"] = 0.9399999976158142;
AZY["139"]["Size"] = UDim2.new(1, 0, 0, 17);
AZY["139"]["Position"] = UDim2.new(0, -10, 0, 9);
AZY["139"]["Name"] = [[LineHighlight]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Hidden
AZY["13a"] = Instance.new("TextLabel", AZY["138"]);
AZY["13a"]["BorderSizePixel"] = 0;
AZY["13a"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["13a"]["BackgroundColor3"] = Color3.fromRGB(27, 32, 27);
AZY["13a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["13a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["13a"]["TextSize"] = 22;
AZY["13a"]["TextColor3"] = Color3.fromRGB(249, 66, 164);
AZY["13a"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["13a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
AZY["13a"]["Text"] = [[*script hidden*]];
AZY["13a"]["Name"] = [[Hidden]];
AZY["13a"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion
AZY["13b"] = Instance.new("TextButton", AZY["138"]);
AZY["13b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["13b"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
AZY["13b"]["TextSize"] = 17;
AZY["13b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["13b"]["TextColor3"] = Color3.fromRGB(244, 244, 244);
AZY["13b"]["Visible"] = false;
AZY["13b"]["Size"] = UDim2.new(0, 130, 0, 26);
AZY["13b"]["Name"] = [[Suggestion]];
AZY["13b"]["BorderColor3"] = Color3.fromRGB(60, 60, 60);
AZY["13b"]["Text"] = [[keyword]];
AZY["13b"]["AutomaticSize"] = Enum.AutomaticSize.X;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.TextPadding
AZY["13c"] = Instance.new("UIPadding", AZY["13b"]);
AZY["13c"]["Name"] = [[TextPadding]];
AZY["13c"]["PaddingLeft"] = UDim.new(0, 30);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon
AZY["13d"] = Instance.new("ImageLabel", AZY["13b"]);
AZY["13d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["13d"]["Image"] = [[rbxassetid://413365069]];
AZY["13d"]["Size"] = UDim2.new(0, 26, 0, 26);
AZY["13d"]["Name"] = [[Icon]];
AZY["13d"]["BackgroundTransparency"] = 1;
AZY["13d"]["Position"] = UDim2.new(0, -30, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon.UIAspectRatioConstraint
AZY["13e"] = Instance.new("UIAspectRatioConstraint", AZY["13d"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left
AZY["13f"] = Instance.new("Frame", AZY["137"]);
AZY["13f"]["BorderSizePixel"] = 0;
AZY["13f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
AZY["13f"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["13f"]["Size"] = UDim2.new(0, 27, 1, 0);
AZY["13f"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["13f"]["Name"] = [[Left]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right
AZY["140"] = Instance.new("Frame", AZY["13f"]);
AZY["140"]["BorderSizePixel"] = 0;
AZY["140"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
AZY["140"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["140"]["Size"] = UDim2.new(0, 8, 1, 0);
AZY["140"]["Position"] = UDim2.new(1, 0, 0, 0);
AZY["140"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["140"]["Name"] = [[Right]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.BottomFade
AZY["141"] = Instance.new("UIGradient", AZY["140"]);
AZY["141"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["141"]["Name"] = [[BottomFade]];
AZY["141"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.Shadow
AZY["142"] = Instance.new("Frame", AZY["140"]);
AZY["142"]["BorderSizePixel"] = 0;
AZY["142"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["142"]["BackgroundTransparency"] = 0.800000011920929;
AZY["142"]["Size"] = UDim2.new(0, 5, 1, 0);
AZY["142"]["Position"] = UDim2.new(1, 0, 0, 0);
AZY["142"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["142"]["Name"] = [[Shadow]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.Shadow.UIGradient
AZY["143"] = Instance.new("UIGradient", AZY["142"]);
AZY["143"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 1)};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines
AZY["144"] = Instance.new("TextLabel", AZY["13f"]);
AZY["144"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["144"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["144"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["144"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["144"]["TextSize"] = 17;
AZY["144"]["TextColor3"] = Color3.fromRGB(242, 242, 242);
AZY["144"]["AutomaticSize"] = Enum.AutomaticSize.X;
AZY["144"]["Size"] = UDim2.new(1, -5, 1, -7);
AZY["144"]["Text"] = [[1]];
AZY["144"]["Name"] = [[Lines]];
AZY["144"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["144"]["Position"] = UDim2.new(0, 5, 0, 7);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines.BottomFade
AZY["145"] = Instance.new("UIGradient", AZY["144"]);
AZY["145"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["145"]["Name"] = [[BottomFade]];
AZY["145"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
AZY["146"] = Instance.new("LocalScript", AZY["13f"]);
AZY["146"]["Name"] = [[AdaptSize]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.BottomFade
AZY["147"] = Instance.new("UIGradient", AZY["13f"]);
AZY["147"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["147"]["Name"] = [[BottomFade]];
AZY["147"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.TextFixer
AZY["148"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["148"]["Name"] = [[TextFixer]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox
AZY["149"] = Instance.new("TextButton", AZY["11a"]);
AZY["149"]["TextWrapped"] = true;
AZY["149"]["TextTransparency"] = 0.699999988079071;
AZY["149"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["149"]["TextSize"] = 18;
AZY["149"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["149"]["TextColor3"] = Color3.fromRGB(25, 25, 25);
AZY["149"]["Size"] = UDim2.new(0.04265729710459709, 0, 0.054356444627046585, 0);
AZY["149"]["Name"] = [[ResetTextBox]];
AZY["149"]["Text"] = [[*]];
AZY["149"]["Position"] = UDim2.new(0.005046568810939789, 0, -0.011172410100698471, 0);
AZY["149"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.UICorner
AZY["14a"] = Instance.new("UICorner", AZY["149"]);
AZY["14a"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.LocalScript
AZY["14b"] = Instance.new("LocalScript", AZY["149"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar
AZY["14c"] = Instance.new("Frame", AZY["19"]);
AZY["14c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["14c"]["BackgroundTransparency"] = 0.550000011920929;
AZY["14c"]["Size"] = UDim2.new(0.09215505421161652, 0, 0.7551097273826599, 0);
AZY["14c"]["Position"] = UDim2.new(0.02942327782511711, 0, 0.2055172324180603, 0);
AZY["14c"]["Name"] = [[TabBar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.UICorner
AZY["14d"] = Instance.new("UICorner", AZY["14c"]);
AZY["14d"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs
AZY["14e"] = Instance.new("ImageButton", AZY["14c"]);
AZY["14e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["14e"]["Image"] = [[rbxassetid://12582706243]];
AZY["14e"]["Size"] = UDim2.new(0.7092337608337402, 0, 0.1439468413591385, 0);
AZY["14e"]["Name"] = [[Changelogs]];
AZY["14e"]["Position"] = UDim2.new(0.14184674620628357, 0, 0.04798227921128273, 0);
AZY["14e"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.Frame
AZY["14f"] = Instance.new("Frame", AZY["14e"]);
AZY["14f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["14f"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["14f"]["Position"] = UDim2.new(-0.20000001788139343, 0, 0.06666667014360428, 0);
AZY["14f"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.Frame.UICorner
AZY["150"] = Instance.new("UICorner", AZY["14f"]);
AZY["150"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.LocalScript
AZY["151"] = Instance.new("LocalScript", AZY["14e"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home
AZY["152"] = Instance.new("ImageButton", AZY["14c"]);
AZY["152"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["152"]["Image"] = [[rbxassetid://12582723040]];
AZY["152"]["Size"] = UDim2.new(0.9692861437797546, 0, 0.19672733545303345, 0);
AZY["152"]["Name"] = [[Home]];
AZY["152"]["Position"] = UDim2.new(0, 0, 0.30228832364082336, 0);
AZY["152"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.Frame
AZY["153"] = Instance.new("Frame", AZY["152"]);
AZY["153"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["153"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["153"]["Position"] = UDim2.new(0.004999999888241291, 0, 0.1889999955892563, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.Frame.UICorner
AZY["154"] = Instance.new("UICorner", AZY["153"]);
AZY["154"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.LocalScript
AZY["155"] = Instance.new("LocalScript", AZY["152"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax
AZY["156"] = Instance.new("ImageButton", AZY["14c"]);
AZY["156"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["156"]["Image"] = [[rbxassetid://12582724778]];
AZY["156"]["Size"] = UDim2.new(0.9692861437797546, 0, 0.19672733545303345, 0);
AZY["156"]["Name"] = [[BuiltInHax]];
AZY["156"]["Position"] = UDim2.new(0, 0, 0.537401556968689, 0);
AZY["156"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.Frame
AZY["157"] = Instance.new("Frame", AZY["156"]);
AZY["157"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["157"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["157"]["Position"] = UDim2.new(0, 0, 0.18700000643730164, 0);
AZY["157"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.Frame.UICorner
AZY["158"] = Instance.new("UICorner", AZY["157"]);
AZY["158"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.LocalScript
AZY["159"] = Instance.new("LocalScript", AZY["156"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor
AZY["15a"] = Instance.new("ImageButton", AZY["14c"]);
AZY["15a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["15a"]["Image"] = [[rbxassetid://12582726730]];
AZY["15a"]["Size"] = UDim2.new(0.8274393677711487, 0, 0.1679379791021347, 0);
AZY["15a"]["Name"] = [[Executor]];
AZY["15a"]["Position"] = UDim2.new(0.07092338800430298, 0, 0.7821111679077148, 0);
AZY["15a"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.Frame
AZY["15b"] = Instance.new("Frame", AZY["15a"]);
AZY["15b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["15b"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["15b"]["Position"] = UDim2.new(-0.10000000149011612, 1, 0.06700000166893005, 0);
AZY["15b"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.Frame.UICorner
AZY["15c"] = Instance.new("UICorner", AZY["15b"]);
AZY["15c"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.LocalScript
AZY["15d"] = Instance.new("LocalScript", AZY["15a"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.UIAspectRatioConstraint
AZY["15e"] = Instance.new("UIAspectRatioConstraint", AZY["19"]);
AZY["15e"]["AspectRatio"] = 1.66304349899292;

-- StarterGui.ArceusXV3.MainUI.MainFrame.LocalScript
AZY["15f"] = Instance.new("LocalScript", AZY["19"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI
AZY["160"] = Instance.new("ImageButton", AZY["18"]);
AZY["160"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["160"]["Image"] = [[rbxassetid://12586647828]];
AZY["160"]["Size"] = UDim2.new(0, 65, 0, 65);
AZY["160"]["Name"] = [[FloatingUI]];
AZY["160"]["Visible"] = false;
AZY["160"]["Position"] = UDim2.new(0.47328877449035645, 0, 0.44602859020233154, 0);
AZY["160"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.FloatingUI.UICorner
AZY["161"] = Instance.new("UICorner", AZY["160"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI.LocalScript
AZY["162"] = Instance.new("LocalScript", AZY["160"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI.UIAspectRatioConstraint
AZY["163"] = Instance.new("UIAspectRatioConstraint", AZY["160"]);


-- Require AZY wrapper
local AZY_REQUIRE = require;
local AZY_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = AZY_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return AZY_REQUIRE(Module);
end

AZY_MODULES[AZY["12b"]] = {
	Closure = function()
		local script = AZY["12b"];
		-- Lexer by sleitnick
		-- Everything else by me, bread. lol.


		local module = {}

		local syntax 	   = require(script.Syntax)
		local getLines 	   = require(script.GetLines)
		local fakeEditor   = require(script.FakeEditor)
		local textFixer    = require(script.TextFixer)
		local getLine 	   = require(script.GetLine)
		local tween 	   = require(script.TweenLibrary)
		local suggestions  = require(script.Suggestions)

		function module.new(frame)
			local newEditor = script.Editor:Clone()
			newEditor.Parent = frame

			local editorObj  	= fakeEditor.new(newEditor)
			local textbox 	 	= newEditor.Scroll.Source
			local linesLabel 	= newEditor.Scroll.Left.Lines
			local lineHighlight = textbox.LineHighlight

			local highlightBox = Instance.new("TextLabel")
			highlightBox.Size = UDim2.new(1, 0,1, 0)
			highlightBox.Position = UDim2.new(0, 0,0, 0)
			highlightBox.TextColor3 = textbox.TextColor3
			highlightBox.BackgroundTransparency = 1
			highlightBox.Name = "Syntax"
			highlightBox.RichText = true
			highlightBox.TextSize = textbox.TextSize
			highlightBox.Font = textbox.Font
			highlightBox.TextXAlignment = Enum.TextXAlignment.Left
			highlightBox.TextYAlignment = Enum.TextYAlignment.Top
			highlightBox.TextStrokeColor3 = Color3.fromRGB(40, 40, 40)
			highlightBox.TextStrokeTransparency = 0.1
			highlightBox.Text = ""
			highlightBox.Parent = textbox

			editorObj:SetTheme("default")
			textFixer.Fix(highlightBox)
			suggestions:Start(newEditor)

			textbox:GetPropertyChangedSignal("Text"):Connect(function()
				syntax.Highlight(highlightBox, textbox.Text)

				-- Fix tabs
				textbox.Text = textbox.Text:gsub("\t", "    ")
				--textbox.CursorPosition += 4

				-- Update line count
				linesLabel.Text = getLines.GetLinesString(textbox.Text)
			end)

			textbox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				-- Position line highlight
				local lineYPos = ((getLine:GetCurrentLine(textbox) * textbox.TextSize) - math.ceil(lineHighlight.AbsoluteSize.Y / 2)) + 4

				if lineYPos ~= lineHighlight.Position.Y.Offset then
					tween.TweenPosition(lineHighlight, UDim2.new(0, -10,0, lineYPos), 0.1, Enum.EasingStyle.Quad)
				end
			end)

			return editorObj
		end

		return module

	end;
};
AZY_MODULES[AZY["12c"]] = {
	Closure = function()
		local script = AZY["12c"];
		local module = {}

		local lexer 	= require(script.Parent.Lexer)
		local theme 	= require(script.Parent.Theme)
		local textFixer = require(script.Parent.TextFixer)

		local function ColorToFont(text, color)
			return string.format(
				'<font color="rgb(%s,%s,%s)">%s</font>',
				tostring(math.floor(color.R * 255)),
				tostring(math.floor(color.G * 255)),
				tostring(math.floor(color.B * 255)),
				text
			)
		end

		function module.Highlight(textbox, source)
			textbox.Text = ""

			for tokenType, text in lexer.scan(source) do
				local currentTheme = theme.current
				local tokenCol = currentTheme[tokenType]

				if tokenCol then
					textbox.Text = textbox.Text .. ColorToFont(text, tokenCol)
				else
					textbox.Text = textbox.Text .. text
				end
			end

			textFixer.Fix(textbox)
		end

		return module

	end;
};
AZY_MODULES[AZY["12d"]] = {
	Closure = function()
		local script = AZY["12d"];
		local theme = {
			current = nil,
			themes = {
				["default"] = {
					["keyword"] = Color3.fromRGB(248, 109, 124),
					["builtin"] = Color3.fromRGB(84, 184, 247),
					["string"] = Color3.fromRGB(130, 241, 149),
					["number"] = Color3.fromRGB(255, 198, 0),
					["comment"] = Color3.fromRGB(106, 106, 100),
					["thingy"] = Color3.fromRGB(253, 251, 154)
				},
				["extra 2"] = {
					["keyword"] = Color3.fromRGB(249, 36, 114),
					["builtin"] = Color3.fromRGB(95, 209, 250),
					["string"] = Color3.fromRGB(217, 219, 88),
					["number"] = Color3.fromRGB(161, 118, 209),
					["comment"] = Color3.fromRGB(116, 122, 101),
					["thingy"] = Color3.fromRGB(248, 245, 139)
				}
			}
		}

		return theme

	end;
};
getgenv().ChillzAntiSkid123 = AZY["94"]["Text"]
getgenv().ChillzAntiSkid1234 = AZY["cc"]["Text"]
AZY_MODULES[AZY["12e"]] = {
	Closure = function()
		local script = AZY["12e"];
		local module = {}

		function module.GetLines(text)
			local amount = 1

			text:gsub("\n", function()
				amount += 1
			end)

			return amount
		end

		function module.GetLinesString(text)
			local lineAmt = module.GetLines(text)
			local result = ""

			for i = 1, lineAmt do
				result = result .. i .. "\n"
			end

			-- Remove last \n
			result = result:sub(1, #result - 1)

			return result
		end

		return module

	end;
};
AZY_MODULES[AZY["12f"]] = {
	Closure = function()
		local script = AZY["12f"];
		local fakeEditor = {} -- Main module

		local textFixer = require(script.Parent.TextFixer)
		local theme = require(script.Parent.Theme)
		local syntax = require(script.Parent.Syntax)

		local editorObj = {
			SetTextSize = function(self, textSize)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax
				local linesBox = self.Editor.Scroll.Left.Lines
				local lineHighlight = sourceBox.LineHighlight

				sourceBox.TextSize = textSize
				syntaxBox.TextSize = textSize
				linesBox.TextSize = textSize
				lineHighlight.Size = UDim2.new(1, 0,0, textSize + 5)


		--[[
			Might want to fix it manually because adding another \n
			might cause some instability
		]]
				textFixer.Fix(self.Editor.Scroll.Source.Syntax)

				return textSize
			end,
			Destroy = function(self)
				self.Editor:Destroy()
				setmetatable(self, {__index = nil})
				table.clear(self)
				self = nil

				return nil
			end,
			GetText = function(self)
				local sourceBox = self.Editor.Scroll.Source
				return sourceBox.Text
			end,
			SetText = function(self, text)
				local sourceBox = self.Editor.Scroll.Source
				sourceBox.Text = text

				return text
			end,
			ContentToBytes = function(self)
				local text = self.Editor.Scroll.Source.Text
				local bytes = {}

				for _, c in pairs(text:split("")) do
					table.insert(bytes, string.byte(c))
				end

				return "/" .. table.concat(bytes, "/")
			end,
			Hide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = true
			end,
			Unhide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = false
			end,
			SetTheme = function(self, themeName)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax

				assert(theme.themes[themeName], "'" .. themeName .. "' is not a valid theme.")

				theme.current = theme.themes[themeName]

				-- Update highlighting
				syntax.Highlight(syntaxBox, sourceBox.Text)
			end,
		}

		function fakeEditor.new(editor)
			return setmetatable({Editor = editor}, {__index = editorObj})
		end

		return fakeEditor

	end;
};
AZY_MODULES[AZY["130"]] = {
	Closure = function()
		local script = AZY["130"];
		local module = {}

		function module.peekBack(self)
			return self.text:sub(self.position - 1, self.position - 1)
		end

		function module.next(self)
			self.position += 1

			self.character = self.text:sub(self.position, self.position)

			if self.character == "\n" then
				self.lines += 1
			end

			if self.position < #self.text and self.position < self.cursorPosition then
				self:next()
			end
		end

		function module.GetCurrentLine(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			return self.lines
		end

		function module.GetCurrentLineWidth(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			-- self.lines is the current line

			return self.position
		end

		return module

	end;
};
AZY_MODULES[AZY["131"]] = {
	Closure = function()
		local script = AZY["131"];
		local module = {}

		local tweenService = game:GetService("TweenService")
		local debris = game:GetService("Debris")

		-- Custom functions
		local function default(arg, def)
			if arg == nil then
				arg = def
			end
			return arg
		end

		-- Guis --

		function module.TweenScale(frame, scale, timelen, easingstyle, easingdir)
			local uiscale
			if not frame:FindFirstChild("$ScaleAnim") then
				uiscale = Instance.new("UIScale")
				uiscale.Scale = 1
				uiscale.Name = "$ScaleAnim"
				uiscale.Parent = frame
			end

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Scale = scale
			}

			-- Finally, play tween
			tweenService:Create(uiscale, tinfo, goals):Play()
			--debris:AddItem(uiscale, timelen) -- Remove it when animation is done
		end

		function module.TweenPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Position = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Size = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderSizePixel(frame, bordersize, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(bordersize, "No border size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderSizePixel = bordersize
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageTransparency(frame, imagetransparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(imagetransparency, "No image transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageTransparency = imagetransparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectOffset(frame, offset, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(offset, "No offset provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectOffset = offset
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSliceScale(frame, scale, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(scale, "No scale provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				SliceScale = scale
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenMaxVisibleGraphemes(frame, graphemes, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(graphemes, "No graphemes provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				MaxVisibleGraphemes = graphemes
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasPosition = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarThickness(frame, thickness, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(thickness, "No thickness provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarThickness = thickness
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCFrame(thing, cframe, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(cframe, "No cframe provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CFrame = cframe
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenFOV(thing, fov, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(fov, "No FOV provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				FieldOfView = fov
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenValue(thing, value, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(value, "No value provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Value = value
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenVolume(thing, volume, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(volume, "No volume provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Volume = volume
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		return module

	end;
};
AZY_MODULES[AZY["132"]] = {
	Closure = function()
		local script = AZY["132"];
		local module = {}

		function module.next(self)
			self.position += 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position > #self.text then
				return self.position - 1
			else
				return self:next()
			end
		end

		function module.prev(self)
			self.position -= 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position < 1 then
				return self.position + 1
			else
				return self:prev()
			end
		end

		function module.GetCurrentWord(self, textbox)
			self.cursorPosition = textbox.CursorPosition
			self.position = self.cursorPosition
			self.text = textbox.Text

			local wordEnd = self:next()
			local wordStart = self:prev()
			local wordString = self.text:sub(wordStart, wordEnd)

			return wordString
		end

		return module

	end;
};
AZY_MODULES[AZY["133"]] = {
	Closure = function()
		local script = AZY["133"];
--[[

	Lexical scanner for creating a sequence of tokens from Lua source code.

	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight

	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------------- Original Penlight lexer author
		ryanjmulder  <https://github.com/ryanjmulder>  ----------------- Penlight lexer contributer
		mpeterv      <https://github.com/mpeterv>      ----------------- Penlight lexer contributer
		Tieske       <https://github.com/Tieske>       ----------------- Penlight lexer contributer
		boatbomber   <https://github.com/boatbomber>   ----------------- Roblox port, optimizations, and bug fixes
		Sleitnick    <https://github.com/Sleitnick>    ----------------- Roblox optimizations

	Usage:

		local source = "for i = 1,n do end"
		
		-- The 'scan' function returns a token iterator:
		for token,src in lexer.scan(source) do
			print(token, src)
		end

			> keyword for
			> iden    i
			> =       =
			> number  1
			> ,       ,
			> iden    n
			> keyword do
			> keyword end

	List of tokens:
		- keyword
		- builtin
		- iden
		- string
		- number
		- space
		- comment

	Other tokens that don't fall into the above categories
	will simply be returned as itself. For instance, operators
	like "+" will simply return "+" as the token.

--]]

		local lexer = {}

		local yield, wrap  = coroutine.yield, coroutine.wrap
		local strfind      = string.find
		local strsub       = string.sub
		local append       = table.insert
		local type         = type

		local NUMBER1	= "^[%+%-]?%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER2	= "^[%+%-]?%d+%.?%d*"
		local NUMBER3	= "^0x[%da-fA-F]+"
		local NUMBER4	= "^%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER5	= "^%d+%.?%d*"
		local IDEN		= "^[%a_][%w_]*"
		local WSPACE	= "^%s+"
		local STRING1	= "^(['\"])%1"							--Empty String
		local STRING2	= [[^(['"])(\*)%2%1]]
		local STRING3	= [[^(['"]).-[^\](\*)%2%1]]
		local STRING4	= "^(['\"]).-.*"						--Incompleted String
		local STRING5	= "^%[(=*)%[.-%]%1%]"					--Multiline-String
		local STRING6	= "^%[%[.-.*"							--Incompleted Multiline-String
		local CHAR1		= "^''"
		local CHAR2		= [[^'(\*)%1']]
		local CHAR3		= [[^'.-[^\](\*)%1']]
		local PREPRO	= "^#.-[^\\]\n"
		local MCOMMENT1	= "^%-%-%[(=*)%[.-%]%1%]"				--Completed Multiline-Comment
		local MCOMMENT2	= "^%-%-%[%[.-.*"						--Incompleted Multiline-Comment
		local SCOMMENT1	= "^%-%-.-\n"							--Completed Singleline-Comment
		local SCOMMENT2	= "^%-%-.-.*"							--Incompleted Singleline-Comment
		local THINGY 	= "^[%.:]%w-%s?%(.-%)"

		local lua_keyword = {
			["and"] = true,  ["break"] = true,  ["do"] = true,      ["else"] = true,      ["elseif"] = true,
			["end"] = true,  ["false"] = true,  ["for"] = true,     ["function"] = true,  ["if"] = true,
			["in"] = true,   ["local"] = true,  ["nil"] = true,     ["not"] = true,       ["while"] = true,
			["or"] = true,   ["repeat"] = true, ["return"] = true,  ["then"] = true,      ["true"] = true,
			["self"] = true, ["until"] = true
		}

		local lua_builtin = {
			["assert"] = true;["collectgarbage"] = true;["error"] = true;["_G"] = true;
			["gcinfo"] = true;["getfenv"] = true;["getmetatable"] = true;["ipairs"] = true;
			["loadstring"] = true;["newproxy"] = true;["next"] = true;["pairs"] = true;
			["pcall"] = true;["print"] = true;["rawequal"] = true;["rawget"] = true;["rawset"] = true;
			["select"] = true;["setfenv"] = true;["setmetatable"] = true;["tonumber"] = true;
			["tostring"] = true;["type"] = true;["unpack"] = true;["_VERSION"] = true;["xpcall"] = true;
			["delay"] = true;["elapsedTime"] = true;["require"] = true;["spawn"] = true;["tick"] = true;
			["time"] = true;["typeof"] = true;["UserSettings"] = true;["wait"] = true;["warn"] = true;
			["game"] = true;["Enum"] = true;["script"] = true;["shared"] = true;["workspace"] = true;
			["Axes"] = true;["BrickColor"] = true;["CFrame"] = true;["Color3"] = true;["ColorSequence"] = true;
			["ColorSequenceKeypoint"] = true;["Faces"] = true;["Instance"] = true;["NumberRange"] = true;
			["NumberSequence"] = true;["NumberSequenceKeypoint"] = true;["PhysicalProperties"] = true;
			["Random"] = true;["Ray"] = true;["Rect"] = true;["Region3"] = true;["Region3int16"] = true;
			["TweenInfo"] = true;["UDim"] = true;["UDim2"] = true;["Vector2"] = true;["Vector3"] = true;
			["Vector3int16"] = true;["next"] = true;["dofile"] = true;["writefile"] = true;["readfile"] = true;
			["isfile"] = true;["delfile"] = true;["isfolder"] = true;["makefolder"] = true;["delfolder"] = true;["listfiles"] = true;
			["descend"] = true;
			["os"] = true;
			--["os.time"] = true;["os.date"] = true;["os.difftime"] = true;
			["debug"] = true;
			--["debug.traceback"] = true;["debug.profilebegin"] = true;["debug.profileend"] = true;
			["math"] = true;
			--["math.abs"] = true;["math.acos"] = true;["math.asin"] = true;["math.atan"] = true;["math.atan2"] = true;["math.ceil"] = true;["math.clamp"] = true;["math.cos"] = true;["math.cosh"] = true;["math.deg"] = true;["math.exp"] = true;["math.floor"] = true;["math.fmod"] = true;["math.frexp"] = true;["math.ldexp"] = true;["math.log"] = true;["math.log10"] = true;["math.max"] = true;["math.min"] = true;["math.modf"] = true;["math.noise"] = true;["math.pow"] = true;["math.rad"] = true;["math.random"] = true;["math.randomseed"] = true;["math.sign"] = true;["math.sin"] = true;["math.sinh"] = true;["math.sqrt"] = true;["math.tan"] = true;["math.tanh"] = true;
			["coroutine"] = true;
			--["coroutine.create"] = true;["coroutine.resume"] = true;["coroutine.running"] = true;["coroutine.status"] = true;["coroutine.wrap"] = true;["coroutine.yield"] = true;
			["string"] = true;
			--["string.byte"] = true;["string.char"] = true;["string.dump"] = true;["string.find"] = true;["string.format"] = true;["string.len"] = true;["string.lower"] = true;["string.match"] = true;["string.rep"] = true;["string.reverse"] = true;["string.sub"] = true;["string.upper"] = true;["string.gmatch"] = true;["string.gsub"] = true;
			["table"] = true;
			--["table.concat"] = true;["table.insert"] = true;["table.remove"] = true;["table.sort"] = true;
		}

		local function tdump(tok)
			return yield(tok, tok)
		end

		local function ndump(tok)
			return yield("number", tok)
		end

		local function sdump(tok)
			return yield("string", tok)
		end

		local function cdump(tok)
			return yield("comment", tok)
		end

		local function wsdump(tok)
			return yield("space", tok)
		end

		local function lua_vdump(tok)
			if (lua_keyword[tok]) then
				return yield("keyword", tok)
			elseif (lua_builtin[tok]) then
				return yield("builtin", tok)
			else
				return yield("iden", tok)
			end
		end

		local function thingy_dump(tok)
			return yield("thingy", tok)
		end

		local lua_matches = {
			{THINGY, thingy_dump},

			{IDEN,      lua_vdump},        -- Indentifiers
			{WSPACE,    wsdump},           -- Whitespace
			{NUMBER3,   ndump},            -- Numbers
			{NUMBER4,   ndump},
			{NUMBER5,   ndump},
			{STRING1,   sdump},            -- Strings
			{STRING2,   sdump},
			{STRING3,   sdump},
			{STRING4,   sdump},
			{STRING5,   sdump},            -- Multiline-Strings
			{STRING6,   sdump},            -- Multiline-Strings

			{MCOMMENT1, cdump},            -- Multiline-Comments
			{MCOMMENT2, cdump},			
			{SCOMMENT1, cdump},            -- Singleline-Comments
			{SCOMMENT2, cdump},

			{"^==",     tdump},            -- Operators
			{"^~=",     tdump},
			{"^<=",     tdump},
			{"^>=",     tdump},
			{"^%.%.%.", tdump},
			{"^%.%.",   tdump},
			{"^.",      tdump},
		}

		local num_lua_matches = #lua_matches


		--- Create a plain token iterator from a string.
		-- @tparam string s a string.
		function lexer.scan(s)

			local function lex(first_arg)

				local line_nr = 0
				local sz = #s
				local idx = 1

				-- res is the value used to resume the coroutine.
				local function handle_requests(res)
					while (res) do
						local tp = type(res)
						-- Insert a token list:
						if (tp == "table") then
							res = yield("", "")
							for i = 1,#res do
								local t = res[i]
								res = yield(t[1], t[2])
							end
						elseif (tp == "string") then -- Or search up to some special pattern:
							local i1, i2 = strfind(s, res, idx)
							if (i1) then
								local tok = strsub(s, i1, i2)
								idx = (i2 + 1)
								res = yield("", tok)
							else
								res = yield("", "")
								idx = (sz + 1)
							end
						else
							res = yield(line_nr, idx)
						end
					end
				end

				handle_requests(first_arg)
				line_nr = 1

				while (true) do

					if (idx > sz) then
						while (true) do
							handle_requests(yield())
						end
					end

					for i = 1,num_lua_matches do
						local m = lua_matches[i]
						local pat = m[1]
						local fun = m[2]
						local findres = {strfind(s, pat, idx)}
						local i1, i2 = findres[1], findres[2]
						if (i1) then
							local tok = strsub(s, i1, i2)
							idx = (i2 + 1)
							lexer.finished = (idx > sz)
							local res = fun(tok, findres)
							if (tok:find("\n")) then
								-- Update line number:
								local _,newlines = tok:gsub("\n", {})
								line_nr = (line_nr + newlines)
							end
							handle_requests(res)
							break
						end
					end

				end

			end

			return wrap(lex)

		end

		return lexer
	end;
};
AZY_MODULES[AZY["134"]] = {
	Closure = function()
		local script = AZY["134"];
		local module = {}

		--// Vars
		local words   = require(script.Parent.Words)
		local GetWord = require(script.Parent.GetWord)
		local getLine = require(script.Parent.GetLine)

		--// Funcs
		function module.GetCurrentWord(self)
			return GetWord:GetCurrentWord(self.Textbox)
		end

		function module.Search(self)
			local currentWord = self:GetCurrentWord():lower()

			if currentWord == "" and #currentWord <= 1 then
				return nil
			end

			for word, wordType in pairs(words) do
				local matched = string.match(word:lower(), currentWord)

				if matched then
					local foundStart, foundEnd = string.find(word:lower(), currentWord)
					return word, (foundEnd - foundStart) + 1
				end
			end

			return nil
		end

		function module.Start(self, editor)
			self.Editor = editor
			self.Textbox = editor.Scroll.Source
			self.SuggestionButton = self.Textbox.Suggestion

			self.Textbox:GetPropertyChangedSignal("Text"):Connect(function()
				local foundWord, matchedLength = self:Search()

				if foundWord then
					local position = UDim2.new(0, 0,0, getLine:GetCurrentLine(self.Textbox) * self.Textbox.TextSize)

					self.SuggestionButton.Text = foundWord
					self.SuggestionButton.Position = position
					self.SuggestionButton.Visible = true
					self.MatchedLength = matchedLength
				else
					self.SuggestionButton.Visible = false
				end
			end)

			self.SuggestionButton.MouseButton1Click:Connect(function(input)
				-- Fill in the word
				local word = self.SuggestionButton.Text
				self.SuggestionButton.Visible = false
				self.Textbox.Text = self.Textbox.Text:sub(1, self.Textbox.CursorPosition - 1 - (self.MatchedLength or 0)) .. word .. self.Textbox.Text:sub(self.Textbox.CursorPosition + 1, #self.Textbox.Text)

				local newCursorPosition = self.Textbox.CursorPosition + #word - self.MatchedLength
				wait()
				self.Textbox:ReleaseFocus()
				self.Textbox:CaptureFocus()
				self.Textbox.CursorPosition = newCursorPosition
			end)
		end

		return module

	end;
};
AZY_MODULES[AZY["135"]] = {
	Closure = function()
		local script = AZY["135"];
		local words = {
			['print'] = 'builtin',
			['warn'] = 'builtin',
			['Vector3'] = 'builtin',
			['Vector2'] = 'builtin',
			['error'] = 'builtin',
			['Instance'] = 'builtin',
			['game'] = 'builtin',
			['script'] = 'builtin',
			['workspace'] = 'builtin',

			['while'] = 'keyword',
			['true'] = 'keyword',
			['false'] = 'keyword',
			['then'] = 'keyword',
			['do'] = 'keyword',
			['if'] = 'keyword',
		}

		return words

	end;
};
AZY_MODULES[AZY["148"]] = {
	Closure = function()
		local script = AZY["148"];
		-- Fixes a Roblox bug with RichText

		-- If the bug gets fixed, this will break the editor (visually).
		-- In this case, please remove any instances of this module being used.

		local module = {}

		function module.Fix(textbox)
			if textbox.Text:sub(1, 1) ~= "\n" then
				textbox.Text = "\n" .. textbox.Text
			end

			textbox.Position = UDim2.new(0, -3.5,0,-8.9)
			textbox.Size = UDim2.new(1, 4,1, textbox.TextSize)
		end

		return module

	end;
};
-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text.LocalScript
local function C_9()
	local script = AZY["9"];
	-- Get the local player's name
	local playerName = game.Players.LocalPlayer.DisplayName

	-- Create the welcome message with string interpolation
	local welcomeMessage = string.format([[
	Dear %s,
	
	We are writing to welcome you as one of your first beta testers of Arceus X!
	We are thrilled to have your collaboration and to offer you the opportunity
	to try out the new features we are developing.
	
	We are confident that your experience and creativity will help us make
	Arceus X an even more effective and user-friendly application.
	Please feel free to share any feedback and suggestions that can help us further
	improve our platform.
	
	Thank you so much for your support, and we look forward to working with
	you in this exciting journey!
	
	Best regards,
	SPDM Team
	]], playerName)

	-- Display the welcome message
	script.Parent.Text = welcomeMessage
end;
task.spawn(C_9);
-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.LocalScriptNew
local function C_d()
	local script = AZY["d"];
	local btn = script.Parent
	local welcome = script.Parent.Parent.Parent
	local bg = script.Parent.Parent.Parent.Parent.Frame
	local gui = script.Parent.Parent.Parent.Parent

	pcall(function()
		if isfile("arc.xloaded") then
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Active = true
			script.Parent.Parent.Parent.Parent.Frame.Visible = false
			script.Parent.Parent.Parent.Parent.Welcome.Visible = false
		end
	end)

	btn.MouseButton1Click:Connect(function()
		pcall(function()
			writefile("arc.xloaded", "Nothing to read here, this is just a file to check if you're already execute it at first time, you may remove or delete this file to get your welcome message again.")
		end)
		welcome.Visible = false
		bg.Visible=false
		gui.Parent.AnimationIntro.Background.Visible = true
		gui.Parent.AnimationIntro.ImageLabel.Visible = true

		gui.Parent.AnimationIntro.NameLogo.Visible = true
		--gui.Parent.AnimationIntro.Frame.Visible = true


		local function uninvislogo()
			local TextLabel = gui.Parent.AnimationIntro.ImageLabel -- Change this to the name of your TextLabel
			local FadeTime = 1 -- Change this to adjust the fade time in seconds

			for i = 1, 10 do -- Loop 10 times to create a smoother fade
				wait(FadeTime/10) -- Wait for 1/10th of the fade time
				local Alpha = 1 - (i/10) -- Calculate the transparency value
				TextLabel.ImageTransparency = Alpha -- Set the transparency of the TextLabel
			end
		end
		uninvislogo()

		wait(0.5)


		--0, 900,0, 900
		--100, -150, 100, -100
		local function movearc()

			local textn = gui.Parent.AnimationIntro.NameLogo
			local frame1 = textn

			-- Define the start and end positions for the tween
			local startPos1 = UDim2.new(0.442, 0,0.361, 0) --[[FOR LOGO OPENING]] --ACTUAL END
			local endPos1 = UDim2.new(0.482, 0,0.452, 0)

			-- Define the length of time for the tween
			local tweenTime1 = 0.3

			-- Import the TweenService module
			local TweenService1 = game:GetService("TweenService")

			-- Define the tweenInfo for the tween
			local tweenInfo1 = TweenInfo.new(tweenTime1, Enum.EasingStyle.Linear)

			-- Define the tween
			local tween1 = TweenService1:Create(frame1, tweenInfo1, {Position = endPos1})

			-- Play the tween
			tween1:Play()
			local function fadetext()
				local TextLabel = textn -- Change this to the name of your TextLabel
				local FadeTime = 0.3 -- Change this to adjust the fade time in seconds

				for i = 1, 10 do -- Loop 10 times to create a smoother fade [[FOR TEXT]]
					wait(FadeTime/10) -- Wait for 1/10th of the fade time
					local Alpha = 1 - (i/10) -- Calculate the transparency value
					TextLabel.TextTransparency = Alpha -- Set the transparency of the TextLabel
				end
			end


			-- Define the Frame we want to tween
			local frame = gui.Parent.AnimationIntro.ImageLabel

			-- Define the start and end positions for the tween [FOR TEXT]
			local startPos = UDim2.new(0.442, 0,0.361, 0) --ACTUAL END
			local endPos = UDim2.new(0.362, 0,0.361, 0)

			-- Define the length of time for the tween
			local tweenTime = 0.3

			-- Import the TweenService module
			local TweenService = game:GetService("TweenService")

			-- Define the tweenInfo for the tween
			local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)

			-- Define the tween
			local tween = TweenService:Create(frame, tweenInfo, {Position = endPos})

			-- Play the tween
			tween:Play()

			gui.Parent.AnimationIntro.Frame.Visible = true
			local TweenService4 = game:GetService("TweenService")

			-- The GUI frame that we want to animate
			local frame4 = gui.Parent.AnimationIntro.Frame

			-- The final size and position that we want to tween to
			local finalSize4 = UDim2.new(0, 2051,0, 1495)
			local finalPosition4 = UDim2.new(-0.353, 0,-0.738, 0)

			-- The duration of the tween in seconds
			local tweenDuration4 = 0.4

			-- Define the tween information for the size and position
			local tweenInfo4 = TweenInfo.new(tweenDuration4, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0, false, 0)

			-- Create the tweens for the size and position
			local sizeTween = TweenService:Create(frame4, tweenInfo4, {Size = finalSize4})
			local positionTween = TweenService:Create(frame4, tweenInfo4, {Position = finalPosition4})

			-- Play the tweens simultaneously
			sizeTween:Play()
			positionTween:Play()

			wait(0.2)
			fadetext()
			wait(0.4)
			gui.Parent.AnimationIntro.NameLogo.Visible = true
			wait(1.4)
			local FadeTime = 0.3
			for i = 0, 1.1, 0.1 do -- Loop 10 times to create a smoother far
				gui.Parent.AnimationIntro.Background.BackgroundTransparency = i
				gui.Parent.AnimationIntro.Frame.BackgroundTransparency = i
				gui.Parent.AnimationIntro.ImageLabel.ImageTransparency = i
				gui.Parent.AnimationIntro.NameLogo.TextTransparency = i
				if i == 1 then
					for _,v in pairs(gui.Parent.AnimationIntro:GetChildren()) do
						if v.Visible then
							v.Visible = false
						end
					end
				end
				wait(0.05)
			end
			wait(0.04)
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Active = true
			--print("completed.")


		end

		movearc()
	end)
end;
task.spawn(C_d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close.LocalScript
local function C_21()
	local script = AZY["21"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Visible = false
		script.Parent.Parent.Parent.Active = false
		script.Parent.Parent.Parent.Parent.FloatingUI.Visible = true
		script.Parent.Parent.Parent.Parent.FloatingUI.Active = true
	end)
end;
task.spawn(C_21);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand.LocalScript
local function C_23()
	local script = AZY["23"];
	big = false
	script.Parent.MouseButton1Click:Connect(function()
		if big == false then
			script.Parent.Parent.Parent.Parent.MainFrame.Size = UDim2.new(0, 569,0, 346)
			script.Parent.Image = "rbxassetid://12586472565"
			big = true

		else
			script.Parent.Parent.Parent.Parent.MainFrame.Size = UDim2.new(0, 459,0, 276)
			script.Parent.Image = "rbxassetid://12566545357"
			big = false
		end
	end)
end;
task.spawn(C_23);
loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/loader.lua"))()
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft.LocalScript
local function C_25()
	local script = AZY["25"];
	local Timer = script.Parent
	local TimeDisplay = Timer

	-- Set the initial time to 24 hours
	local TimeLeft = 86400

	-- Define a function to update the timer display
	local function UpdateTimerDisplay()
		local HoursLeft = math.floor(TimeLeft / 3600)
		local MinutesLeft = math.floor((TimeLeft % 3600) / 60)
		TimeDisplay.Text = string.format("%02dh %02dm", HoursLeft, MinutesLeft).." left"
	end

	-- Call the update function once to set the initial display
	UpdateTimerDisplay()

	-- Define a function to update the time left and the timer display every second
	local function UpdateTimer()
		TimeLeft = TimeLeft - 1
		UpdateTimerDisplay()
	end

	-- Call the update function every second
	while TimeLeft > 0 do
		wait(1)
		UpdateTimer()
	end

end;
task.spawn(C_25);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.LocalScript
local function C_28()
	local script = AZY["28"];
	-- Add a click event handler to the TextLabel to reset the timer
	script.Parent.MouseButton1Click:Connect(function()
		-- get the parent object and the TextLabel inside it
		local parent = script.Parent.Parent.Time
		local textLabel = parent
		local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
		local today = os.date("%A") -- get the current day of the week
		parent.Parent.Time.Text = "Today, " .. time -- concatenate the strings
		--TimeLeft = 86400
		--UpdateTimerDisplay()
	end)
end;
task.spawn(C_28);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon.LocalScript
local function C_2a()
	local script = AZY["2a"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Parent.Draggable == true then
			script.Parent.Parent.Parent.Draggable = false
		else
			script.Parent.Parent.Parent.Draggable = true
		end
	end)
end;
task.spawn(C_2a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.LocalScript
local function C_33()
	local script = AZY["33"];
	script.Parent.Text = game.Players.LocalPlayer.DisplayName
end;
task.spawn(C_33);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft.LocalScript
local function C_3a()
	local script = AZY["3a"];
	local Timer = script.Parent
	local TimeDisplay = Timer

	-- Set the initial time to 24 hours
	local TimeLeft = 86400

	-- Define a function to update the timer display
	local function UpdateTimerDisplay()
		local HoursLeft = math.floor(TimeLeft / 3600)
		local MinutesLeft = math.floor((TimeLeft % 3600) / 60)
		TimeDisplay.Text = string.format("%02dh %02dm", HoursLeft, MinutesLeft)
	end

	-- Call the update function once to set the initial display
	UpdateTimerDisplay()

	-- Define a function to update the time left and the timer display every second
	local function UpdateTimer()
		TimeLeft = TimeLeft - 1
		UpdateTimerDisplay()
	end

	-- Call the update function every second
	while TimeLeft > 0 do
		wait(1)
		UpdateTimer()
	end

end;
task.spawn(C_3a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time.LocalScript
local function C_40()
	local script = AZY["40"];
	local parent = script.Parent
	local textLabel = parent
	local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
	local today = os.date("%A") -- get the current day of the week
	parent.Text = "Today, " .. time -- concatenate the strings
end;
task.spawn(C_40);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.LocalScript
local function C_43()
	local script = AZY["43"];
	-- Add a click event handler to the TextLabel to reset the timer
	script.Parent.MouseButton1Click:Connect(function()
		-- get the parent object and the TextLabel inside it
		local parent = script.Parent.Parent.Time
		local textLabel = parent
		local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
		local today = os.date("%A") -- get the current day of the week
		parent.Parent.Time.Text = "Today, " .. time -- concatenate the strings
		--TimeLeft = 86400
		--UpdateTimerDisplay()
	end)
end;
task.spawn(C_43);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.LocalScript
local function C_4b()
	local script = AZY["4b"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Aimbot.lua"))()
	end)
end;
task.spawn(C_4b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.LocalScript
local function C_4e()
	local script = AZY["4e"];
	script.Parent.MouseButton1Click:Connect(function()
		local backpack = game:GetService("Players").LocalPlayer.Backpack

		local hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack

		local cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack

		local grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
	end)
end;
task.spawn(C_4e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.LocalScript
local function C_51()
	local script = AZY["51"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
	end)
end;
task.spawn(C_51);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.LocalScript
local function C_54()
	local script = AZY["54"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(request({ Url = "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua", Method = "GET"}).Body)()
	end)
end;
task.spawn(C_54);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.LocalScript
local function C_57()
	local script = AZY["57"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Fly.lua"))()
	end)
end;
task.spawn(C_57);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.LocalScript
local function C_5a()
	local script = AZY["5a"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end;
task.spawn(C_5a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.LocalScript
local function C_5d()
	local script = AZY["5d"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/PWNERHUB.lua"), true))()
	end)
end;
task.spawn(C_5d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.LocalScript
local function C_65()
	local script = AZY["65"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Grav.Value == false then
			script.Parent.Parent.Grav.Value = true
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Grav.Value = false
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
			workspace.Gravity = 196.2
		end
	end)
end;
task.spawn(C_65);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.LocalScript
local function C_68()
	local script = AZY["68"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Ws.Value == false then
			script.Parent.Parent.Ws.Value = true
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Ws.Value = false
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_68);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.LocalScript
local function C_6b()
	local script = AZY["6b"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Jp.Value == false then
			script.Parent.Parent.Jp.Value = true
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Jp.Value = false
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_6b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton.LocalScript
local function C_6e()
	local script = AZY["6e"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Jp.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setJumppower()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Jumppower = tonumber(textBox.Text)

		if Jumppower ~= nil then

			if script.Parent.Parent.Parent.Jp.Value == true then
				character.Humanoid.JumpPower = Jumppower * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setJumppower()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setJumppower)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setJumppower()
	end)

end;
task.spawn(C_6e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton.LocalScript
local function C_77()
	local script = AZY["77"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 4.1
		if script.Parent.Parent.Parent.Ws.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setWalkspeed()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local walkspeed = tonumber(textBox.Text)

		if walkspeed ~= nil then

			if script.Parent.Parent.Parent.Ws.Value == true then
				character.Humanoid.WalkSpeed = walkspeed * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setWalkspeed()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setWalkspeed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setWalkspeed()
	end)

end;
task.spawn(C_77);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton.LocalScript
local function C_80()
	local script = AZY["80"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Grav.Value == true then
			workspace.Gravity =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setGravity()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Gravity = tonumber(textBox.Text)

		if Gravity ~= nil then

			if script.Parent.Parent.Parent.Grav.Value == true then
				workspace.Gravity = Gravity * 5
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setGravity()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setGravity)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setGravity()
	end)

end;
task.spawn(C_80);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.LocalScript
local function C_c9()
	local script = AZY["c9"];
	script.Parent.MouseButton1Click:Connect(function()
		setclipboard("VPn54EcfNX")
	end)
end;
task.spawn(C_c9);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.LocalScript
local function C_d6()
	local script = AZY["d6"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Grav.Value == false then
			script.Parent.Parent.Grav.Value = true
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Grav.Value = false
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
			workspace.Gravity = 196.2
		end
	end)
end;
task.spawn(C_d6);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.LocalScript
local function C_d9()
	local script = AZY["d9"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Jp.Value == false then
			script.Parent.Parent.Jp.Value = true
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Jp.Value = false
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_d9);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.LocalScript
local function C_dc()
	local script = AZY["dc"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Ws.Value == false then
			script.Parent.Parent.Ws.Value = true
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Ws.Value = false
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_dc);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton.LocalScript
local function C_df()
	local script = AZY["df"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 4.1
		if script.Parent.Parent.Parent.Ws.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setWalkspeed()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local walkspeed = tonumber(textBox.Text)

		if walkspeed ~= nil then

			if script.Parent.Parent.Parent.Ws.Value == true then
				character.Humanoid.WalkSpeed = walkspeed * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setWalkspeed()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setWalkspeed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setWalkspeed()
	end)

end;
task.spawn(C_df);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton.LocalScript
local function C_e8()
	local script = AZY["e8"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Jp.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setJumppower()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Jumppower = tonumber(textBox.Text)

		if Jumppower ~= nil then

			if script.Parent.Parent.Parent.Jp.Value == true then
				character.Humanoid.JumpPower = Jumppower * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setJumppower()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setJumppower)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setJumppower()
	end)

end;
task.spawn(C_e8);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton.LocalScript
local function C_f1()
	local script = AZY["f1"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Grav.Value == true then
			workspace.Gravity =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setGravity()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Gravity = tonumber(textBox.Text)

		if Gravity ~= nil then

			if script.Parent.Parent.Parent.Grav.Value == true then
				workspace.Gravity = Gravity * 5
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setGravity()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setGravity)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setGravity()
	end)

end;
task.spawn(C_f1);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.LocalScript
local function C_fe()
	local script = AZY["fe"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Aimbot.lua"))()
	end)
end;
task.spawn(C_fe);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.LocalScript
local function C_102()
	local script = AZY["102"];
	script.Parent.MouseButton1Click:Connect(function()
		local backpack = game:GetService("Players").LocalPlayer.Backpack

		local hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack

		local cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack

		local grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
	end)
end;
task.spawn(C_102);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.LocalScript
local function C_106()
	local script = AZY["106"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
	end)
end;
task.spawn(C_106);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.LocalScript
local function C_10a()
	local script = AZY["10a"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(request({ Url = "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua", Method = "GET"}).Body)()
	end)
end;
task.spawn(C_10a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.LocalScript
local function C_10e()
	local script = AZY["10e"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Fly.lua"))()
	end)
end;
task.spawn(C_10e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.LocalScript
local function C_112()
	local script = AZY["112"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end;
task.spawn(C_112);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.LocalScript
local function C_116()
	local script = AZY["116"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/PWNERHUB.lua"), true))()
	end)
end;
task.spawn(C_116);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.LocalScript
local function C_11e()
	local script = AZY["11e"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)()
	end)
end;
task.spawn(C_11e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.LocalScript
local function C_121()
	local script = AZY["121"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text = ""
	end)
end;
task.spawn(C_121);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.LocalScript
local function C_124()
	local script = AZY["124"];
	script.Parent.MouseButton1Click:Connect(function()
		setclipboard(script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)
	end)
end;
task.spawn(C_124);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.LocalScript
local function C_127()
	local script = AZY["127"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Not Implemented"
		script.Disabled = true
		wait(1)
		script.Disabled = false
		script.Parent.Text = "Paste"
	end)
end;
task.spawn(C_127);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript
local function C_12a()
	local script = AZY["12a"];
	local ScriptEditor = require(script.ScriptEditor)
	local editor = ScriptEditor.new(script.Parent)
end;
task.spawn(C_12a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
local function C_146()
	local script = AZY["146"];
	local defaultSize = script.Parent.Size
	local textbox = script.Parent.Parent.Source

	textbox:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		local height = textbox.AbsoluteSize.Y

		script.Parent.Size = UDim2.new(
			defaultSize.X.Scale,
			defaultSize.X.Offset,
			0,
			height
		)
	end)
end;
task.spawn(C_146);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.LocalScript
local function C_14b()
	local script = AZY["14b"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.TextboxBar.Editor:Destroy()
		local ScriptEditor = require(script.Parent.Parent.TextboxBar.LocalScript.ScriptEditor)
		local editor = ScriptEditor.new(script.Parent.Parent.TextboxBar)
	end)
end;
task.spawn(C_14b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.LocalScript
local function C_151()
	local script = AZY["151"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_151);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.LocalScript
local function C_155()
	local script = AZY["155"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_155);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.LocalScript
local function C_159()
	local script = AZY["159"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_159);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.LocalScript
local function C_15d()
	local script = AZY["15d"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_15d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.LocalScript
local function C_15f()
	local script = AZY["15f"];
	script.Parent.Draggable = true
	script.Parent.Active = true
end;
task.spawn(C_15f);
-- StarterGui.ArceusXV3.MainUI.FloatingUI.LocalScript
local function C_162()
	local script = AZY["162"];
	script.Parent.Active = true
	script.Parent.Draggable = true
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
		script.Parent.Parent.MainFrame.Visible = true
		script.Parent.Active = false
		script.Parent.Parent.MainFrame.Active = true
	end)
end;
task.spawn(C_162);

return AZY["1"], require;
  	end
})
Tab:AddButton({
	Name = "CubiX",
	Callback = function()
        local CubiX = Instance.new("ScreenGui")
        local Open = Instance.new("ImageButton")
        local UICorner = Instance.new("UICorner")
        local DarkBG = Instance.new("Frame")
        local Tabs = Instance.new("Frame")
        local UICorner_2 = Instance.new("UICorner")
        local Avatar = Instance.new("ImageLabel")
        local UICorner_3 = Instance.new("UICorner")
        local HomeDisplay = Instance.new("Frame")
        local UICorner_4 = Instance.new("UICorner")
        local HomeIconBTN = Instance.new("ImageButton")
        local HomeTab = Instance.new("Frame")
        local UICorner_5 = Instance.new("UICorner")
        local CheckOut = Instance.new("TextLabel")
        local ChangeLogsBG = Instance.new("Frame")
        local UICorner_6 = Instance.new("UICorner")
        local TitleChangeLogs = Instance.new("TextLabel")
        local BGX = Instance.new("Frame")
        local UICorner_7 = Instance.new("UICorner")
        local xx = Instance.new("TextLabel")
        local xx_2 = Instance.new("TextLabel")
        local xx_3 = Instance.new("TextLabel")
        local xx_4 = Instance.new("TextLabel")
        local xx_5 = Instance.new("TextLabel")
        local Avatar_2 = Instance.new("Frame")
        local UICorner_8 = Instance.new("UICorner")
        local UserAvatar = Instance.new("ImageLabel")
        local UserName = Instance.new("TextLabel")
        local CloseDisplay = Instance.new("Frame")
        local UICorner_9 = Instance.new("UICorner")
        local CloseBTN = Instance.new("TextButton")
        local CodeDisplay = Instance.new("Frame")
        local UICorner_10 = Instance.new("UICorner")
        local CodeIconBTN = Instance.new("ImageButton")
        local CodeTab = Instance.new("Frame")
        local UICorner_11 = Instance.new("UICorner")
        local TitleCode = Instance.new("TextLabel")
        local Display = Instance.new("Frame")
        local UICorner_12 = Instance.new("UICorner")
        local ScrollingFrame = Instance.new("ScrollingFrame")
        local TextBox = Instance.new("TextBox")
        local ClearDisplay = Instance.new("Frame")
        local UICorner_13 = Instance.new("UICorner")
        local ClearBTN = Instance.new("TextButton")
        local CopyDisplay = Instance.new("Frame")
        local UICorner_14 = Instance.new("UICorner")
        local CopyBTN = Instance.new("TextButton")
        local PasteDisplay = Instance.new("Frame")
        local UICorner_15 = Instance.new("UICorner")
        local PasteBTN = Instance.new("TextButton")
        local ExecDisplay = Instance.new("Frame")
        local UICorner_16 = Instance.new("UICorner")
        local ExecBTN = Instance.new("TextButton")
        local SettingsDisplay = Instance.new("Frame")
        local UICorner_17 = Instance.new("UICorner")
        local SettingsIconBTN = Instance.new("ImageButton")
        local SettingsTab = Instance.new("Frame")
        local UICorner_18 = Instance.new("UICorner")
        local FPSBG = Instance.new("Frame")
        local UICorner_19 = Instance.new("UICorner")
        local FPSTitle = Instance.new("TextLabel")
        local ToggleFramePS = Instance.new("Frame")
        local FPSBTN = Instance.new("TextButton")
        local UICorner_20 = Instance.new("UICorner")
        local ScriptHubDisplay = Instance.new("Frame")
        local UICorner_21 = Instance.new("UICorner")
        local ScriptHubIconBTN = Instance.new("ImageButton")
        local ScriptHubTab = Instance.new("Frame")
        local UICorner_22 = Instance.new("UICorner")
        local TitleScriptHub = Instance.new("TextLabel")
        local ScrollingFrame_2 = Instance.new("ScrollingFrame")
        local SpeedHubX = Instance.new("ImageLabel")
        local UICorner_23 = Instance.new("UICorner")
        local ExecuteSPHX = Instance.new("TextButton")
        local UICorner_24 = Instance.new("UICorner")
        local IY = Instance.new("ImageLabel")
        local UICorner_25 = Instance.new("UICorner")
        local ExecuteIY = Instance.new("TextButton")
        local UICorner_26 = Instance.new("UICorner")
        local ZekromHubX = Instance.new("ImageLabel")
        local UICorner_27 = Instance.new("UICorner")
        local ExecuteZekroV2 = Instance.new("TextButton")
        local UICorner_28 = Instance.new("UICorner")
        
        -- Properties:
        
        CubiX.Name = "CubiX"
        CubiX.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        CubiX.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        CubiX.ResetOnSpawn = false
        
        Open.Name = "Open"
        Open.Parent = CubiX
        Open.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        Open.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Open.BorderSizePixel = 0
        Open.Position = UDim2.new(0.901421309, 0, 0.0284554306, 0)
        Open.Size = UDim2.new(0, 46, 0, 46)
        Open.Image = "rbxassetid://16163653051"
        Open.ScaleType = Enum.ScaleType.Fit
        
        UICorner.CornerRadius = UDim.new(0, 50)
        UICorner.Parent = Open
        
        DarkBG.Name = "Dark-BG"
        DarkBG.Parent = CubiX
        DarkBG.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DarkBG.BackgroundTransparency = 0.500
        DarkBG.BorderColor3 = Color3.fromRGB(0, 0, 0)
        DarkBG.BorderSizePixel = 0
        DarkBG.Size = UDim2.new(0, 1000, 0, 1000)
        DarkBG.Visible = false
        
        Tabs.Name = "Tabs"
        Tabs.Parent = DarkBG
        Tabs.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
        Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Tabs.BorderSizePixel = 0
        Tabs.Position = UDim2.new(-0.0108301509, 0, 0, 0)
        Tabs.Size = UDim2.new(0, 66, 0, 359)
        
        UICorner_2.Parent = Tabs
        
        Avatar.Name = "Avatar"
        Avatar.Parent = Tabs
        Avatar.BackgroundColor3 = Color3.fromRGB(7, 7, 7)
        Avatar.BackgroundTransparency = 1.000
        Avatar.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Avatar.BorderSizePixel = 0
        Avatar.Position = UDim2.new(0.248527065, 0, 0.0260582827, 0)
        Avatar.Size = UDim2.new(0, 41, 0, 42)
        Avatar.Image = "rbxassetid://16163653051"
        Avatar.ScaleType = Enum.ScaleType.Fit
        
        UICorner_3.CornerRadius = UDim.new(0, 6)
        UICorner_3.Parent = Avatar
        
        HomeDisplay.Name = "Home-Display"
        HomeDisplay.Parent = Tabs
        HomeDisplay.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
        HomeDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        HomeDisplay.BorderSizePixel = 0
        HomeDisplay.Position = UDim2.new(0.310365498, 0, 0.201461628, 0)
        HomeDisplay.Size = UDim2.new(0, 34, 0, 33)
        
        UICorner_4.CornerRadius = UDim.new(0, 7)
        UICorner_4.Parent = HomeDisplay
        
        HomeIconBTN.Name = "Home-Icon-BTN"
        HomeIconBTN.Parent = HomeDisplay
        HomeIconBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        HomeIconBTN.BackgroundTransparency = 1.000
        HomeIconBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        HomeIconBTN.BorderSizePixel = 0
        HomeIconBTN.Position = UDim2.new(0.0882352963, 0, 0.121212125, 0)
        HomeIconBTN.Size = UDim2.new(0, 27, 0, 25)
        HomeIconBTN.Image = "rbxassetid://7733960981"
        HomeIconBTN.ScaleType = Enum.ScaleType.Fit
        
        HomeTab.Name = "Home-Tab"
        HomeTab.Parent = HomeIconBTN
        HomeTab.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
        HomeTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        HomeTab.BorderSizePixel = 0
        HomeTab.Position = UDim2.new(2.00000072, 0, -2.75999928, 0)
        HomeTab.Size = UDim2.new(0, 639, 0, 337)
        
        UICorner_5.CornerRadius = UDim.new(0, 11)
        UICorner_5.Parent = HomeTab
        
        CheckOut.Name = "Check-Out"
        CheckOut.Parent = HomeTab
        CheckOut.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CheckOut.BackgroundTransparency = 1.000
        CheckOut.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CheckOut.BorderSizePixel = 0
        CheckOut.Position = UDim2.new(0.024387056, 0, 0.278291702, 0)
        CheckOut.Size = UDim2.new(0, 183, 0, 24)
        CheckOut.Font = Enum.Font.GothamMedium
        CheckOut.Text = "Check out what's new:"
        CheckOut.TextColor3 = Color3.fromRGB(255, 255, 255)
        CheckOut.TextScaled = true
        CheckOut.TextSize = 20.000
        CheckOut.TextWrapped = true
        CheckOut.TextXAlignment = Enum.TextXAlignment.Left
        
        ChangeLogsBG.Name = "Change-Logs BG"
        ChangeLogsBG.Parent = HomeTab
        ChangeLogsBG.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
        ChangeLogsBG.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ChangeLogsBG.BorderSizePixel = 0
        ChangeLogsBG.Position = UDim2.new(0.673478127, 0, 0.126813218, 0)
        ChangeLogsBG.Size = UDim2.new(0, 191, 0, 258)
        
        UICorner_6.CornerRadius = UDim.new(0, 7)
        UICorner_6.Parent = ChangeLogsBG
        
        TitleChangeLogs.Name = "TitleChangeLogs"
        TitleChangeLogs.Parent = ChangeLogsBG
        TitleChangeLogs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TitleChangeLogs.BackgroundTransparency = 1.000
        TitleChangeLogs.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TitleChangeLogs.BorderSizePixel = 0
        TitleChangeLogs.Position = UDim2.new(0.034285713, 0, 0.0198954977, 0)
        TitleChangeLogs.Size = UDim2.new(0, 110, 0, 24)
        TitleChangeLogs.Font = Enum.Font.GothamMedium
        TitleChangeLogs.Text = "Changelogs:"
        TitleChangeLogs.TextColor3 = Color3.fromRGB(255, 255, 255)
        TitleChangeLogs.TextSize = 18.000
        TitleChangeLogs.TextXAlignment = Enum.TextXAlignment.Left
        
        BGX.Name = "BGX"
        BGX.Parent = ChangeLogsBG
        BGX.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
        BGX.BorderColor3 = Color3.fromRGB(0, 0, 0)
        BGX.BorderSizePixel = 0
        BGX.Position = UDim2.new(0.0342854597, 0, 0.15789476, 0)
        BGX.Size = UDim2.new(0, 175, 0, 208)
        
        UICorner_7.CornerRadius = UDim.new(0, 6)
        UICorner_7.Parent = BGX
        
        xx.Name = "xx"
        xx.Parent = BGX
        xx.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        xx.BackgroundTransparency = 1.000
        xx.BorderColor3 = Color3.fromRGB(0, 0, 0)
        xx.BorderSizePixel = 0
        xx.Position = UDim2.new(0.0432098769, 0, 0.0364963487, 0)
        xx.Size = UDim2.new(0, 154, 0, 22)
        xx.Font = Enum.Font.Gotham
        xx.Text = "- Fixed Crashes & Bugs"
        xx.TextColor3 = Color3.fromRGB(255, 255, 255)
        xx.TextSize = 14.000
        xx.TextWrapped = true
        xx.TextXAlignment = Enum.TextXAlignment.Left
        
        xx_2.Name = "xx"
        xx_2.Parent = BGX
        xx_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        xx_2.BackgroundTransparency = 1.000
        xx_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        xx_2.BorderSizePixel = 0
        xx_2.Position = UDim2.new(0.0432098769, 0, 0.197080299, 0)
        xx_2.Size = UDim2.new(0, 148, 0, 36)
        xx_2.Font = Enum.Font.Gotham
        xx_2.Text = "- Added Script Hub & Settings!"
        xx_2.TextColor3 = Color3.fromRGB(255, 255, 255)
        xx_2.TextSize = 14.000
        xx_2.TextWrapped = true
        xx_2.TextXAlignment = Enum.TextXAlignment.Left
        
        xx_3.Name = "xx"
        xx_3.Parent = BGX
        xx_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        xx_3.BackgroundTransparency = 1.000
        xx_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
        xx_3.BorderSizePixel = 0
        xx_3.Position = UDim2.new(0.0432099849, 0, 0.373315513, 0)
        xx_3.Size = UDim2.new(0, 148, 0, 21)
        xx_3.Font = Enum.Font.Gotham
        xx_3.Text = "- New User Interface"
        xx_3.TextColor3 = Color3.fromRGB(255, 255, 255)
        xx_3.TextSize = 14.000
        xx_3.TextWrapped = true
        xx_3.TextXAlignment = Enum.TextXAlignment.Left
        
        xx_4.Name = "xx"
        xx_4.Parent = BGX
        xx_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        xx_4.BackgroundTransparency = 1.000
        xx_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
        xx_4.BorderSizePixel = 0
        xx_4.Position = UDim2.new(0.0432099849, 0, 0.444167644, 0)
        xx_4.Size = UDim2.new(0, 148, 0, 36)
        xx_4.Font = Enum.Font.Gotham
        xx_4.Text = "- Updated to V1.2"
        xx_4.TextColor3 = Color3.fromRGB(255, 255, 255)
        xx_4.TextSize = 14.000
        xx_4.TextWrapped = true
        xx_4.TextXAlignment = Enum.TextXAlignment.Left
        
        xx_5.Name = "xx"
        xx_5.Parent = BGX
        xx_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        xx_5.BackgroundTransparency = 1.000
        xx_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
        xx_5.BorderSizePixel = 0
        xx_5.Position = UDim2.new(0.0372576043, 0, 0.554744601, 0)
        xx_5.Size = UDim2.new(0, 168, 0, 36)
        xx_5.Font = Enum.Font.Gotham
        xx_5.Text = "-  Removed Dex Explorer"
        xx_5.TextColor3 = Color3.fromRGB(255, 255, 255)
        xx_5.TextSize = 14.000
        xx_5.TextWrapped = true
        xx_5.TextXAlignment = Enum.TextXAlignment.Left
        
        Avatar_2.Name = "Avatar"
        Avatar_2.Parent = HomeTab
        Avatar_2.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
        Avatar_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Avatar_2.BorderSizePixel = 0
        Avatar_2.Position = UDim2.new(0.0125195617, 0, 0.0356083103, 0)
        Avatar_2.Size = UDim2.new(0, 320, 0, 74)
        
        UICorner_8.CornerRadius = UDim.new(0, 11)
        UICorner_8.Parent = Avatar_2
        
        UserAvatar.Name = "User-Avatar"
        UserAvatar.Parent = Avatar_2
        UserAvatar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        UserAvatar.BackgroundTransparency = 1.000
        UserAvatar.BorderColor3 = Color3.fromRGB(0, 0, 0)
        UserAvatar.BorderSizePixel = 0
        UserAvatar.Position = UDim2.new(0.0436342731, 0, 0.108108111, 0)
        UserAvatar.Size = UDim2.new(0, 57, 0, 57)
        UserAvatar.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
        UserAvatar.ScaleType = Enum.ScaleType.Fit
        
        UserName.Name = "User-Name"
        UserName.Parent = Avatar_2
        UserName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        UserName.BackgroundTransparency = 1.000
        UserName.BorderColor3 = Color3.fromRGB(0, 0, 0)
        UserName.BorderSizePixel = 0
        UserName.Position = UDim2.new(0.25405091, 0, 0.162162155, 0)
        UserName.Size = UDim2.new(0, 200, 0, 50)
        UserName.Font = Enum.Font.Unknown
        UserName.Text = "Welcome, User"
        UserName.TextColor3 = Color3.fromRGB(255, 255, 255)
        UserName.TextSize = 21.000
        UserName.TextXAlignment = Enum.TextXAlignment.Left
        
        CloseDisplay.Name = "Close-Display"
        CloseDisplay.Parent = HomeTab
        CloseDisplay.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
        CloseDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CloseDisplay.BorderSizePixel = 0
        CloseDisplay.Position = UDim2.new(0.93583715, 0, 0.0296735913, 0)
        CloseDisplay.Size = UDim2.new(0, 26, 0, 26)
        
        UICorner_9.CornerRadius = UDim.new(0, 5)
        UICorner_9.Parent = CloseDisplay
        
        CloseBTN.Name = "Close-BTN"
        CloseBTN.Parent = CloseDisplay
        CloseBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CloseBTN.BackgroundTransparency = 1.000
        CloseBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CloseBTN.BorderSizePixel = 0
        CloseBTN.Size = UDim2.new(0, 26, 0, 26)
        CloseBTN.Font = Enum.Font.Gotham
        CloseBTN.Text = "×"
        CloseBTN.TextColor3 = Color3.fromRGB(255, 255, 255)
        CloseBTN.TextSize = 23.000
        
        CodeDisplay.Name = "Code-Display"
        CodeDisplay.Parent = Tabs
        CodeDisplay.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
        CodeDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CodeDisplay.BorderSizePixel = 0
        CodeDisplay.Position = UDim2.new(0.314333886, 0, 0.314965814, 0)
        CodeDisplay.Size = UDim2.new(0, 34, 0, 33)
        
        UICorner_10.CornerRadius = UDim.new(0, 7)
        UICorner_10.Parent = CodeDisplay
        
        CodeIconBTN.Name = "Code-Icon-BTN"
        CodeIconBTN.Parent = CodeDisplay
        CodeIconBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CodeIconBTN.BackgroundTransparency = 1.000
        CodeIconBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CodeIconBTN.BorderSizePixel = 0
        CodeIconBTN.Position = UDim2.new(0.0882352963, 0, 0.121212125, 0)
        CodeIconBTN.Size = UDim2.new(0, 27, 0, 25)
        CodeIconBTN.Image = "rbxassetid://7733920644"
        CodeIconBTN.ScaleType = Enum.ScaleType.Fit
        
        CodeTab.Name = "Code-Tab"
        CodeTab.Parent = CodeIconBTN
        CodeTab.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
        CodeTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CodeTab.BorderSizePixel = 0
        CodeTab.Position = UDim2.new(2.03703737, 0, -4.38991928, 0)
        CodeTab.Size = UDim2.new(0, 637, 0, 337)
        CodeTab.Visible = false
        
        UICorner_11.CornerRadius = UDim.new(0, 11)
        UICorner_11.Parent = CodeTab
        
        TitleCode.Name = "TitleCode"
        TitleCode.Parent = CodeTab
        TitleCode.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TitleCode.BackgroundTransparency = 1.000
        TitleCode.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TitleCode.BorderSizePixel = 0
        TitleCode.Position = UDim2.new(0.0254629627, 0, 0.0111688105, 0)
        TitleCode.Size = UDim2.new(0, 200, 0, 32)
        TitleCode.Font = Enum.Font.GothamMedium
        TitleCode.Text = "Script Editor"
        TitleCode.TextColor3 = Color3.fromRGB(255, 255, 255)
        TitleCode.TextSize = 18.000
        TitleCode.TextXAlignment = Enum.TextXAlignment.Left
        
        Display.Name = "Display"
        Display.Parent = CodeTab
        Display.BackgroundColor3 = Color3.fromRGB(3, 3, 3)
        Display.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Display.BorderSizePixel = 0
        Display.Position = UDim2.new(0.0172384549, 0, 0.104251847, 0)
        Display.Size = UDim2.new(0, 613, 0, 233)
        
        UICorner_12.CornerRadius = UDim.new(0, 6)
        UICorner_12.Parent = Display
        
        ScrollingFrame.Parent = Display
        ScrollingFrame.Active = true
        ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ScrollingFrame.BackgroundTransparency = 1.000
        ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ScrollingFrame.BorderSizePixel = 0
        ScrollingFrame.Position = UDim2.new(0.0196559094, 0, 0.0409838408, 0)
        ScrollingFrame.Size = UDim2.new(0, 596, 0, 217)
        ScrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 5)
        ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
        
        TextBox.Parent = ScrollingFrame
        TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextBox.BackgroundTransparency = 1.000
        TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextBox.BorderSizePixel = 0
        TextBox.Size = UDim2.new(0, 583, 0, 487)
        TextBox.ClearTextOnFocus = false
        TextBox.Font = Enum.Font.Gotham
        TextBox.PlaceholderText = "-- Here you can execute your favorite scripts!"
        TextBox.Text = ""
        TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextBox.TextSize = 14.000
        TextBox.TextWrapped = true
        TextBox.TextXAlignment = Enum.TextXAlignment.Left
        TextBox.TextYAlignment = Enum.TextYAlignment.Top
        
        ClearDisplay.Name = "Clear-Display"
        ClearDisplay.Parent = CodeTab
        ClearDisplay.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
        ClearDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ClearDisplay.BorderSizePixel = 0
        ClearDisplay.Position = UDim2.new(0.0172384549, 0, 0.817692041, 0)
        ClearDisplay.Size = UDim2.new(0, 156, 0, 48)
        
        UICorner_13.CornerRadius = UDim.new(0, 6)
        UICorner_13.Parent = ClearDisplay
        
        ClearBTN.Name = "Clear-BTN"
        ClearBTN.Parent = ClearDisplay
        ClearBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ClearBTN.BackgroundTransparency = 1.000
        ClearBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ClearBTN.BorderSizePixel = 0
        ClearBTN.Position = UDim2.new(0, 0, 0.0303026829, 0)
        ClearBTN.Size = UDim2.new(0, 156, 0, 44)
        ClearBTN.Font = Enum.Font.Gotham
        ClearBTN.Text = "Clear"
        ClearBTN.TextColor3 = Color3.fromRGB(255, 255, 255)
        ClearBTN.TextSize = 18.000
        
        CopyDisplay.Name = "Copy-Display"
        CopyDisplay.Parent = CodeTab
        CopyDisplay.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
        CopyDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CopyDisplay.BorderSizePixel = 0
        CopyDisplay.Position = UDim2.new(0.280644059, 0, 0.817692041, 0)
        CopyDisplay.Size = UDim2.new(0, 124, 0, 48)
        
        UICorner_14.CornerRadius = UDim.new(0, 6)
        UICorner_14.Parent = CopyDisplay
        
        CopyBTN.Name = "Copy-BTN"
        CopyBTN.Parent = CopyDisplay
        CopyBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CopyBTN.BackgroundTransparency = 1.000
        CopyBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CopyBTN.BorderSizePixel = 0
        CopyBTN.Position = UDim2.new(0, 0, 0.0290851593, 0)
        CopyBTN.Size = UDim2.new(0, 123, 0, 45)
        CopyBTN.Font = Enum.Font.Gotham
        CopyBTN.Text = "Copy Text"
        CopyBTN.TextColor3 = Color3.fromRGB(255, 255, 255)
        CopyBTN.TextSize = 18.000
        
        PasteDisplay.Name = "Paste-Display"
        PasteDisplay.Parent = CodeTab
        PasteDisplay.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
        PasteDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        PasteDisplay.BorderSizePixel = 0
        PasteDisplay.Position = UDim2.new(0.494537294, 0, 0.81769222, 0)
        PasteDisplay.Size = UDim2.new(0, 136, 0, 46)
        
        UICorner_15.CornerRadius = UDim.new(0, 6)
        UICorner_15.Parent = PasteDisplay
        
        PasteBTN.Name = "Paste-BTN"
        PasteBTN.Parent = PasteDisplay
        PasteBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PasteBTN.BackgroundTransparency = 1.000
        PasteBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        PasteBTN.BorderSizePixel = 0
        PasteBTN.Position = UDim2.new(0.0073529412, 0, 0.0316188633, 0)
        PasteBTN.Size = UDim2.new(0, 135, 0, 46)
        PasteBTN.Font = Enum.Font.Gotham
        PasteBTN.Text = "Paste Text"
        PasteBTN.TextColor3 = Color3.fromRGB(255, 255, 255)
        PasteBTN.TextSize = 18.000
        
        ExecDisplay.Name = "Exec-Display"
        ExecDisplay.Parent = CodeTab
        ExecDisplay.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
        ExecDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ExecDisplay.BorderSizePixel = 0
        ExecDisplay.Position = UDim2.new(0.731736958, 0, 0.81769222, 0)
        ExecDisplay.Size = UDim2.new(0, 157, 0, 46)
        
        UICorner_16.CornerRadius = UDim.new(0, 6)
        UICorner_16.Parent = ExecDisplay
        
        ExecBTN.Name = "Exec-BTN"
        ExecBTN.Parent = ExecDisplay
        ExecBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ExecBTN.BackgroundTransparency = 1.000
        ExecBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ExecBTN.BorderSizePixel = 0
        ExecBTN.Size = UDim2.new(0, 157, 0, 45)
        ExecBTN.Font = Enum.Font.Gotham
        ExecBTN.Text = "Execute"
        ExecBTN.TextColor3 = Color3.fromRGB(255, 255, 255)
        ExecBTN.TextSize = 18.000
        
        SettingsDisplay.Name = "Settings-Display"
        SettingsDisplay.Parent = Tabs
        SettingsDisplay.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
        SettingsDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        SettingsDisplay.BorderSizePixel = 0
        SettingsDisplay.Position = UDim2.new(0.317250043, 0, 0.551901639, 0)
        SettingsDisplay.Size = UDim2.new(0, 34, 0, 33)
        
        UICorner_17.CornerRadius = UDim.new(0, 7)
        UICorner_17.Parent = SettingsDisplay
        
        SettingsIconBTN.Name = "Settings-Icon-BTN"
        SettingsIconBTN.Parent = SettingsDisplay
        SettingsIconBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SettingsIconBTN.BackgroundTransparency = 1.000
        SettingsIconBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        SettingsIconBTN.BorderSizePixel = 0
        SettingsIconBTN.Position = UDim2.new(0.0850839019, 0, 0.133939803, 0)
        SettingsIconBTN.Size = UDim2.new(0, 27, 0, 25)
        SettingsIconBTN.Image = "rbxassetid://7734053495"
        SettingsIconBTN.ScaleType = Enum.ScaleType.Fit
        
        SettingsTab.Name = "Settings-Tab"
        SettingsTab.Parent = SettingsIconBTN
        SettingsTab.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
        SettingsTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        SettingsTab.BorderSizePixel = 0
        SettingsTab.Position = UDim2.new(2.09041405, 0, -7.76484728, 0)
        SettingsTab.Size = UDim2.new(0, 636, 0, 335)
        SettingsTab.Visible = false
        
        UICorner_18.CornerRadius = UDim.new(0, 11)
        UICorner_18.Parent = SettingsTab
        
        FPSBG.Name = "FPS-BG"
        FPSBG.Parent = SettingsTab
        FPSBG.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
        FPSBG.BorderColor3 = Color3.fromRGB(0, 0, 0)
        FPSBG.BorderSizePixel = 0
        FPSBG.Position = UDim2.new(0.0203160271, 0, 0.0646836609, 0)
        FPSBG.Size = UDim2.new(0, 212, 0, 43)
        
        UICorner_19.Parent = FPSBG
        
        FPSTitle.Name = "FPSTitle"
        FPSTitle.Parent = FPSBG
        FPSTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        FPSTitle.BackgroundTransparency = 1.000
        FPSTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
        FPSTitle.BorderSizePixel = 0
        FPSTitle.Position = UDim2.new(0.0377358496, 0, 0.25, 0)
        FPSTitle.Size = UDim2.new(0, 200, 0, 21)
        FPSTitle.Font = Enum.Font.Gotham
        FPSTitle.Text = "FPS Unlocker"
        FPSTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        FPSTitle.TextSize = 14.000
        FPSTitle.TextXAlignment = Enum.TextXAlignment.Left
        
        ToggleFramePS.Name = "ToggleFramePS"
        ToggleFramePS.Parent = FPSBG
        ToggleFramePS.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ToggleFramePS.BackgroundTransparency = 1.000
        ToggleFramePS.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ToggleFramePS.BorderSizePixel = 0
        ToggleFramePS.Position = UDim2.new(-0.00091682293, 0, -0.0749067813, 0)
        ToggleFramePS.Size = UDim2.new(0, 207, 0, 44)
        
        FPSBTN.Name = "FPS-BTN"
        FPSBTN.Parent = ToggleFramePS
        FPSBTN.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
        FPSBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        FPSBTN.BorderSizePixel = 0
        FPSBTN.Position = UDim2.new(0.560386896, 0, 0.25, 0)
        FPSBTN.Size = UDim2.new(0, 85, 0, 27)
        FPSBTN.Font = Enum.Font.GothamMedium
        FPSBTN.Text = "Execute"
        FPSBTN.TextColor3 = Color3.fromRGB(255, 255, 255)
        FPSBTN.TextSize = 14.000
        
        UICorner_20.CornerRadius = UDim.new(0, 6)
        UICorner_20.Parent = FPSBTN
        
        ScriptHubDisplay.Name = "ScriptHub-Display"
        ScriptHubDisplay.Parent = Tabs
        ScriptHubDisplay.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
        ScriptHubDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ScriptHubDisplay.BorderSizePixel = 0
        ScriptHubDisplay.Position = UDim2.new(0.316355169, 0, 0.430437297, 0)
        ScriptHubDisplay.Size = UDim2.new(0, 34, 0, 33)
        
        UICorner_21.CornerRadius = UDim.new(0, 7)
        UICorner_21.Parent = ScriptHubDisplay
        
        ScriptHubIconBTN.Name = "ScriptHub-Icon-BTN"
        ScriptHubIconBTN.Parent = ScriptHubDisplay
        ScriptHubIconBTN.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ScriptHubIconBTN.BackgroundTransparency = 1.000
        ScriptHubIconBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ScriptHubIconBTN.BorderSizePixel = 0
        ScriptHubIconBTN.Position = UDim2.new(0.0882352963, 0, 0.121212125, 0)
        ScriptHubIconBTN.Size = UDim2.new(0, 27, 0, 25)
        ScriptHubIconBTN.Image = "rbxassetid://7733779730"
        ScriptHubIconBTN.ScaleType = Enum.ScaleType.Fit
        
        ScriptHubTab.Name = "ScriptHub-Tab"
        ScriptHubTab.Parent = ScriptHubIconBTN
        ScriptHubTab.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
        ScriptHubTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ScriptHubTab.BorderSizePixel = 0
        ScriptHubTab.Position = UDim2.new(2.03209662, 0, -6.00688314, 0)
        ScriptHubTab.Size = UDim2.new(0, 637, 0, 334)
        ScriptHubTab.Visible = false
        
        UICorner_22.CornerRadius = UDim.new(0, 11)
        UICorner_22.Parent = ScriptHubTab
        
        TitleScriptHub.Name = "TitleScriptHub"
        TitleScriptHub.Parent = ScriptHubTab
        TitleScriptHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TitleScriptHub.BackgroundTransparency = 1.000
        TitleScriptHub.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TitleScriptHub.BorderSizePixel = 0
        TitleScriptHub.Position = UDim2.new(0.0338600464, 0, 0.0522088371, 0)
        TitleScriptHub.Size = UDim2.new(0, 200, 0, 25)
        TitleScriptHub.Font = Enum.Font.Gotham
        TitleScriptHub.Text = "Script Hub"
        TitleScriptHub.TextColor3 = Color3.fromRGB(255, 255, 255)
        TitleScriptHub.TextSize = 21.000
        TitleScriptHub.TextXAlignment = Enum.TextXAlignment.Left
        
        ScrollingFrame_2.Parent = ScriptHubTab
        ScrollingFrame_2.Active = true
        ScrollingFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ScrollingFrame_2.BackgroundTransparency = 1.000
        ScrollingFrame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ScrollingFrame_2.BorderSizePixel = 0
        ScrollingFrame_2.Position = UDim2.new(0.020315988, 0, 0.128742516, 0)
        ScrollingFrame_2.Size = UDim2.new(0, 610, 0, 278)
        ScrollingFrame_2.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
        
        SpeedHubX.Name = "SpeedHubX"
        SpeedHubX.Parent = ScrollingFrame_2
        SpeedHubX.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SpeedHubX.BackgroundTransparency = 1.000
        SpeedHubX.BorderColor3 = Color3.fromRGB(0, 0, 0)
        SpeedHubX.BorderSizePixel = 0
        SpeedHubX.Position = UDim2.new(0.0125786951, 0, 0.0165827088, 0)
        SpeedHubX.Size = UDim2.new(0, 249, 0, 95)
        SpeedHubX.Image = "rbxassetid://16022917595"
        SpeedHubX.ScaleType = Enum.ScaleType.Crop
        
        UICorner_23.Parent = SpeedHubX
        
        ExecuteSPHX.Name = "ExecuteSPHX"
        ExecuteSPHX.Parent = SpeedHubX
        ExecuteSPHX.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        ExecuteSPHX.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ExecuteSPHX.BorderSizePixel = 0
        ExecuteSPHX.Position = UDim2.new(0.662563682, 0, 0.655263066, 0)
        ExecuteSPHX.Size = UDim2.new(0, 74, 0, 24)
        ExecuteSPHX.Font = Enum.Font.GothamMedium
        ExecuteSPHX.Text = "Execute"
        ExecuteSPHX.TextColor3 = Color3.fromRGB(255, 255, 255)
        ExecuteSPHX.TextSize = 14.000
        
        UICorner_24.Parent = ExecuteSPHX
        
        IY.Name = "IY"
        IY.Parent = ScrollingFrame_2
        IY.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        IY.BackgroundTransparency = 1.000
        IY.BorderColor3 = Color3.fromRGB(0, 0, 0)
        IY.BorderSizePixel = 0
        IY.Position = UDim2.new(0.453919649, 0, 0.0143089565, 0)
        IY.Size = UDim2.new(0, 253, 0, 96)
        IY.Image = "http://www.roblox.com/asset/?id=15914349618"
        IY.ScaleType = Enum.ScaleType.Crop
        
        UICorner_25.Parent = IY
        
        ExecuteIY.Name = "ExecuteIY"
        ExecuteIY.Parent = IY
        ExecuteIY.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        ExecuteIY.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ExecuteIY.BorderSizePixel = 0
        ExecuteIY.Position = UDim2.new(0.641213655, 0, 0.665570259, 0)
        ExecuteIY.Size = UDim2.new(0, 74, 0, 24)
        ExecuteIY.Font = Enum.Font.GothamMedium
        ExecuteIY.Text = "Execute"
        ExecuteIY.TextColor3 = Color3.fromRGB(255, 255, 255)
        ExecuteIY.TextSize = 14.000
        
        UICorner_26.Parent = ExecuteIY
        
        ZekromHubX.Name = "ZekromHubX"
        ZekromHubX.Parent = ScrollingFrame_2
        ZekromHubX.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ZekromHubX.BackgroundTransparency = 1.000
        ZekromHubX.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ZekromHubX.BorderSizePixel = 0
        ZekromHubX.Position = UDim2.new(0.0131147541, 0, 0.184533641, 0)
        ZekromHubX.Size = UDim2.new(0, 249, 0, 95)
        ZekromHubX.Image = "rbxassetid://16172861652"
        ZekromHubX.ScaleType = Enum.ScaleType.Crop
        
        UICorner_27.Parent = ZekromHubX
        
        ExecuteZekroV2.Name = "ExecuteZekroV2"
        ExecuteZekroV2.Parent = ZekromHubX
        ExecuteZekroV2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        ExecuteZekroV2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ExecuteZekroV2.BorderSizePixel = 0
        ExecuteZekroV2.Position = UDim2.new(0.74983722, 0, 0.705081701, 0)
        ExecuteZekroV2.Size = UDim2.new(0, 74, 0, 24)
        ExecuteZekroV2.Font = Enum.Font.GothamMedium
        ExecuteZekroV2.Text = "Execute"
        ExecuteZekroV2.TextColor3 = Color3.fromRGB(255, 255, 255)
        ExecuteZekroV2.TextSize = 14.000
        
        UICorner_28.Parent = ExecuteZekroV2
        
        -- Scripts:
        
        local function NYXY_fake_script() -- Open.LocalScript 
            local script = Instance.new('LocalScript', Open)
        
            local darkbg = script.Parent.Parent["Dark-BG"]
            local tabs = script.Parent.Parent["Dark-BG"].Tabs
            local opengui = script.Parent
            
            script.Parent.MouseButton1Click:Connect(function()
                darkbg.Visible = true
                tabs.Visible = true
                opengui.Visible = false
            end)
        end
        coroutine.wrap(NYXY_fake_script)()
        local function NJUGXP_fake_script() -- UserAvatar.LocalScript 
            local script = Instance.new('LocalScript', UserAvatar)
        
            local image = script.Parent
            image.Image = game.Players:GetUserThumbnailAsync(game.Players.LocalPlayer.UserId,Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
        end
        coroutine.wrap(NJUGXP_fake_script)()
        local function WLCZZ_fake_script() -- UserName.LocalScript 
            local script = Instance.new('LocalScript', UserName)
        
            local user = game.Players.LocalPlayer.Name
            local usertxt = script.Parent
            
            usertxt.Text = "Welcome, "..user
        end
        coroutine.wrap(WLCZZ_fake_script)()
        local function FWLSH_fake_script() -- CloseBTN.LocalScript 
            local script = Instance.new('LocalScript', CloseBTN)
        
            local darkbg = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent["Dark-BG"]
            local tabs = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Tabs
            local opengui = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Open
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                darkbg.Visible = false
                tabs.Visible = false
                opengui.Visible = true
            end)
        end
        coroutine.wrap(FWLSH_fake_script)()
        local function QTGVAJ_fake_script() -- HomeIconBTN.LocalScript 
            local script = Instance.new('LocalScript', HomeIconBTN)
        
            local home = script.Parent["Home-Tab"]
            local code = script.Parent.Parent.Parent["Code-Display"]["Code-Icon-BTN"]["Code-Tab"]
            local scriptstab = script.Parent.Parent.Parent["ScriptHub-Display"]["ScriptHub-Icon-BTN"]["ScriptHub-Tab"]
            local stngs = script.Parent.Parent.Parent["Settings-Display"]["Settings-Icon-BTN"]["Settings-Tab"]
            
            script.Parent.MouseButton1Click:Connect(function()
                 home.Visible = true
                 code.Visible = false
                 scriptstab.Visible = false
                 stngs.Visible = false
            end)
        end
        coroutine.wrap(QTGVAJ_fake_script)()
        local function PWGNM_fake_script() -- ClearBTN.LocalScript 
            local script = Instance.new('LocalScript', ClearBTN)
        
            local textbox = script.Parent.Parent.Parent.Display.ScrollingFrame.TextBox
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                textbox.Text = ""
                -- notification
            
                local Bindable = Instance.new("BindableFunction")
                Bindable.OnInvoke = Callback
            
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Cubix | Android";
                    Text = "Cleared the script.";
                    Duration = "10";
                    Button1 = "Close Notification";
                    Callback = Bindable
                })
            end)
            
            function Callback(answer)
            end
        end
        coroutine.wrap(PWGNM_fake_script)()
        local function KLUYQN_fake_script() -- CopyBTN.LocalScript 
            local script = Instance.new('LocalScript', CopyBTN)
        
            local txt = script.Parent.Parent.Parent.Display.ScrollingFrame.TextBox
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                setclipboard(txt.Text)
                -- notification
            
                local Bindable = Instance.new("BindableFunction")
                Bindable.OnInvoke = Callback
            
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Cubix | Android";
                    Text = "Copied the script.";
                    Duration = "10";
                    Button1 = "Close Notification";
                    Callback = Bindable
                })
            end)
            
            function Callback(answer)
            end
            
        end
        coroutine.wrap(KLUYQN_fake_script)()
        local function HCRL_fake_script() -- PasteBTN.LocalScript 
            local script = Instance.new('LocalScript', PasteBTN)
        
            local txt = script.Parent.Parent.Parent.Display.ScrollingFrame.TextBox
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                txt.Text = getclipboard()
                
            -- notification
            
                local Bindable = Instance.new("BindableFunction")
                Bindable.OnInvoke = Callback
            
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Cubix | Android";
                    Text = "Pasted the script.";
                    Duration = "10";
                    Button1 = "Close Notification";
                    Callback = Bindable
                })
            end)
            
            function Callback(answer)
            end
        end
        coroutine.wrap(HCRL_fake_script)()
        local function ZTADS_fake_script() -- ExecBTN.LocalScript 
            local script = Instance.new('LocalScript', ExecBTN)
        
            local txtbox = script.Parent.Parent.Parent.Display.ScrollingFrame.TextBox
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
            local executecode = executecode and clonefunction(executecode) or function(v)
                task.spawn(loadstring(v));
            
            executecode(txtbox.Text)
            end
            -- notification
            
            local Bindable = Instance.new("BindableFunction")
            Bindable.OnInvoke = Callback
            
            game.StarterGui:SetCore("SendNotification", {
                Title = "Cubix | Android";
                Text = "Executed the script.";
                Duration = "10";
                Button1 = "Close Notification";
                Callback = Bindable
            })
            end)
            
            function Callback(answer)
            end
            
            
            
        end
        coroutine.wrap(ZTADS_fake_script)()
        local function DWBJVHF_fake_script() -- CodeIconBTN.LocalScript 
            local script = Instance.new('LocalScript', CodeIconBTN)
        
            local home = script.Parent.Parent.Parent["Home-Display"]["Home-Icon-BTN"]["Home-Tab"]
            local code = script.Parent["Code-Tab"]
            local scriptstab = script.Parent.Parent.Parent["ScriptHub-Display"]["ScriptHub-Icon-BTN"]["ScriptHub-Tab"]
            local stngs = script.Parent.Parent.Parent["Settings-Display"]["Settings-Icon-BTN"]["Settings-Tab"]
            
            script.Parent.MouseButton1Click:Connect(function()
                home.Visible = false
                code.Visible = true
                scriptstab.Visible = false
                stngs.Visible = false
            end)
        end
        coroutine.wrap(DWBJVHF_fake_script)()
        local function MLWQPR_fake_script() -- SettingsIconBTN.LocalScript 
            local script = Instance.new('LocalScript', SettingsIconBTN)
        
            local home = script.Parent.Parent.Parent["Home-Display"]["Home-Icon-BTN"]["Home-Tab"]
            local code = script.Parent.Parent.Parent["Code-Display"]["Code-Icon-BTN"]["Code-Tab"]
            local scriptstab = script.Parent.Parent.Parent["ScriptHub-Display"]["ScriptHub-Icon-BTN"]["ScriptHub-Tab"]
            local stngs = script.Parent["Settings-Tab"]
            
            script.Parent.MouseButton1Click:Connect(function()
                 home.Visible = false
                 code.Visible = false
                 scriptstab.Visible = false
                 stngs.Visible = true
            end)
        end
        coroutine.wrap(MLWQPR_fake_script)()
        local function TMHVQCE_fake_script() -- FPSBTN.LocalScript 
            local script = Instance.new('LocalScript', FPSBTN)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                setfpscap(960)
                -- notification
            
                local Bindable = Instance.new("BindableFunction")
                Bindable.OnInvoke = Callback
            
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Cubix | Android";
                    Text = "FPS is now 960!.";
                    Duration = "10";
                    Button1 = "Close Notification";
                    Callback = Bindable
                })
            end)
            
            function Callback(answer)
            end
            
        end
        coroutine.wrap(TMHVQCE_fake_script)()
        local function NYKPDQQ_fake_script() -- Tabs.LocalScript 
            local script = Instance.new('LocalScript', Tabs)
        
            function identifyexecutor()
                return "CubiX V1.2"
            end
        end
        coroutine.wrap(NYKPDQQ_fake_script)()
        local function LAZOJ_fake_script() -- ExecuteSPHX.LocalScript 
            local script = Instance.new('LocalScript', ExecuteSPHX)
        
            local GetScriptIY = script.Parent
            
            GetScriptIY.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/ahmadsgamer2/Speed-Hub-X/main/SpeedHubX"))()
            end)
        end
        coroutine.wrap(LAZOJ_fake_script)()
        local function CRQZX_fake_script() -- ExecuteIY.LocalScript 
            local script = Instance.new('LocalScript', ExecuteIY)
        
            local GetScriptIY = script.Parent
            
            GetScriptIY.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", true))()
            end)
        end
        coroutine.wrap(CRQZX_fake_script)()
        local function ZIJP_fake_script() -- ExecuteZekroV2.LocalScript 
            local script = Instance.new('LocalScript', ExecuteZekroV2)
        
            local GetScriptIY = script.Parent.Parent
            
            GetScriptIY.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/ahmadsgamer2/Zekrom-Hub-X/main/Zekrom-Hub-X-exe", true))()
            end)
        end
        coroutine.wrap(ZIJP_fake_script)()
        local function WCPDKI_fake_script() -- ScriptHubIconBTN.LocalScript 
            local script = Instance.new('LocalScript', ScriptHubIconBTN)
        
            local home = script.Parent.Parent.Parent["Home-Display"]["Home-Icon-BTN"]["Home-Tab"]
            local code = script.Parent.Parent.Parent["Code-Display"]["Code-Icon-BTN"]["Code-Tab"]
            local scriptshub = script.Parent["ScriptHub-Tab"]
            local stngs = script.Parent.Parent.Parent["Settings-Display"]["Settings-Icon-BTN"]["Settings-Tab"]
            
            script.Parent.MouseButton1Click:Connect(function()
                home.Visible = false
                code.Visible = false
                scriptshub.Visible = true
                stngs.Visible = false
            end)
        end
        coroutine.wrap(WCPDKI_fake_script)()
        
  	end
})
Tab:AddButton({
	Name = "Evon Android",
	Callback = function()

        local Developer_Player = "271635429"
        local test_ModeAhax = false;
        
        local KeySystem_Domain = "https://pandadevelopment.net"
        
        -- Evon Basic Configurations
        local ConfigURL = "https://raw.githubusercontent.com/SkieAdmin/EvonAndroidGUI/main/EvonConfig.json"
        
        local http_service = cloneref(game:GetService("HttpService"))
        local EvonConfiguration = http_service:JSONDecode(game:HttpGet(ConfigURL))
        
        if test_ModeAhax == true then
            print("********************************************************************************")
            warn("**** Evon Android Undergoes Maintenance, It will be back in a few minutes **** ")
            print("********************************************************************************")
        else
        --// Instances
        local function EvonNotification(messages)
            game.StarterGui:SetCore("SendNotification", {
                Title = "Evon Android"; -- the title (ofc)
                Text = messages; -- what the text says (ofc)
                Icon = "rbxassetid://15509574978"; -- the image if u want. 
                Duration = 5; -- how long the notification should in secounds
            })
        end
        
        -- Get Evon's Version
        warn("----------------------------------------------------------")
        print("Client Version: ".. arceus.getversion())
        print("Server Version: ".. EvonConfiguration.Version)
        print("Forced Update: ".. tostring(EvonConfiguration.Forced_Update))
        warn("----------------------------------------------------------")
        
        -- Check if the Evon GUI is on Latest Version
        if arceus.getversion() ~= EvonConfiguration.Version then
            warn('Outdated Version, Game Kicked')
            game.Players.LocalPlayer:Kick("A New Version of Evon has been Detected, Please Download Latest Version") 
        else
            print('Evon Client is Up to Date.... All Good')
        end
        
        
        local function EvonDebug(text)
            if tostring(game:GetService("Players").LocalPlayer.UserId) == Developer_Player then
                print("[ Developer ] - ".. text)
            end
        end
        
        
        
        local function EvonCheckKey(ClientKey)
            ------------------------------ Check Key -----------------------------------------
            local evonID = "evon"
            local PandaAuth = loadstring(game:HttpGet('https://raw.githubusercontent.com/Panda-Repositories/PandaKS_Libraries/main/library/LuaLib/ROBLOX/PandaBetaLib.lua'))()
            if ClientKey == "skie" then
                if tostring(game:GetService("Players").LocalPlayer.UserId) == Developer_Player then
                    return true
                end
                return false
            elseif EvonConfiguration.Keyless then
                EvonNotification("Key System Disabled...")
                return true
            elseif PandaAuth:ValidateKey(evonID, ClientKey) then
                print('Authorized Complete')
                return true
            else
                warn('Failed to Authorized...')
                return false
            end
                ------------------------------ Check Key -----------------------------------------
        end
        function Load_CustomFunctions()
            print("Custom Features successfully loaded...")
        
        
            getgenv().PandaAuthenticate = function(ServiceID, Client_Key)
                local PandaAuth = loadstring(game:HttpGet('https://raw.githubusercontent.com/Panda-Repositories/PandaKS_Libraries/main/library/LuaLib/ROBLOX/PandaBetaLib.lua'))()
                -- Built In Panda Authenticate ( Hub utilized Panda-Pelican Development )
                if PandaAuth:ValidateKey(ServiceID, Client_Key) then
                    return true
                else
                    return false
                end  
            end
        end
        --[[ Settings ]]--
        
        local maxLines = 250;
        
        --[[ Variables ]]--
        
        local httpService = game:GetService("HttpService");
        local teleportService = game:GetService("TeleportService");
        local textService = game:GetService("TextService");
        local tweenService = game:GetService("TweenService");
        local userInputService = game:GetService("UserInputService");
        
        local localPlayer = game:GetService("Players").LocalPlayer;
        
        local hugeVector2 = Vector2.new(math.huge, math.huge);
        
        local rScriptsApiKey = "0";
        
        local env = getgenv();
        local isFirstTimeExecution = true;
        
        local _newcclosure = clonefunction(newcclosure);
        
        local _setfpscap = clonefunction(setfpscap);
        local _getfpsmax = clonefunction(getfpsmax or _newcclosure(function()
            return 60;
        end));
        
        local _getconnections = clonefunction(getconnections);
        local _getcustomasset = clonefunction(getcustomasset or getsynasset);
        
        local _isfile = clonefunction(isfile);
        local _readfile = clonefunction(readfile);
        local _writefile = clonefunction(writefile);
        local _delfile = clonefunction(delfile);
        local _listfiles = clonefunction(listfiles);
        
        local _isfolder = clonefunction(isfolder);
        local _makefolder = clonefunction(makefolder);
        
        local _getclipboard = clonefunction(getclipboard or _newcclosure(function()
            return "";
        end));
        local _setclipboard = clonefunction(setclipboard);
        
        local _request = clonefunction(request);
        local _base64decode = clonefunction(crypt.base64.decode);
        
        local urlEncode = clonefunction(httpService.UrlEncode);
        local jsonEncode = clonefunction(httpService.JSONEncode);
        local jsonDecode = clonefunction(httpService.JSONDecode);
        
        local _gethui = clonefunction(gethui or _newcclosure(function()
            return game:GetService("CoreGui");
        end));
        
        local validSearchFunctions = { 
            ScriptBlox = "rbxassetid://13107640311",
            RScripts = "rbxassetid://13107640500"
        };
        
        local serverHopModes = { "full", "empty", "bestPing", "random" };
        
        local resizeFunctions, languageItems, languageDatabase = {}, {}, {
            English = {
                flag = "rbxassetid://13084648602",
                indicator = "English",
                order = 1,
                phrases = {
                    FreeLogin = "Free Login",
                    AdlessLogin = "Adless Login",
                    EnterKey = "Enter Key",
                    CopyKeyLink = "Copy Key Link",
                    ["Key..."] = "Key...",
                    SubmitCredentials = "Submit Credentials",
                    ["User..."] = "Username...",
                    ["Password..."] = "Password...",
                    Editor = "Editor",
                    Execute = "Execute",
                    Clear = "Clear",
                    Clipboard = "Clipboard",
                    CopyScript = "Copy Script",
                    LoadScript = "Load Script",
                    ["Search..."] = "Search...",
                    Search = "Search",
                    ClearConsole = "Clear Console",
                    CopyConsole = "Copy Console",
                    UnlockFPS = "Unlock FPS",
                    VSync = "V-Sync",
                    FPS = "FPS",
                    AntiAFK = "Anti AFK",
                    Full = "Full",
                    Empty = "Empty",
                    BestPing = "Best Ping",
                    Random = "Random",
                    ServerHop = "Server Hop",
                    RejoinServer = "Rejoin Server"
                }
            },
            Turkish = {
                flag = "rbxassetid://13084681224",
                indicator = "Türkçe",
                order = 2,
                phrases = {
                    FreeLogin = "Ücretsiz Giriş",
                    AdlessLogin = "Reklamsız Giriş",
                    EnterKey = "Anahtarı Gir",
                    CopyKeyLink = "Anahtar Linkini Kopyala",
                    ["Key..."] = "Anahtar...",
                    SubmitCredentials = "Giriş Yap",
                    ["User..."] = "İsim...",
                    ["Password..."] = "Şifre...",
                    Editor = "Düzenleyici",
                    Execute = "Yürüt",
                    Clear = "Temizle",
                    Clipboard = "Pano",
                    CopyScript = "Panoya Kopyala",
                    LoadScript = "Panodan Yükle",
                    ["Search..."] = "Arat...",
                    Search = "Arama",
                    ClearConsole = "Konsolu Temizle",
                    CopyConsole = "Konsolu Kopyala",
                    UnlockFPS = "FPS Kilidini Aç",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            Spanish = {
                flag = "rbxassetid://13084681842",
                indicator = "Español",
                order = 4,
                phrases = {
                    FreeLogin = "Iniciar sesion gratis",
                    AdlessLogin = "Iniciar sesion sin anuncios",
                    EnterKey = "Ingresar Key",
                    CopyKeyLink = "Copiar enlace de la Key",
                    ["Key..."] = "Key...",
                    SubmitCredentials = "Enviar Credenciales",
                    ["User..."] = "Usuario...",
                    ["Password..."] = "Contraseña...",
                    Editor = "Editor",
                    Execute = "Executar",
                    Clear = "Limpiar",
                    Clipboard = "Portapapeles",
                    CopyScript = "Copiar Script",
                    LoadScript = "Cargar Script",
                    ["Search..."] = "Buscar...",
                    Search = "Buscar",
                    ClearConsole = "Limpiar Consola",
                    CopyConsole = "Copiar Consola",
                    UnlockFPS = "Unlocar FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            Latvian = {
                flag = "rbxassetid://13084681629",
                indicator = "Latviski",
                order = 5,
                phrases = {
                    FreeLogin = "Bezmaksas pieeja",
                    AdlessLogin = "Bez-reklāmu pieeja",
                    EnterKey = "Ievadi atslēgu",
                    CopyKeyLink = "Kopēt atslēgas saiti",
                    ["Key..."] = "Atslēga...",
                    SubmitCredentials = "Apstiprināt akreditācijas datus",
                    ["User..."] = "Lietotājs...",
                    ["Password..."] = "Parole...",
                    Editor = "Redaktors",
                    Execute = "Izpildīt",
                    Clear = "Iztīrīt",
                    Clipboard = "Kopējumi",
                    CopyScript = "Kopēt skriptu",
                    LoadScript = "Ielādēt skriptu",
                    ["Search..."] = "Meklēt...",
                    Search = "Meklēt",
                    ClearConsole = "Iztīrīt konsoli",
                    CopyConsole = "Kopēt konsoli",
                    UnlockFPS = "Atbloķējiet FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            Dutch = {
                flag = "rbxassetid://15984949262",
                indicator = "Nederlands",
                order = 6,
                phrases = {
                    FreeLogin = "Gratis Login",
                    AdlessLogin = "ReclameVrij Login",
                    EnterKey = "Toegangs Sleutel",
                    CopyKeyLink = "Kopieer Sleutel Link",
                    ["Key..."] = "Sleutel...",
                    SubmitCredentials = "Verzend Gegevens",
                    ["User..."] = "Gebruiker...",
                    ["Password..."] = "Wachtwoord...",
                    Editor = "Editor",
                    Execute = "Uitvoeren",
                    Clear = "Clear",
                    Clipboard = "Klembord",
                    CopyScript = "Kopieer Script ",
                    LoadScript = "Laad Script",
                    ["Search..."] = "Zoeken...",
                    Search = "Zoeken",
                    ClearConsole = "Clear Console",
                    CopyConsole = "Kopieer Console",
                    UnlockFPS = "Ontgrendelen FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            Filipino = {
                flag = "rbxassetid://15984949030",
                indicator = "Filipino",
                order = 7,
                phrases = {
                    FreeLogin = "Libreng Login",
                    AdlessLogin = "Ad-Free Login",
                    EnterKey = "Ilagay ang susi",
                    CopyKeyLink = "Kopyahin ang Susi Link",
                    ["Key..."] = "Susi...",
                    SubmitCredentials = "Ipasa ang Kredensyals",
                    ["User..."] = "User",
                    ["Password..."] = "Password",
                    Editor = "Editor",
                    Execute = "Execute",
                    Clear = "Clear",
                    Clipboard = "Clipboard",
                    CopyScript = "Kopyahin ang script",
                    LoadScript = "I-Load ang script",
                    ["Search..."] = "Maghanap...",
                    Search = "Maghanap",
                    ClearConsole = "ClearConsole",
                    CopyConsole = "CopyConsole",
                    UnlockFPS = "",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            German = {
                flag = "rbxassetid://15984949736",
                indicator = "Deustch",
                order = 8,
                phrases = {
                    FreeLogin = "Kostenloser Login",
                    AdlessLogin = "Adless Login",
                    EnterKey = "Key checken",
                    CopyKeyLink = "Link kopieren",
                    ["Key..."] = "Schlüssel",
                    SubmitCredentials = "Einloggen",
                    ["User..."] = "Nutzername",
                    ["Password..."] = "Passwort",
                    Editor = "Editor",
                    Execute = "Ausführen",
                    Clear = "Löschen",
                    Clipboard = "",
                    CopyScript = "Skript Kopieren",
                    LoadScript = "Skript Laden",
                    ["Search..."] = "Suchen...",
                    Search = "Suchen",
                    ClearConsole = "Konsole löschen",
                    CopyConsole = "Konsole kopieren",
                    UnlockFPS = "Freischalten FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            Romanian = {
                flag = "rbxassetid://15984948805",
                indicator = "Română",
                order = 9,
                phrases = {
                    FreeLogin = "Logare Gratis",
                    AdlessLogin = "Logare fara reclame",
                    EnterKey = "Introduce cheie",
                    CopyKeyLink = "Copie adresa pentru cheie",
                    ["Key..."] = "Cheie...",
                    SubmitCredentials = "Introduce-ti datele",
                    ["User..."] = "Utilizator...",
                    ["Password..."] = "Parola...",
                    Editor = "Editor",
                    Execute = "Executa",
                    Clear = "Goleste",
                    Clipboard = "Clipboard",
                    CopyScript = "Copiaza Script",
                    LoadScript = "Incarca Script",
                    ["Search..."] = "Cauta...",
                    Search = "Cauta",
                    ClearConsole = "Goleste Consola",
                    CopyConsole = "Copiaza din Consola",
                    UnlockFPS = "Deblocați FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            Russian = {
                flag = "rbxassetid://15984948564",
                indicator = "Русский",
                order = 10,
                phrases = {
                    FreeLogin = "Бесплатный логин",
                    AdlessLogin = "Логин с рекламой ",
                    EnterKey = "Ввести ключ ",
                    CopyKeyLink = "Скопировать ссылку на ключ",
                    ["Key..."] = "Ключ...",
                    SubmitCredentials = "Подтвердить реквизиты для входа",
                    ["User..."] = "Юзер...",
                    ["Password..."] = "Пароль...",
                    Editor = "Эдитор",
                    Execute = "Запустить",
                    Clear = "Очистить",
                    Clipboard = "Буфер Обмена",
                    CopyScript = "Скопировать скрипт",
                    LoadScript = "Загрузить скрипт",
                    ["Search..."] = "Искать...",
                    Search = "Искать",
                    ClearConsole = "Очистить консоль",
                    CopyConsole = "Скопировать консоль",
                    UnlockFPS = "Разблокировать FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            },
            French = {
                flag = "rbxassetid://15984949489",
                indicator = "Français",
                order = 11,
                phrases = {
                    FreeLogin = "Connexion gratuite",
                    AdlessLogin = "Connexion AdLess",
                    EnterKey = "Confirmer la clé",
                    CopyKeyLink = "Copier le lien de la clé",
                    ["Key..."] = "Clé...",
                    SubmitCredentials = "Se connecter",
                    ["User..."] = "Nom d'utilisateur...",
                    ["Password..."] = "Mot de passe...",
                    Editor = "Éditeur",
                    Execute = "Exécuter",
                    Clear = "Effacer",
                    Clipboard = "Presse-papier",
                    CopyScript = "Copier le script",
                    LoadScript = "Charger le script",
                    ["Search..."] = "Rechercher...",
                    Search = "Chercher",
                    ClearConsole = "Effacer la console",
                    CopyConsole = "Copier la console",
                    UnlockFPS = "Déverrouiller les FPS",
                    VSync = "Synchronisation verticale",
                    FPS = "FPS",
                    AntiAFK = "Anti-AFK",
                    Full = "Rempli",
                    Empty = "Vide",
                    BestPing = "Meilleur ping",
                    Random = "Au hasard",
                    ServerHop = "Changer de serveur",
                    RejoinServer = "Rejoindre le serveur"
                }
            },
            Arabic = {
                flag = "rbxassetid://15984948296",
                indicator = "عربي",
                order = 12,
                phrases = {
                    FreeLogin = "المجاني الدخول تسجيل",
                    AdlessLogin = "إعلانات بلا دخول تسجيل",
                    EnterKey = "المفتاح أدخل",
                    CopyKeyLink = "المفتاح رابط نسخ",
                    ["Key..."] = "المفتاح",
                    SubmitCredentials = "الاعتماد بيانات إرسال",
                    ["User..."] = "المستخدم",
                    ["Password..."] = "المرور كلمة",
                    Editor = "المحرر",
                    Execute = "تنفيذ",
                    Clear = "إخلاء",
                    Clipboard = "الحافظة",
                    CopyScript = "النصي البرنامج نسخ",
                    LoadScript = "النصي البرنامج حمل",
                    ["Search..."] = "بحث",
                    Search = "بحث",
                    ClearConsole = "التحكم وحدة إخلاء",
                    CopyConsole = "التحكم وحدة نسخ",
                    UnlockFPS = "افتح FPS",
                    VSync = "",
                    FPS = "",
                    AntiAFK = "",
                    Full = "",
                    Empty = "",
                    BestPing = "",
                    Random = "",
                    ServerHop = "",
                    RejoinServer = ""
                }
            }
        };
        
        local sortedLanguageDatabase = {};
        for i, v in next, languageDatabase do
            sortedLanguageDatabase[v.order] = {
                key = i,
                value = v
            };
        end
        
        --[[ Settings ]]--
        
        local uiSettings = {
            key = "",
            userName = "",
            editorInit = "print(\"Evon-Android >>>\");",
            searchAPI = "ScriptBlox",
            language = "English",
            unlockFps = false,
            vSync = false,
            fps = 60,
            antiAfk = false,
            serverHopMode = "full"
        };
        
        if _isfolder("evonui") == false then
            _makefolder("evonui");
        end
        if _isfile("evonui/settings.json") then
            isFirstTimeExecution = false;
            local succ, res = pcall(jsonDecode, httpService, _readfile("evonui/settings.json"));
            if succ then
                for i, v in next, uiSettings do
                    if res[i] ~= nil and type(res[i]) == type(v) then
                        uiSettings[i] = res[i];
                    end
                end
            end
            if languageDatabase[uiSettings.language] == nil then
                uiSettings.language = "English";
            end
            if validSearchFunctions[uiSettings.searchAPI] == nil then
                uiSettings.searchAPI = "ScriptBlox";
            end
            if table.find(serverHopModes, uiSettings.serverHopMode) == nil then
                uiSettings.serverHopMode = serverHopModes[1];
            end
        end
        
        --[[ Functions ]]--
        
        local function create(className, properties, children)
            local inst = Instance.new(className);
            for i, v in next, properties do
                if i == "LanguageItem" then
                    languageItems[inst] = v;
                    print(v.identifier);
                    inst[v.property] = languageDatabase[uiSettings.language].phrases[v.identifier];
                elseif i ~= "Parent" then
                    inst[i] = v;
                end
            end
            if children then
                for i, v in next, children do
                    v.Parent = inst;
                end
            end
            inst.Parent = properties.Parent;
            return inst;
        end
        
        local function tween(obj, dur, props, ...)
            local t = tweenService:Create(obj, TweenInfo.new(dur, ...), props);
            t:Play();
            return t;
        end
        
        local function addTransparencyHighlights(btn)
            btn.MouseButton1Down:Connect(function()
                tween(btn, 0.18, {
                    BackgroundTransparency = 0
                });
            end);
            btn.MouseButton1Up:Connect(function()
                tween(btn, 0.18, {
                    BackgroundTransparency = 1
                });
            end);
        end
        
        local function addColourHighlights(btn, col)
            local original = btn.BackgroundColor3;
            btn.MouseButton1Down:Connect(function()
                tween(btn, 0.18, {
                    BackgroundColor3 = col
                });
            end);
            btn.MouseButton1Up:Connect(function()
                tween(btn, 0.18, {
                    BackgroundColor3 = original
                });
            end);
        end
        
        local function removeTrace(str)
            local x = env[str];
            -- env[str] = nil;
            return x;
        end
        
        local function changeLanguage(lang)
            local language = languageDatabase[lang] or languageDatabase.English;
            uiSettings.language = language == languageDatabase.English and "English" or lang;
            for i, v in next, languageItems do
                local phrase = language.phrases[v.identifier];
                i[v.property] = phrase ~= "" and phrase or languageDatabase.English.phrases[v.identifier];
            end
            task.defer(function() -- To give the TextBounds property a chance to update, it's not as immediate as you might think
                for i = 1, #resizeFunctions do
                    resizeFunctions[i]();
                end
            end);
        end
        
        local function updateSettings(key, value)
            uiSettings[key] = value;
            if key == "language" then
                changeLanguage(value);
            end
            pcall(_writefile, "evonui/settings.json", jsonEncode(httpService, uiSettings));
        end
        
        --[[ Create UI ]]--
        
        local gui = create("ScreenGui", { 
            DisplayOrder = 11, 
            IgnoreGuiInset = true, 
            Name = "androidCheat", 
            Parent = _gethui(), 
            ResetOnSpawn = false
        });
        
        local function loadKeyUI(callback)
            --local libVersion = "v2"
            --local libType = "roblox"
            --nlocal serviceID = "evon"
        
            -- local pandaAuth = loadstring(game:HttpGet(string.format("https://pandadevelopment.net/servicelib?service=%s&core=%s&param=%s", serviceID, libType, libVersion)))()
        
            local keyFrame = create("Frame", { 
                AnchorPoint = Vector2.new(0.5, 0), 
                BackgroundColor3 = Color3.fromHex("ffffff"), 
                BorderSizePixel = 0, 
                Name = "keyFrame", 
                Parent = gui, 
                Position = UDim2.new(0.5, 0, 0, 25), 
                Size = UDim2.new(1, -110, 0, 94)
            }, {
                create("UIGradient", { 
                    Color = ColorSequence.new({ 
                        ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")), 
                        ColorSequenceKeypoint.new(1, Color3.fromHex("242424"))
                    }), 
                    Name = "gradient", 
                    Rotation = 78
                }),
                create("UICorner", { 
                    CornerRadius = UDim.new(0, 4), 
                    Name = "corner"
                }),
                create("TextButton", { 
                    AutoButtonColor = false, 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                    FontSize = Enum.FontSize.Size14, 
                    Name = "clickThroughBlocker", 
                    Size = UDim2.new(1, 0, 1, 0), 
                    Text = "", 
                    TextColor3 = Color3.fromHex("000000"), 
                    TextSize = 14, 
                    ZIndex = 0
                }),
                create("ImageLabel", { 
                    AnchorPoint = Vector2.new(0.5, 0.5), 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    Image = "rbxassetid://12874061329", 
                    ImageColor3 = Color3.fromHex("000000"), 
                    Name = "blur", 
                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                    ScaleType = Enum.ScaleType.Slice, 
                    Size = UDim2.new(1, 10, 1, 10), 
                    SliceCenter = Rect.new(10, 10, 118, 118), 
                    ZIndex = 0
                }),
                create("UIStroke", { 
                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                    Color = Color3.fromHex("141414"), 
                    Name = "stroke", 
                    Thickness = 0.8
                }),
                create("UISizeConstraint", { 
                    MaxSize = Vector2.new(800, 94), 
                    Name = "constraint"
                }),
                create("Frame", { 
                    AnchorPoint = Vector2.new(0.5, 0.5), 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    Name = "content", 
                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                    Size = UDim2.new(1, 0, 1, 0)
                }, {
                    create("UIListLayout", { 
                        FillDirection = Enum.FillDirection.Horizontal, 
                        Name = "list", 
                        Padding = UDim.new(0, 8), 
                        SortOrder = Enum.SortOrder.LayoutOrder
                    }),
                    create("UIPadding", { 
                        Name = "padding", 
                        PaddingBottom = UDim.new(0, 8), 
                        PaddingLeft = UDim.new(0, 8), 
                        PaddingRight = UDim.new(0, 8), 
                        PaddingTop = UDim.new(0, 8)
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(0, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "buttons", 
                        Position = UDim2.new(0, 8, 0.5, 0), 
                        Size = UDim2.new(0, 124, 1, 0)
                    }, {
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 0), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size11, 
                            Name = "freemium", 
                            Position = UDim2.new(0.5, 0, 0, 0), 
                            Size = UDim2.new(1, 0, 0, 34), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 11
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            }),
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(1, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://13048298432", 
                                Name = "icon", 
                                Position = UDim2.new(1, -7, 0.5, 0), 
                                Size = UDim2.new(0, 20, 0, 20)
                            }),
                            create("TextLabel", { 
                                LanguageItem = {
                                    property = "Text",
                                    identifier = "FreeLogin"
                                },
                                AnchorPoint = Vector2.new(0, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "title", 
                                Position = UDim2.new(0, 8, 0.5, 0), 
                                Size = UDim2.new(1, -43, 1, 0), 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 13, 
                                TextXAlignment = Enum.TextXAlignment.Left
                            })
                        }),
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 1), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size11, 
                            Name = "premium", 
                            Position = UDim2.new(0.5, 0, 1, 0), 
                            Size = UDim2.new(1, 0, 0, 34), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 11,
                            Visible = false
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            }),
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(1, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://13048298207", 
                                Name = "icon", 
                                Position = UDim2.new(1, -7, 0.5, 0), 
                                Size = UDim2.new(0, 20, 0, 20)
                            }),
                            create("TextLabel", { 
                                LanguageItem = {
                                    property = "Text",
                                    identifier = "AdlessLogin"
                                },
                                AnchorPoint = Vector2.new(0, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "title", 
                                Position = UDim2.new(0, 8, 0.5, 0), 
                                Size = UDim2.new(1, -43, 1, 0), 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 13, 
                                TextXAlignment = Enum.TextXAlignment.Left
                            })
                        })
                    }),
                    create("Frame", { 
                        BackgroundColor3 = Color3.fromHex("141414"), 
                        BorderSizePixel = 0, 
                        Name = "separator", 
                        Position = UDim2.new(0, 140, 0, 0), 
                        Size = UDim2.new(0, 1, 1, 0)
                    }),
                    create("Frame", { 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "tabs", 
                        Size = UDim2.new(1, -140, 1, 0)
                    }, {
                        create("Frame", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            Name = "freemium", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(1, 0, 1, 0)
                        }, {
                            create("TextButton", { 
                                LanguageItem = {
                                    property = "Text",
                                    identifier = "EnterKey"
                                },
                                AnchorPoint = Vector2.new(1, 1), 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("181818"), 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size11, 
                                Name = "enterKey", 
                                Position = UDim2.new(1, 0, 1, 0), 
                                Size = UDim2.new(0, 90, 0, 34), 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 11
                            }, {
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("UIStroke", { 
                                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                    Color = Color3.fromHex("141414"), 
                                    Name = "stroke", 
                                    Thickness = 1.2
                                })
                            }),
                            create("TextButton", { 
                                LanguageItem = {
                                    property = "Text",
                                    identifier = "CopyKeyLink"
                                },
                                AnchorPoint = Vector2.new(0, 1), 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("181818"), 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size11, 
                                Name = "getKeyLink", 
                                Position = UDim2.new(0, 0, 1, 0), 
                                Size = UDim2.new(0, 105, 0, 34), 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 11
                            }, {
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("UIStroke", { 
                                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                    Color = Color3.fromHex("141414"), 
                                    Name = "stroke", 
                                    Thickness = 1.2
                                })
                            }),
                            create("TextBox", { 
                                LanguageItem = {
                                    property = "PlaceholderText",
                                    identifier = "Key..."
                                },
                                AnchorPoint = Vector2.new(0.5, 0), 
                                BackgroundColor3 = Color3.fromHex("181818"), 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size11, 
                                Name = "keyInput", 
                                Position = UDim2.new(0.5, 0, 0, 0), 
                                Size = UDim2.new(1, 0, 0, 34), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 11, 
                                TextXAlignment = Enum.TextXAlignment.Left
                            }, {
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("UIPadding", { 
                                    Name = "padding", 
                                    PaddingLeft = UDim.new(0, 8), 
                                    PaddingRight = UDim.new(0, 8)
                                }),
                                create("UIStroke", { 
                                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                    Color = Color3.fromHex("141414"), 
                                    Name = "stroke", 
                                    Thickness = 1.2
                                })
                            })
                        }),
                        create("Frame", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            Name = "premium", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(1, 0, 1, 0), 
                            Visible = false
                        }, {
                            create("TextButton", { 
                                LanguageItem = {
                                    property = "Text",
                                    identifier = "SubmitCredentials"
                                },
                                AnchorPoint = Vector2.new(1, 1), 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("181818"), 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size11, 
                                Name = "enterDetails", 
                                Position = UDim2.new(1, 0, 1, 0), 
                                Size = UDim2.new(0, 130, 0, 34), 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 11
                            }, {
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("UIStroke", { 
                                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                    Color = Color3.fromHex("141414"), 
                                    Name = "stroke", 
                                    Thickness = 1.2
                                })
                            }),
                            create("TextBox", { 
                                LanguageItem = {
                                    property = "PlaceholderText",
                                    identifier = "User..."
                                },
                                AnchorPoint = Vector2.new(0.5, 0), 
                                BackgroundColor3 = Color3.fromHex("181818"), 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size11, 
                                Name = "userInput", 
                                Position = UDim2.new(0.5, 0, 0, 0), 
                                Size = UDim2.new(1, 0, 0, 34), 
                                Text = uiSettings.userName, 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 11, 
                                TextXAlignment = Enum.TextXAlignment.Left
                            }, {
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("UIPadding", { 
                                    Name = "padding", 
                                    PaddingLeft = UDim.new(0, 8), 
                                    PaddingRight = UDim.new(0, 8)
                                }),
                                create("UIStroke", { 
                                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                    Color = Color3.fromHex("141414"), 
                                    Name = "stroke", 
                                    Thickness = 1.2
                                })
                            }),
                            create("TextBox", { 
                                LanguageItem = {
                                    property = "PlaceholderText",
                                    identifier = "Password..."
                                },
                                AnchorPoint = Vector2.new(0, 1), 
                                BackgroundColor3 = Color3.fromHex("181818"), 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size11, 
                                Name = "passInput", 
                                Position = UDim2.new(0, 0, 1, 0), 
                                Size = UDim2.new(1, -140, 0, 34), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("000000"), 
                                TextSize = 11, 
                                TextXAlignment = Enum.TextXAlignment.Left
                            }, {
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("UIPadding", { 
                                    Name = "padding", 
                                    PaddingLeft = UDim.new(0, 8), 
                                    PaddingRight = UDim.new(0, 8)
                                }),
                                create("UIStroke", { 
                                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                    Color = Color3.fromHex("141414"), 
                                    Name = "stroke", 
                                    Thickness = 1.2
                                }),
                                create("TextLabel", { 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "dots", 
                                    Size = UDim2.new(1, 0, 1, 0), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                })
                            })
                        })
                    })
                }),
                create("Frame", { 
                    AnchorPoint = Vector2.new(1, 0), 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    Name = "languages", 
                    Position = UDim2.new(1, 0, 1, 10), 
                    Size = UDim2.new(0, 200, 0, 156), 
                    Visible = isFirstTimeExecution
                }, {
                    create("UIGradient", { 
                        Color = ColorSequence.new({ 
                            ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")), 
                            ColorSequenceKeypoint.new(1, Color3.fromHex("242424"))
                        }), 
                        Name = "gradient", 
                        Rotation = 78
                    }),
                    create("UICorner", { 
                        CornerRadius = UDim.new(0, 4), 
                        Name = "corner"
                    }),
                    create("ImageLabel", { 
                        AnchorPoint = Vector2.new(0.5, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Image = "rbxassetid://12874061329", 
                        ImageColor3 = Color3.fromHex("000000"), 
                        Name = "blur", 
                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                        ScaleType = Enum.ScaleType.Slice, 
                        Size = UDim2.new(1, 10, 1, 10), 
                        SliceCenter = Rect.new(10, 10, 118, 118), 
                        ZIndex = 0
                    }),
                    create("ScrollingFrame", { 
                        Active = true, 
                        AnchorPoint = Vector2.new(0.5, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        BorderSizePixel = 0, 
                        BottomImage = "rbxassetid://12651249430", 
                        CanvasSize = UDim2.new(),
                        MidImage = "rbxassetid://12651249103", 
                        Name = "container", 
                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                        ScrollBarImageColor3 = Color3.fromHex("141414"), 
                        ScrollBarThickness = 4, 
                        Size = UDim2.new(1, -16, 1, -16), 
                        TopImage = "rbxassetid://12651248921"
                    }, {
                        create("UIListLayout", { 
                            Name = "list", 
                            Padding = UDim.new(0, 6), 
                            SortOrder = Enum.SortOrder.LayoutOrder
                        }),
                        create("UIPadding", { 
                            Name = "padding", 
                            PaddingBottom = UDim.new(0, 1), 
                            PaddingLeft = UDim.new(0, 1), 
                            PaddingRight = UDim.new(0, 1), 
                            PaddingTop = UDim.new(0, 1)
                        })
                    })
                }),
                create("TextButton", { 
                    AutoButtonColor = false, 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BorderColor3 = Color3.fromHex("1b2a35"), 
                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                    FontSize = Enum.FontSize.Size14, 
                    Name = "toggleLanguages", 
                    Position = UDim2.new(1, 10, 0, 0), 
                    Size = UDim2.new(0, 34, 0, 34), 
                    Text = "", 
                    TextColor3 = Color3.fromHex("000000"), 
                    TextSize = 14
                }, {
                    create("UICorner", { 
                        CornerRadius = UDim.new(0, 4), 
                        Name = "corner"
                    }),
                    create("UIGradient", { 
                        Color = ColorSequence.new({ 
                            ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")), 
                            ColorSequenceKeypoint.new(1, Color3.fromHex("242424"))
                        }), 
                        Name = "gradient", 
                        Rotation = 78
                    }),
                    create("ImageLabel", { 
                        AnchorPoint = Vector2.new(0.5, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Image = "rbxassetid://13084553682", 
                        Name = "icon", 
                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                        Size = UDim2.new(1, -14, 1, -14)
                    }),
                    create("ImageLabel", { 
                        AnchorPoint = Vector2.new(0.5, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Image = "rbxassetid://12874061329", 
                        ImageColor3 = Color3.fromHex("000000"), 
                        Name = "blur", 
                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                        ScaleType = Enum.ScaleType.Slice, 
                        Size = UDim2.new(1, 10, 1, 10), 
                        SliceCenter = Rect.new(10, 10, 118, 118), 
                        ZIndex = 0
                    })
                })
            });
        
            --[[ Start ]]--
        
            local content = keyFrame.content;
            local tabs = content.tabs;
        
            local function validLogin()
                -- Custom Func
                Load_CustomFunctions()
                table.clear(resizeFunctions);
                gui.keyFrame:Destroy();
                callback();
            end
        
            --[[ Select Tabs ]]--
        
            do
                local selectedTab = tabs.freemium;
                local buttons = content.buttons;
        
                local function selectTab(name)
                    local btn, tab = buttons[name], tabs[name];
                    if selectedTab ~= tab then
                        selectedTab.Visible = false;
                        --[[tween(buttons[selectedTab.Name], 0.18, {
                            BackgroundTransparency = 1;
                        });]]
                        selectedTab = tab;
                        tab.Visible = true;
                        --[[tween(btn, 0.18, {
                            BackgroundTransparency = 0;
                        });]]
                    end
                end
        
                local buttonList = buttons:GetChildren();
                for i = 1, #buttonList do
                    local v = buttonList[i];
                    local tab = tabs[v.Name];
                    v.MouseButton1Click:Connect(function()
                        selectTab(v.Name);
                    end);
                end
        
                resizeFunctions[#resizeFunctions + 1] = function()
                    local size = math.max(buttons.freemium.title.TextBounds.X, buttons.premium.title.TextBounds.X) + 47;
                    buttons.Size = UDim2.new(0, size, 1, 0);
                    tabs.Size = UDim2.new(1, -(size + 16), 1, 0);
                end;
            end
        
            --[[ Freemium ]]--
        
            do
                local freeFrame = tabs.freemium;
        
                local getKeyLink = freeFrame.getKeyLink;
                local enterKey = freeFrame.enterKey;
        
                getKeyLink.MouseButton1Click:Connect(function()
                    local PandaAuth = loadstring(game:HttpGet('https://raw.githubusercontent.com/Panda-Repositories/PandaKS_Libraries/main/library/LuaLib/ROBLOX/PandaBetaLib.lua'))()
                    local url = PandaAuth:GetKey("evon")
                    _setclipboard(url);
                    EvonNotification("Successfully Copied Key")
                end);
        
                enterKey.MouseButton1Click:Connect(function()
                    if EvonCheckKey(freeFrame.keyInput.Text) then
                        updateSettings("key", freeFrame.keyInput.Text);
                        validLogin();
                        if freeFrame.keyInput.Text == "skie" then
                            updateSettings("key", "");
                        end
                    else
                        EvonNotification("Invalid Key")
                    end
                end);
        
                resizeFunctions[#resizeFunctions + 1] = function()
                    getKeyLink.Size = UDim2.new(0, getKeyLink.TextBounds.X + 30, 0, 34);
                    enterKey.Size = UDim2.new(0, enterKey.TextBounds.X + 30, 0, 34);
                end;
            end
        
            --[[ Adless ]]--
        
            --[[do
                local paidFrame = tabs.premium;
        
                local userInput = paidFrame.userInput;
                local passInput = paidFrame.passInput;
                local enterDetails = paidFrame.enterDetails;
        
                passInput:GetPropertyChangedSignal("Text"):Connect(function()
                    local inputLength = #passInput.Text
                    passInput.dots.Text = string.rep("•", inputLength);
                    passInput.TextTransparency = inputLength == 0 and 0 or 1;
                end);
        
                enterDetails.MouseButton1Click:Connect(function()
                    if CHECK_WHITELIST_FUNCTION_HERE(userInput.Text, passInput.Text) then
                        updateSettings("userName", userInput.Text);
                        validLogin();
                    end
                end);
        
                resizeFunctions[#resizeFunctions + 1] = function()
                    enterDetails.Size = UDim2.new(0, enterDetails.TextBounds.X + 30, 0, 34);
                    passInput.Size = UDim2.new(1, -(enterDetails.TextBounds.X + 40), 0, 34);
                end;
            end]]
        
            --[[ Languages ]]--
        
            do
                do
                    local isOpen = isFirstTimeExecution;
        
                    keyFrame.toggleLanguages.MouseButton1Click:Connect(function()
                        isOpen = not isOpen;
                        keyFrame.languages.Visible = isOpen;
                    end);
                end
        
                local template = create("TextButton", { 
                    AutoButtonColor = false,
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    Text = "",
                    Name = "languageExample", 
                    Size = UDim2.new(1, 0, 0, 30)
                }, {
                    create("Frame", { 
                        BackgroundColor3 = Color3.fromHex("181818"), 
                        Name = "flagContainer", 
                        Size = UDim2.new(0, 40, 0, 30)
                    }, {
                        create("UIStroke", { 
                            ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                            Color = Color3.fromHex("141414"), 
                            Name = "stroke", 
                            Thickness = 1.2
                        }),
                        create("UICorner", { 
                            CornerRadius = UDim.new(0, 4), 
                            Name = "corner"
                        }),
                        create("ImageLabel", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            Image = "", 
                            Name = "icon", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(1, -8, 1, -6)
                        })
                    }),
                    create("TextLabel", { 
                        AnchorPoint = Vector2.new(1, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                        FontSize = Enum.FontSize.Size11, 
                        Name = "title", 
                        Position = UDim2.new(1, 0, 0.5, 0), 
                        Size = UDim2.new(1, -50, 1, 0), 
                        Text = "", 
                        TextColor3 = Color3.fromHex("ebebeb"), 
                        TextSize = 11, 
                        TextXAlignment = Enum.TextXAlignment.Left
                    })
                });
        
                local languages = keyFrame.languages;
        
                local container = languages.container;
        
                container.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                    container.CanvasSize = UDim2.new(0, 0, 0, container.list.AbsoluteContentSize.Y + 2);			
                end);
        
                for i, v in next, sortedLanguageDatabase do
                    local clone = template:Clone();
                    clone.Name = v.key;
                    clone.title.Text = v.value.indicator;
                    clone.flagContainer.icon.Image = v.value.flag;
        
                    clone.MouseButton1Click:Connect(function()
                        updateSettings("language", v.key);
                    end);
        
                    clone.Parent = container;
                end
            end
        
            changeLanguage(uiSettings.language);
        
            if EvonCheckKey(uiSettings.key) then
                validLogin();
            else
                EvonNotification("Saved Key is no longer valid")
            end
        end
        
        local function loadMainUI()
            local toggleMain = create("TextButton", { 
                AnchorPoint = Vector2.new(0.5, 0.5), 
                AutoButtonColor = false, 
                BackgroundColor3 = Color3.fromHex("ffffff"), 
                FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                FontSize = Enum.FontSize.Size14, 
                Name = "toggleMain", 
                Parent = gui, 
                Position = UDim2.new(1, -25, 0.5, 0), 
                Size = UDim2.new(0, 40, 0, 40), 
                Text = "", 
                TextColor3 = Color3.fromHex("000000"), 
                TextSize = 14, 
                ZIndex = 99
            }, {
                create("UICorner", { 
                    CornerRadius = UDim.new(0, 4), 
                    Name = "corner"
                }),
                create("UIGradient", { 
                    Color = ColorSequence.new({ 
                        ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")), 
                        ColorSequenceKeypoint.new(1, Color3.fromHex("242424"))
                    }), 
                    Name = "gradient", 
                    Rotation = 78
                }),
                create("ImageLabel", { 
                    AnchorPoint = Vector2.new(0.5, 0.5), 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    Image = "rbxassetid://15984664361", 
                    ImageColor3 = Color3.fromRGB(151, 0, 255),
                    Name = "icon", 
                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                    Size = UDim2.new(1, -6, 1, -6), 
                    ZIndex = 99
                })
            });
        
            local main = create("Frame", { 
                AnchorPoint = Vector2.new(0.5, 0.5), 
                BackgroundColor3 = Color3.fromHex("ffffff"), 
                BorderSizePixel = 0, 
                Name = "main", 
                Parent = gui, 
                Position = UDim2.new(0.5, 0, 0.5, 0), 
                Size = UDim2.new(1, -110, 1, -80),
                Visible = false
            }, {
                create("UIGradient", { 
                    Color = ColorSequence.new({ 
                        ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")), 
                        ColorSequenceKeypoint.new(1, Color3.fromHex("242424"))
                    }), 
                    Name = "gradient", 
                    Rotation = 78
                }),
                create("Frame", { 
                    BackgroundColor3 = Color3.fromHex("181818"), 
                    BorderSizePixel = 0, 
                    Name = "left", 
                    Size = UDim2.new(0, 38, 1, 0)
                }, {
                    create("UICorner", { 
                        CornerRadius = UDim.new(0, 4), 
                        Name = "corner"
                    }),
                    create("ImageLabel", { 
                        AnchorPoint = Vector2.new(0.5, 0), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Image = "rbxassetid://15984664361", 
                        ImageColor3 = Color3.fromRGB(151, 0, 255),
                        Name = "icon", 
                        Position = UDim2.new(0.5, 0, 0, 8), 
                        Size = UDim2.new(0, 28, 0, 28)
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(0.5, 1), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "buttons", 
                        Position = UDim2.new(0.5, 0, 1, 0), 
                        Size = UDim2.new(1, -8, 1, -44)
                    }, {
                        create("UIListLayout", { 
                            Name = "list", 
                            Padding = UDim.new(0, 4), 
                            SortOrder = Enum.SortOrder.LayoutOrder
                        }),
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("303030"), 
                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size14, 
                            Name = "editor", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(0, 30, 0, 30), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("000000"), 
                            TextSize = 14
                        }, {
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://12874034829", 
                                Name = "icon", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -10, 1, -10)
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            })
                        }),
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("303030"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size14, 
                            Name = "games", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(0, 30, 0, 30), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("000000"), 
                            TextSize = 14
                        }, {
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://12874034639", 
                                Name = "icon", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -10, 1, -10)
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            })
                        }),
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("303030"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size14, 
                            Name = "console", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(0, 30, 0, 30), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("000000"), 
                            TextSize = 14
                        }, {
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://12874035024", 
                                Name = "icon", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -10, 1, -10)
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            })
                        }),
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 0.5), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("303030"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size14, 
                            Name = "settings", 
                            Position = UDim2.new(0.5, 0, 0.5, 0), 
                            Size = UDim2.new(0, 30, 0, 30), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("000000"), 
                            TextSize = 14
                        }, {
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://12874034503", 
                                Name = "icon", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -10, 1, -10)
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            })
                        })
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(1, 0), 
                        BackgroundColor3 = Color3.fromHex("181818"), 
                        BorderSizePixel = 0, 
                        Name = "topRightCover", 
                        Position = UDim2.new(1, 0, 0, 0), 
                        Size = UDim2.new(0, 4, 0, 4)
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(1, 1), 
                        BackgroundColor3 = Color3.fromHex("181818"), 
                        BorderSizePixel = 0, 
                        Name = "bottomRightCover", 
                        Position = UDim2.new(1, 0, 1, 0), 
                        Size = UDim2.new(0, 4, 0, 4)
                    })
                }),
                create("UICorner", { 
                    CornerRadius = UDim.new(0, 4), 
                    Name = "corner"
                }),
                create("TextButton", { 
                    AutoButtonColor = false, 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                    FontSize = Enum.FontSize.Size14, 
                    Name = "clickThroughBlocker", 
                    Size = UDim2.new(1, 0, 1, 0), 
                    Text = "", 
                    TextColor3 = Color3.fromHex("000000"), 
                    TextSize = 14, 
                    ZIndex = 0
                }),
                create("Folder", { 
                    Name = "tabs"
                }, {
                    create("Frame", { 
                        AnchorPoint = Vector2.new(1, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "editor", 
                        Position = UDim2.new(1, 0, 0.5, 0), 
                        Size = UDim2.new(1, -38, 1, 0)
                    }, {
                        create("UIListLayout", {
                            Name = "list", 
                            FillDirection = Enum.FillDirection.Horizontal, 
                            Padding = UDim.new(0, 8), 
                            SortOrder = Enum.SortOrder.LayoutOrder
                        }),
                        create("UIPadding", {
                            Name = "padding",
                            PaddingBottom = UDim.new(0, 8), 
                            PaddingLeft = UDim.new(0, 8), 
                            PaddingRight = UDim.new(0, 8), 
                            PaddingTop = UDim.new(0, 8)
                        }),
                        create("Frame", { 
                            AnchorPoint = Vector2.new(0, 0.5), 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            Name = "main", 
                            Position = UDim2.new(0, 8, 0.5, 0), 
                            Size = UDim2.new(1, -118, 1, 0)
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("UIListLayout", { 
                                FillDirection = Enum.FillDirection.Horizontal, 
                                Name = "list", 
                                Padding = UDim.new(0, 4), 
                                SortOrder = Enum.SortOrder.LayoutOrder
                            }),
                            create("ScrollingFrame", { 
                                Active = true, 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                BorderSizePixel = 0, 
                                BottomImage = "rbxassetid://12651249430", 
                                CanvasSize = UDim2.new(0, 6, 1, 0), 
                                MidImage = "rbxassetid://12651249103", 
                                Name = "lineNumbers", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                ScrollBarImageColor3 = Color3.fromHex("484848"), 
                                ScrollBarThickness = 0, 
                                ScrollingDirection = Enum.ScrollingDirection.Y, 
                                ScrollingEnabled = false, 
                                Size = UDim2.new(0, 6, 1, 0), 
                                TopImage = "rbxassetid://12651248921"
                            }, {
                                create("TextLabel", { 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "label", 
                                    Size = UDim2.new(1, 0, 1, 0), 
                                    Text = "1", 
                                    TextColor3 = Color3.fromHex("d2d2d2"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Right, 
                                    TextYAlignment = Enum.TextYAlignment.Top
                                })
                            }),
                            create("UIPadding", { 
                                Name = "padding", 
                                PaddingBottom = UDim.new(0, 8), 
                                PaddingLeft = UDim.new(0, 8), 
                                PaddingRight = UDim.new(0, 8), 
                                PaddingTop = UDim.new(0, 8)
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("b2b2b2"), 
                                BorderSizePixel = 0, 
                                Name = "separator", 
                                Size = UDim2.new(0, 1, 1, 0)
                            }),
                            create("ScrollingFrame", { 
                                Active = true, 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                BorderSizePixel = 0, 
                                BottomImage = "rbxassetid://12651249430", 
                                CanvasSize = UDim2.new(1, -15, 1, 0), 
                                MidImage = "rbxassetid://12651249103", 
                                Name = "container", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                ScrollBarImageColor3 = Color3.fromHex("484848"), 
                                ScrollBarThickness = 4, 
                                Size = UDim2.new(1, -15, 1, 0), 
                                TopImage = "rbxassetid://12651248921"
                            }, {
                                create("TextBox", { 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    ClearTextOnFocus = false, 
                                    FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    MultiLine = true, 
                                    Name = "content", 
                                    Size = UDim2.new(1, 0, 1, 0), 
                                    Text = uiSettings.editorInit, 
                                    TextColor3 = Color3.fromHex("b2b2b2"), 
                                    TextSize = 11, 
                                    TextTruncate = Enum.TextTruncate.AtEnd, 
                                    TextWrap = true, 
                                    TextWrapped = true, 
                                    TextXAlignment = Enum.TextXAlignment.Left, 
                                    TextYAlignment = Enum.TextYAlignment.Top
                                })
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            })
                        }),
                        create("Frame", { 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            BorderSizePixel = 0, 
                            Name = "right", 
                            Size = UDim2.new(0, 110, 1, 0)
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("Frame", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Name = "buttons", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -8, 1, -8)
                            }, {
                                create("UIListLayout", { 
                                    Name = "list", 
                                    Padding = UDim.new(0, 4), 
                                    SortOrder = Enum.SortOrder.LayoutOrder
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "Editor"
                                    },
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size12, 
                                    Name = "boxLabel", 
                                    Size = UDim2.new(1, 0, 0, 16), 
                                    TextColor3 = Color3.fromHex("bebebe"), 
                                    TextSize = 12, 
                                    TextXAlignment = Enum.TextXAlignment.Left, 
                                    TextYAlignment = Enum.TextYAlignment.Bottom
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("303030"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "executeBox", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 22), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(1, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://12778482262", 
                                        Name = "icon", 
                                        Position = UDim2.new(1, -6, 0.5, 0), 
                                        Size = UDim2.new(0, 14, 0, 14)
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("TextLabel", { 
                                        LanguageItem = {
                                            property = "Text",
                                            identifier = "Execute"
                                        },
                                        AnchorPoint = Vector2.new(0, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                        FontSize = Enum.FontSize.Size11, 
                                        Name = "title", 
                                        Position = UDim2.new(0, 6, 0.5, 0), 
                                        Size = UDim2.new(1, -30, 1, 0), 
                                        TextColor3 = Color3.fromHex("ebebeb"), 
                                        TextSize = 11, 
                                        TextXAlignment = Enum.TextXAlignment.Left
                                    })
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("303030"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "clearBox", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 22), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(1, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://12778483354", 
                                        Name = "icon", 
                                        Position = UDim2.new(1, -6, 0.5, 0), 
                                        Size = UDim2.new(0, 14, 0, 14)
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("TextLabel", { 
                                        LanguageItem = {
                                            property = "Text",
                                            identifier = "Clear"
                                        },
                                        AnchorPoint = Vector2.new(0, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                        FontSize = Enum.FontSize.Size11, 
                                        Name = "title", 
                                        Position = UDim2.new(0, 6, 0.5, 0), 
                                        Size = UDim2.new(1, -30, 1, 0), 
                                        TextColor3 = Color3.fromHex("ebebeb"), 
                                        TextSize = 11, 
                                        TextXAlignment = Enum.TextXAlignment.Left
                                    })
                                }),
                                create("Frame", { 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    Name = "separator", 
                                    Size = UDim2.new(1, 0, 0, 1)
                                }, {
                                    create("Frame", { 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("363636"), 
                                        BorderSizePixel = 0, 
                                        Name = "bar", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        Size = UDim2.new(1, -8, 1, 0)
                                    }, {
                                        create("UIGradient", { 
                                            Name = "gradient", 
                                            Transparency = NumberSequence.new({ 
                                                NumberSequenceKeypoint.new(0, 1), 
                                                NumberSequenceKeypoint.new(0.1, 0.28), 
                                                NumberSequenceKeypoint.new(0.28, 0), 
                                                NumberSequenceKeypoint.new(0.72, 0), 
                                                NumberSequenceKeypoint.new(0.9, 0.28), 
                                                NumberSequenceKeypoint.new(1, 1)
                                            })
                                        })
                                    })
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "Clipboard"
                                    },
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size12, 
                                    Name = "clipboardLabel", 
                                    Size = UDim2.new(1, 0, 0, 16), 
                                    TextColor3 = Color3.fromHex("bebebe"), 
                                    TextSize = 12, 
                                    TextXAlignment = Enum.TextXAlignment.Left, 
                                    TextYAlignment = Enum.TextYAlignment.Bottom
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("303030"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "executeClip", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 22), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(1, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://12778483177", 
                                        Name = "icon", 
                                        Position = UDim2.new(1, -6, 0.5, 0), 
                                        Size = UDim2.new(0, 14, 0, 14)
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("TextLabel", { 
                                        LanguageItem = {
                                            property = "Text",
                                            identifier = "Execute"
                                        },
                                        AnchorPoint = Vector2.new(0, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                        FontSize = Enum.FontSize.Size11, 
                                        Name = "title", 
                                        Position = UDim2.new(0, 6, 0.5, 0), 
                                        Size = UDim2.new(1, -30, 1, 0), 
                                        TextColor3 = Color3.fromHex("ebebeb"), 
                                        TextSize = 11, 
                                        TextXAlignment = Enum.TextXAlignment.Left
                                    })
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("303030"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "copyClip", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 22), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(1, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://12778483077", 
                                        Name = "icon", 
                                        Position = UDim2.new(1, -6, 0.5, 0), 
                                        Size = UDim2.new(0, 14, 0, 14)
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("TextLabel", { 
                                        LanguageItem = {
                                            property = "Text",
                                            identifier = "CopyScript"
                                        },
                                        AnchorPoint = Vector2.new(0, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                        FontSize = Enum.FontSize.Size11, 
                                        Name = "title", 
                                        Position = UDim2.new(0, 6, 0.5, 0), 
                                        Size = UDim2.new(1, -30, 1, 0), 
                                        TextColor3 = Color3.fromHex("ebebeb"), 
                                        TextSize = 11, 
                                        TextXAlignment = Enum.TextXAlignment.Left
                                    })
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("303030"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "loadClip", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 22), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(1, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://12778482928", 
                                        Name = "icon", 
                                        Position = UDim2.new(1, -6, 0.5, 0), 
                                        Size = UDim2.new(0, 14, 0, 14)
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("TextLabel", { 
                                        LanguageItem = {
                                            property = "Text",
                                            identifier = "LoadScript"
                                        },
                                        AnchorPoint = Vector2.new(0, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                        FontSize = Enum.FontSize.Size11, 
                                        Name = "title", 
                                        Position = UDim2.new(0, 6, 0.5, 0), 
                                        Size = UDim2.new(1, -30, 1, 0), 
                                        TextColor3 = Color3.fromHex("ebebeb"), 
                                        TextSize = 11, 
                                        TextXAlignment = Enum.TextXAlignment.Left
                                    })
                                })
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            })
                        })
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(1, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "games", 
                        Position = UDim2.new(1, 0, 0.5, 0), 
                        Size = UDim2.new(1, -38, 1, 0), 
                        Visible = false
                    }, {
                        create("TextBox", { 
                            LanguageItem = {
                                property = "PlaceholderText",
                                identifier = "Search..."
                            },
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size11, 
                            Name = "searchInput", 
                            Position = UDim2.new(0, 8, 0, 8), 
                            Size = UDim2.new(1, -90, 0, 30), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 11, 
                            TextXAlignment = Enum.TextXAlignment.Left
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("UIPadding", { 
                                Name = "padding", 
                                PaddingLeft = UDim.new(0, 8), 
                                PaddingRight = UDim.new(0, 8)
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            })
                        }),
                        create("ScrollingFrame", { 
                            Active = true, 
                            AnchorPoint = Vector2.new(0.5, 1), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            BorderSizePixel = 0, 
                            CanvasSize = UDim2.new(0, 0, 0, 0), 
                            Name = "container", 
                            Position = UDim2.new(0.5, 0, 1, -7), 
                            ScrollBarImageColor3 = Color3.fromHex("000000"), 
                            ScrollBarThickness = 0, 
                            Size = UDim2.new(1, -14, 1, -52)
                        }, {
                            create("UIGridLayout", { 
                                CellPadding = UDim2.new(0, 8, 0, 6), 
                                CellSize = UDim2.new(0, 0, 0, 0), 
                                Name = "grid", 
                                SortOrder = Enum.SortOrder.LayoutOrder
                            }),
                            create("UIPadding", { 
                                Name = "padding", 
                                PaddingBottom = UDim.new(0, 1), 
                                PaddingLeft = UDim.new(0, 1), 
                                PaddingRight = UDim.new(0, 1), 
                                PaddingTop = UDim.new(0, 1)
                            })
                        }),
                        create("TextButton", {
                            LanguageItem = {
                                property = "Text",
                                identifier = "Search"
                            }, 
                            AnchorPoint = Vector2.new(1, 0), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size11, 
                            Name = "search", 
                            Position = UDim2.new(1, -8, 0, 8), 
                            Size = UDim2.new(0, 66, 0, 30), 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 11
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            })
                        })
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(1, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "console", 
                        Position = UDim2.new(1, 0, 0.5, 0), 
                        Size = UDim2.new(1, -38, 1, 0), 
                        Visible = false
                    }, {
                        create("Frame", { 
                            AnchorPoint = Vector2.new(0.5, 0), 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            Name = "main", 
                            Position = UDim2.new(0.5, 0, 0, 8), 
                            Size = UDim2.new(1, -16, 1, -54)
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("ScrollingFrame", { 
                                Active = true, 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                BorderSizePixel = 0, 
                                BottomImage = "rbxassetid://12651249430", 
                                CanvasSize = UDim2.new(1, -16, 1, -16), 
                                MidImage = "rbxassetid://12651249103", 
                                Name = "container", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                ScrollBarImageColor3 = Color3.fromHex("484848"), 
                                ScrollBarThickness = 4, 
                                Size = UDim2.new(1, -16, 1, -16), 
                                TopImage = "rbxassetid://12651248921"
                            }, {
                                create("TextLabel", { 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "content", 
                                    RichText = true, 
                                    Size = UDim2.new(1, 0, 1, 0), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("b2b2b2"), 
                                    TextSize = 11, 
                                    TextTruncate = Enum.TextTruncate.AtEnd, 
                                    TextWrap = true, 
                                    TextWrapped = true, 
                                    TextXAlignment = Enum.TextXAlignment.Left, 
                                    TextYAlignment = Enum.TextYAlignment.Top
                                })
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            })
                        }),
                        create("Frame", { 
                            AnchorPoint = Vector2.new(0.5, 1), 
                            BackgroundColor3 = Color3.fromHex("181818"), 
                            Name = "bottom", 
                            Position = UDim2.new(0.5, 0, 1, -8), 
                            Size = UDim2.new(1, -16, 0, 30)
                        }, {
                            create("TextButton", { 
                                AnchorPoint = Vector2.new(0, 0.5), 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("303030"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "clearConsole", 
                                Position = UDim2.new(0, 4, 0.5, 0), 
                                Size = UDim2.new(0, 63, 0, 22), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("000000"), 
                                TextSize = 14
                            }, {
                                create("ImageLabel", { 
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    Image = "rbxassetid://12778483354", 
                                    Name = "icon", 
                                    Position = UDim2.new(1, -6, 0.5, 0), 
                                    Size = UDim2.new(0, 14, 0, 14)
                                }),
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "ClearConsole"
                                    },
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(0, 6, 0.5, 0), 
                                    Size = UDim2.new(1, -30, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                })
                            }),
                            create("TextButton", { 
                                AnchorPoint = Vector2.new(1, 0.5), 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("303030"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "copyConsole", 
                                Position = UDim2.new(1, -4, 0.5, 0), 
                                Size = UDim2.new(0, 109, 0, 22), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("000000"), 
                                TextSize = 14
                            }, {
                                create("ImageLabel", { 
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    Image = "rbxassetid://12778483077", 
                                    Name = "icon", 
                                    Position = UDim2.new(1, -6, 0.5, 0), 
                                    Size = UDim2.new(0, 14, 0, 14)
                                }),
                                create("UICorner", { 
                                    CornerRadius = UDim.new(0, 4), 
                                    Name = "corner"
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "CopyConsole"
                                    },
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(0, 6, 0.5, 0), 
                                    Size = UDim2.new(1, -30, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                })
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("141414"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            })
                        })
                    }),
                    create("Frame", { 
                        AnchorPoint = Vector2.new(1, 0.5), 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "settings", 
                        Position = UDim2.new(1, 0, 0.5, 0), 
                        Size = UDim2.new(1, -38, 1, 0), 
                        Visible = false
                    }, {
                        create("ScrollingFrame", { 
                            AnchorPoint = Vector2.new(0, 0.5), 
                            BackgroundTransparency = 1, 
                            BorderSizePixel = 0, 
                            CanvasSize = UDim2.new(), 
                            Name = "left", 
                            Position = UDim2.new(0, 8, 0.5, 0), 
                            ScrollBarThickness = 0, 
                            Size = UDim2.new(0.5, -12, 1, -16)
                        }, {
                            create("UIListLayout", { 
                                Name = "list", 
                                Padding = UDim.new(0, 8), 
                                SortOrder = Enum.SortOrder.LayoutOrder
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Name = "languages", 
                                Size = UDim2.new(1, 0, 0, 28)
                            }, {
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    BorderColor3 = Color3.fromHex("1b2a35"), 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "indicator", 
                                    Position = UDim2.new(0, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 28, 0, 28), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://13084553682", 
                                        Name = "icon", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        Size = UDim2.new(1, -8, 1, -8)
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    })
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(1, -36, 1, 0), 
                                    Text = "English", 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    })
                                }),
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(1, 0), 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    Name = "drop", 
                                    Position = UDim2.new(1, 0, 1, 8), 
                                    Size = UDim2.new(1, -36, 0, 156), 
                                    Visible = false, 
                                    ZIndex = 2
                                }, {
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("ScrollingFrame", { 
                                        Active = true, 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        BorderSizePixel = 0, 
                                        BottomImage = "rbxassetid://12651249430", 
                                        CanvasSize = UDim2.new(0, 0, 0, 0), 
                                        MidImage = "rbxassetid://12651249103", 
                                        Name = "container", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        ScrollBarImageColor3 = Color3.fromHex("141414"), 
                                        ScrollBarThickness = 4, 
                                        Size = UDim2.new(1, -16, 1, -16), 
                                        TopImage = "rbxassetid://12651248921", 
                                        ZIndex = 2
                                    }, {
                                        create("UIListLayout", { 
                                            Name = "list", 
                                            Padding = UDim.new(0, 6), 
                                            SortOrder = Enum.SortOrder.LayoutOrder
                                        }),
                                        create("UIPadding", { 
                                            Name = "padding", 
                                            PaddingBottom = UDim.new(0, 1), 
                                            PaddingLeft = UDim.new(0, 1), 
                                            PaddingRight = UDim.new(0, 1), 
                                            PaddingTop = UDim.new(0, 1)
                                        })
                                    })
                                })
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                BorderSizePixel = 0, 
                                Name = "separator", 
                                Size = UDim2.new(1, 0, 0, 11)
                            }, {
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BorderSizePixel = 0, 
                                    Name = "bar", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 1)
                                }, {
                                    create("UIGradient", { 
                                        Color = ColorSequence.new({ 
                                            ColorSequenceKeypoint.new(0, Color3.fromHex("3c3c3c")), 
                                            ColorSequenceKeypoint.new(1, Color3.fromHex("3c3c3c"))
                                        }), 
                                        Transparency = NumberSequence.new({ 
                                            NumberSequenceKeypoint.new(0, 1), 
                                            NumberSequenceKeypoint.new(0.2, 0), 
                                            NumberSequenceKeypoint.new(0.8, 0), 
                                            NumberSequenceKeypoint.new(1, 1)
                                        })
                                    })
                                })
                            }),
                            create("TextButton", { 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "unlockFps", 
                                Size = UDim2.new(1, 0, 0, 28), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("000000"), 
                                TextSize = 14
                            }, {
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    Name = "indicator", 
                                    Position = UDim2.new(0, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 28, 0, 28)
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    }),
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://13107126808", 
                                        ImageTransparency = uiSettings.unlockFps and 0 or 1, 
                                        Name = "icon", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        Size = UDim2.new(1, -8, 1, -8)
                                    })
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "UnlockFPS"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(1, -40, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                })
                            }),
                            create("TextButton", { 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "vSync", 
                                Size = UDim2.new(1, 0, 0, 28), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("000000"), 
                                TextSize = 14
                            }, {
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    Name = "indicator", 
                                    Position = UDim2.new(0, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 28, 0, 28)
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    }),
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://13107126808", 
                                        ImageTransparency = uiSettings.vSync and 0 or 1, 
                                        Name = "icon", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        Size = UDim2.new(1, -8, 1, -8)
                                    })
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "VSync"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(1, -40, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                })
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Name = "fpsValue", 
                                Size = UDim2.new(1, 0, 0, 38)
                            }, {
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "FPS"
                                    },
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(0, 4, 0, 0), 
                                    Size = UDim2.new(1, -8, 0, 24), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                }),
                                create("TextLabel", { 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "value", 
                                    Position = UDim2.new(0, 4, 0, 0), 
                                    Size = UDim2.new(1, -8, 0, 24), 
                                    Text = "60", 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Right
                                }),
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0.5, 1), 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    ClipsDescendants = true, 
                                    Name = "container", 
                                    Position = UDim2.new(0.5, 0, 1, 0), 
                                    Size = UDim2.new(1, 0, 0, 12)
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(1, 0), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    }),
                                    create("Frame", { 
                                        BackgroundColor3 = Color3.fromHex("303030"), 
                                        Name = "indicator", 
                                        Size = UDim2.new(59 / 998, 0, 1, 0)
                                    }, {
                                        create("UICorner", { 
                                            CornerRadius = UDim.new(1, 0), 
                                            Name = "corner"
                                        }),
                                        create("UIStroke", { 
                                            ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                            Color = Color3.fromHex("141414"), 
                                            Name = "stroke", 
                                            Thickness = 1.2
                                        })
                                    })
                                })
                            })
                        }),
                        create("ScrollingFrame", { 
                            AnchorPoint = Vector2.new(1, 0.5), 
                            BackgroundTransparency = 1, 
                            BorderSizePixel = 0, 
                            CanvasSize = UDim2.new(), 
                            Name = "right", 
                            Position = UDim2.new(1, -8, 0.5, 0), 
                            ScrollBarThickness = 0, 
                            Size = UDim2.new(0.5, -12, 1, -16)
                        }, {
                            create("UIListLayout", { 
                                Name = "list", 
                                Padding = UDim.new(0, 8), 
                                SortOrder = Enum.SortOrder.LayoutOrder
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Name = "scriptApi", 
                                Size = UDim2.new(1, 0, 0, 28)
                            }, {
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    BorderColor3 = Color3.fromHex("1b2a35"), 
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size14, 
                                    Name = "indicator", 
                                    Position = UDim2.new(0, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 28, 0, 28), 
                                    Text = "", 
                                    TextColor3 = Color3.fromHex("000000"), 
                                    TextSize = 14
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://12874034639", 
                                        Name = "icon", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        Size = UDim2.new(1, -8, 1, -8)
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    })
                                }),
                                create("TextButton", { 
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(1, -36, 1, 0), 
                                    Text = uiSettings.searchAPI, 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    })
                                }),
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(1, 0), 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    Name = "drop", 
                                    Position = UDim2.new(1, 0, 1, 8), 
                                    Size = UDim2.new(1, -36, 0, 84), 
                                    Visible = false, 
                                    ZIndex = 2
                                }, {
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    }),
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("ScrollingFrame", { 
                                        Active = true, 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        BorderSizePixel = 0, 
                                        BottomImage = "rbxassetid://12651249430", 
                                        CanvasSize = UDim2.new(0, 0, 0, 0), 
                                        MidImage = "rbxassetid://12651249103", 
                                        Name = "container", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        ScrollBarImageColor3 = Color3.fromHex("141414"), 
                                        ScrollBarThickness = 4, 
                                        Size = UDim2.new(1, -16, 1, -16), 
                                        TopImage = "rbxassetid://12651248921", 
                                        ZIndex = 2
                                    }, {
                                        create("UIListLayout", { 
                                            Name = "list", 
                                            Padding = UDim.new(0, 6), 
                                            SortOrder = Enum.SortOrder.LayoutOrder
                                        }),
                                        create("UIPadding", { 
                                            Name = "padding", 
                                            PaddingBottom = UDim.new(0, 1), 
                                            PaddingLeft = UDim.new(0, 1), 
                                            PaddingRight = UDim.new(0, 1), 
                                            PaddingTop = UDim.new(0, 1)
                                        })
                                    })
                                })
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                BorderSizePixel = 0, 
                                Name = "separator", 
                                Size = UDim2.new(1, 0, 0, 13)
                            }, {
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BorderSizePixel = 0, 
                                    Name = "bar", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 1)
                                }, {
                                    create("UIGradient", { 
                                        Color = ColorSequence.new({ 
                                            ColorSequenceKeypoint.new(0, Color3.fromHex("3c3c3c")), 
                                            ColorSequenceKeypoint.new(1, Color3.fromHex("3c3c3c"))
                                        }), 
                                        Transparency = NumberSequence.new({ 
                                            NumberSequenceKeypoint.new(0, 1), 
                                            NumberSequenceKeypoint.new(0.2, 0), 
                                            NumberSequenceKeypoint.new(0.8, 0), 
                                            NumberSequenceKeypoint.new(1, 1)
                                        })
                                    })
                                })
                            }),
                            create("TextButton", { 
                                AutoButtonColor = false, 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size14, 
                                Name = "antiAfk", 
                                Size = UDim2.new(1, 0, 0, 28), 
                                Text = "", 
                                TextColor3 = Color3.fromHex("000000"), 
                                TextSize = 14
                            }, {
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    Name = "indicator", 
                                    Position = UDim2.new(0, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 28, 0, 28)
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 1.2
                                    }),
                                    create("ImageLabel", { 
                                        AnchorPoint = Vector2.new(0.5, 0.5), 
                                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                                        BackgroundTransparency = 1, 
                                        Image = "rbxassetid://13107126808", 
                                        ImageTransparency = uiSettings.antiAfk and 0 or 1, 
                                        Name = "icon", 
                                        Position = UDim2.new(0.5, 0, 0.5, 0), 
                                        Size = UDim2.new(1, -8, 1, -8)
                                    })
                                }),
                                create("TextLabel", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "AntiAFK"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BackgroundTransparency = 1, 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "title", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(1, -40, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11, 
                                    TextXAlignment = Enum.TextXAlignment.Left
                                })
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                BorderSizePixel = 0, 
                                Name = "separator", 
                                Size = UDim2.new(1, 0, 0, 11)
                            }, {
                                create("Frame", { 
                                    AnchorPoint = Vector2.new(0.5, 0.5), 
                                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                                    BorderSizePixel = 0, 
                                    Name = "bar", 
                                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                                    Size = UDim2.new(1, 0, 0, 1)
                                }, {
                                    create("UIGradient", { 
                                        Color = ColorSequence.new({ 
                                            ColorSequenceKeypoint.new(0, Color3.fromHex("3c3c3c")), 
                                            ColorSequenceKeypoint.new(1, Color3.fromHex("3c3c3c"))
                                        }), 
                                        Transparency = NumberSequence.new({ 
                                            NumberSequenceKeypoint.new(0, 1), 
                                            NumberSequenceKeypoint.new(0.2, 0), 
                                            NumberSequenceKeypoint.new(0.8, 0), 
                                            NumberSequenceKeypoint.new(1, 1)
                                        })
                                    })
                                })
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Name = "serverHopMode", 
                                Size = UDim2.new(1, 0, 0, 28)
                            }, {
                                create("UIListLayout", { 
                                    FillDirection = Enum.FillDirection.Horizontal, 
                                    Name = "list", 
                                    Padding = UDim.new(0, 8), 
                                    SortOrder = Enum.SortOrder.LayoutOrder
                                }),
                                create("TextButton", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "Full"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "full" and "303030" or "181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "full", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 35, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 0.8
                                    })
                                }),
                                create("TextButton", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "Empty"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "empty" and "303030" or "181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "empty", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 49, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 0.8
                                    })
                                }),
                                create("TextButton", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "BestPing"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "bestPing" and "303030" or "181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "bestPing", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 65, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 0.8
                                    })
                                }),
                                create("TextButton", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "Random"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "random" and "303030" or "181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "random", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(0, 59, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 0.8
                                    })
                                })
                            }),
                            create("UIPadding", { 
                                Name = "padding", 
                                PaddingBottom = UDim.new(0, 1), 
                                PaddingLeft = UDim.new(0, 1), 
                                PaddingRight = UDim.new(0, 1), 
                                PaddingTop = UDim.new(0, 1)
                            }),
                            create("Frame", { 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Name = "serverHop", 
                                Size = UDim2.new(1, 0, 0, 28)
                            }, {
                                create("TextButton", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "RejoinServer"
                                    },
                                    AnchorPoint = Vector2.new(1, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "rejoin", 
                                    Position = UDim2.new(1, 0, 0.5, 0), 
                                    Size = UDim2.new(0.5, -4, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 0.8
                                    })
                                }),
                                create("TextButton", { 
                                    LanguageItem = {
                                        property = "Text",
                                        identifier = "ServerHop"
                                    },
                                    AnchorPoint = Vector2.new(0, 0.5), 
                                    AutoButtonColor = false, 
                                    BackgroundColor3 = Color3.fromHex("181818"), 
                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                    FontSize = Enum.FontSize.Size11, 
                                    Name = "hop", 
                                    Position = UDim2.new(0, 0, 0.5, 0), 
                                    Size = UDim2.new(0.5, -4, 1, 0), 
                                    TextColor3 = Color3.fromHex("ebebeb"), 
                                    TextSize = 11
                                }, {
                                    create("UICorner", { 
                                        CornerRadius = UDim.new(0, 4), 
                                        Name = "corner"
                                    }),
                                    create("UIStroke", { 
                                        ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                        Color = Color3.fromHex("141414"), 
                                        Name = "stroke", 
                                        Thickness = 0.8
                                    })
                                })
                            })
                        })
                    })
                }),
                create("UISizeConstraint", { 
                    MaxSize = Vector2.new(800, 500), 
                    Name = "constraint"
                }),
                create("ImageLabel", { 
                    AnchorPoint = Vector2.new(0.5, 0.5), 
                    BackgroundColor3 = Color3.fromHex("ffffff"), 
                    BackgroundTransparency = 1, 
                    Image = "rbxassetid://12874061329", 
                    ImageColor3 = Color3.fromHex("000000"), 
                    Name = "blur", 
                    Position = UDim2.new(0.5, 0, 0.5, 0), 
                    ScaleType = Enum.ScaleType.Slice, 
                    Size = UDim2.new(1, 10, 1, 10), 
                    SliceCenter = Rect.new(10, 10, 118, 118), 
                    ZIndex = 0
                }),
                create("UIStroke", { 
                    ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                    Color = Color3.fromHex("141414"), 
                    Name = "stroke", 
                    Thickness = 0.8
                })
            });
        
            --[[ Start ]]--
        
            local runCode = removeTrace("runcode");
        
            local tabs = main.tabs;
            local tabButtons = main.left.buttons;
        
            --[[ Toggle UI ]]--
        
            do
                local isOpen = false;
        
                toggleMain.MouseButton1Click:Connect(function()
                    isOpen = not isOpen;
                    main.Visible = isOpen;
                end);
            end
        
            --[[ Toggle Drag ]]--
        
            do
                local currentCamera = workspace.CurrentCamera;
        
                toggleMain.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                        local inputConn = userInputService.InputChanged:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                                tween(toggleMain, 0.18, {
                                    Position = UDim2.new(0, math.clamp(input.Position.X, 25, currentCamera.ViewportSize.X - 25), 0, math.clamp(input.Position.Y, 25, currentCamera.ViewportSize.Y - 25))
                                });
                            end
                        end);
                        local conn; conn = input.Changed:Connect(function()
                            if input.UserInputState == Enum.UserInputState.End then
                                inputConn:Disconnect();
                                conn:Disconnect();
                            end
                        end);
                    end
                end);
            end
        
            --[[ Select Tabs ]]--
        
            local selectedTab = tabs.editor;
        
            local function selectTab(name)
                local btn, tab = tabButtons[name], tabs[name];
                if selectedTab ~= tab then
                    selectedTab.Visible = false;
                    tween(tabButtons[selectedTab.Name], 0.18, {
                        BackgroundTransparency = 1;
                    });
                    selectedTab = tab;
                    tab.Visible = true;
                    tween(btn, 0.18, {
                        BackgroundTransparency = 0;
                    });
                end
            end
        
            do
                local buttonList = tabButtons:GetChildren();
                for i = 1, #buttonList do
                    local v = buttonList[i];
                    if v:IsA("TextButton") then
                        local tab = tabs[v.Name];
                        v.MouseButton1Click:Connect(function()
                            selectTab(v.Name);
                        end);
                    end
                end
            end
        
            --[[ Editor ]]--
        
            do
                local editor = tabs.editor;
        
                local scroll = editor.main.container;
                local content = scroll.content;
        
                do
                    local lineNumbers = editor.main.lineNumbers;
                    local lineLabel = lineNumbers.label;
        
                    local function getTextBounds(input)
                        return textService:GetTextSize(input, content.TextSize, content.Font, hugeVector2);
                    end
        
                    content:GetPropertyChangedSignal("Text"):Connect(function()
                        local input = content.Text;
                        local lines = math.min(#string.split(input, "\n"), maxLines);
                        local digitLength = #tostring(lines) * 6;
                        local textBounds = getTextBounds(input);
                        local textHeight = math.min(textBounds.Y, maxLines * 11);
                        local str = "";
                        for i = 1, lines do
                            str ..= string.format("%d%s", i, i == lines and "" or "\n");
                        end
                        lineLabel.Text = str;
                        lineNumbers.Size = UDim2.new(0, digitLength, 1, 0);
                        lineNumbers.CanvasSize = UDim2.new(0, digitLength, 0, textHeight);
                        scroll.Size = UDim2.new(1, -(9 + digitLength), 1, 0);
                        scroll.CanvasSize = UDim2.new(0, textBounds.X + digitLength, 0, textHeight);
                    end);
        
                    scroll:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
                        lineNumbers.CanvasPosition = Vector2.new(0, scroll.CanvasPosition.Y);
                    end);
                end		
        
                do
                    local right = editor.right.buttons;
                    local items = right:GetChildren();
                    for i = 1, #items do
                        local v = items[i];
                        if v:IsA("TextButton") then
                            addTransparencyHighlights(v);
                        end
                    end
        
                    right.executeBox.MouseButton1Click:Connect(function()
                        runCode(content.Text);
                    end);
        
                    right.clearBox.MouseButton1Click:Connect(function()
                        content.Text = "";
                    end);
        
                    right.executeClip.MouseButton1Click:Connect(function()
                        runCode(_getclipboard());
                    end);
        
                    right.copyClip.MouseButton1Click:Connect(function()
                        _setclipboard(content.Text);
                    end);
        
                    right.loadClip.MouseButton1Click:Connect(function()
                        local text = _getclipboard();
                        if #text > 16384 then
                            rconsolewarn("Clipboard Text is too large to be loaded to the editor. Execute directly using \"Execute Clipboard\".");
                        else
                            content.Text = text;
                        end
                    end);
        
                    resizeFunctions[#resizeFunctions + 1] = function()
                        local maxBound = 0;
                        for i = 1, #items do
                            local v = items[i];
                            if v:IsA("TextButton") then
                                local bound = v.title.TextBounds.X;
                                if bound > maxBound then
                                    maxBound = bound;
                                end
                            end
                        end
                        editor.right.Size = UDim2.new(0, maxBound + 48, 1, 0);
                        editor.main.Size = UDim2.new(1, -(maxBound + 56), 1, 0);
                    end
                end
            end
        
            --[[ Games ]]--
        
            do
                local games = tabs.games;
        
                local scroll = games.container;
                local layout = scroll.grid;
        
                layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                    scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 4);
                end);
        
                do
                    local search = games.search;
                    local searchInput = games.searchInput;
        
                    local template = create("Frame", { 
                        BackgroundColor3 = Color3.fromHex("181818"), 
                        Name = "template",
                        Size = UDim2.new(0, 100, 0, 100)
                    }, {
                        create("UICorner", { 
                            CornerRadius = UDim.new(0, 4), 
                            Name = "corner"
                        }),
                        create("UIStroke", { 
                            ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                            Color = Color3.fromHex("141414"), 
                            Name = "stroke", 
                            Thickness = 1.2
                        }),
                        create("ImageLabel", { 
                            AnchorPoint = Vector2.new(0.5, 0), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            Image = "", 
                            Name = "icon", 
                            Position = UDim2.new(0.5, 0, 0, 0), 
                            Size = UDim2.new(1, 0, 1, -30)
                        }, {
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 5), 
                                Name = "corner"
                            })
                        }),
                        create("TextLabel", { 
                            AnchorPoint = Vector2.new(0.5, 0), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size12, 
                            Name = "title", 
                            Position = UDim2.new(0.5, 0, 0, 0), 
                            Size = UDim2.new(1, -16, 0, 24), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 12, 
                            TextStrokeColor3 = Color3.fromHex("0c0c0c"), 
                            TextStrokeTransparency = 0.25, 
                            TextTruncate = Enum.TextTruncate.AtEnd, 
                            TextXAlignment = Enum.TextXAlignment.Right
                        }),
                        create("TextButton", { 
                            AnchorPoint = Vector2.new(0.5, 1), 
                            AutoButtonColor = false, 
                            BackgroundColor3 = Color3.fromHex("303030"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size14, 
                            Name = "execute", 
                            Position = UDim2.new(0.5, 0, 1, -4), 
                            Size = UDim2.new(1, -8, 0, 22), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("000000"), 
                            TextSize = 14
                        }, {
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(1, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "rbxassetid://12778482262", 
                                Name = "icon", 
                                Position = UDim2.new(1, -2, 0.5, 0), 
                                Size = UDim2.new(0, 16, 0, 16)
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("TextLabel", { 
                                LanguageItem = {
                                    property = "Text",
                                    identifier = "Execute"
                                },
                                AnchorPoint = Vector2.new(0, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                                FontSize = Enum.FontSize.Size12, 
                                Name = "title", 
                                Position = UDim2.new(0, 2, 0.5, 0), 
                                Size = UDim2.new(1, -30, 1, 0), 
                                TextColor3 = Color3.fromHex("ebebeb"), 
                                TextSize = 12, 
                                TextXAlignment = Enum.TextXAlignment.Left
                            })
                        })
                    });
        
                    local validExtensions = { "png", "jpg", "jpeg" };
        
                    local function sendRequest(query, method, headers, body)
                        local succ, res = pcall(_request, {
                            Url = query,
                            Method = method,
                            Headers = headers,
                            Body = body
                        });
                        if succ == false or res.Success == false then
                            return;
                        end
                        return res.Body;
                    end
        
                    local function setIcon(icon, path)
                        local fileName = urlEncode(httpService, path);
                        local ext = select(-1, unpack(string.split(fileName, "%2E")));
                        local res = sendRequest(path, "GET");
                        if res and icon.Parent.Parent == scroll then
                            local filePath = string.format("evonui/search/%s.%s", fileName, ext);
                            _writefile(filePath, res);
                            icon.Image = _getcustomasset(filePath);
                        end
                    end
        
                    local function addScript(title, icon, source)
                        local item = template:Clone();
                        item.title.Text = title;
                        item.Parent = scroll;
        
                        task.defer(setIcon, item.icon, icon);
                        addTransparencyHighlights(item.execute);
        
                        item.execute.MouseButton1Click:Connect(function()
                            runCode(source);
                        end);
                    end
        
                    local function calculateCellSize()
                        local absoluteSize = scroll.AbsoluteSize;
                        local sizeX = absoluteSize.X * 0.25 - 6;
                        local sizeY = 0;
                        for i = 5, 1, -1 do
                            local potentialValue = (absoluteSize.Y - (2 + 6 * (i - 1))) / i;
                            if sizeX and potentialValue > sizeX then
                                break;
                            end
                            sizeY = potentialValue;
                        end
                        layout.CellSize = UDim2.new(0.25, -6, 0, sizeY);
                    end
        
                    local isSearching = false;
        
                    local searchFunctions = {
                        ScriptBlox = function(query)
                            local res = sendRequest(string.format("https://scriptblox.com/api/script/search?q=%s&max=20&mode=free", query), "GET");
                            if res then
                                local scripts = jsonDecode(httpService, res).result.scripts;
                                for i = 1, #scripts do
                                    local scriptResult = scripts[i];
                                    if scriptResult.isPatched == false then
                                        if string.sub(scriptResult.game.imageUrl, -4) == "webp" then
                                            scriptResult.game.imageUrl = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId);
                                        elseif string.sub(scriptResult.game.imageUrl, 1, 1) == "/" then
                                            scriptResult.game.imageUrl = "https://scriptblox.com" .. scriptResult.game.imageUrl;
                                        end
                                        addScript(scriptResult.title, scriptResult.game.imageUrl, scriptResult.script);
                                    end
                                end
                            end
                        end,
                        RScripts = function(query)
                            if rScriptsApiKey == "0" then
                                warn("RScripts API Key Not Supplied");
                                return;
                            end
                        
                            local res = sendRequest(string.format("https://api.rscripts.net/search/basic/%s/views/desc/1/%s", query, rScriptsApiKey), "GET");
                            if res then
                                local scripts = jsonDecode(httpService, res).scripts;
                                if scripts then
                                    for i = 1, #scripts do
                                        local v = scripts[i];
                                        if v.download then
                                            addScript(v.title, v.image, string.format("loadstring(game:HttpGet(\"%s\", true))();", v.download));
                                        end
                                    end
                                end -- else they got no scripts lol
                            end
                        end
                    };
        
                    search.MouseButton1Click:Connect(function()
                        if isSearching == false then
                            isSearching = true;
                            local children = scroll:GetChildren();
                            for i = 1, #children do
                                local v = children[i];
                                if v:IsA("Frame") then
                                    v:Destroy();
                                end
                            end
                            if _isfolder("evonui/search") == false then
                                _makefolder("evonui/search");
                            end
                            local files = _listfiles("evonui/search");
                            for i = 1, #files do
                                _delfile(files[i]);
                            end
                            calculateCellSize();
                            searchFunctions[uiSettings.searchAPI](urlEncode(httpService, searchInput.Text));
                            isSearching = false;
                        end
                    end);
        
                    resizeFunctions[#resizeFunctions + 1] = function()
                        search.Size = UDim2.new(0, search.TextBounds.X + 30, 0, 30);
                        searchInput.Size = UDim2.new(1, -(search.TextBounds.X + 54), 0, 30);
                    end
                end
            end
        
            --[[ Console ]]--
        
            do
                local console = tabs.console;
        
                local scroll = console.main.container;
                local content = scroll.content;
        
                do
                    local function getTextBounds(input)
                        return textService:GetTextSize(input, content.TextSize, content.Font, hugeVector2);
                    end
        
                    content:GetPropertyChangedSignal("Text"):Connect(function()
                        local input = content.Text;
                        local textBounds = getTextBounds(input);
                        scroll.CanvasSize = UDim2.new(0, textBounds.X, 0, math.min(textBounds.Y, maxLines * 11));
                    end);
                end
        
                do
                    local bottom = console.bottom;
                    local items = bottom:GetChildren();
                    for i = 1, #items do
                        local v = items[i];
                        if v:IsA("TextButton") then
                            addTransparencyHighlights(v);
                        end
                    end
        
                    local clearConsole = bottom.clearConsole;
                    local copyConsole = bottom.copyConsole;
        
                    clearConsole.MouseButton1Click:Connect(function()
                        content.Text = "";
                    end);
        
                    copyConsole.MouseButton1Click:Connect(function()
                        _setclipboard(content.Text);
                    end);
        
                    resizeFunctions[#resizeFunctions + 1] = function()
                        clearConsole.Size = UDim2.new(0, clearConsole.title.TextBounds.X + 36, 0, 22);
                        copyConsole.Size = UDim2.new(0, copyConsole.title.TextBounds.X + 36, 0, 22);
                    end
                end
        
                do
                    local typeToInfo = {
                        MessageOutput = {
                            colour = "#45cc57",
                            prefix = "Output"
                        },
                        MessageInfo = {
                            colour = "#2f6cd6",
                            prefix = "Info"
                        },
                        MessageWarning = {
                            colour = "#d49d37",
                            prefix = "Warning"
                        },
                        MessageError = {
                            colour = "#d44437",
                            prefix = "Error"
                        }
                    };
        
                    local function appendConsole(msg, msgType)
                        local info = typeToInfo[msgType.Name];
                        if info == nil then
                            return;
                        end
                        content.Text ..= (content.Text == "" and "​ ​ " or "\n") .. string.format("<font color=\"%s\">[%d:%s]</font> %s", info.colour, os.time(), info.prefix, msg);
                    end
        
                    game:GetService("LogService").MessageOut:Connect(appendConsole);
        
                    do
                        local lprint, linfo, lwarn, lerror = removeTrace("logprint"), removeTrace("loginfo"), removeTrace("logwarn"), removeTrace("logerror");
        
                        env.rconsoleprint = _newcclosure(function(msg)
                            appendConsole(msg, Enum.MessageType.MessageOutput);
                            lprint(msg);
                        end);
        
                        env.rconsoleinfo = _newcclosure(function(msg)
                            appendConsole(msg, Enum.MessageType.MessageInfo);
                            linfo(msg);
                        end);
        
                        env.rconsolewarn = _newcclosure(function(msg)
                            appendConsole(msg, Enum.MessageType.MessageWarning);
                            lwarn(msg);
                        end);
        
                        env.rconsoleerror = _newcclosure(function(msg)
                            appendConsole(msg, Enum.MessageType.MessageError);
                            lerror(msg);
                        end);
        
                        env.rconsoleclear = _newcclosure(function()
                            content.Text = "";
                        end);
        
                        env.rconsoleshow = _newcclosure(function()
                            if selectedTab ~= console then
                                selectTab("console");
                            end
                        end);
        
                        env.rconsolehide = _newcclosure(function()
                            if selectedTab == console then
                                selectTab("editor");
                            end
                        end);
        
                        env.rconsoletoggle = _newcclosure(function()
                            selectTab(selectedTab == console and "editor" or "console");
                        end);
        
                        env.rconsolehidden = _newcclosure(function()
                            return selectedTab ~= console;
                        end);
                    end
                end
            end
        
            --[[ Settings ]]--
        
            do
                local _settings = tabs.settings;
        
                do
                    local template = create("TextButton", { 
                        AutoButtonColor = false,
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Text = "",
                        Name = "languageExample", 
                        Size = UDim2.new(1, 0, 0, 30), 
                        ZIndex = 2
                    }, {
                        create("Frame", { 
                            BackgroundColor3 = Color3.fromHex("141414"), 
                            Name = "flagContainer", 
                            Size = UDim2.new(0, 40, 0, 30), 
                            ZIndex = 2
                        }, {
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("101010"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "", 
                                Name = "icon", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -8, 1, -6), 
                                ZIndex = 2
                            })
                        }),
                        create("TextLabel", { 
                            AnchorPoint = Vector2.new(1, 0.5), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size11, 
                            Name = "title", 
                            Position = UDim2.new(1, 0, 0.5, 0), 
                            Size = UDim2.new(1, -50, 1, 0), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 11, 
                            TextXAlignment = Enum.TextXAlignment.Left, 
                            ZIndex = 2
                        })
                    });
        
                    local languages = _settings.left.languages;
                    local title = languages.title;
        
                    local drop = languages.drop;
                    local container = drop.container;
        
                    container.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                        container.CanvasSize = UDim2.new(0, 0, 0, container.list.AbsoluteContentSize.Y + 2);			
                    end);
        
                    for i, v in next, sortedLanguageDatabase do
                        local clone = template:Clone();
                        clone.Name = v.key;
                        clone.title.Text = v.value.indicator;
                        clone.flagContainer.icon.Image = v.value.flag;
        
                        clone.MouseButton1Click:Connect(function()
                            title.Text = v.value.indicator;
                            updateSettings("language", v.key);
                        end);
        
                        clone.Parent = container;
                    end
        
                    do
                        local isOpen = false;
        
                        local function toggleDrop()
                            isOpen = not isOpen;
                            drop.Visible = isOpen;
                        end
        
                        title.MouseButton1Click:Connect(toggleDrop);
                        languages.indicator.MouseButton1Click:Connect(toggleDrop);
                    end
                end
        
                do
                    local template = create("TextButton", {
                        AutoButtonColor = false, 
                        BackgroundColor3 = Color3.fromHex("ffffff"), 
                        BackgroundTransparency = 1, 
                        Name = "apiExample", 
                        Size = UDim2.new(1, 0, 0, 30), 
                        Text = "", 
                        ZIndex = 2
                    }, {
                        create("Frame", { 
                            BackgroundColor3 = Color3.fromHex("141414"), 
                            Name = "iconContainer", 
                            Size = UDim2.new(0, 30, 0, 30), 
                            ZIndex = 2
                        }, {
                            create("UIStroke", { 
                                ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
                                Color = Color3.fromHex("101010"), 
                                Name = "stroke", 
                                Thickness = 1.2
                            }),
                            create("UICorner", { 
                                CornerRadius = UDim.new(0, 4), 
                                Name = "corner"
                            }),
                            create("ImageLabel", { 
                                AnchorPoint = Vector2.new(0.5, 0.5), 
                                BackgroundColor3 = Color3.fromHex("ffffff"), 
                                BackgroundTransparency = 1, 
                                Image = "", 
                                Name = "icon", 
                                Position = UDim2.new(0.5, 0, 0.5, 0), 
                                Size = UDim2.new(1, -6, 1, -6), 
                                ZIndex = 2
                            })
                        }),
                        create("TextLabel", { 
                            AnchorPoint = Vector2.new(1, 0.5), 
                            BackgroundColor3 = Color3.fromHex("ffffff"), 
                            BackgroundTransparency = 1, 
                            FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
                            FontSize = Enum.FontSize.Size11, 
                            Name = "title", 
                            Position = UDim2.new(1, 0, 0.5, 0), 
                            Size = UDim2.new(1, -40, 1, 0), 
                            Text = "", 
                            TextColor3 = Color3.fromHex("ebebeb"), 
                            TextSize = 11, 
                            TextXAlignment = Enum.TextXAlignment.Left, 
                            ZIndex = 2
                        })
                    });
        
                    local scriptApi = _settings.right.scriptApi;
                    local title = scriptApi.title;
        
                    local drop = scriptApi.drop;
                    local container = drop.container;
        
                    for i, v in next, validSearchFunctions do
                        local clone = template:Clone();
                        clone.Name = i;
                        clone.title.Text = i;
                        clone.iconContainer.icon.Image = v;
        
                        clone.MouseButton1Click:Connect(function()
                            title.Text = i;
                            updateSettings("searchAPI", i);
                        end);
        
                        clone.Parent = container;
                    end
        
                    do
                        local isOpen = false;
        
                        local function toggleDrop()
                            isOpen = not isOpen;
                            drop.Visible = isOpen;
                        end
        
                        title.MouseButton1Click:Connect(toggleDrop);
                        scriptApi.indicator.MouseButton1Click:Connect(toggleDrop);
                    end
                end
        
                local function updateToggle(toggle, key, value)
                    tween(toggle.indicator.icon, 0.18, {
                        ImageTransparency = value and 0 or 1;
                    });
                    updateSettings(key, value);
                end
        
                do
                    local unlockFps = _settings.left.unlockFps;
        
                    local function run(state)
                        _setfpscap(state and (uiSettings.vSync and _getfpsmax() or uiSettings.fps) or 60);
                    end
        
                    unlockFps.MouseButton1Click:Connect(function()
                        local state = not uiSettings.unlockFps;
                        updateToggle(unlockFps, "unlockFps", state);
                        run(state);
                    end);
        
                    if uiSettings.unlockFps then
                        run(true);
                    end
                end
        
                do
                    local vSync = _settings.left.vSync;
        
                    local function run(state)
                        if uiSettings.unlockFps then
                            _setfpscap(state and _getfpsmax() or uiSettings.fps);
                        end
                    end
        
                    vSync.MouseButton1Click:Connect(function()
                        local state = not uiSettings.vSync;
                        updateToggle(vSync, "vSync", state);
                        run(state);
                    end);
        
                    if uiSettings.vSync then
                        run(true);
                    end
                end
        
                do
                    local fpsValue = _settings.left.fpsValue;
        
                    local container = fpsValue.container;
                    local indicator = container.indicator;
        
                    local function run(value)
                        tween(indicator, 0.18, {
                            Size = UDim2.new((value - 1) / 998, 0, 1, 0)
                        });
                        fpsValue.value.Text = tostring(value);
                        if uiSettings.unlockFps then
                            _setfpscap(value);
                        end
                    end
        
                    container.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                            local inputConn = userInputService.InputChanged:Connect(function(input)
                                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                                    local value = math.clamp(math.round(1 + (998 * (input.Position.X - container.AbsolutePosition.X) / container.AbsoluteSize.X)), 1, 999);
                                    uiSettings.fps = value;
                                    run(value);
                                end
                            end);
                            local conn; conn = input.Changed:Connect(function()
                                if input.UserInputState == Enum.UserInputState.End then
                                    inputConn:Disconnect();
                                    conn:Disconnect();
                                    updateSettings("fps", uiSettings.fps);
                                end
                            end);
                        end
                    end);
        
                    if uiSettings.fps ~= 60 then
                        run(uiSettings.fps);
                    end
                end
        
                do
                    local antiAfk = _settings.right.antiAfk;
        
                    local function run(state)
                        local conns = _getconnections(localPlayer.Idled);
                        for i = 1, #conns do
                            local v = conns[i];
                            if state then
                                v:Disable();
                            else
                                v:Enable();
                            end
                        end
                    end
        
                    antiAfk.MouseButton1Click:Connect(function()
                        local state = not uiSettings.antiAfk;
                        updateToggle(antiAfk, "antiAfk", state);
                        run(state);
                    end);
        
                    if uiSettings.antiAfk then
                        run(true);
                    end
                end
        
                do
                    local hopModeBtns = _settings.right.serverHopMode;
                    local selectedBtn = hopModeBtns[uiSettings.serverHopMode];
        
                    local function selectMode(btn)
                        if selectedBtn ~= btn then
                            tween(selectedBtn, 0.18, {
                                BackgroundColor3 = Color3.fromHex("181818");
                            });
                            selectedBtn = btn;
                            tween(btn, 0.18, {
                                BackgroundColor3 = Color3.fromHex("303030");
                            });
                            updateSettings("serverHopMode", btn.Name);
                        end
                    end
        
                    local buttonList = hopModeBtns:GetChildren();
                    for i = 1, #buttonList do
                        local v = buttonList[i];
                        if v:IsA("TextButton") then
                            v.MouseButton1Click:Connect(function()
                                selectMode(v);
                            end);
                        end
                    end
                    
                    task.defer(function()
                        local data, count, total = {}, 0, 2;
                        for i = 1, #buttonList do
                            local v = buttonList[i];
                            if v:IsA("TextButton") then
                                count, total, data[v] = count + 1, total + v.TextBounds.X, v.TextBounds.X;
                            end
                        end
                        local suffix = (hopModeBtns.AbsoluteSize.X - (total + 8 * (count - 1))) / count;
                        for i, v in next, data do
                            i.Size = UDim2.new(0, v + suffix, 0, 28);
                        end
                    end);
                end
        
                do
                    local function teleport(jobId)
                        teleportService:TeleportToPlaceInstance(game.PlaceId, jobId);
                    end
        
                    local function serverHop()
                        local mode, jobId = uiSettings.serverHopMode, nil;
                        if mode == "bestPing" or mode == "random" then
                            local servers = {};
                            local cursor, count = "", 0;
                            repeat
                                local res = jsonDecode(httpService, game:HttpGetAsync(string.format("https://games.roblox.com/v1/games/%d/servers/0?&excludeFullGames=true&cursor=%s", game.PlaceId, cursor), true));
                                for i = 1, #res.data do
                                    local v = res.data[i];
                                    if v.id ~= game.JobId then
                                        servers[#servers + 1] = v;
                                    end
                                end
                                cursor = res.nextPageCursor;
                                count = count + 1;
                            until cursor == nil or count >= 25;
                            if mode == "Ping" then
                                table.sort(servers, function(a, b)
                                    return a.ping < b.ping;
                                end);
                                jobId = servers[1] and servers[1].id;
                            else
                                jobId = servers[1] and servers[math.random(1, #servers)].id;
                            end
                        else
                            local res = jsonDecode(httpService, game:HttpGetAsync(string.format("https://games.roblox.com/v1/games/%d/servers/0?sortOrder=%d&excludeFullGames=true&limit=10", game.PlaceId, mode == "full" and 2 or 1), true));
                            for i = 1, #res.data do
                                local v = res.data[i];
                                if v.id ~= game.JobId then
                                    jobId = v.id;
                                    break;
                                end
                            end
                        end
                        if jobId then
                            teleport(jobId);
                        end
                    end
        
                    _settings.right.serverHop.hop.MouseButton1Click:Connect(serverHop);
                    _settings.right.serverHop.rejoin.MouseButton1Click:Connect(function()
                        teleport(game.JobId);
                    end);
                end
        
                task.defer(function()
                    _settings.left.CanvasSize = UDim2.new(0, 0, 0, _settings.left.list.AbsoluteContentSize.Y + 2);
                    _settings.right.CanvasSize = UDim2.new(0, 0, 0, _settings.right.list.AbsoluteContentSize.Y + 2);
                end);
            end
        
            changeLanguage(uiSettings.language);
            rconsoleprint("Evon-Android Successfully Loaded!");
        end;
        
        --[[ Load ]]--
        
        loadKeyUI(loadMainUI);
        end
        
  	end
})
Tab:AddButton({
	Name = "Hydrogen V2",
	Callback = function()
     local cache = { modules = { home = {}, monitors = {} }, ui = { tabs = { executor = {}, hide = {}, home = { templates = {} }, scripts = { templates = {} }, settings = {} }, popups = {} }, startup = {} }; do --[[ Connection ]]-- local connection = {}; connection.__index = connection; function connection.new(signal, fn) return setmetatable({ _signal = signal, _fn = fn }, connection); end function connection:Disconnect() self._signal[self] = nil; end --[[ Signal ]]-- local signal = {}; signal.__index = signal; function signal.new() return setmetatable({}, signal); end function signal:Connect(fn: any) local conn = connection.new(self, fn); self[conn] = true; return conn; end function signal:Once(fn: any) local conn; conn = self:Connect(function(...) conn:Disconnect(); fn(...); end); return conn; end function signal:Fire(...) for conn, _ in self do task.spawn(conn._fn, ...); end end function signal:Wait() local thread = coroutine.running(); local conn; conn = self:Connect(function(...) conn:Disconnect(); task.spawn(thread, ...); end); return coroutine.yield(); end function signal:DisconnectAll() table.clear(self); end cache.modules.signal = signal; end do local tweenService = game:GetService("TweenService"); local linkRegex = "^[%s]*loadstring%(game:HttpGet[Async]*%([\"'](.+)[\"'][%s*,%s*true]*%)%)%b();?[%s]*$"; local fileRegex = "^.+/(.+)"; local testStrings = { Standard = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua"))()]], OtherQuotationMark = [[loadstring(game:HttpGet('https://projectevo.xyz/loader.lua'))()]], GetAsync = [[loadstring(game:HttpGetAsync("https://projectevo.xyz/loader.lua"))()]], TrueNoSpace = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua",true))()]], TrueSpace = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua", true))()]], TrueWrongSpace = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua",true))()]], TrueTooMuchSpace = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua", true))()]], SemiColon = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua"))();]], TrimStart = [[ loadstring(game:HttpGet("https://projectevo.xyz/loader.lua"))()]], TrimEnd = [[loadstring(game:HttpGet("https://projectevo.xyz/loader.lua"))() ]], TrimBoth = [[ loadstring(game:HttpGet("https://projectevo.xyz/loader.lua"))() ]] }; --[[ Module ]]-- local regex = {}; function regex:Test() for i, v in testStrings do print(i, string.match(v, linkRegex)); end end function regex:ExtractLink(content: string): string? return string.match(content, linkRegex); end function regex:ExtractFile(content: string): string? return string.match(content, fileRegex); end cache.modules.regex = regex; end do local tweenService = game:GetService("TweenService"); local denominations = {"K", "M", "B", "T", "q", "Q", "s", "S", "O", "N", "d", "U", "D"}; --[[ Module ]]-- local utils = {}; function utils:Create(className: string, properties: table?, children: table?) local x = Instance.new(className); for i, v in properties do if i ~= "Parent" then x[i] = v; end end if children then for i, v in children do v.Parent = x; end end if properties.Parent then x.Parent = properties.Parent; end return x; end function utils:Iconize(id: string) --[[if self:IsThirdParty() then return getcustomasset(string.format("internalicons/%s.png", id)); end]] return "rbxassetid://" .. id; end function utils:Tween(inst: Instance, duration: number, properties: table, ...): Tween local tween = tweenService:Create(inst, TweenInfo.new(duration, ...), properties); task.spawn(tween.Play, tween); return tween; end function utils:DynamicParent(inst: Instance) inst.Parent = self:IsThirdParty() and gethui() or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"); end function utils:IsThirdParty(): boolean return identifyexecutor ~= nil; end function utils:RoundNumber(input: number, float: number): number local bracket = 1 / float; return math.round(input * bracket) / bracket; end function utils:FormatNumber(input: number, float: number): string if input < 1000 then return tostring(input); end local denominationIndex = math.floor(math.log10(input) / 3); local substring = tostring(self:RoundNumber(input / (10 ^ (denominationIndex * 3)), float)); return substring .. tostring(denominations[denominationIndex]); end function utils:Request(url: string, method: string, headers: any?, body: any?): any local s, r = pcall(request, { Url = url, Method = method, Headers = headers, Body = body }); if s == false or r.Success == false or r.StatusCode ~= 200 then return; end return r.Body; end function utils:DeepCopy(x: {any}) local y = {}; for i, v in x do y[i] = type(v) == "table" and self:DeepCopy(v) or v; end return y; end cache.modules.utils = utils; end do --[[ Variables ]]-- local signal = cache.modules.signal; local signalCache = {}; --[[ Module ]]-- local settingsUpdates = {}; function settingsUpdates:GetPropertyUpdatedSignal(path: string) if signalCache[path] == nil then signalCache[path] = signal.new(); end return signalCache[path]; end function settingsUpdates:Fire(path: string, value: any) local sig = signalCache[path]; if sig then sig:Fire(value); end end cache.modules.settingsUpdates = settingsUpdates; end do --[[ Variables ]]-- local httpService = game:GetService("HttpService"); local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local customSettings = { autoExecute = true, consoleLogs = false, isMenuExtended = false, saveData = { key = "", username = "", password = "" }, monitors = { fps = true, ping = true, signal = false, battery = false, playerCount = false }, fps = { unlocked = false, vSync = false, cap = 60 }, spoofInfo = { enabled = false, name = "Psst. Don't tell anyone ;)", id = 156 } }; local isThirdParty = utils:IsThirdParty(); local _writeuifile = isThirdParty and clonefunction(writeuifile); --[[ Functions ]]-- local function recurSettings(base: {any}, json: {any}) for i, v in json do if base[i] ~= nil and typeof(base[i]) == typeof(v) then if typeof(base[i]) == "table" then recurSettings(base[i], v); else base[i] = v; end end end end local function saveSettings() if isThirdParty then _writeuifile("settings.json", httpService:JSONEncode(utils:DeepCopy(customSettings))); end end local function createAutosaveMetatable(options: {any}, hierarchy: string) return setmetatable({}, { __index = function(_, k) return options[k]; end, __newindex = function(_, k, v) options[k] = v; saveSettings(); settingsUpdates:Fire(string.format("%s.%s", hierarchy, k), v); end, __iter = function() return next, options; end }); end --[[ Setup ]]-- if isThirdParty and isuifile("settings.json") then local succ, res = pcall(httpService.JSONDecode, httpService, readuifile("settings.json")); if succ then recurSettings(customSettings, res); else task.defer(error, "settings file is corrupted"); end end for i, v in customSettings do if type(v) == "table" then customSettings[i] = createAutosaveMetatable(v, i); end end --[[ Module ]]-- cache.modules.globals = { isMinimised = false, isPremium = false, defaultContent = "print('Hydrogen V2 Winning');", customSettings = setmetatable({}, { __index = function(_, k) return customSettings[k]; end, __newindex = function(_, k, v) customSettings[k] = v; saveSettings(); settingsUpdates:Fire(k, v); end }) }; end do local utils = cache.modules.utils; local monitorCache = {}; local monitorHandlers = {}; --[[ Functions ]]-- function monitorHandlers.fps(frame: Frame, monitor: any, value: any) local percentage = math.clamp(value / monitor.max, 0, 1); frame.text.Text = math.round(value); utils:Tween(frame.icon.background.highlight.gradient, 0.25, { Offset = Vector2.new(percentage - 0.5, 0) }); utils:Tween(frame.icon.needleContainer, 0.25, { Rotation = percentage * 90 - 45 }); end function monitorHandlers.ping(frame: Frame, monitor: any, value: any) local percentage = 1 - math.clamp(value / 1000, 0, 1); frame.text.Text = math.round(value); utils:Tween(frame.icon.background.highlight.gradient, 0.25, { Offset = Vector2.new(percentage - 0.5, 0) }); utils:Tween(frame.icon.needleContainer, 0.25, { Rotation = percentage * 90 - 45 }); end function monitorHandlers.signal(frame: Frame, monitor: any, value: any) frame.text.Text = value; utils:Tween(frame.icon.gradient, 0.25, { Offset = Vector2.new(-0.75 + (math.floor((value - 5) * (1 / 25)) / (1 / 25)) / 100, 0) }); end function monitorHandlers.battery(frame: Frame, monitor: any, value: any) frame.text.Text = value; utils:Tween(frame.icon.fill.gradient, 0.25, { Offset = Vector2.new(value / 100 - 0.5, 0) }); end function monitorHandlers.playerCount(frame: Frame, monitor: any, value: any) frame.text.Text = value; end --[[ Module ]]-- local monitors = {} function monitors:Start(monitorData: any) for i, v in monitorData do local monitor = cache.modules.monitors[i]; monitorCache[i] = monitor; monitor.updated:Connect(function(...) monitorHandlers[i](v, monitorCache[i], ...); end); monitor:Start(); end end cache.modules.home.monitors = monitors; end do local httpService = game:GetService("HttpService"); local regex = cache.modules.regex; local isThirdParty = cache.modules.utils:IsThirdParty(); local backupCache = {}; local _isuifile = isThirdParty and clonefunction(isuifile); --[[ Functions ]]-- local function validateLink(link: string): boolean if isThirdParty then return select(1, pcall(game.HttpGet, game, link)); end return true; end --[[ Module ]]-- local recent = { onNewLinkExecuted = cache.modules.signal.new() }; function recent:GetCache(): any if self.cache == nil then local store, cache = backupCache, {}; if isThirdParty then if _isuifile("cache.json") then local success, res = pcall(httpService.JSONDecode, httpService, readuifile("cache.json")); store = success and res or {}; if success == false then task.defer(error, "recent script cache file is corrupted"); end end end for i, v in store do local link = type(v) == "string" and regex:ExtractLink(v); if link and validateLink(link) then cache[#cache + 1] = { src = v, link = link, name = regex:ExtractFile(link) }; end end self.cache = cache; end return self.cache; end function recent:Parse(content: string) local link = regex:ExtractLink(content); if link and validateLink(link) then local data = { src = content, link = link, name = regex:ExtractFile(link) }; self.cache[#self.cache + 1] = data; self.onNewLinkExecuted:Fire(data); end end cache.modules.home.recent = recent; end do --[[ Variables ]]-- local globals = cache.modules.globals; local utils = cache.modules.utils; local heartbeat = game:GetService("RunService").Heartbeat; local isThirdParty = utils:IsThirdParty(); --[[ Module ]]-- local batteryMonitor = { running = false, interval = 0.5, value = isThirdParty and getbatterypercentage() or 0, updated = cache.modules.signal.new() }; function batteryMonitor:Start() if self.running == false then self.running = true; local init = 0; if isThirdParty then self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = getbatterypercentage(); self.updated:Fire(self.value); end end end); else self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = self.value == 0 and 100 or self.value - 5; self.updated:Fire(self.value); end end end); end end end function batteryMonitor:Stop() if self.running == true then self.running = false; self.connection:Disconnect(); self.connection = nil; end end function batteryMonitor:Validate() return globals.customSettings.monitors.battery and not globals.isMinimised; end cache.modules.monitors.battery = batteryMonitor; end do --[[ Variables ]]-- local globals = cache.modules.globals; local utils = cache.modules.utils; local players = game:GetService("Players"); local isThirdParty = utils:IsThirdParty(); --[[ Module ]]-- local playerMonitor = { running = false, interval = 0.5, -- doesn't matter for this one lol value = #players:GetPlayers(), updated = cache.modules.signal.new() }; function playerMonitor:Start() if self.running == false then self.running = true; playerMonitor.updated:Fire(#players:GetPlayers()); self.playerAdded = players.PlayerAdded:Connect(function() playerMonitor.updated:Fire(#players:GetPlayers()); end); self.playerRemoving = players.PlayerRemoving:Connect(function() playerMonitor.updated:Fire(#players:GetPlayers()); end); end end function playerMonitor:Stop() if self.running == true then self.running = false; self.playerAdded:Disconnect(); self.playerAdded = nil; self.playerRemoving:Disconnect(); self.playerRemoving = nil; end end function playerMonitor:Validate() return globals.customSettings.monitors.playerCount and not globals.isMinimised; end cache.modules.monitors.playerCount = playerMonitor; end do --[[ Variables ]]-- local globals = cache.modules.globals; local utils = cache.modules.utils; local heartbeat = game:GetService("RunService").Heartbeat; local fps = game:GetService("Stats").Workspace.FPS; local isThirdParty = utils:IsThirdParty(); --[[ Module ]]-- local fpsMonitor = { running = false, interval = 0.5, value = isThirdParty and fps:GetValue() or 0, max = isThirdParty and getfpsmax() or 60, updated = cache.modules.signal.new() }; function fpsMonitor:Start() if self.running == false then self.running = true; local init = 0; if isThirdParty then self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = fps:GetValue(); self.updated:Fire(self.value); end end end); else self.connection = heartbeat:Connect(function(step) if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = 1 / step; self.updated:Fire(self.value); end end end); end end end function fpsMonitor:Stop() if self.running == true then self.running = false; self.connection:Disconnect(); self.connection = nil; end end function fpsMonitor:Validate() return globals.customSettings.monitors.fps and not globals.isMinimised; end cache.modules.monitors.fps = fpsMonitor; end do --[[ Variables ]]-- local globals = cache.modules.globals; local utils = cache.modules.utils; local localPlayer = game:GetService("Players").LocalPlayer; local heartbeat = game:GetService("RunService").Heartbeat; local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]; local isThirdParty = utils:IsThirdParty(); local pinger = isThirdParty == false and script:WaitForChild("pinger"); --[[ Module ]]-- local pingMonitor = { running = false, interval = 0.5, value = isThirdParty and ping:GetValue() or 0, updated = cache.modules.signal.new() }; function pingMonitor:Start() if self.running == false then self.running = true; local init = 0; if isThirdParty then self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = ping:GetValue(); self.updated:Fire(self.value); end end end); else self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; task.spawn(function() self.value = (pinger:InvokeServer() - now) * 2000; end); self.updated:Fire(self.value); end end end); end end end function pingMonitor:Stop() if self.running == true then self.running = false; self.connection:Disconnect(); self.connection = nil; end end function pingMonitor:Validate() return globals.customSettings.monitors.ping and not globals.isMinimised; end cache.modules.monitors.ping = pingMonitor; end do --[[ Variables ]]-- local globals = cache.modules.globals; local utils = cache.modules.utils; local heartbeat = game:GetService("RunService").Heartbeat; local isThirdParty = utils:IsThirdParty(); --[[ Module ]]-- local signalMonitor = { running = false, interval = 0.5, value = isThirdParty and getsignalstrength() or 0, updated = cache.modules.signal.new() }; function signalMonitor:Start() if self.running == false then self.running = true; local init = 0; if isThirdParty then self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = getsignalstrength(); self.updated:Fire(self.value); end end end); else self.connection = heartbeat:Connect(function() if self:Validate() then local now = tick(); if now - init >= self.interval then init = now; self.value = self.value == 100 and 0 or self.value + 5; self.updated:Fire(self.value); end end end); end end end function signalMonitor:Stop() if self.running == true then self.running = false; self.connection:Disconnect(); self.connection = nil; end end function signalMonitor:Validate() return globals.customSettings.monitors.signal and not globals.isMinimised; end cache.modules.monitors.signal = signalMonitor; end do --[[ Variables ]]-- local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local basis; --[[ Functions ]]-- local function toggleIndicator(instance: Instance, value: boolean) utils:Tween(instance.toggle.indicator, 0.25, { Position = UDim2.new(0.5, value and 11 or -11, 0.5, 0) }); utils:Tween(instance.toggle.indicator.gradient, 0.25, { Offset = Vector2.new(value and 0 or -1.25, 0) }); end local function createBasis(directory: Instance) basis = utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "monitorChoice", Parent = directory, Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0, 420, 0, 212), Visible = false }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 16, 0, 12), Size = UDim2.new(1, -32, 0, 18), Text = "Monitors", TextColor3 = Color3.fromHex("ffffff"), TextSize = 18, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 16, 0, 32), Size = UDim2.new(1, -32, 0, 14), Text = "Choose which monitors are displayed on the home page.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "container", Position = UDim2.new(0.5, 0, 1, -8), Size = UDim2.new(1, -16, 1, -60) }, { utils:Create("UIGridLayout", { CellPadding = UDim2.new(0, 10, 0, 15), CellSize = UDim2.new(0.5, -5, 0, 28), Name = "grid", SortOrder = Enum.SortOrder.LayoutOrder, VerticalAlignment = Enum.VerticalAlignment.Center }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "fps", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.monitors.fps and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.monitors.fps and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(1, -24, 1, 0), Text = "FPS", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "ping", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.monitors.ping and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.monitors.ping and 0 or -1.25), Rotation = 30 }) }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(1, -24, 1, 0), Text = "Ping", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "signal", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.monitors.signal and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.monitors.signal and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(1, -24, 1, 0), Text = "WiFi Signal", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "battery", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.monitors.battery and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.monitors.battery and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(1, -24, 1, 0), Text = "Battery Life", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "playerCount", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.monitors.playerCount and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.monitors.playerCount and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(1, -24, 1, 0), Text = "Player Count", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }) }), utils:Create("ImageButton", { AnchorPoint = Vector2.new(1, 0), AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14544922843", Name = "close", Position = UDim2.new(1, -10, 0, 10), Size = UDim2.new(0, 24, 0, 24) }) }); for i, v in basis.container:GetChildren() do if v:IsA("TextButton") then settingsUpdates:GetPropertyUpdatedSignal("monitors." .. v.Name):Connect(function(value) toggleIndicator(v, value); end); v.MouseButton1Click:Connect(function() globals.customSettings.monitors[v.Name] = not globals.customSettings.monitors[v.Name]; end); end end basis.close.MouseButton1Click:Connect(function() basis.Visible = false end); return basis; end --[[ Module ]]-- local init = {}; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end return createBasis(directory); end function init:IsInitialized() return basis ~= nil; end cache.ui.popups.monitors = init; end do --[[ Variables ]]-- local basis; --[[ Functions ]]-- local function createBasis(directory: Instance) basis = cache.modules.utils:Create("ScreenGui", { DisplayOrder = 999999, IgnoreGuiInset = true, Name = "popups", Parent = directory, ResetOnSpawn = false, ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets }); end --[[ Module ]]-- local init = { instances = {}; }; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); self:LoadPopups(); end function init:IsInitialized(): boolean return basis ~= nil; end function init:LoadPopups() for i, v in { "monitors" } do self.instances[v] = cache.ui.popups[v]:Initialize(basis); end end cache.ui.popups.init = init; end do --[[ Variables ]]-- local userInputService = game:GetService("UserInputService"); local currentCamera = workspace.CurrentCamera; local globals = cache.modules.globals; local utils = cache.modules.utils; local menus; local tabs; local dragBar; local background; local dragBarInternal; local selectedTab; local selectedButton; --[[ Functions ]]-- local function deselectTab() if selectedTab then utils:Tween(selectedButton.title, 0.25, { TextColor3 = Color3.fromHex("adb0ba") }); utils:Tween(selectedButton.icon.gradient, 0.25, { Offset = Vector2.new(1.5, 0) }); selectedTab.Visible = false; end end local function selectTab(button: TextButton) if selectedButton ~= button then if selectedTab then deselectTab(); end selectedButton, selectedTab = button, tabs[button.Name]; utils:Tween(selectedButton.title, 0.25, { TextColor3 = Color3.fromHex("ffffff") }); utils:Tween(selectedButton.icon.gradient, 0.25, { Offset = Vector2.new() }); selectedTab.Visible = true; end end local function triggerMenuUpdate(offset: number) utils:Tween(background, 0.25, { BackgroundTransparency = 0.7 + offset * 0.3 }); utils:Tween(dragBarInternal, 0.25, { BackgroundTransparency = 0.25 + (1 - offset) * 0.75 }); return utils:Tween(menus, 0.25, { Position = UDim2.new(1, (globals.customSettings.isMenuExtended and 170 or 80) * offset, 0.5, 0) }); end local function triggerMenuSwitch(open: boolean) globals.isMinimised = not open; if open then triggerMenuUpdate(0).Completed:Connect(function() selectedTab.Visible = true; end); else selectedTab.Visible = false; triggerMenuUpdate(1); end end --[[ Module ]]-- local menu = {}; function menu:AddMenuOption(title: string, id: string, override: boolean) if not menus then menus = cache.basis.gui.menu; tabs = cache.basis.gui.tabs; end local option = utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffff00"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, ClipsDescendants = true, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = string.lower(title), Parent = menus.container, Size = UDim2.new(1, -32, 0, 48), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { Name = "corner" }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize(id), Name = "icon", Position = UDim2.new(0, 8, 0.5, 0), Size = UDim2.new(0, 32, 0, 32) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("474d57")), ColorSequenceKeypoint.new(0.05, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient", Offset = Vector2.new(1.5, 0), Rotation = 30 }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(1, -52, 1, 0), Text = title, TextColor3 = Color3.fromHex("adb0ba"), TextSize = 16, TextXAlignment = Enum.TextXAlignment.Left }) }); if not override then option.MouseButton1Click:Connect(function() selectTab(option); end); end return option; end function menu:AddPlaceholder() utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "placeholder", Parent = menus.container, Size = UDim2.new(0, 48, 0, 24) }); end function menu:SetupDragBar() if not background then background = cache.basis.gui.background; dragBar = cache.basis.gui.menu.dragBar; dragBarInternal = cache.basis.gui.menu.dragBar.internal; end local isDragging = false; local startX, passX; dragBar.InputBegan:Connect(function(input) if (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1) and globals.isMinimised then isDragging = true; startX = input.Position.X; passX = startX - 40; local conn; conn = input.Changed:Connect(function(prop) if prop == "UserInputState" and input.UserInputState == Enum.UserInputState.End then conn:Disconnect(); triggerMenuSwitch(input.Position.X <= passX); isDragging = false; end end); end end); userInputService.TouchMoved:Connect(function(input) if isDragging then triggerMenuUpdate(math.clamp((input.Position.X - passX) / 40, 0, 1)); end end); end function menu:ForceSelect(title: string) selectTab(menus.container[title]); end cache.ui.menu = menu; end do --[[ Variables ]]-- local menu = cache.ui.menu; local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local basis; --[[ Functions ]]-- local function createBasis(directory: Instance) basis = utils:Create("ScreenGui", { DisplayOrder = 999999, IgnoreGuiInset = true, Name = "gui", Parent = directory, ResetOnSpawn = false, ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets, ZIndexBehavior = Enum.ZIndexBehavior.Global }, { utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("000000"), BackgroundTransparency = 0.7, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "background", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "menu", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, globals.customSettings.isMenuExtended and 170 or 80, 1, 0) }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14086106160"), Name = "icon", Position = UDim2.new(0.5, 0, 0, 26), Size = UDim2.new(0, 48, 0, 48) }), utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = utils:Iconize("14086218904"), CanvasSize = UDim2.new(0, 0, 0, 0), MidImage = utils:Iconize("14086220094"), Name = "container", Position = UDim2.new(0.5, 0, 1, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.Y, Size = UDim2.new(1, 0, 1, -96), TopImage = utils:Iconize("14086221127") }, { utils:Create("UIListLayout", { HorizontalAlignment = Enum.HorizontalAlignment.Center, Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder, VerticalAlignment = Enum.VerticalAlignment.Top }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "dragBar", Position = UDim2.new(0, -12, 0.5, 0), Size = UDim2.new(0, 28, 0.4, 0) }, { utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("5f6067"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "internal", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, -20, 1, -20) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }) }) }) }), utils:Create("Folder", { Name = "tabs" }) }); settingsUpdates:GetPropertyUpdatedSignal("isMenuExtended"):Connect(function(value) if not globals.isMinimised then utils:Tween(basis.menu, 0.25, { Size = UDim2.new(0, value and 170 or 80, 1, 0) }); end end); do local container = basis.menu.container; container.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() container.CanvasSize = UDim2.new(0, 0, 0, container.list.AbsoluteContentSize.Y + 12); end); end return basis; end --[[ Module ]]-- local init = { instances = {}; }; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); cache.ui.popups.init:Initialize(directory); end function init:IsInitialized(): boolean return basis ~= nil; end function init:AddTabs() local tabs = { "home", "executor", "scripts", "settings", "hide" }; for i, v in tabs do local tab = cache.ui.tabs[v].init; if tab.separate then menu:AddPlaceholder(); end tab:Initialize(menu:AddMenuOption(tab.title, tab.id, tab.override)); end menu:SetupDragBar(); menu:ForceSelect(tabs[1]); end cache.ui.init = init; end do --[[ Variables ]]-- local mainInit = cache.ui.init; local menu = cache.ui.menu; local globals = cache.modules.globals; local utils = cache.modules.utils; local basis; local assets = { fonts = { Consolas = { "Regular", "Bold" }, Montserrat = { "Regular", "SemiBold" } }, images = {} }; local assetCount = 0; local totalAssets; local isThirdParty = utils:IsThirdParty(); globals.customAssetPath = isThirdParty and string.match(writecustomasset("x.txt", ""), "rbxasset://(%w+)") or ""; --[[ Functions ]]-- local function getTotalAssets() local count = 0; for i, v in assets do for _, v2 in v do count += type(v2) == "table" and #v2 or 1; if i == "fonts" then count += 1; -- to account for the json files end end end return count; end local function createBasis(directory: Instance) totalAssets = getTotalAssets(); basis = utils:Create("ScreenGui", { DisplayOrder = 999998, IgnoreGuiInset = true, Name = "startup", Parent = directory, ResetOnSpawn = false, ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets }, { utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "main", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0, 420, 0, 247) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "bootstrapper", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "progress", Position = UDim2.new(0.5, 0, 0, 178), Size = UDim2.new(1, -52, 0, 22), Text = string.format("0/%d | Downloading Assets...", totalAssets), TextColor3 = Color3.fromHex("adb0ba"), TextSize = 19 }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size24, Name = "title", Position = UDim2.new(0.5, 0, 0, 100), Size = UDim2.new(1, -52, 0, 22), Text = isThirdParty and table.concat({ identifyexecutor() }, " ") or "Hydrogen Android V2.0.0", TextColor3 = Color3.fromHex("ffffff"), TextSize = 24 }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "bar", Position = UDim2.new(0.5, 0, 0, 142), Size = UDim2.new(0, 300, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(-1, 0) }) }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "login", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0), Visible = false }, { utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 0), AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "keyBtn", Position = UDim2.new(0.5, -20, 0, 100), Size = UDim2.new(0, 90, 0, 32), Text = "Key", TextColor3 = Color3.fromHex("ffffff"), TextSize = 18 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "adlessBtn", Position = UDim2.new(0.5, 20, 0, 100), Size = UDim2.new(0, 90, 0, 32), Text = "Adless", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 18 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "key", Position = UDim2.new(0.5, 0, 1, 0), Size = UDim2.new(1, 0, 0, 97) }, { utils:Create("TextBox", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "input", PlaceholderColor3 = Color3.fromHex("adb0ba"), PlaceholderText = "Input Key...", Position = UDim2.new(0.5, 0, 0, 0), Size = UDim2.new(1, -46, 0, 32), Text = "", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIPadding", { Name = "padding", PaddingLeft = UDim.new(0, 12), PaddingRight = UDim.new(0, 6) }) }), utils:Create("TextButton", { BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "getKeyBtn", Position = UDim2.new(0, 23, 0, 42), Size = UDim2.new(0, 90, 0, 32), Text = "Get Key", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 0), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "continueBtn", Position = UDim2.new(1, -23, 0, 42), Size = UDim2.new(0, 90, 0, 32), Text = "Continue", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "adless", Position = UDim2.new(0.5, 0, 1, 0), Size = UDim2.new(1, 0, 0, 97), Visible = false }, { utils:Create("TextBox", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "username", PlaceholderColor3 = Color3.fromHex("adb0ba"), PlaceholderText = "Username...", Position = UDim2.new(0.5, 0, 0, 0), Size = UDim2.new(1, -46, 0, 32), Text = "", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIPadding", { Name = "padding", PaddingLeft = UDim.new(0, 12), PaddingRight = UDim.new(0, 6) }) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 0), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "loginBtn", Position = UDim2.new(1, -23, 0, 42), Size = UDim2.new(0, 90, 0, 32), Text = "Login", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }), utils:Create("TextBox", { BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "password", PlaceholderColor3 = Color3.fromHex("adb0ba"), PlaceholderText = "Password...", Position = UDim2.new(0, 23, 0, 42), Size = UDim2.new(1, -146, 0, 32), Text = "", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIPadding", { Name = "padding", PaddingLeft = UDim.new(0, 12), PaddingRight = UDim.new(0, 6) }), utils:Create("TextBox", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, CursorPosition = -1, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "content", Position = UDim2.new(0, -12, 0, 0), Size = UDim2.new(1, 18, 1, 0), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14, TextTransparency = 1 }) }) }) }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14086106160", Name = "icon", Position = UDim2.new(0.5, 0, 0, 26), Size = UDim2.new(0, 48, 0, 48) }) }) }); end local function successfulLogin(directory: Instance) basis:Destroy(); if isThirdParty then for i, v in { "IjHyfuyuHeg", "cHjGyjKbe", "cHpRmejNAJ", "isuifile", "readuifile", "writeuifile", "iscustomasset", "writecustomasset" } do getgenv()[v] = nil; end if globals.customSettings.autoExecute then runautoexec(); end end mainInit:Initialize(directory); mainInit:AddTabs(); end local function selectTab(btn: Button, frame: Frame) for i, v in basis.main.login:GetChildren() do if v:IsA("Frame") then v.Visible = v == frame; elseif v:IsA("TextButton") then utils:Tween(v, 0.25, { TextColor3 = Color3.fromHex(v == btn and "ffffff" or "adb0ba"), BackgroundTransparency = v == btn and 0.35 or 1 }); end end end local function loadLoginPage() local directory = basis.Parent; local login = basis.main.login; local map = { [login.adlessBtn] = login.adless, [login.keyBtn] = login.key }; for i, v in map do i.MouseButton1Click:Connect(function() selectTab(i, v); end); end login.key.getKeyBtn.MouseButton1Click:Connect(function() setclipboard(IjHyfuyuHeg()); end); login.key.continueBtn.MouseButton1Click:Connect(function() if cHjGyjKbe(login.key.input.Text) then globals.customSettings.saveData.key = login.key.input.Text; successfulLogin(directory); end end); login.adless.password.content:GetPropertyChangedSignal("Text"):Connect(function() login.adless.password.Text = string.rep("â€¢", #login.adless.password.content.Text); end); login.adless.loginBtn.MouseButton1Click:Connect(function() if cHpRmejNAJ(login.adless.username.Text, login.adless.password.content.Text) then globals.customSettings.saveData.username = login.adless.username.Text; globals.customSettings.saveData.password = login.adless.password.content.Text; globals.isPremium = true; successfulLogin(directory); end end); basis.main.bootstrapper.Visible = false; login.Visible = true; end local function updateCount() assetCount += 1; basis.main.bootstrapper.progress.Text = string.format("%d/%d | Downloading Assets...", assetCount, totalAssets); utils:Tween(basis.main.bootstrapper.bar.gradient, 0.25, { Offset = Vector2.new(assetCount / totalAssets * 1.1 - 1, 0); }); end local function setupBootstrapper() if isThirdParty then for i, v in assets.fonts do local hasDownloadedSomething = false; for _, v2 in v do local fileName = string.format("Custom Fonts/%s/%s-%s.ttf", i, i, v2); if iscustomasset(fileName) == false then writecustomasset(fileName, game:HttpGet(string.format("https://raw.githubusercontent.com/VersatileTeam/hydrogen-assets/main/fonts/%s/%s-%s.ttf", i, i, v2), true)); hasDownloadedSomething = true; end updateCount(); end if hasDownloadedSomething then local fontData = game:HttpGet(string.format("https://raw.githubusercontent.com/VersatileTeam/hydrogen-assets/main/fonts/%s/%s.json", i, i), true); writecustomasset(string.format("Custom Fonts/%s/%s.json", i, i), string.gsub(fontData, "Custom Fonts", globals.customAssetPath .. "/Custom Fonts")); end updateCount(); end for i, v in basis.main.login:GetDescendants() do if pcall(function() return v.Font; end) then v.FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), v.FontFace.Weight, v.FontFace.Style); end end end local saveData = globals.customSettings.saveData; if saveData.key ~= "" and cHjGyjKbe(saveData.key) then successfulLogin(basis.Parent); elseif saveData.username ~= "" and saveData.password ~= "" and cHpRmejNAJ(saveData.username, saveData.password) then globals.isPremium = true; successfulLogin(basis.Parent); else loadLoginPage(); end end --[[ Module ]]-- local init = {}; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); setupBootstrapper(); return basis; end function init:IsInitialized(): boolean return basis ~= nil; end cache.startup.init = init; end do --[[ Variables ]]-- local httpService = game:GetService("HttpService"); local utils = cache.modules.utils; local isThirdParty = utils:IsThirdParty(); local backupCache = { { title = "Script 1", content = "print('Hydrogen V2 Winning');" } }; local tab; local _isuifile = isThirdParty and clonefunction(isuifile); --[[ Module ]]-- local tabSystem = { cache = backupCache, accumulator = 1, selected = nil, connection = nil }; function tabSystem:Initialize(basis: Frame) tab = basis; if isThirdParty then if _isuifile("tabs.json") then local success, res = pcall(httpService.JSONDecode, httpService, readuifile("tabs.json")); self.cache = success and res or backupCache; if success == false then task.defer(error, "tab cache file is corrupted"); end end end basis.content.input:GetPropertyChangedSignal("Text"):Connect(function() local index, selection = self:Get(self.selected); if index then selection.content = basis.content.input.Text; end end); for i, v in self.cache do self:Add(v.title, v.content, true); end self:Select(self.cache[1].title); end function tabSystem:Get(title: string) for i, v in self.cache do if v.title == title then return i, v; end end end function tabSystem:Select(title: string) if self.selected == title then return; end local index, selection = self:Get(title); if index ~= nil then self.selected = title; tab.content.input.Text = selection.content; end end function tabSystem:Add(title: string, content: string, isCached: boolean?) if self:Get(title) and not isCached then return; end self.accumulator += 1; local header = utils:Create("TextButton", { BackgroundColor3 = Color3.fromHex("32363d"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = title, Parent = tab.tabs, Size = UDim2.new(0, game:GetService("TextService"):GetTextBoundsAsync(utils:Create("GetTextBoundsParams", { Font = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), Size = 14, Text = title, Width = math.huge })).X + 45, 1, 0), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }), utils:Create("ImageButton", { AnchorPoint = Vector2.new(1, 0.5), AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14544922843", Name = "close", Position = UDim2.new(1, -5, 0.5, 0), Size = UDim2.new(0, 20, 0, 20) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "title", Position = UDim2.new(0, 10, 0.5, 0), Size = UDim2.new(1, -45, 1, 0), Text = title, TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }) }); header.MouseButton1Click:Connect(function() self:Select(title); end); header.close.MouseButton1Click:Connect(function() self:Remove(title); end); if isCached then select(2, self:Get(title)).header = header; else table.insert(self.cache, { title = title, content = content, header = header }); end return header; end function tabSystem:Remove(title: string) if self:Get(title) == nil or #self.cache == 1 then return; end local index, selection = self:Get(title); if index ~= nil then selection.header:Destroy(); table.remove(self.cache, index); if self.selected == title then self:Select(self.cache[1].title); end end end cache.ui.tabs.executor.tabSystem = tabSystem; end do --[[ Variables ]]-- local tabSystem = cache.ui.tabs.executor.tabSystem; local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local recent = cache.modules.home.recent; --[[ Module ]]-- local init = { title = "Executor", id = "14009418338" }; function init:Initialize() self.tab = utils:Create("Frame", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = string.lower(self.title), Parent = cache.basis.gui.tabs, Position = UDim2.new(0, 15, 0.5, 0), Size = UDim2.new(1, globals.customSettings.isMenuExtended and -200 or -110, 1, -30), Visible = false }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "buttons", Position = UDim2.new(0.5, 0, 1, -9), Size = UDim2.new(1, -18, 0, 30) }, { utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "leftAlign", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, Name = "list", Padding = UDim.new(0, 10), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "execute", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 71, 1, 0), Text = "Execute", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "clear", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 52, 1, 0), Text = "Clear", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "copy", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 50, 1, 0), Text = "Copy", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "rightAlign", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, HorizontalAlignment = Enum.HorizontalAlignment.Right, Name = "list", Padding = UDim.new(0, 10), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "execute", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 135, 1, 0), Text = "Execute Clipboard", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "load", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 114, 1, 0), Text = "Load Clipboard", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }) }) }), utils:Create("ScrollingFrame", { Active = true, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 0), HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar, MidImage = "rbxassetid://14086220094", Name = "tabs", Position = UDim2.new(0, 9, 0, 9), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.X, Size = UDim2.new(1, -56, 0, 32), TopImage = "rbxassetid://14086221127" }, { utils:Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("UIPadding", { Name = "padding", PaddingBottom = UDim.new(0, 1), PaddingLeft = UDim.new(0, 1), PaddingRight = UDim.new(0, 1), PaddingTop = UDim.new(0, 1) }) }), utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 12), HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar, MidImage = "rbxassetid://14086220094", Name = "content", Position = UDim2.new(0.5, 0, 0.5, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, Size = UDim2.new(1, -18, 1, -98), TopImage = "rbxassetid://14086221127", VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar }, { utils:Create("TextBox", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, ClearTextOnFocus = false, CursorPosition = -1, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Consolas/Consolas.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size12, Name = "input", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0), Text = "print(\"Hydrogen V2 Winning\");", TextColor3 = Color3.fromHex("e1e1e1"), TextSize = 12, TextXAlignment = Enum.TextXAlignment.Left, TextYAlignment = Enum.TextYAlignment.Top }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }), utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIPadding", { Name = "padding", PaddingBottom = UDim.new(0, 8), PaddingLeft = UDim.new(0, 8), PaddingRight = UDim.new(0, 8), PaddingTop = UDim.new(0, 8) }) }), utils:Create("ImageButton", { AnchorPoint = Vector2.new(1, 0), AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14544873276", Name = "newTab", Position = UDim2.new(1, -9, 0, 9), Size = UDim2.new(0, 30, 0, 30) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient", Rotation = 30 }) }) }); settingsUpdates:GetPropertyUpdatedSignal("isMenuExtended"):Connect(function(value) utils:Tween(self.tab, 0.25, { Size = UDim2.new(1, value and -200 or -110, 1, -30) }); end); tabSystem:Initialize(self.tab); local function execute(content: string) (runcode or function() end)(content); recent:Parse(content); end self.tab.newTab.MouseButton1Click:Connect(function() tabSystem:Add("Script " .. tostring(tabSystem.accumulator), globals.defaultContent); end); self.tab.buttons.leftAlign.execute.MouseButton1Click:Connect(function() execute(self.tab.content.input.Text); end); self.tab.buttons.leftAlign.clear.MouseButton1Click:Connect(function() self.tab.content.input.Text = ""; end); self.tab.buttons.leftAlign.copy.MouseButton1Click:Connect(function() setclipboard(self.tab.content.input.Text); end); self.tab.buttons.rightAlign.execute.MouseButton1Click:Connect(function() execute(getclipboard()); end); self.tab.buttons.rightAlign.load.MouseButton1Click:Connect(function() self.tab.content.input.Text = getclipboard(); end); end cache.ui.tabs.executor.init = init; end do --[[ Variables ]]-- local globals = cache.modules.globals; local utils = cache.modules.utils; --[[ Module ]]-- local init = { title = "Hide", id = "14033140039", separate = true, override = true }; function init:Initialize(btn: TextButton) btn.MouseButton1Click:Connect(function() globals.isMinimised = true; for i, v in cache.basis.gui.tabs:GetChildren() do if v:IsA("Frame") and v.Visible then v.Visible = false; end end utils:Tween(cache.basis.gui.background, 0.4, { BackgroundTransparency = 1 }); utils:Tween(cache.basis.gui.menu.dragBar.internal, 0.4, { BackgroundTransparency = 0.25 }); utils:Tween(cache.basis.gui.menu, 0.4, { Position = UDim2.new(1, globals.customSettings.isMenuExtended and 170 or 80, 0.5, 0) }); end); end cache.ui.tabs.hide.init = init; end do --[[ Variables ]]-- local regex = cache.modules.regex; local utils = cache.modules.utils; --[[ Template ]]-- cache.ui.tabs.home.templates.recentLink = function(link: string, name: string): Instance return utils:Create("TextButton", { BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = link, Size = UDim2.new(1, -4, 0, 48), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "full", Position = UDim2.new(0, 12, 1, -8), Size = UDim2.new(1, -24, 0, 16), Text = link, TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 16), Text = name, TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }); end end do --[[ Variables ]]-- local isThirdParty = cache.modules.utils:IsThirdParty(); --[[ Module ]]-- local premium = {}; function premium:Initialize(frame: Frame) self.frame = frame; frame.container.purchase.MouseButton1Click:Connect(function() if isThirdParty then setclipboard("https://hydrogen.sh/adless"); end game:GetService("StarterGui"):SetCore("SendNotification", { Title = "Hydrogen V2", Text = "Premium link set to clipboard", Duration = 5 }); end); end function premium:ToggleVisual(enabled: boolean) if self.frame == nil then return; end self.frame.container.Visible = not enabled; self.frame.alreadyPremium.Visible = enabled; end cache.ui.tabs.home.premium = premium; end do --[[ Variables ]]-- local localPlayer = game:GetService("Players").LocalPlayer; local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local monitors = cache.modules.home.monitors; local recent = cache.modules.home.recent; local premium = cache.ui.tabs.home.premium; local recentLinkTemplate = cache.ui.tabs.home.templates.recentLink; local tabMap = { stats = { value = 50, reverse = "recent" }, premium = { value = 130, reverse = "welcome" } }; local spoofInfo = globals.customSettings.spoofInfo; --[[ Functions ]]-- local function createTab() local frame = utils:Create("Frame", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "home", Parent = cache.basis.gui.tabs, Position = UDim2.new(0, 15, 0.5, 0), Size = UDim2.new(1, globals.customSettings.isMenuExtended and -200 or -110, 1, -30), Visible = false }, { utils:Create("UIGridLayout", { CellPadding = UDim2.new(0, 10, 0, 10), CellSize = UDim2.new(0.5, -5, 0, 10), Name = "grid", SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "welcome", Size = UDim2.new(0, 100, 0, 100) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UISizeConstraint", { MinSize = Vector2.new(0, 0), Name = "constraint" }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -76, 0, 30), Text = string.format("Welcome, %s!", spoofInfo.enabled and spoofInfo.name or localPlayer.Name), TextColor3 = Color3.fromHex("ffffff"), TextSize = 16, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "id", Position = UDim2.new(0, 12, 0, 32), Size = UDim2.new(1, -24, 0, 16), Text = tostring(spoofInfo.enabled and spoofInfo.id or localPlayer.UserId), TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = string.format("rbxthumb://type=AvatarHeadShot&id=%d&w=48&h=48", spoofInfo.enabled and spoofInfo.id or localPlayer.UserId), Name = "icon", Position = UDim2.new(1, -12, 0, 12), Size = UDim2.new(0, 48, 0, 48) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIStroke", { Color = Color3.fromHex("474d57"), Name = "stroke" }) }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "stats", Size = UDim2.new(0, 100, 0, 100) }, { utils:Create("UISizeConstraint", { MinSize = Vector2.new(0, 0), Name = "constraint" }), utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, HorizontalAlignment = Enum.HorizontalAlignment.Center, Name = "list", Padding = UDim.new(0, 0), SortOrder = Enum.SortOrder.LayoutOrder, VerticalAlignment = Enum.VerticalAlignment.Center }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "fps", Size = UDim2.new(0, 60, 0, 48), Visible = globals.customSettings.monitors.fps }, { utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "text", Size = UDim2.new(1, 0, 1, 0), Text = "0", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14146393062"), ImageColor3 = Color3.fromHex("1f2022"), Name = "icon", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 28, 0, 28), ZIndex = 2 }, { utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("474d57"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "background", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14100873244"), Name = "highlight", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("UIGradient", { Name = "gradient", Offset = Vector2.new(-0.5, 0), Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.5, 0), NumberSequenceKeypoint.new(0.501, 1), NumberSequenceKeypoint.new(1, 1) }) }) }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "needleContainer", Position = UDim2.new(0.5, 0, 0, 23), Rotation = -45, Size = UDim2.new(1, -4, 1, -4) }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14088844339"), Name = "needle", Position = UDim2.new(0.5, 0, 0.5, -7), Size = UDim2.new(1, 0, 1, 0), ZIndex = 2 }) }) }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "ping", Size = UDim2.new(0, 60, 0, 48), Visible = globals.customSettings.monitors.ping }, { utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "text", Size = UDim2.new(1, 0, 1, 0), Text = "0", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14146567970"), ImageColor3 = Color3.fromHex("1f2022"), Name = "icon", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 28, 0, 28), ZIndex = 2 }, { utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("474d57"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "background", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14146512973"), Name = "highlight", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("UIGradient", { Name = "gradient", Offset = Vector2.new(-0.5, 0), Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.5, 0), NumberSequenceKeypoint.new(0.501, 1), NumberSequenceKeypoint.new(1, 1) }) }) }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "needleContainer", Position = UDim2.new(0.5, 0, 0, 23), Rotation = -45, Size = UDim2.new(1, -4, 1, -4) }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14088844339"), Name = "needle", Position = UDim2.new(0.5, 0, 0.5, -7), Size = UDim2.new(1, 0, 1, 0), ZIndex = 2 }) }) }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "signal", Size = UDim2.new(0, 58, 0, 48), Visible = globals.customSettings.monitors.signal }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14087596935"), Name = "icon", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 28, 0, 28) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.98, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(-1, 0) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "text", Size = UDim2.new(1, 0, 1, 0), Text = "0%", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "battery", Size = UDim2.new(0, 58, 0, 48), Visible = globals.customSettings.monitors.battery }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = utils:Iconize("14098342733"), Name = "icon", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 28, 0, 28) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "fill", Position = UDim2.new(0, 4, 0.5, 0), Size = UDim2.new(0, 18, 0, 8) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.5, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient", Offset = Vector2.new(-0.5, 0), Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.5, 0), NumberSequenceKeypoint.new(0.501, 1), NumberSequenceKeypoint.new(1, 1) }) }), utils:Create("UICorner", { CornerRadius = UDim.new(0, 2), Name = "corner" }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "text", Size = UDim2.new(1, 0, 1, 0), Text = "0%", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "playerCount", Size = UDim2.new(0, 54, 0, 48), Visible = globals.customSettings.monitors.playerCount }, { utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "text", Size = UDim2.new(1, 0, 1, 0), Text = #game:GetService("Players"):GetPlayers(), TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14660449618", Name = "icon", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 28, 0, 28), ZIndex = 2 }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient" }) }) }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "recent", Size = UDim2.new(0, 100, 0, 100) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UISizeConstraint", { MinSize = Vector2.new(0, 0), Name = "constraint" }), utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = utils:Iconize("14086218904"), CanvasSize = UDim2.new(0, 0, 0, 0), MidImage = utils:Iconize("14086220094"), Name = "container", Position = UDim2.new(1, -4, 1, -8), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, Size = UDim2.new(1, -12, 1, -52), TopImage = utils:Iconize("14086221127"), VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar }, { utils:Create("UIListLayout", { Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("UIPadding", { Name = "padding", PaddingBottom = UDim.new(0, 1), PaddingLeft = UDim.new(0, 1), PaddingRight = UDim.new(0, 1), PaddingTop = UDim.new(0, 1) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 50, 0, 8), Size = UDim2.new(1, -58, 0, 28), Text = "Recent Links", TextColor3 = Color3.fromHex("ffffff"), TextSize = 16, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14216122819", Name = "icon", Position = UDim2.new(0, 14, 0, 8), Size = UDim2.new(0, 28, 0, 28) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient" }) }) }), utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "premium", Size = UDim2.new(0, 100, 0, 100) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UISizeConstraint", { MinSize = Vector2.new(0, 0), Name = "constraint" }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "alreadyPremium", Position = UDim2.new(0.5, 0, 1, -16), Size = UDim2.new(1, -32, 1, -40), Text = "You're already Premium!", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextWrap = true, TextWrapped = true, Visible = globals.isPremium or false }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "container", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0), Visible = not (globals.isPremium or false) }, { utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "note", Position = UDim2.new(0.5, 0, 0, 40), Size = UDim2.new(1, -32, 1, -48), Text = "Fed up of going through our key system every day? Click here!", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left, TextYAlignment = Enum.TextYAlignment.Top }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "purchase", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 103, 0, 28), Text = "Buy Premium", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/Montserrat.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 50, 0, 8), Size = UDim2.new(1, -58, 0, 28), Text = "Premium", TextColor3 = Color3.fromHex("ffffff"), TextSize = 16, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14216160359", Name = "icon", Position = UDim2.new(0, 14, 0, 8), Size = UDim2.new(0, 28, 0, 28) }, { utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(1, Color3.fromHex("97b9d8")) }), Name = "gradient" }) }) }) }); settingsUpdates:GetPropertyUpdatedSignal("isMenuExtended"):Connect(function(value) utils:Tween(frame, 0.25, { Size = UDim2.new(1, value and -200 or -110, 1, -30) }); end); settingsUpdates:GetPropertyUpdatedSignal("spoofInfo.enabled"):Connect(function(value) frame.welcome.title.Text = string.format("Welcome, %s!", value and spoofInfo.name or localPlayer.Name); frame.welcome.id.Text = tostring(value and spoofInfo.id or localPlayer.UserId); frame.welcome.icon.Image = string.format("rbxthumb://type=AvatarHeadShot&id=%d&w=48&h=48", value and spoofInfo.id or localPlayer.UserId); end); settingsUpdates:GetPropertyUpdatedSignal("spoofInfo.name"):Connect(function() if spoofInfo.enabled then frame.welcome.title.Text = string.format("Welcome, %s!", spoofInfo.name); end end); settingsUpdates:GetPropertyUpdatedSignal("spoofInfo.id"):Connect(function() if spoofInfo.enabled then frame.welcome.id.Text = tostring(spoofInfo.id); frame.welcome.icon.Image = string.format("rbxthumb://type=AvatarHeadShot&id=%d&w=48&h=48", spoofInfo.id); end end); for i, v in frame.stats:GetChildren() do if v:IsA("Frame") then settingsUpdates:GetPropertyUpdatedSignal("monitors." .. v.Name):Connect(function(value) v.Visible = value; end); end end return frame; end local function calculateAbsoluteSize(inputValue, interval, absoluteSize) local value = inputValue < 0 and absoluteSize + inputValue or inputValue; local result = -10; repeat result += interval + 10; until result >= value; return result; end --[[ Module ]]-- local init = { title = "Home", id = "14009418896" }; function init:Initialize() self.tab = createTab(); self:ResizeGrid(); self.tab.grid:GetPropertyChangedSignal("AbsoluteCellSize"):Connect(function() self:ResizeGrid(); end); self.tab.stats.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() self:ResizeGrid(); end); self.tab.recent.container.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() self.tab.recent.container.CanvasSize = UDim2.new(0, 0, 0, self.tab.recent.container.list.AbsoluteContentSize.Y + 2); end); monitors:Start({ fps = self.tab.stats.fps, ping = self.tab.stats.ping, signal = self.tab.stats.signal, battery = self.tab.stats.battery }); premium:Initialize(self.tab.premium); for i, v in recent:GetCache() do self:AddLink(v); end recent.onNewLinkExecuted:Connect(function(data) self:AddLink(data); end); end function init:ResizeGrid() local absoluteSize = self.tab.AbsoluteSize; local absoluteCellSize = self.tab.grid.AbsoluteCellSize; for i, v in tabMap do local size = calculateAbsoluteSize(v.value, absoluteCellSize.Y, absoluteSize.Y); self.tab[i].constraint.MinSize = Vector2.new(absoluteCellSize.X, size); self.tab[v.reverse].constraint.MinSize = Vector2.new(absoluteCellSize.X, absoluteSize.Y - (size + 10)); end local statsFrame = self.tab.stats; local count, total = 1, 0; for i, v in statsFrame:GetChildren() do if v:IsA("Frame") and v.Visible then count += 1; total += v.AbsoluteSize.X; end end statsFrame.list.Padding = UDim.new(0, math.max(12, math.floor((statsFrame.AbsoluteSize.X - total) / count))); end function init:AddLink(data: string) local btn = recentLinkTemplate(data.link, data.name); btn.MouseButton1Click:Connect(function() (runcode or function() end)(data.src); end); btn.Parent = self.tab.recent.container; end cache.ui.tabs.home.init = init; end do --[[ Variables ]]-- local httpService = game:GetService("HttpService"); local utils = cache.modules.utils; local count = 0; local placeIdCache = {}; local _writecustomasset = utils:IsThirdParty() and clonefunction(writecustomasset); --[[ Template ]]-- cache.ui.tabs.scripts.templates.scriptResult = function(scriptResult: {any}): Instance local y = count; count = count + 1; local x = utils:Create("Frame", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = scriptResult.title, Size = UDim2.new(0, 100, 0, 100) }, { utils:Create("UIAspectRatioConstraint", { AspectRatio = 1.7, AspectType = Enum.AspectType.ScaleWithParentSize, Name = "aspectRatio" }), utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14578693435", ImageColor3 = Color3.fromHex("515151"), ImageTransparency = 0.5, Name = "background", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(1, 0, 1, 0) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "game", Position = UDim2.new(0.5, 0, 0, 26), Size = UDim2.new(1, -24, 0, 16), Text = scriptResult.game.name, TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0.5, 0, 0, 10), Size = UDim2.new(1, -24, 0, 16), Text = scriptResult.title, TextColor3 = Color3.fromHex("ffffff"), TextSize = 16, TextTruncate = Enum.TextTruncate.AtEnd, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "time", Position = UDim2.new(0.5, 0, 1, -10), Size = UDim2.new(1, -24, 0, 14), Text = DateTime.fromIsoDate(scriptResult.updatedAt):FormatLocalTime("ll", "en-us"), TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 1), BackgroundColor3 = Color3.fromHex("32363d"), BackgroundTransparency = 0.35, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "execute", Position = UDim2.new(1, -9, 1, -9), Size = UDim2.new(0, 71, 0, 28), Text = "Execute", TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }), utils:Create("UIStroke", { ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromHex("474d57"), Name = "stroke" }) }), utils:Create("TextLabel", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "views", Position = UDim2.new(0.5, 0, 1, -24), Size = UDim2.new(1, -24, 0, 14), Text = utils:FormatNumber(scriptResult.views, 0.1), TextColor3 = Color3.fromHex("ffffff"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }) }); task.spawn(function() local imageData = scriptResult.game.imageUrl; local ext = "jpg"; if string.sub(scriptResult.game.imageUrl, 1, 4) == "http" then local data = utils:Request(scriptResult.game.imageUrl, "GET"); if data then imageData = data; local lastSection = select(-1, string.split(scriptResult.game.imageUrl, "/")); ext = lastSection == "Jpeg" and "jpg" or string.match(lastSection, "^[^/%.]+%.(%w+)$") or "jpg"; elseif scriptResult.game.name ~= "Universal Script ğŸ“Œ" then local gameId = scriptResult.game.gameId; if placeIdCache[gameId] == nil then local res = utils:Request(string.format("https://thumbnails.roblox.com/v1/places/gameicons?placeIds=%d&returnPolicy=PlaceHolder&size=256x256&format=Png&isCircular=false", gameId), "GET"); if res then placeIdCache[gameId] = _writecustomasset(string.format("Search Images/%d.png", gameId), utils:Request(httpService:JSONDecode(res).data[1].imageUrl, "GET")); end end x.background.Image = placeIdCache[gameId]; return; else return; end end x.background.Image = _writecustomasset(string.format("Search Images/%s.%s", y, ext), imageData); end); return x; end end do --[[ Variables ]]-- local httpService = game:GetService("HttpService"); local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local template = cache.ui.tabs.scripts.templates.scriptResult; local webpConversionCache = {}; --[[ Module ]]-- local init = { title = "Scripts", id = "14009418740", searching = false, randomFolderName = randomstring and randomstring(16) or "thisWillNeverBeUsed" }; function init:Initialize() self.tab = utils:Create("Frame", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "scripts", Parent = cache.basis.gui.tabs, Position = UDim2.new(0, 15, 0.5, 0), Size = UDim2.new(1, globals.customSettings.isMenuExtended and -200 or -110, 1, -30), Visible = false }, { utils:Create("TextBox", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "input", PlaceholderColor3 = Color3.fromHex("707070"), PlaceholderText = "Search...", Size = UDim2.new(1, -46, 0, 36), Text = "", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIPadding", { Name = "padding", PaddingLeft = UDim.new(0, 12), PaddingRight = UDim.new(0, 6) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "search", Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 28, 0, 28), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14556026415", Name = "icon", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0, 24, 0, 24) }), utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }) }) }), utils:Create("TextButton", { AnchorPoint = Vector2.new(1, 0), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "filter", Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 36, 0, 36), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("ImageLabel", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14555967527", Name = "icon", Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0, 24, 0, 24) }), utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }) }), utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, CanvasSize = UDim2.new(0, 0, 0, 0), BottomImage = "rbxassetid://14086218904", MidImage = "rbxassetid://14086220094", Name = "container", Position = UDim2.new(0.5, 0, 1, 0), ScrollBarImageColor3 = Color3.fromHex("1f2022"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.Y, Size = UDim2.new(1, 0, 1, -46), TopImage = "rbxassetid://14086221127", VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar }, { utils:Create("UIGridLayout", { CellPadding = UDim2.new(0, 12, 0, 12), CellSize = UDim2.new(0.333, -8, 0, 0), FillDirectionMaxCells = 3, Name = "grid", SortOrder = Enum.SortOrder.LayoutOrder }) }) }); settingsUpdates:GetPropertyUpdatedSignal("isMenuExtended"):Connect(function(value) utils:Tween(self.tab, 0.25, { Size = UDim2.new(1, value and -200 or -110, 1, -30) }); end); self.tab.filter.MouseButton1Click:Connect(function() game:GetService("StarterGui"):SetCore("SendNotification", { Title = "Hydrogen V2", Text = "Search filters coming soon!", Duration = 5 }); end); self.tab.input.search.MouseButton1Click:Connect(function() self:Search(string.gsub(self.tab.input.Text, " ", "+")); end); self.tab.container.grid:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() self.tab.container.CanvasSize = UDim2.new(0, 0, 0, self.tab.container.grid.AbsoluteContentSize.Y); end); end function init:Search(query: string) if self.searching then game:GetService("StarterGui"):SetCore("SendNotification", { Title = "Hydrogen V2", Text = "Already searching...", Duration = 5 }); return; end self.searching = true; self:ClearResults(); local res = utils:Request(string.format("https://scriptblox.com/api/script/search?q=%s&max=20&mode=free", query), "GET"); if res then local validResults, webps, webpMap = {}, {}, {}; for i, v in httpService:JSONDecode(res).result.scripts do if v.isPatched == false then if string.sub(v.game.imageUrl, 1, 1) == "/" then v.game.imageUrl = "https://scriptblox.com" .. v.game.imageUrl; end local lastSection = select(-1, unpack(string.split(v.game.imageUrl, "/"))); local ext = lastSection == "Jpeg" and "jpg" or string.match(lastSection, "^[^/%.]+%.(%w+)$") or "jpg"; local index = #validResults + 1; if ext == "webp" then if webpConversionCache[v.game.imageUrl] then v.game.imageUrl = webpConversionCache[v.game.imageUrl]; else webps[#webps + 1] = v.game.imageUrl; webpMap[#webps] = index; end end validResults[index] = v; end end if #webps > 0 then local res = utils:Request("https://projectevo.xyz/api/v1/utils/webptopng", "POST", { ["Content-Type"] = "application/json" }, httpService:JSONEncode(webps)); if res then local x = httpService:JSONDecode(res); if x.images then for i, v in x.images do if v ~= nil then local jpg = base64decode(v); webpConversionCache[validResults[webpMap[i]].game.imageUrl] = jpg; validResults[webpMap[i]].game.imageUrl = jpg; else print("failed image:", validResults[webpMap[i]].game.imageUrl); end end end end end for i, v in validResults do self:AddResult(v); end end self.searching = false; end function init:AddResult(scriptResult: any) local result = template(scriptResult); result.execute.MouseButton1Click:Connect(function() runcode(scriptResult.script); end); result.Parent = self.tab.container; end function init:ClearResults() for i, v in self.tab.container:GetChildren() do if v:IsA("Frame") then v:Destroy(); end end end cache.ui.tabs.scripts.init = init; end do --[[ Variables ]]-- local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local basis; --[[ Functions ]]-- local function toggleIndicator(instance: Instance, value: boolean) utils:Tween(instance.toggle.indicator, 0.25, { Position = UDim2.new(0.5, value and 11 or -11, 0.5, 0) }); utils:Tween(instance.toggle.indicator.gradient, 0.25, { Offset = Vector2.new(value and 0 or -1.25, 0) }); end local function createBasis(directory: Instance) basis = utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 32), MidImage = "rbxassetid://14086220094", Name = "exploit", Parent = directory, Position = UDim2.new(0.5, 0, 0.5, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.Y, Size = UDim2.new(1, 0, 1, 0), TopImage = "rbxassetid://14086221127", Visible = false }, { utils:Create("UIListLayout", { Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "autoExecute", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.autoExecute and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.autoExecute and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), RichText = true, Size = UDim2.new(1, -24, 0, 14), Text = "Executes scripts in your `autoexec` folder when you join a game.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Auto Execute", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "consoleLogs", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.consoleLogs and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.consoleLogs and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Logs all exploit-related outputs to a `console.log` file.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Console Logs", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }) }); do settingsUpdates:GetPropertyUpdatedSignal("autoExecute"):Connect(function(value) toggleIndicator(basis.autoExecute, value); end); basis.autoExecute.MouseButton1Click:Connect(function() globals.customSettings.autoExecute = not globals.customSettings.autoExecute; end); end do settingsUpdates:GetPropertyUpdatedSignal("consoleLogs"):Connect(function(value) toggleIndicator(basis.consoleLogs, value); end); basis.consoleLogs.MouseButton1Click:Connect(function() globals.customSettings.consoleLogs = not globals.customSettings.consoleLogs; end); end end --[[ Module ]]-- local init = { title = "Exploit" }; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); end function init:IsInitialized() return basis ~= nil; end cache.ui.tabs.settings.exploit = init; end do --[[ Variables ]]-- local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local basis; local isThirdParty = utils:IsThirdParty(); --[[ Functions ]]-- local function toggleIndicator(instance: Instance, value: boolean) utils:Tween(instance.toggle.indicator, 0.25, { Position = UDim2.new(0.5, value and 11 or -11, 0.5, 0) }); utils:Tween(instance.toggle.indicator.gradient, 0.25, { Offset = Vector2.new(value and 0 or -1.25, 0) }); end local function createBasis(directory: Instance) basis = utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 32), MidImage = "rbxassetid://14086220094", Name = "game", Parent = directory, Position = UDim2.new(0.5, 0, 0.5, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.Y, Size = UDim2.new(1, 0, 1, 0), TopImage = "rbxassetid://14086221127", Visible = false }, { utils:Create("UIListLayout", { Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "unlockFps", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.fps.unlocked and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.fps.unlocked and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Allows your FPS to exceed Roblox's base cap of 60.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Unlock FPS", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "vSync", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.fps.vSync and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.fps.vSync and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Sets your FPS cap equal to your monitor's refresh rate.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "V-Sync", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "fpsCap", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Decides what your FPS cap is when \"Unlock FPS\" is enabled.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "FPS Cap", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextBox", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "input", PlaceholderColor3 = Color3.fromHex("707070"), Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28), Text = tostring(globals.customSettings.fps.cap), TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }) }) }); do settingsUpdates:GetPropertyUpdatedSignal("fps.unlocked"):Connect(function(value) toggleIndicator(basis.unlockFps, value); end); basis.unlockFps.MouseButton1Click:Connect(function() globals.customSettings.fps.unlocked = not globals.customSettings.fps.unlocked; if isThirdParty then setfpscap(globals.customSettings.fps.unlocked and (globals.customSettings.fps.vSync and getfpsmax() or globals.customSettings.fps.cap) or 60); end end); end do settingsUpdates:GetPropertyUpdatedSignal("fps.vSync"):Connect(function(value) toggleIndicator(basis.vSync, value); end); basis.vSync.MouseButton1Click:Connect(function() globals.customSettings.fps.vSync = not globals.customSettings.fps.vSync; basis.fpsCap.input.Text = tostring(globals.customSettings.fps.vSync and getfpsmax() or globals.customSettings.fps.cap); if isThirdParty and globals.customSettings.fps.unlocked then setfpscap(globals.customSettings.fps.vSync and getfpsmax() or globals.customSettings.fps.cap); end end); end do settingsUpdates:GetPropertyUpdatedSignal("fps.cap"):Connect(function(value) basis.fpsCap.input.Text = tostring(value); if isThirdParty and globals.customSettings.fps.unlocked and not globals.customSettings.fps.vSync then setfpscap(value); end end); basis.fpsCap.input.FocusLost:Connect(function() if globals.customSettings.fps.vSync then basis.fpsCap.input.Text = tostring(getfpsmax()); else local x = tonumber(basis.fpsCap.input.Text); if x then globals.customSettings.fps.cap = x; else basis.fpsCap.input.Text = tostring(globals.customSettings.fps.cap); end end end); end if isThirdParty and globals.customSettings.fps.unlocked then setfpscap(globals.customSettings.fps.vSync and getfpsmax() or globals.customSettings.fps.cap); end end --[[ Module ]]-- local init = { title = "Game" }; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); end function init:IsInitialized() return basis ~= nil; end cache.ui.tabs.settings.game = init; end do --[[ Variables ]]-- local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local popups = cache.ui.popups.init; local basis; --[[ Functions ]]-- local function toggleIndicator(instance: Instance, value: boolean) utils:Tween(instance.toggle.indicator, 0.25, { Position = UDim2.new(0.5, value and 11 or -11, 0.5, 0) }); utils:Tween(instance.toggle.indicator.gradient, 0.25, { Offset = Vector2.new(value and 0 or -1.25, 0) }); end local function createBasis(directory: Instance) basis = utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 32), MidImage = "rbxassetid://14086220094", Name = "interface", Parent = directory, Position = UDim2.new(0.5, 0, 0.5, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.Y, Size = UDim2.new(1, 0, 1, 0), TopImage = "rbxassetid://14086221127", Visible = false }, { utils:Create("UIListLayout", { Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "enlargedMenu", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.isMenuExtended and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.isMenuExtended and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Enlarges the right-hand scroll menu to include text.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Enlarged Menu", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "monitors", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Choose which monitors are displayed on the home page.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Monitors", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("ImageLabel", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Image = "rbxassetid://14617554127", Name = "expand", Position = UDim2.new(1, -27, 0.5, 0), Size = UDim2.new(0, 28, 0, 28) }) }) }); do settingsUpdates:GetPropertyUpdatedSignal("isMenuExtended"):Connect(function(value) toggleIndicator(basis.enlargedMenu, value); end); basis.enlargedMenu.MouseButton1Click:Connect(function() globals.customSettings.isMenuExtended = not globals.customSettings.isMenuExtended; end); end basis.monitors.MouseButton1Click:Connect(function() popups.instances.monitors.Visible = true; end); end --[[ Module ]]-- local init = { title = "Interface" }; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); end function init:IsInitialized() return basis ~= nil; end cache.ui.tabs.settings.interface = init; end do --[[ Variables ]]-- local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; local basis; --[[ Functions ]]-- local function toggleIndicator(instance: Instance, value: boolean) utils:Tween(instance.toggle.indicator, 0.25, { Position = UDim2.new(0.5, value and 11 or -11, 0.5, 0) }); utils:Tween(instance.toggle.indicator.gradient, 0.25, { Offset = Vector2.new(value and 0 or -1.25, 0) }); end local function createBasis(directory: Instance) basis = utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 32), MidImage = "rbxassetid://14086220094", Name = "miscellaneous", Parent = directory, Position = UDim2.new(0.5, 0, 0.5, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.Y, Size = UDim2.new(1, 0, 1, 0), TopImage = "rbxassetid://14086221127", Visible = false }, { utils:Create("UIListLayout", { Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "spoofInfo", Size = UDim2.new(1, -4, 0, 50), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(1, 0.5), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "toggle", Position = UDim2.new(1, -16, 0.5, 0), Size = UDim2.new(0, 50, 0, 28) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "indicator", Position = UDim2.new(0.5, globals.customSettings.spoofInfo.enabled and 11 or -11, 0.5, 0), Size = UDim2.new(0, 22, 0, 22) }, { utils:Create("UICorner", { CornerRadius = UDim.new(1, 0), Name = "corner" }), utils:Create("UIGradient", { Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromHex("4aa8fd")), ColorSequenceKeypoint.new(0.95, Color3.fromHex("97b9d8")), ColorSequenceKeypoint.new(1, Color3.fromHex("474d57")) }), Name = "gradient", Offset = Vector2.new(globals.customSettings.spoofInfo.enabled and 0 or -1.25, 0), Rotation = 30 }) }) }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "Changes the profile data displayed on the home page.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Spoof Personal Info", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }) }), utils:Create("TextButton", { AutoButtonColor = false, BackgroundColor3 = Color3.fromHex("2b2c2f"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "fakeData", Size = UDim2.new(1, -4, 0, 126), Text = "", TextColor3 = Color3.fromHex("000000"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.Regular, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "description", Position = UDim2.new(0, 12, 0, 25), Size = UDim2.new(1, -24, 0, 14), Text = "The information to be displayed when \"Spoof Personal Info\" is enabled.", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextLabel", { BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size18, Name = "title", Position = UDim2.new(0, 12, 0, 8), Size = UDim2.new(1, -24, 0, 15), Text = "Personal Info", TextColor3 = Color3.fromHex("ffffff"), TextSize = 15, TextTruncate = Enum.TextTruncate.AtEnd, TextWrap = true, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left }), utils:Create("TextBox", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "username", PlaceholderColor3 = Color3.fromHex("707070"), PlaceholderText = "Username...", Position = UDim2.new(0.5, 0, 1, -48), Size = UDim2.new(1, -22, 0, 28), Text = globals.customSettings.spoofInfo.enabled and globals.customSettings.spoofInfo.name or "", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }), utils:Create("TextBox", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = "userId", PlaceholderColor3 = Color3.fromHex("707070"), PlaceholderText = "User ID...", Position = UDim2.new(0.5, 0, 1, -11), Size = UDim2.new(1, -22, 0, 28), Text = globals.customSettings.spoofInfo.enabled and tostring(globals.customSettings.spoofInfo.id) or "", TextColor3 = Color3.fromHex("adb0ba"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }) }) }); do settingsUpdates:GetPropertyUpdatedSignal("spoofInfo.enabled"):Connect(function(value) toggleIndicator(basis.spoofInfo, value); end); basis.spoofInfo.MouseButton1Click:Connect(function() globals.customSettings.spoofInfo.enabled = not globals.customSettings.spoofInfo.enabled; end); basis.fakeData.username.FocusLost:Connect(function() local x = basis.fakeData.username.Text; if #x > 0 then globals.customSettings.spoofInfo.name = basis.fakeData.username.Text; else basis.fakeData.username.Text = globals.customSettings.spoofInfo.name; end end); basis.fakeData.userId.FocusLost:Connect(function() local x = tonumber(basis.fakeData.userId.Text); if x then globals.customSettings.spoofInfo.id = x; else basis.fakeData.userId.Text = globals.customSettings.spoofInfo.id; end end); end end --[[ Module ]]-- local init = { title = "Miscellaneous" }; function init:Initialize(directory: Instance) if self:IsInitialized() then return; end createBasis(directory); end function init:IsInitialized() return basis ~= nil; end cache.ui.tabs.settings.miscellaneous = init; end do --[[ Variables ]]-- local textService = game:GetService("TextService"); local globals = cache.modules.globals; local settingsUpdates = cache.modules.settingsUpdates; local utils = cache.modules.utils; --[[ Module ]]-- local init = { title = "Settings", id = "14009418156" }; function init:Initialize() self.tab = utils:Create("Frame", { AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "settings", Parent = cache.basis.gui.tabs, Position = UDim2.new(0, 15, 0.5, 0), Size = UDim2.new(1, globals.customSettings.isMenuExtended and -200 or -110, 1, -30), Visible = false }, { utils:Create("ScrollingFrame", { Active = true, AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromHex("ffffff"), BackgroundTransparency = 1, BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, BottomImage = "rbxassetid://14086218904", CanvasSize = UDim2.new(0, 0, 0, 0), HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar, MidImage = "rbxassetid://14086220094", Name = "categories", Position = UDim2.new(0.5, 0, 0, 0), ScrollBarImageColor3 = Color3.fromHex("101216"), ScrollBarThickness = 4, ScrollingDirection = Enum.ScrollingDirection.X, Size = UDim2.new(1, 0, 0, 32), TopImage = "rbxassetid://14086221127" }, { utils:Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, Name = "list", Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder }), utils:Create("UIPadding", { Name = "padding", PaddingBottom = UDim.new(0, 1), PaddingLeft = UDim.new(0, 1), PaddingRight = UDim.new(0, 1), PaddingTop = UDim.new(0, 1) }) }), utils:Create("Frame", { AnchorPoint = Vector2.new(0.5, 1), BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, Name = "holder", Position = UDim2.new(0.5, 0, 1, 0), Size = UDim2.new(1, 0, 1, -40) }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 6), Name = "corner" }), utils:Create("UIPadding", { Name = "padding", PaddingBottom = UDim.new(0, 8), PaddingLeft = UDim.new(0, 8), PaddingRight = UDim.new(0, 4), PaddingTop = UDim.new(0, 8) }) }) }); settingsUpdates:GetPropertyUpdatedSignal("isMenuExtended"):Connect(function(value) utils:Tween(self.tab, 0.25, { Size = UDim2.new(1, value and -200 or -110, 1, -30) }); end); local menus = { "exploit", "game", "interface", "miscellaneous" }; for i, v in menus do local module = cache.ui.tabs.settings[v]; self:AddMenuOption(module.title); module:Initialize(self.tab.holder); end self:ForceSelect(menus[1]); end function init:AddMenuOption(title: string) utils:Create("TextButton", { BackgroundColor3 = Color3.fromHex("1f2022"), BorderColor3 = Color3.fromHex("000000"), BorderSizePixel = 0, FontFace = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), FontSize = Enum.FontSize.Size14, Name = string.lower(title), Parent = self.tab.categories, Size = UDim2.new(0, textService:GetTextBoundsAsync(utils:Create("GetTextBoundsParams", { Font = Font.new(string.format("rbxasset://%s/Custom Fonts/Montserrat/Montserrat.json", cache.modules.globals.customAssetPath), Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), Size = 14, Text = title, Width = math.huge })).X + 18, 1, 0), Text = title, TextColor3 = Color3.fromHex("ffffff"), TextSize = 14 }, { utils:Create("UICorner", { CornerRadius = UDim.new(0, 4), Name = "corner" }) }).MouseButton1Click:Connect(function() self:ForceSelect(string.lower(title)); end); end function init:ForceSelect(menu: string) for i, v in self.tab.holder:GetChildren() do if v:IsA("ScrollingFrame") then v.Visible = v.Name == menu; end end end cache.ui.tabs.settings.init = init; end do local globals = cache.modules.globals; game:GetService("LogService").MessageOut:Connect(function(msg: string, msgType: Enum.MessageType) if globals.customSettings.consoleLogs then (isfile("console.log") and appendfile or writefile)("console.log", string.format("[%s]: %s\n", msgType.Name, msg)); end end); local utils = cache.modules.utils; basis = utils:Create("Folder", { Name = "Hydrogen" }, { utils:Create("Folder", { Name = "bin" }) }); utils:DynamicParent(basis); cache.basis = basis; cache.startup.init:Initialize(basis); end
  	end
})
Tab:AddButton({
	Name = "kato",
	Callback = function()
--[[

		Gui2Lua™
		10zOfficial
		Version 1.0.0

]]


-- Instances

local Kato = Instance.new("ScreenGui")
local Maximise = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local IntroductionPage = Instance.new("Frame")
local Logo = Instance.new("ImageButton")
local TextLabel = Instance.new("TextLabel")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
local KeySysFrame = Instance.new("Frame")
local Validate = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local GetKey = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local KeyBox = Instance.new("TextBox")
local UICorner_3 = Instance.new("UICorner")
local UICorner_4 = Instance.new("UICorner")
local ScriptBlox = Instance.new("TextButton")
local ScriptBloxFrame = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local UIPadding = Instance.new("UIPadding")
local UtilitiesFrame = Instance.new("Frame")
local SearchBox = Instance.new("TextBox")
local UICorner_5 = Instance.new("UICorner")
local Back = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local Search = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local MainPage = Instance.new("Frame")
local UICorner_8 = Instance.new("UICorner")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local MinimiseButton = Instance.new("ImageButton")
local PageBar = Instance.new("Frame")
local Settings = Instance.new("ImageButton")
local Executor = Instance.new("ImageButton")
local ScriptHub = Instance.new("ImageButton")
local UIListLayout = Instance.new("UIListLayout")
local Separator = Instance.new("Frame")
local ClickBlock = Instance.new("TextButton")
local Windows = Instance.new("Folder")
local ConfirmationPopup = Instance.new("Frame")
local UICorner_9 = Instance.new("UICorner")
local Body = Instance.new("TextLabel")
local Buttons = Instance.new("Frame")
local UIListLayout_2 = Instance.new("UIListLayout")
local Confirm = Instance.new("ImageButton")
local Decline = Instance.new("ImageButton")
local Header = Instance.new("TextLabel")
local Frame = Instance.new("Frame")
local NewNamePopup = Instance.new("Frame")
local UICorner_10 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local Header_2 = Instance.new("TextLabel")
local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
local Buttons_2 = Instance.new("Frame")
local UIListLayout_3 = Instance.new("UIListLayout")
local Confirm_2 = Instance.new("ImageButton")
local Decline_2 = Instance.new("ImageButton")
local NewName = Instance.new("TextBox")
local UICorner_11 = Instance.new("UICorner")
local Pages = Instance.new("Frame")
local Settings_2 = Instance.new("Frame")
local KeyInfo = Instance.new("Frame")
local Key = Instance.new("TextLabel")
local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")
local UICorner_12 = Instance.new("UICorner")
local Separator_2 = Instance.new("Frame")
local TimeLabel = Instance.new("TextLabel")
local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")
local KeyProgress = Instance.new("Frame")
local UICorner_13 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_14 = Instance.new("UICorner")
local Progress = Instance.new("Frame")
local UICorner_15 = Instance.new("UICorner")
local BetaAccessInfo = Instance.new("ImageButton")
local PermKeyInfo = Instance.new("ImageButton")
local TextLabel_2 = Instance.new("TextLabel")
local UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint")
local ProgessInfoPopup = Instance.new("Frame")
local UICorner_16 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local ClosePopUp = Instance.new("ImageButton")
local Header_3 = Instance.new("TextLabel")
local UITextSizeConstraint_6 = Instance.new("UITextSizeConstraint")
local Body_2 = Instance.new("TextLabel")
local UITextSizeConstraint_7 = Instance.new("UITextSizeConstraint")
local UserInfo = Instance.new("Frame")
local UsernameLabel = Instance.new("TextLabel")
local UITextSizeConstraint_8 = Instance.new("UITextSizeConstraint")
local UserAvatar = Instance.new("ImageLabel")
local UICorner_17 = Instance.new("UICorner")
local Separator_3 = Instance.new("Frame")
local IdLabel = Instance.new("TextLabel")
local UITextSizeConstraint_9 = Instance.new("UITextSizeConstraint")
local UICorner_18 = Instance.new("UICorner")
local DiscordLink = Instance.new("ImageButton")
local UICorner_19 = Instance.new("UICorner")
local CopyReferal = Instance.new("TextButton")
local UICorner_20 = Instance.new("UICorner")
local ExtendTime = Instance.new("TextButton")
local UICorner_21 = Instance.new("UICorner")
local LogOut = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local ScriptHub_2 = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local Frame_5 = Instance.new("Frame")
local UICorner_23 = Instance.new("UICorner")
local Picture = Instance.new("ImageLabel")
local Load = Instance.new("ImageButton")
local Execute = Instance.new("ImageButton")
local Game = Instance.new("TextLabel")
local UITextSizeConstraint_10 = Instance.new("UITextSizeConstraint")
local Bottom = Instance.new("Frame")
local UIListLayout_4 = Instance.new("UIListLayout")
local Views = Instance.new("Frame")
local UICorner_24 = Instance.new("UICorner")
local Name = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local Age = Instance.new("Frame")
local UICorner_25 = Instance.new("UICorner")
local Name_2 = Instance.new("TextLabel")
local Name_3 = Instance.new("TextLabel")
local UITextSizeConstraint_11 = Instance.new("UITextSizeConstraint")
local UIListLayout_5 = Instance.new("UIListLayout")
local Search_2 = Instance.new("ImageButton")
local SearchBox_2 = Instance.new("TextBox")
local UICorner_26 = Instance.new("UICorner")
local Executor_2 = Instance.new("Frame")
local Tabs = Instance.new("Frame")
local TabControl = Instance.new("ScrollingFrame")
local UIListLayout_6 = Instance.new("UIListLayout")
local TabFrame = Instance.new("Frame")
local UICorner_27 = Instance.new("UICorner")
local TextLabel_3 = Instance.new("TextLabel")
local UITextSizeConstraint_12 = Instance.new("UITextSizeConstraint")
local CloseTab = Instance.new("ImageButton")
local SwitchTab = Instance.new("TextButton")
local ScriptBox = Instance.new("TextBox")
local UITextSizeConstraint_13 = Instance.new("UITextSizeConstraint")
local NewTab = Instance.new("ImageButton")
local NavigationBar = Instance.new("Frame")
local ClearButton = Instance.new("ImageButton")
local ExecuteButton = Instance.new("ImageButton")
local ExecuteFromClipboard = Instance.new("ImageButton")
local UIListLayout_7 = Instance.new("UIListLayout")
local Extend = Instance.new("ImageButton")
local SavedScripts = Instance.new("Frame")
local TextLabel_4 = Instance.new("TextLabel")
local UITextSizeConstraint_14 = Instance.new("UITextSizeConstraint")
local ScrollingFrame_2 = Instance.new("ScrollingFrame")
local UIListLayout_8 = Instance.new("UIListLayout")
local Frame_6 = Instance.new("Frame")
local TextLabel_5 = Instance.new("TextLabel")
local UITextSizeConstraint_15 = Instance.new("UITextSizeConstraint")
local Select = Instance.new("TextButton")
local UICorner_28 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local AutoExecute = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local UICorner_30 = Instance.new("UICorner")
local ImageLabel_3 = Instance.new("ImageLabel")
local Hide = Instance.new("ImageButton")
local Bottom_2 = Instance.new("Frame")
local UIListLayout_9 = Instance.new("UIListLayout")
local MakeNew = Instance.new("ImageButton")
local RenameSelected = Instance.new("ImageButton")
local DeleteSelected = Instance.new("ImageButton")
local UnlockFps = Instance.new("ImageButton")

-- Properties

Kato.Name = "Kato"
Kato.Parent = gethui()
Kato.DisplayOrder = 11
Kato.ResetOnSpawn = false

Maximise.Name = "Maximise"
Maximise.Parent = Kato
Maximise.AnchorPoint = Vector2.new(0.5, 0.5)
Maximise.BackgroundColor3 = Color3.new(1, 1, 1)
Maximise.BackgroundTransparency = 1
Maximise.Position = UDim2.new(0.5, 0, 0.5, 0)
Maximise.Size = UDim2.new(0, 40, 0, 40)
Maximise.Visible = false
Maximise.Image = "rbxassetid://13291416971"

UIAspectRatioConstraint.Parent = Maximise
UIAspectRatioConstraint.AspectRatio = 1.0291835069656372

IntroductionPage.Name = "IntroductionPage"
IntroductionPage.Parent = Kato
IntroductionPage.AnchorPoint = Vector2.new(0.5, 0.5)
IntroductionPage.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
IntroductionPage.BorderSizePixel = 0
IntroductionPage.Position = UDim2.new(0.5, 0, 0.5, 0)
IntroductionPage.Size = UDim2.new(0, 175, 0, 145)

Logo.Name = "Logo"
Logo.Parent = IntroductionPage
Logo.AnchorPoint = Vector2.new(0.5, 0)
Logo.BackgroundColor3 = Color3.new(1, 1, 1)
Logo.BackgroundTransparency = 1
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0.5, 0, 0, 2)
Logo.Size = UDim2.new(0, 40, 0, 40)
Logo.Image = "http://www.roblox.com/asset/?id=12770100868"

TextLabel.Parent = IntroductionPage
TextLabel.AnchorPoint = Vector2.new(0.5, 0)
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0.5, 0, 0, 40)
TextLabel.Size = UDim2.new(1, -12, 0, 25)
TextLabel.ZIndex = 2
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "(Press logo to close)"
TextLabel.TextColor3 = Color3.new(0.941177, 0.941177, 0.941177)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

UITextSizeConstraint.Parent = TextLabel
UITextSizeConstraint.MaxTextSize = 18
UITextSizeConstraint.MinTextSize = 10

KeySysFrame.Name = "KeySysFrame"
KeySysFrame.Parent = IntroductionPage
KeySysFrame.Active = true
KeySysFrame.AnchorPoint = Vector2.new(0.5, 1)
KeySysFrame.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
KeySysFrame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
KeySysFrame.BorderSizePixel = 0
KeySysFrame.Position = UDim2.new(0.5, 0, 1, -8)
KeySysFrame.Size = UDim2.new(1, -16, 0, 100)

Validate.Name = "Validate"
Validate.Parent = KeySysFrame
Validate.AnchorPoint = Vector2.new(0, 1)
Validate.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Validate.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Validate.BorderSizePixel = 0
Validate.Position = UDim2.new(0, 0, 1, -36)
Validate.Size = UDim2.new(0.5, -3, 0, 30)
Validate.Font = Enum.Font.SourceSansSemibold
Validate.Text = "Validate Key"
Validate.TextColor3 = Color3.new(1, 1, 1)
Validate.TextSize = 20
Validate.TextWrapped = true

UICorner.Parent = Validate
UICorner.CornerRadius = UDim.new(0, 4)

GetKey.Name = "GetKey"
GetKey.Parent = KeySysFrame
GetKey.AnchorPoint = Vector2.new(1, 1)
GetKey.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
GetKey.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
GetKey.BorderSizePixel = 0
GetKey.Position = UDim2.new(1, 0, 1, -36)
GetKey.Size = UDim2.new(0.5, -3, 0, 30)
GetKey.Font = Enum.Font.SourceSansSemibold
GetKey.Text = "Get Key"
GetKey.TextColor3 = Color3.new(1, 1, 1)
GetKey.TextSize = 20
GetKey.TextWrapped = true

UICorner_2.Parent = GetKey
UICorner_2.CornerRadius = UDim.new(0, 4)

KeyBox.Name = "KeyBox"
KeyBox.Parent = KeySysFrame
KeyBox.AnchorPoint = Vector2.new(0.5, 1)
KeyBox.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
KeyBox.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
KeyBox.BorderSizePixel = 0
KeyBox.Position = UDim2.new(0.5, 0, 1, 0)
KeyBox.Size = UDim2.new(1, 0, 0, 30)
KeyBox.Font = Enum.Font.SourceSans
KeyBox.Text = "Key"
KeyBox.TextColor3 = Color3.new(0.6, 0.6, 0.6)
KeyBox.TextSize = 20

UICorner_3.Parent = KeyBox
UICorner_3.CornerRadius = UDim.new(0, 4)

UICorner_4.Parent = IntroductionPage
UICorner_4.CornerRadius = UDim.new(0, 6)

ScriptBlox.Name = "ScriptBlox"
ScriptBlox.Parent = Kato
ScriptBlox.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
ScriptBlox.BackgroundTransparency = 1
ScriptBlox.BorderColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
ScriptBlox.Size = UDim2.new(1, 0, 1, 0)
ScriptBlox.Visible = false
ScriptBlox.AutoButtonColor = false
ScriptBlox.Font = Enum.Font.SourceSans
ScriptBlox.Text = ""
ScriptBlox.TextColor3 = Color3.new(0, 0, 0)
ScriptBlox.TextSize = 14

ScriptBloxFrame.Name = "ScriptBloxFrame"
ScriptBloxFrame.Parent = ScriptBlox
ScriptBloxFrame.Active = true
ScriptBloxFrame.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
ScriptBloxFrame.BackgroundTransparency = 1
ScriptBloxFrame.BorderColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
ScriptBloxFrame.BorderSizePixel = 0
ScriptBloxFrame.Position = UDim2.new(0.0285024159, 0, 0.234911188, 0)
ScriptBloxFrame.Size = UDim2.new(0.944048405, 0, 0.707745492, 0)
ScriptBloxFrame.ScrollBarThickness = 0

UIGridLayout.Parent = ScriptBloxFrame
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 25, 0, 25)
UIGridLayout.CellSize = UDim2.new(0, 210, 0, 125)

UIPadding.Parent = ScriptBloxFrame
UIPadding.PaddingLeft = UDim.new(0, 50)
UIPadding.PaddingTop = UDim.new(0, 25)

UtilitiesFrame.Name = "UtilitiesFrame"
UtilitiesFrame.Parent = ScriptBlox
UtilitiesFrame.BackgroundColor3 = Color3.new(1, 1, 1)
UtilitiesFrame.BackgroundTransparency = 1
UtilitiesFrame.Position = UDim2.new(0.071165204, 0, 0.0252519883, 0)
UtilitiesFrame.Size = UDim2.new(0.857368231, 0, 0.162259609, 0)

SearchBox.Name = "SearchBox"
SearchBox.Parent = UtilitiesFrame
SearchBox.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
SearchBox.BackgroundTransparency = 1
SearchBox.BorderColor3 = Color3.new(0.196078, 0.196078, 0.196078)
SearchBox.Position = UDim2.new(0.178106353, 0, 0.162681386, 0)
SearchBox.Size = UDim2.new(0.61032337, 0, 0.595763862, 0)
SearchBox.ClearTextOnFocus = false
SearchBox.Font = Enum.Font.SourceSansBold
SearchBox.Text = ""
SearchBox.TextColor3 = Color3.new(1, 1, 1)
SearchBox.TextSize = 20
SearchBox.TextTransparency = 1

UICorner_5.Parent = SearchBox
UICorner_5.CornerRadius = UDim.new(30, 30)

Back.Name = "Back"
Back.Parent = UtilitiesFrame
Back.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
Back.BackgroundTransparency = 1
Back.BorderColor3 = Color3.new(0.196078, 0.196078, 0.196078)
Back.Position = UDim2.new(0.0177967809, 0, 0.170593113, 0)
Back.Size = UDim2.new(0.142193422, 0, 0.597821057, 0)
Back.AutoButtonColor = false
Back.Font = Enum.Font.SourceSansBold
Back.Text = "Back"
Back.TextColor3 = Color3.new(1, 1, 1)
Back.TextSize = 20
Back.TextTransparency = 1

UICorner_6.Parent = Back
UICorner_6.CornerRadius = UDim.new(30, 30)

Search.Name = "Search"
Search.Parent = UtilitiesFrame
Search.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
Search.BackgroundTransparency = 1
Search.BorderColor3 = Color3.new(0.196078, 0.196078, 0.196078)
Search.Position = UDim2.new(0.806691229, 0, 0.170541808, 0)
Search.Size = UDim2.new(0.141972527, 0, 0.597821057, 0)
Search.AutoButtonColor = false
Search.Font = Enum.Font.SourceSansBold
Search.Text = "Search"
Search.TextColor3 = Color3.new(1, 1, 1)
Search.TextSize = 20
Search.TextTransparency = 1

UICorner_7.Parent = Search
UICorner_7.CornerRadius = UDim.new(30, 30)

MainPage.Name = "MainPage"
MainPage.Parent = Kato
MainPage.Active = true
MainPage.AnchorPoint = Vector2.new(0.5, 0.5)
MainPage.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
MainPage.BorderColor3 = Color3.new(0, 0, 0)
MainPage.Position = UDim2.new(0.499059469, 0, 0.499970376, 0)
MainPage.Size = UDim2.new(0.779369056, 0, 0.682594597, 0)
MainPage.Visible = false

UICorner_8.Parent = MainPage
UICorner_8.CornerRadius = UDim.new(0, 4)

UIAspectRatioConstraint_2.Parent = MainPage
UIAspectRatioConstraint_2.AspectRatio = 2

MinimiseButton.Name = "MinimiseButton"
MinimiseButton.Parent = MainPage
MinimiseButton.BackgroundColor3 = Color3.new(1, 1, 1)
MinimiseButton.BackgroundTransparency = 1
MinimiseButton.BorderSizePixel = 0
MinimiseButton.Position = UDim2.new(0, 6, 0, 6)
MinimiseButton.Size = UDim2.new(0, 28, 0, 28)
MinimiseButton.Image = "rbxassetid://13019827228"

PageBar.Name = "PageBar"
PageBar.Parent = MainPage
PageBar.AnchorPoint = Vector2.new(0.5, 1)
PageBar.BackgroundColor3 = Color3.new(1, 1, 1)
PageBar.BackgroundTransparency = 1
PageBar.BorderSizePixel = 0
PageBar.Position = UDim2.new(0.5, 0, 1, -6)
PageBar.Size = UDim2.new(1, -12, 0, 28)

Settings.Name = "Settings"
Settings.Parent = PageBar
Settings.BackgroundColor3 = Color3.new(1, 1, 1)
Settings.BackgroundTransparency = 1
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0.660232902, 0, 0.158235788, 0)
Settings.Size = UDim2.new(0, 28, 0, 28)
Settings.Image = "rbxassetid://13055197249"

Executor.Name = "Executor"
Executor.Parent = PageBar
Executor.BackgroundColor3 = Color3.new(1, 1, 1)
Executor.BackgroundTransparency = 1
Executor.BorderSizePixel = 0
Executor.Position = UDim2.new(0.2245823, 0, 0.158236936, 0)
Executor.Size = UDim2.new(0, 28, 0, 28)
Executor.Image = "rbxassetid://13055415652"

ScriptHub.Name = "ScriptHub"
ScriptHub.Parent = PageBar
ScriptHub.BackgroundColor3 = Color3.new(1, 1, 1)
ScriptHub.BackgroundTransparency = 1
ScriptHub.BorderSizePixel = 0
ScriptHub.Position = UDim2.new(0.458582193, 0, 0.158235788, 0)
ScriptHub.Size = UDim2.new(0, 28, 0, 28)
ScriptHub.Image = "rbxassetid://13340467029"

UIListLayout.Parent = PageBar
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout.Padding = UDim.new(0, 10)

Separator.Name = "Separator"
Separator.Parent = MainPage
Separator.AnchorPoint = Vector2.new(0.5, 1)
Separator.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Separator.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Separator.BorderSizePixel = 0
Separator.Position = UDim2.new(0.5, 0, 1, -42)
Separator.Size = UDim2.new(1, -12, 0, 2)

ClickBlock.Name = "ClickBlock"
ClickBlock.Parent = MainPage
ClickBlock.AnchorPoint = Vector2.new(0.5, 0.5)
ClickBlock.BackgroundColor3 = Color3.new(1, 1, 1)
ClickBlock.BackgroundTransparency = 1
ClickBlock.Position = UDim2.new(0.5, 0, 0.5, 0)
ClickBlock.Size = UDim2.new(1, 0, 1, 0)
ClickBlock.ZIndex = 0
ClickBlock.AutoButtonColor = false
ClickBlock.Font = Enum.Font.SourceSans
ClickBlock.Text = ""
ClickBlock.TextColor3 = Color3.new(0, 0, 0)
ClickBlock.TextSize = 14

Windows.Name = "Windows"
Windows.Parent = MainPage

ConfirmationPopup.Name = "ConfirmationPopup"
ConfirmationPopup.Parent = Windows
ConfirmationPopup.AnchorPoint = Vector2.new(0.5, 0.5)
ConfirmationPopup.BackgroundColor3 = Color3.new(0.0470588, 0.0470588, 0.0470588)
ConfirmationPopup.Position = UDim2.new(0.5, 0, 0.5, 0)
ConfirmationPopup.Size = UDim2.new(0, 340, 0, 240)
ConfirmationPopup.Visible = false
ConfirmationPopup.ZIndex = 10

UICorner_9.Parent = ConfirmationPopup
UICorner_9.CornerRadius = UDim.new(0, 6)

Body.Name = "Body"
Body.Parent = ConfirmationPopup
Body.AnchorPoint = Vector2.new(0.5, 0)
Body.BackgroundColor3 = Color3.new(1, 1, 1)
Body.BackgroundTransparency = 1
Body.Position = UDim2.new(0.5, 0, 0, 68)
Body.Size = UDim2.new(1, -28, 0, 120)
Body.ZIndex = 999999999
Body.Font = Enum.Font.SourceSans
Body.Text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
Body.TextColor3 = Color3.new(0.901961, 0.901961, 0.901961)
Body.TextSize = 14
Body.TextWrapped = true

Buttons.Name = "Buttons"
Buttons.Parent = ConfirmationPopup
Buttons.AnchorPoint = Vector2.new(0.5, 1)
Buttons.BackgroundColor3 = Color3.new(1, 1, 1)
Buttons.BackgroundTransparency = 1
Buttons.Position = UDim2.new(0.5, 0, 1, -18)
Buttons.Size = UDim2.new(1, -12, 0, 30)
Buttons.ZIndex = 999999999

UIListLayout_2.Parent = Buttons
UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_2.Padding = UDim.new(0, 35)

Confirm.Name = "Confirm"
Confirm.Parent = Buttons
Confirm.BackgroundColor3 = Color3.new(1, 1, 1)
Confirm.BackgroundTransparency = 1
Confirm.Position = UDim2.new(0.299413919, 0, 0.726686597, 0)
Confirm.Size = UDim2.new(0, 30, 0, 30)
Confirm.ZIndex = 999999999
Confirm.Image = "rbxassetid://13342770275"

Decline.Name = "Decline"
Decline.Parent = Buttons
Decline.BackgroundColor3 = Color3.new(1, 1, 1)
Decline.BackgroundTransparency = 1
Decline.Position = UDim2.new(0.561867118, 0, 0.726686597, 0)
Decline.Size = UDim2.new(0, 30, 0, 30)
Decline.ZIndex = 999999999
Decline.Image = "rbxassetid://13342798943"

Header.Name = "Header"
Header.Parent = ConfirmationPopup
Header.AnchorPoint = Vector2.new(0.5, 0)
Header.BackgroundColor3 = Color3.new(1, 1, 1)
Header.BackgroundTransparency = 1
Header.Position = UDim2.new(0.5, 0, 0, 10)
Header.Size = UDim2.new(1, -12, 0, 40)
Header.ZIndex = 999999999
Header.Font = Enum.Font.SourceSans
Header.Text = "Long Text"
Header.TextColor3 = Color3.new(0.901961, 0.901961, 0.901961)
Header.TextSize = 14

Frame.Parent = ConfirmationPopup
Frame.AnchorPoint = Vector2.new(0.5, 0)
Frame.BackgroundColor3 = Color3.new(0.905882, 0.905882, 0.905882)
Frame.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Frame.Position = UDim2.new(0.5, 0, 0, 58)
Frame.Size = UDim2.new(1, -68, 0, 0)
Frame.ZIndex = 999999999

NewNamePopup.Name = "NewNamePopup"
NewNamePopup.Parent = Windows
NewNamePopup.AnchorPoint = Vector2.new(0.5, 0.5)
NewNamePopup.BackgroundColor3 = Color3.new(0.0470588, 0.0470588, 0.0470588)
NewNamePopup.Position = UDim2.new(0.5, 0, 0.5, 0)
NewNamePopup.Size = UDim2.new(0, 340, 0, 240)
NewNamePopup.Visible = false
NewNamePopup.ZIndex = 10

UICorner_10.Parent = NewNamePopup
UICorner_10.CornerRadius = UDim.new(0, 6)

Frame_2.Parent = NewNamePopup
Frame_2.AnchorPoint = Vector2.new(0.5, 0)
Frame_2.BackgroundColor3 = Color3.new(0.905882, 0.905882, 0.905882)
Frame_2.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Frame_2.Position = UDim2.new(0.5, 0, 0, 58)
Frame_2.Size = UDim2.new(1, -68, 0, 0)
Frame_2.ZIndex = 999999999

Header_2.Name = "Header"
Header_2.Parent = NewNamePopup
Header_2.AnchorPoint = Vector2.new(0.5, 0)
Header_2.BackgroundColor3 = Color3.new(1, 1, 1)
Header_2.BackgroundTransparency = 1
Header_2.Position = UDim2.new(0.5, 0, 0, 10)
Header_2.Size = UDim2.new(1, -12, 0, 40)
Header_2.ZIndex = 999999999
Header_2.Font = Enum.Font.SourceSans
Header_2.Text = "Long Text"
Header_2.TextColor3 = Color3.new(0.901961, 0.901961, 0.901961)
Header_2.TextScaled = true
Header_2.TextSize = 14
Header_2.TextWrapped = true

UITextSizeConstraint_2.Parent = Header_2
UITextSizeConstraint_2.MaxTextSize = 14

Buttons_2.Name = "Buttons"
Buttons_2.Parent = NewNamePopup
Buttons_2.AnchorPoint = Vector2.new(0.5, 1)
Buttons_2.BackgroundColor3 = Color3.new(1, 1, 1)
Buttons_2.BackgroundTransparency = 1
Buttons_2.Position = UDim2.new(0.5, 0, 1, -18)
Buttons_2.Size = UDim2.new(1, -12, 0, 30)
Buttons_2.ZIndex = 999999999

UIListLayout_3.Parent = Buttons_2
UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_3.Padding = UDim.new(0, 35)

Confirm_2.Name = "Confirm"
Confirm_2.Parent = Buttons_2
Confirm_2.BackgroundColor3 = Color3.new(1, 1, 1)
Confirm_2.BackgroundTransparency = 1
Confirm_2.Position = UDim2.new(0.299413919, 0, 0.726686597, 0)
Confirm_2.Size = UDim2.new(0, 30, 0, 30)
Confirm_2.ZIndex = 999999999
Confirm_2.Image = "rbxassetid://13342770275"

Decline_2.Name = "Decline"
Decline_2.Parent = Buttons_2
Decline_2.BackgroundColor3 = Color3.new(1, 1, 1)
Decline_2.BackgroundTransparency = 1
Decline_2.Position = UDim2.new(0.561867118, 0, 0.726686597, 0)
Decline_2.Size = UDim2.new(0, 30, 0, 30)
Decline_2.ZIndex = 999999999
Decline_2.Image = "rbxassetid://13342798943"

NewName.Name = "NewName"
NewName.Parent = NewNamePopup
NewName.AnchorPoint = Vector2.new(0.5, 0)
NewName.BackgroundColor3 = Color3.new(0.0941176, 0.0941176, 0.0941176)
NewName.Position = UDim2.new(0.5, 0, 0, 78)
NewName.Size = UDim2.new(1, -68, 0, 30)
NewName.ZIndex = 999999999
NewName.Font = Enum.Font.SourceSans
NewName.Text = "New Name"
NewName.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
NewName.TextSize = 14

UICorner_11.Parent = NewName
UICorner_11.CornerRadius = UDim.new(0, 6)

Pages.Name = "Pages"
Pages.Parent = MainPage
Pages.AnchorPoint = Vector2.new(0.5, 0)
Pages.BackgroundColor3 = Color3.new(1, 1, 1)
Pages.BackgroundTransparency = 1
Pages.Position = UDim2.new(0.5, 0, 0, 0)
Pages.Size = UDim2.new(1, 0, 1, 0)

Settings_2.Name = "Settings"
Settings_2.Parent = Pages
Settings_2.AnchorPoint = Vector2.new(0.5, 0)
Settings_2.BackgroundColor3 = Color3.new(1, 1, 1)
Settings_2.BackgroundTransparency = 1
Settings_2.Position = UDim2.new(0.5, 0, 0, 6)
Settings_2.Size = UDim2.new(1, -12, 1, -54)
Settings_2.Visible = false

KeyInfo.Name = "KeyInfo"
KeyInfo.Parent = Settings_2
KeyInfo.BackgroundColor3 = Color3.new(0.0941176, 0.0941176, 0.0941176)
KeyInfo.Position = UDim2.new(0.5, 3, 0, 0)
KeyInfo.Size = UDim2.new(0.5, -39, 0, 75)

Key.Name = "Key"
Key.Parent = KeyInfo
Key.AnchorPoint = Vector2.new(0.5, 0)
Key.BackgroundColor3 = Color3.new(1, 1, 1)
Key.BackgroundTransparency = 1
Key.Position = UDim2.new(0.5, 0, 0, 18)
Key.Size = UDim2.new(1, -12, 0, 20)
Key.Font = Enum.Font.SourceSansBold
Key.Text = "TIME LEFT"
Key.TextColor3 = Color3.new(0.890196, 0.890196, 0.890196)
Key.TextScaled = true
Key.TextSize = 20
Key.TextWrapped = true

UITextSizeConstraint_3.Parent = Key
UITextSizeConstraint_3.MaxTextSize = 19

UICorner_12.Parent = KeyInfo
UICorner_12.CornerRadius = UDim.new(0, 4)

Separator_2.Name = "Separator"
Separator_2.Parent = KeyInfo
Separator_2.AnchorPoint = Vector2.new(0.5, 1)
Separator_2.BackgroundColor3 = Color3.new(0.596078, 0.596078, 0.596078)
Separator_2.BorderColor3 = Color3.new(0.219608, 0.219608, 0.219608)
Separator_2.Position = UDim2.new(0.5, 0, 1, -26)
Separator_2.Size = UDim2.new(1, -12, 0, 0)

TimeLabel.Name = "TimeLabel"
TimeLabel.Parent = KeyInfo
TimeLabel.AnchorPoint = Vector2.new(0.5, 1)
TimeLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TimeLabel.BackgroundTransparency = 1
TimeLabel.Position = UDim2.new(0.5, 0, 1, -2)
TimeLabel.Size = UDim2.new(1, -12, 0, 20)
TimeLabel.Font = Enum.Font.SourceSans
TimeLabel.Text = "Permanent"
TimeLabel.TextColor3 = Color3.new(0.890196, 0.890196, 0.890196)
TimeLabel.TextScaled = true
TimeLabel.TextSize = 15
TimeLabel.TextWrapped = true

UITextSizeConstraint_4.Parent = TimeLabel
UITextSizeConstraint_4.MaxTextSize = 19

KeyProgress.Name = "KeyProgress"
KeyProgress.Parent = Settings_2
KeyProgress.BackgroundColor3 = Color3.new(0.0941176, 0.0941176, 0.0941176)
KeyProgress.BorderSizePixel = 0
KeyProgress.Position = UDim2.new(0, 36, 0, 81)
KeyProgress.Size = UDim2.new(0.5, -39, 0, 50)

UICorner_13.Parent = KeyProgress
UICorner_13.CornerRadius = UDim.new(0, 4)

Frame_3.Parent = KeyProgress
Frame_3.AnchorPoint = Vector2.new(0.5, 1)
Frame_3.BackgroundColor3 = Color3.new(0.164706, 0.160784, 0.160784)
Frame_3.Position = UDim2.new(0.5, 0, 1, -6)
Frame_3.Size = UDim2.new(1, -12, 0, 20)

UICorner_14.Parent = Frame_3
UICorner_14.CornerRadius = UDim.new(0, 4)

Progress.Name = "Progress"
Progress.Parent = Frame_3
Progress.AnchorPoint = Vector2.new(0, 0.5)
Progress.BackgroundColor3 = Color3.new(0.2, 0.392157, 0.0196078)
Progress.Position = UDim2.new(0, 2, 0.5, 0)
Progress.Size = UDim2.new(0, 15, 1, -2)

UICorner_15.Parent = Progress
UICorner_15.CornerRadius = UDim.new(0, 4)

BetaAccessInfo.Name = "BetaAccessInfo"
BetaAccessInfo.Parent = Frame_3
BetaAccessInfo.AnchorPoint = Vector2.new(0.5, 0.5)
BetaAccessInfo.BackgroundColor3 = Color3.new(1, 1, 1)
BetaAccessInfo.BackgroundTransparency = 1
BetaAccessInfo.Position = UDim2.new(0.935212195, 0, 0.5, 0)
BetaAccessInfo.Size = UDim2.new(0, 14, 0, 14)
BetaAccessInfo.ZIndex = 2
BetaAccessInfo.Image = "rbxassetid://13318801477"

PermKeyInfo.Name = "PermKeyInfo"
PermKeyInfo.Parent = Frame_3
PermKeyInfo.AnchorPoint = Vector2.new(0.5, 0.5)
PermKeyInfo.BackgroundColor3 = Color3.new(1, 1, 1)
PermKeyInfo.BackgroundTransparency = 1
PermKeyInfo.Position = UDim2.new(0.687216878, 0, 0.5, 0)
PermKeyInfo.Size = UDim2.new(0, 14, 0, 14)
PermKeyInfo.ZIndex = 2
PermKeyInfo.Image = "rbxassetid://13318801477"

TextLabel_2.Parent = KeyProgress
TextLabel_2.AnchorPoint = Vector2.new(0.5, 0)
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0.5, 0, 0, 1)
TextLabel_2.Size = UDim2.new(1, -12, 0, 20)
TextLabel_2.Font = Enum.Font.SourceSansBold
TextLabel_2.Text = "Referals"
TextLabel_2.TextColor3 = Color3.new(0.847059, 0.847059, 0.847059)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20
TextLabel_2.TextWrapped = true

UITextSizeConstraint_5.Parent = TextLabel_2
UITextSizeConstraint_5.MaxTextSize = 20

ProgessInfoPopup.Name = "ProgessInfoPopup"
ProgessInfoPopup.Parent = Settings_2
ProgessInfoPopup.AnchorPoint = Vector2.new(0.5, 0.5)
ProgessInfoPopup.BackgroundColor3 = Color3.new(0.0470588, 0.0470588, 0.0470588)
ProgessInfoPopup.Position = UDim2.new(0.5, 0, 0.5, 0)
ProgessInfoPopup.Size = UDim2.new(0, 230, 0, 110)
ProgessInfoPopup.Visible = false
ProgessInfoPopup.ZIndex = 2

UICorner_16.Parent = ProgessInfoPopup
UICorner_16.CornerRadius = UDim.new(0, 4)

Frame_4.Parent = ProgessInfoPopup
Frame_4.AnchorPoint = Vector2.new(0.5, 0)
Frame_4.BackgroundColor3 = Color3.new(0.905882, 0.905882, 0.905882)
Frame_4.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Frame_4.Position = UDim2.new(0.5, 0, 0, 32)
Frame_4.Size = UDim2.new(1, -12, 0, 0)
Frame_4.ZIndex = 2

ClosePopUp.Name = "ClosePopUp"
ClosePopUp.Parent = ProgessInfoPopup
ClosePopUp.AnchorPoint = Vector2.new(1, 0)
ClosePopUp.BackgroundColor3 = Color3.new(1, 1, 1)
ClosePopUp.BackgroundTransparency = 1
ClosePopUp.Position = UDim2.new(0.999999762, -6, -0.0341183767, 6)
ClosePopUp.Size = UDim2.new(0, 27, 0, 27)
ClosePopUp.ZIndex = 2
ClosePopUp.Image = "rbxassetid://13019827228"

Header_3.Name = "Header"
Header_3.Parent = ProgessInfoPopup
Header_3.AnchorPoint = Vector2.new(0.5, 0)
Header_3.BackgroundColor3 = Color3.new(1, 1, 1)
Header_3.BackgroundTransparency = 1
Header_3.Position = UDim2.new(0.5, 0, 0, 4)
Header_3.Size = UDim2.new(1, -12, 0, 20)
Header_3.ZIndex = 2
Header_3.Font = Enum.Font.SourceSans
Header_3.Text = "Long Text"
Header_3.TextColor3 = Color3.new(0.901961, 0.901961, 0.901961)
Header_3.TextScaled = true
Header_3.TextSize = 14
Header_3.TextWrapped = true

UITextSizeConstraint_6.Parent = Header_3
UITextSizeConstraint_6.MaxTextSize = 14

Body_2.Name = "Body"
Body_2.Parent = ProgessInfoPopup
Body_2.AnchorPoint = Vector2.new(0.5, 1)
Body_2.BackgroundColor3 = Color3.new(1, 1, 1)
Body_2.BackgroundTransparency = 1
Body_2.Position = UDim2.new(0.5, 0, 1, -6)
Body_2.Size = UDim2.new(1, -12, 1, -36)
Body_2.ZIndex = 2
Body_2.Font = Enum.Font.SourceSans
Body_2.Text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
Body_2.TextColor3 = Color3.new(0.901961, 0.901961, 0.901961)
Body_2.TextScaled = true
Body_2.TextSize = 14
Body_2.TextWrapped = true

UITextSizeConstraint_7.Parent = Body_2
UITextSizeConstraint_7.MaxTextSize = 14

UserInfo.Name = "UserInfo"
UserInfo.Parent = Settings_2
UserInfo.BackgroundColor3 = Color3.new(0.0941176, 0.0941176, 0.0941176)
UserInfo.Position = UDim2.new(0, 36, 0, 0)
UserInfo.Size = UDim2.new(0.5, -39, 0, 75)

UsernameLabel.Name = "UsernameLabel"
UsernameLabel.Parent = UserInfo
UsernameLabel.AnchorPoint = Vector2.new(1, 1)
UsernameLabel.BackgroundColor3 = Color3.new(1, 1, 1)
UsernameLabel.BackgroundTransparency = 1
UsernameLabel.Position = UDim2.new(1, -6, 0, 46)
UsernameLabel.Size = UDim2.new(1, -12, 0, 20)
UsernameLabel.Font = Enum.Font.SourceSansBold
UsernameLabel.Text = "USERNAME"
UsernameLabel.TextColor3 = Color3.new(0.890196, 0.890196, 0.890196)
UsernameLabel.TextScaled = true
UsernameLabel.TextSize = 20
UsernameLabel.TextWrapped = true
UsernameLabel.TextXAlignment = Enum.TextXAlignment.Right

UITextSizeConstraint_8.Parent = UsernameLabel
UITextSizeConstraint_8.MaxTextSize = 19

UserAvatar.Name = "UserAvatar"
UserAvatar.Parent = UserInfo
UserAvatar.BackgroundColor3 = Color3.new(1, 1, 1)
UserAvatar.Position = UDim2.new(0, 6, 0, 6)
UserAvatar.Size = UDim2.new(0, 36, 0, 36)
UserAvatar.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UICorner_17.Parent = UserAvatar
UICorner_17.CornerRadius = UDim.new(0, 4)

Separator_3.Name = "Separator"
Separator_3.Parent = UserInfo
Separator_3.AnchorPoint = Vector2.new(0.5, 1)
Separator_3.BackgroundColor3 = Color3.new(0.596078, 0.596078, 0.596078)
Separator_3.BorderColor3 = Color3.new(0.219608, 0.219608, 0.219608)
Separator_3.Position = UDim2.new(0.5, 0, 1, -26)
Separator_3.Size = UDim2.new(1, -12, 0, 0)

IdLabel.Name = "IdLabel"
IdLabel.Parent = UserInfo
IdLabel.AnchorPoint = Vector2.new(0.5, 1)
IdLabel.BackgroundColor3 = Color3.new(1, 1, 1)
IdLabel.BackgroundTransparency = 1
IdLabel.Position = UDim2.new(0.5, 0, 1, -2)
IdLabel.Size = UDim2.new(1, -12, 0, 20)
IdLabel.Font = Enum.Font.SourceSans
IdLabel.Text = "00000000"
IdLabel.TextColor3 = Color3.new(0.890196, 0.890196, 0.890196)
IdLabel.TextScaled = true
IdLabel.TextSize = 15
IdLabel.TextWrapped = true

UITextSizeConstraint_9.Parent = IdLabel
UITextSizeConstraint_9.MaxTextSize = 19

UICorner_18.Parent = UserInfo
UICorner_18.CornerRadius = UDim.new(0, 4)

DiscordLink.Name = "DiscordLink"
DiscordLink.Parent = Settings_2
DiscordLink.AnchorPoint = Vector2.new(1, 0)
DiscordLink.BackgroundColor3 = Color3.new(0, 0, 0)
DiscordLink.BackgroundTransparency = 0.699999988079071
DiscordLink.Position = UDim2.new(1, 0, 0, 86)
DiscordLink.Size = UDim2.new(0, 30, 0, 30)
DiscordLink.Image = "rbxassetid://13291416971"

UICorner_19.Parent = DiscordLink
UICorner_19.CornerRadius = UDim.new(0, 4)

CopyReferal.Name = "CopyReferal"
CopyReferal.Parent = Settings_2
CopyReferal.BackgroundColor3 = Color3.new(0.0941176, 0.0941176, 0.0941176)
CopyReferal.Position = UDim2.new(0, 36, 0, 137)
CopyReferal.Size = UDim2.new(0.5, -39, 0, 28)
CopyReferal.Font = Enum.Font.SourceSans
CopyReferal.Text = "Copy Referal Code"
CopyReferal.TextColor3 = Color3.new(1, 1, 1)
CopyReferal.TextSize = 20
CopyReferal.TextWrapped = true

UICorner_20.Parent = CopyReferal
UICorner_20.CornerRadius = UDim.new(0, 4)

ExtendTime.Name = "ExtendTime"
ExtendTime.Parent = Settings_2
ExtendTime.BackgroundColor3 = Color3.new(0.0941176, 0.0941176, 0.0941176)
ExtendTime.Position = UDim2.new(0.5, 3, 0, 81)
ExtendTime.Size = UDim2.new(0.5, -39, 0, 28)
ExtendTime.Font = Enum.Font.SourceSans
ExtendTime.Text = "Extend Key"
ExtendTime.TextColor3 = Color3.new(1, 1, 1)
ExtendTime.TextSize = 20
ExtendTime.TextWrapped = true

UICorner_21.Parent = ExtendTime
UICorner_21.CornerRadius = UDim.new(0, 4)

LogOut.Name = "LogOut"
LogOut.Parent = Settings_2
LogOut.AnchorPoint = Vector2.new(1, 0)
LogOut.BackgroundColor3 = Color3.new(0.4, 0, 0.0117647)
LogOut.Position = UDim2.new(1, 25, 0, 25)
LogOut.Rotation = 90
LogOut.Size = UDim2.new(0, 80, 0, 30)
LogOut.Font = Enum.Font.SourceSansBold
LogOut.Text = "LOG-OUT"
LogOut.TextColor3 = Color3.new(0.870588, 0.870588, 0.870588)
LogOut.TextSize = 16
LogOut.TextWrapped = true

UICorner_22.Parent = LogOut
UICorner_22.CornerRadius = UDim.new(0, 4)


UnlockFps.Name = "UnlockFps"
UnlockFps.Parent = Settings_2
UnlockFps.AnchorPoint = Vector2.new(1, 0)
UnlockFps.BackgroundColor3 = Color3.new(0, 0, 0)
UnlockFps.BackgroundTransparency = 0.699999988079071
UnlockFps.Position = UDim2.new(1, 0, 0.188782007, 86)
UnlockFps.Size = UDim2.new(0.060170792, 0, 0.149038419, 0)
UnlockFps.Image = "rbxassetid://13455792809"

UICorner_23.Parent = UnlockFps
UICorner_23.CornerRadius = UDim.new(0, 4)

ScriptHub_2.Name = "ScriptHub"
ScriptHub_2.Parent = Pages
ScriptHub_2.AnchorPoint = Vector2.new(0.5, 0)
ScriptHub_2.BackgroundColor3 = Color3.new(1, 1, 1)
ScriptHub_2.BackgroundTransparency = 1
ScriptHub_2.Position = UDim2.new(0.5, 0, 0, 6)
ScriptHub_2.Size = UDim2.new(1, -12, 1, -54)
ScriptHub_2.Visible = false

ScrollingFrame.Parent = ScriptHub_2
ScrollingFrame.Active = true
ScrollingFrame.AnchorPoint = Vector2.new(1, 1)
ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(1, 0, 1, 0)
ScrollingFrame.Size = UDim2.new(1, -36, 1, -30)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 7, 0)
ScrollingFrame.ScrollBarThickness = 4
ScrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

Frame_5.Parent = ScrollingFrame
Frame_5.BackgroundColor3 = Color3.new(0.188235, 0.188235, 0.188235)
Frame_5.BackgroundTransparency = 0.6000000238418579
Frame_5.Position = UDim2.new(0.181061476, 0, -1.56320922e-07, 0)
Frame_5.Size = UDim2.new(1, -4, 0, 60)

UICorner_23.Parent = Frame_5
UICorner_23.CornerRadius = UDim.new(0, 4)

Picture.Name = "Picture"
Picture.Parent = Frame_5
Picture.BackgroundColor3 = Color3.new(1, 1, 1)
Picture.BorderSizePixel = 0
Picture.Size = UDim2.new(0, 120, 1, 0)
Picture.Image = "rbxassetid://13401195481"
Picture.ScaleType = Enum.ScaleType.Crop

Load.Name = "Load"
Load.Parent = Frame_5
Load.AnchorPoint = Vector2.new(1, 0)
Load.BackgroundColor3 = Color3.new(1, 1, 1)
Load.BackgroundTransparency = 1
Load.BorderSizePixel = 0
Load.Position = UDim2.new(1, -6, 0, 6)
Load.Size = UDim2.new(0, 20, 0, 20)
Load.Image = "rbxassetid://13340809294"

Execute.Name = "Execute"
Execute.Parent = Frame_5
Execute.AnchorPoint = Vector2.new(1, 1)
Execute.BackgroundColor3 = Color3.new(1, 1, 1)
Execute.BackgroundTransparency = 1
Execute.BorderSizePixel = 0
Execute.Position = UDim2.new(1, -6, 1, -6)
Execute.Size = UDim2.new(0, 20, 0, 20)
Execute.Image = "rbxassetid://13343826712"

Game.Name = "Game"
Game.Parent = Frame_5
Game.BackgroundColor3 = Color3.new(1, 1, 1)
Game.BackgroundTransparency = 1
Game.Position = UDim2.new(0, 130, 0, 15)
Game.Size = UDim2.new(1, -130, 0, 20)
Game.Font = Enum.Font.SourceSans
Game.Text = "Game"
Game.TextColor3 = Color3.new(0.92549, 0.92549, 0.92549)
Game.TextScaled = true
Game.TextSize = 14
Game.TextWrapped = true
Game.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_10.Parent = Game
UITextSizeConstraint_10.MaxTextSize = 14

Bottom.Name = "Bottom"
Bottom.Parent = Frame_5
Bottom.AnchorPoint = Vector2.new(1, 1)
Bottom.BackgroundColor3 = Color3.new(1, 1, 1)
Bottom.BackgroundTransparency = 1
Bottom.Position = UDim2.new(1, -10, 1, 0)
Bottom.Size = UDim2.new(1, -140, 0, 24)

UIListLayout_4.Parent = Bottom
UIListLayout_4.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_4.Padding = UDim.new(0, 4)

Views.Name = "Views"
Views.Parent = Bottom
Views.BackgroundColor3 = Color3.new(0.27451, 0.27451, 0.27451)
Views.BorderColor3 = Color3.new(0.0470588, 0.0745098, 0.0941177)
Views.Position = UDim2.new(0.341772199, 0, 0.686092436, 0)
Views.Size = UDim2.new(0, 54, 0, 18)

UICorner_24.Parent = Views
UICorner_24.CornerRadius = UDim.new(0, 4)

Name.Name = "Name"
Name.Parent = Views
Name.AnchorPoint = Vector2.new(1, 0.5)
Name.BackgroundColor3 = Color3.new(1, 1, 1)
Name.BackgroundTransparency = 1
Name.Position = UDim2.new(1, -4, 0.5, 0)
Name.Size = UDim2.new(1, -26, 1, 0)
Name.Font = Enum.Font.SourceSansBold
Name.Text = "10.5k"
Name.TextColor3 = Color3.new(0.92549, 0.92549, 0.92549)
Name.TextSize = 13
Name.TextXAlignment = Enum.TextXAlignment.Right

ImageLabel.Parent = Views
ImageLabel.AnchorPoint = Vector2.new(0, 0.5)
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Position = UDim2.new(0, 4, 0.5, 0)
ImageLabel.Size = UDim2.new(0, 14, 0, 14)
ImageLabel.Image = "rbxassetid://13349833866"

Age.Name = "Age"
Age.Parent = Bottom
Age.BackgroundColor3 = Color3.new(0.27451, 0.27451, 0.27451)
Age.BorderColor3 = Color3.new(0.0470588, 0.0745098, 0.0941177)
Age.Position = UDim2.new(0.525316417, 0, 0.686092436, 0)
Age.Size = UDim2.new(0, 66, 0, 18)

UICorner_25.Parent = Age
UICorner_25.CornerRadius = UDim.new(0, 4)

Name_2.Name = "Name"
Name_2.Parent = Age
Name_2.BackgroundColor3 = Color3.new(1, 1, 1)
Name_2.BackgroundTransparency = 1
Name_2.Size = UDim2.new(1, 0, 1, 0)
Name_2.Font = Enum.Font.SourceSansBold
Name_2.Text = "1 day ago"
Name_2.TextColor3 = Color3.new(0.92549, 0.92549, 0.92549)
Name_2.TextSize = 13

Name_3.Name = "Name"
Name_3.Parent = Frame_5
Name_3.BackgroundColor3 = Color3.new(1, 1, 1)
Name_3.BackgroundTransparency = 1
Name_3.Position = UDim2.new(0, 130, 0, 0)
Name_3.Size = UDim2.new(1, -130, 0, 20)
Name_3.Font = Enum.Font.SourceSansBold
Name_3.TextColor3 = Color3.new(0.92549, 0.92549, 0.92549)
Name_3.TextScaled = true
Name_3.TextSize = 17
Name_3.TextWrapped = true
Name_3.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_11.Parent = Name_3
UITextSizeConstraint_11.MaxTextSize = 17

UIListLayout_5.Parent = ScrollingFrame
UIListLayout_5.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_5.Padding = UDim.new(0, 15)

Search_2.Name = "Search"
Search_2.Parent = ScriptHub_2
Search_2.AnchorPoint = Vector2.new(1, 0)
Search_2.BackgroundColor3 = Color3.new(1, 1, 1)
Search_2.BackgroundTransparency = 1
Search_2.Position = UDim2.new(1, -3, 0, 3)
Search_2.Size = UDim2.new(0, 18, 0, 18)
Search_2.Image = "rbxassetid://13340499119"

SearchBox_2.Name = "SearchBox"
SearchBox_2.Parent = ScriptHub_2
SearchBox_2.BackgroundColor3 = Color3.new(0.317647, 0.317647, 0.317647)
SearchBox_2.BackgroundTransparency = 0.5
SearchBox_2.Position = UDim2.new(0, 36, -0.00400000019, 0)
SearchBox_2.Size = UDim2.new(1, -66, 0, 24)
SearchBox_2.Font = Enum.Font.SourceSans
SearchBox_2.Text = "Search"
SearchBox_2.TextColor3 = Color3.new(0.74902, 0.74902, 0.74902)
SearchBox_2.TextSize = 14

UICorner_26.Parent = SearchBox_2
UICorner_26.CornerRadius = UDim.new(0, 4)

Executor_2.Name = "Executor"
Executor_2.Parent = Pages
Executor_2.AnchorPoint = Vector2.new(0.5, 0)
Executor_2.BackgroundColor3 = Color3.new(1, 1, 1)
Executor_2.BackgroundTransparency = 1
Executor_2.Position = UDim2.new(0.5, 0, 0, 6)
Executor_2.Size = UDim2.new(1, -12, 1, -54)

Tabs.Name = "Tabs"
Tabs.Parent = Executor_2
Tabs.AnchorPoint = Vector2.new(1, 0.5)
Tabs.BackgroundColor3 = Color3.new(1, 1, 1)
Tabs.BackgroundTransparency = 1
Tabs.Position = UDim2.new(1, 0, 0.5, 0)
Tabs.Size = UDim2.new(1, -156, 1, 0)

TabControl.Name = "TabControl"
TabControl.Parent = Tabs
TabControl.Active = true
TabControl.BackgroundColor3 = Color3.new(1, 1, 1)
TabControl.BackgroundTransparency = 1
TabControl.Position = UDim2.new(0, 0, 3.98858546e-08, 0)
TabControl.Size = UDim2.new(1, -28, 0, 24)
TabControl.CanvasSize = UDim2.new(0, 15000, 0, 0)
TabControl.HorizontalScrollBarInset = Enum.ScrollBarInset.Always
TabControl.ScrollBarThickness = 0

UIListLayout_6.Parent = TabControl
UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_6.Padding = UDim.new(0, 5)

TabFrame.Name = "TabFrame"
TabFrame.Parent = TabControl
TabFrame.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
TabFrame.BorderSizePixel = 0
TabFrame.Position = UDim2.new(0, 80, 0, -69)
TabFrame.Size = UDim2.new(0, 93, 0, 24)
TabFrame.Visible = false

UICorner_27.Parent = TabFrame
UICorner_27.CornerRadius = UDim.new(0, 4)

TextLabel_3.Parent = TabFrame
TextLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_3.BackgroundTransparency = 1
TextLabel_3.Position = UDim2.new(0, 6, 0, 0)
TextLabel_3.Size = UDim2.new(1, -30, 1, 0)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.TextColor3 = Color3.new(0.992157, 0.992157, 0.992157)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14
TextLabel_3.TextWrapped = true
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_12.Parent = TextLabel_3
UITextSizeConstraint_12.MaxTextSize = 14

CloseTab.Name = "CloseTab"
CloseTab.Parent = TabFrame
CloseTab.AnchorPoint = Vector2.new(1, 0)
CloseTab.BackgroundColor3 = Color3.new(1, 1, 1)
CloseTab.BackgroundTransparency = 1
CloseTab.Position = UDim2.new(1, -4, 0, 4)
CloseTab.Size = UDim2.new(0, 16, 0, 16)
CloseTab.Image = "rbxassetid://13019827228"

SwitchTab.Name = "SwitchTab"
SwitchTab.Parent = TabFrame
SwitchTab.BackgroundColor3 = Color3.new(1, 1, 1)
SwitchTab.BackgroundTransparency = 1
SwitchTab.Position = UDim2.new(2.17982702e-07, 0, 0, 0)
SwitchTab.Size = UDim2.new(1, -24, 1, 0)
SwitchTab.Font = Enum.Font.SourceSans
SwitchTab.Text = ""
SwitchTab.TextColor3 = Color3.new(0, 0, 0)
SwitchTab.TextSize = 14

ScriptBox.Name = "ScriptBox"
ScriptBox.Parent = Tabs
ScriptBox.AnchorPoint = Vector2.new(0.5, 1)
ScriptBox.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
ScriptBox.BorderSizePixel = 0
ScriptBox.Position = UDim2.new(0.5, 0, 1, 0)
ScriptBox.Size = UDim2.new(1, 0, 1, -28)
ScriptBox.Visible = false
ScriptBox.ClearTextOnFocus = false
ScriptBox.Font = Enum.Font.SourceSans
ScriptBox.LineHeight = 0.8299999833106995
ScriptBox.MultiLine = true
ScriptBox.ShowNativeInput = false
ScriptBox.Text = "--Your script"
ScriptBox.TextColor3 = Color3.new(0.580392, 0.580392, 0.580392)
ScriptBox.TextScaled = true
ScriptBox.TextSize = 14
ScriptBox.TextWrapped = true
ScriptBox.TextXAlignment = Enum.TextXAlignment.Left
ScriptBox.TextYAlignment = Enum.TextYAlignment.Top

UITextSizeConstraint_13.Parent = ScriptBox
UITextSizeConstraint_13.MaxTextSize = 14

NewTab.Name = "NewTab"
NewTab.Parent = Tabs
NewTab.AnchorPoint = Vector2.new(1, 0)
NewTab.BackgroundColor3 = Color3.new(1, 1, 1)
NewTab.BackgroundTransparency = 1
NewTab.Position = UDim2.new(1, -3, 0, 3)
NewTab.Size = UDim2.new(0, 18, 0, 18)
NewTab.Image = "rbxassetid://13341007531"
NewTab.ImageRectOffset = Vector2.new(64, 64)
NewTab.ImageRectSize = Vector2.new(384, 384)
NewTab.ScaleType = Enum.ScaleType.Slice

NavigationBar.Name = "NavigationBar"
NavigationBar.Parent = Executor_2
NavigationBar.AnchorPoint = Vector2.new(0, 0.5)
NavigationBar.BackgroundColor3 = Color3.new(1, 1, 1)
NavigationBar.BackgroundTransparency = 1
NavigationBar.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
NavigationBar.Position = UDim2.new(0, 0, 0.5, 0)
NavigationBar.Size = UDim2.new(0, 28, 1, -12)

ClearButton.Name = "ClearButton"
ClearButton.Parent = NavigationBar
ClearButton.BackgroundColor3 = Color3.new(0, 0, 0)
ClearButton.BackgroundTransparency = 1
ClearButton.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
ClearButton.BorderSizePixel = 0
ClearButton.Position = UDim2.new(0.0182583779, 0, 0.867097735, 0)
ClearButton.Size = UDim2.new(0, 26, 0, 26)
ClearButton.Image = "rbxassetid://13343828921"

ExecuteButton.Name = "ExecuteButton"
ExecuteButton.Parent = NavigationBar
ExecuteButton.BackgroundColor3 = Color3.new(1, 1, 1)
ExecuteButton.BackgroundTransparency = 1
ExecuteButton.BorderSizePixel = 0
ExecuteButton.Position = UDim2.new(-0.0124038868, 0, 0.640705407, 0)
ExecuteButton.Size = UDim2.new(0, 26, 0, 26)
ExecuteButton.Image = "rbxassetid://13343826712"

ExecuteFromClipboard.Name = "ExecuteFromClipboard"
ExecuteFromClipboard.Parent = NavigationBar
ExecuteFromClipboard.BackgroundColor3 = Color3.new(1, 1, 1)
ExecuteFromClipboard.BackgroundTransparency = 1
ExecuteFromClipboard.BorderSizePixel = 0
ExecuteFromClipboard.Position = UDim2.new(-0.0142788775, 0, 0.414666712, 0)
ExecuteFromClipboard.Size = UDim2.new(0, 26, 0, 26)
ExecuteFromClipboard.Image = "rbxassetid://13340794883"

UIListLayout_7.Parent = NavigationBar
UIListLayout_7.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_7.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_7.VerticalAlignment = Enum.VerticalAlignment.Bottom
UIListLayout_7.Padding = UDim.new(0, 10)

Extend.Name = "Extend"
Extend.Parent = Executor_2
Extend.AnchorPoint = Vector2.new(0, 0.5)
Extend.BackgroundColor3 = Color3.new(1, 1, 1)
Extend.BackgroundTransparency = 1
Extend.Position = UDim2.new(0, 36, 0.5, 0)
Extend.Size = UDim2.new(0, 24, 0, 24)
Extend.ZIndex = 3
Extend.Image = "rbxassetid://13350453620"
Extend.ImageTransparency = 1

SavedScripts.Name = "SavedScripts"
SavedScripts.Parent = Executor_2
SavedScripts.AnchorPoint = Vector2.new(0, 0.5)
SavedScripts.BackgroundColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
SavedScripts.BorderColor3 = Color3.new(0.105882, 0.105882, 0.105882)
SavedScripts.Position = UDim2.new(0, 36, 0.5, 0)
SavedScripts.Size = UDim2.new(0, 120, 1, 0)

TextLabel_4.Parent = SavedScripts
TextLabel_4.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_4.BackgroundTransparency = 1
TextLabel_4.Position = UDim2.new(0, 28, 0, 0)
TextLabel_4.Size = UDim2.new(1, -28, 0, 24)
TextLabel_4.Font = Enum.Font.SourceSans
TextLabel_4.Text = "Scripts"
TextLabel_4.TextColor3 = Color3.new(1, 1, 1)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 14
TextLabel_4.TextWrapped = true
TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_14.Parent = TextLabel_4
UITextSizeConstraint_14.MaxTextSize = 14

ScrollingFrame_2.Parent = SavedScripts
ScrollingFrame_2.Active = true
ScrollingFrame_2.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame_2.BackgroundTransparency = 1
ScrollingFrame_2.Position = UDim2.new(-1.79515169e-07, 0, 0.132389024, 0)
ScrollingFrame_2.Size = UDim2.new(0.988235295, 0, 0.716049314, 0)
ScrollingFrame_2.CanvasSize = UDim2.new(0, 0, 10, 0)
ScrollingFrame_2.ScrollBarThickness = 0

UIListLayout_8.Parent = ScrollingFrame_2
UIListLayout_8.HorizontalAlignment = Enum.HorizontalAlignment.Right
UIListLayout_8.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_8.Padding = UDim.new(0, 5)

Frame_6.Parent = ScrollingFrame_2
Frame_6.BackgroundColor3 = Color3.new(0.0509804, 0.0509804, 0.0509804)
Frame_6.Position = UDim2.new(0.211298585, 0, 3.70528966e-07, 0)
Frame_6.Size = UDim2.new(0.788999975, 0, 0.0120000001, 0)
Frame_6.Visible = false
Frame_6.ZIndex = 3

TextLabel_5.Parent = Frame_6
TextLabel_5.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_5.BackgroundTransparency = 1
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(0.240451634, 0, 0, 0)
TextLabel_5.Size = UDim2.new(0.733357906, 0, 1, 0)
TextLabel_5.ZIndex = 4
TextLabel_5.Font = Enum.Font.SourceSans
TextLabel_5.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
TextLabel_5.TextScaled = true
TextLabel_5.TextSize = 13
TextLabel_5.TextWrapped = true
TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_15.Parent = TextLabel_5
UITextSizeConstraint_15.MaxTextSize = 13

Select.Name = "Select"
Select.Parent = Frame_6
Select.BackgroundColor3 = Color3.new(1, 1, 1)
Select.BackgroundTransparency = 1
Select.Size = UDim2.new(0.699999988, 0, 1, 0)
Select.ZIndex = 4
Select.Font = Enum.Font.SourceSans
Select.Text = ""
Select.TextColor3 = Color3.new(0, 0, 0)
Select.TextSize = 14

UICorner_28.Parent = Frame_6
UICorner_28.CornerRadius = UDim.new(0.300000012, 0)

ImageLabel_2.Parent = Frame_6
ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_2.BackgroundTransparency = 1
ImageLabel_2.Position = UDim2.new(0, 0, 0.215518191, 0)
ImageLabel_2.Size = UDim2.new(0, 14, 0, 14)
ImageLabel_2.ZIndex = 4
ImageLabel_2.Image = "rbxassetid://13350307486"

AutoExecute.Name = "AutoExecute"
AutoExecute.Parent = Frame_6
AutoExecute.BackgroundColor3 = Color3.new(0.129412, 0.129412, 0.129412)
AutoExecute.Position = UDim2.new(0.791184008, 0, 0.146092594, 0)
AutoExecute.Size = UDim2.new(0.171768472, 0, 0.709790349, 0)
AutoExecute.ZIndex = 4
AutoExecute.Font = Enum.Font.SourceSans
AutoExecute.Text = ""
AutoExecute.TextColor3 = Color3.new(0.223529, 0.223529, 0.223529)
AutoExecute.TextSize = 14

UICorner_29.Parent = AutoExecute
UICorner_29.CornerRadius = UDim.new(1, 0)

UICorner_30.Parent = SavedScripts
UICorner_30.CornerRadius = UDim.new(0.0500000007, 0)

ImageLabel_3.Parent = SavedScripts
ImageLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_3.BackgroundTransparency = 1
ImageLabel_3.Position = UDim2.new(0, 6, 0, 4)
ImageLabel_3.Size = UDim2.new(0, 16, 0, 16)
ImageLabel_3.Image = "rbxassetid://13350293752"

Hide.Name = "Hide"
Hide.Parent = SavedScripts
Hide.AnchorPoint = Vector2.new(1, 0)
Hide.BackgroundColor3 = Color3.new(1, 1, 1)
Hide.BackgroundTransparency = 1
Hide.Position = UDim2.new(1, -6, 0, 3)
Hide.Size = UDim2.new(0, 18, 0, 18)
Hide.Image = "rbxassetid://13350359268"

Bottom_2.Name = "Bottom"
Bottom_2.Parent = SavedScripts
Bottom_2.AnchorPoint = Vector2.new(0.5, 1)
Bottom_2.BackgroundColor3 = Color3.new(1, 1, 1)
Bottom_2.BackgroundTransparency = 1
Bottom_2.Position = UDim2.new(0.5, 0, 1, 0)
Bottom_2.Size = UDim2.new(1, 0, 0, 20)

UIListLayout_9.Parent = Bottom_2
UIListLayout_9.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_9.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_9.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_9.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_9.Padding = UDim.new(0, 10)

MakeNew.Name = "MakeNew"
MakeNew.Parent = Bottom_2
MakeNew.BackgroundColor3 = Color3.new(1, 1, 1)
MakeNew.BackgroundTransparency = 1
MakeNew.BorderSizePixel = 0
MakeNew.Position = UDim2.new(-0.00253421068, 0, 0.864085555, 0)
MakeNew.Size = UDim2.new(0, 22, 0, 22)
MakeNew.Image = "rbxassetid://13341007531"

RenameSelected.Name = "RenameSelected"
RenameSelected.Parent = Bottom_2
RenameSelected.BackgroundColor3 = Color3.new(1, 1, 1)
RenameSelected.BackgroundTransparency = 1
RenameSelected.BorderSizePixel = 0
RenameSelected.Position = UDim2.new(0.36217168, 0, 0.864085555, 0)
RenameSelected.Size = UDim2.new(0, 22, 0, 22)
RenameSelected.Image = "rbxassetid://13343818962"

DeleteSelected.Name = "DeleteSelected"
DeleteSelected.Parent = Bottom_2
DeleteSelected.BackgroundColor3 = Color3.new(1, 1, 1)
DeleteSelected.BackgroundTransparency = 1
DeleteSelected.BorderSizePixel = 0
DeleteSelected.Position = UDim2.new(0.738642275, 0, 0.864085555, 0)
DeleteSelected.Size = UDim2.new(0, 22, 0, 22)
DeleteSelected.Image = "rbxassetid://13343822421"

-- Scripts

local function TYWPOB_fake_script() -- Kato.Handler 
	local script = Instance.new('LocalScript', Kato)

	local Blur = Instance.new("BlurEffect", game.Lighting)
	Blur.Size = 0
	
	local TweenService = game:GetService("TweenService")
	local HttpService = game:GetService("HttpService")
	local Players = game:GetService("Players")
	
	
	local Name = "Kato"
	local KeyFile = "key.txt"
	local ConfigFile = "config.txt"
	local LogFile = "logs.txt"
	local Authed = false
	
	local IntroductionPage = script.Parent:FindFirstChild("IntroductionPage")
	local MainPage = script.Parent:FindFirstChild("MainPage")
	
	local MaximizeButton = script.Parent.Maximise
	local KeyBox = IntroductionPage.KeySysFrame.KeyBox
	local NavigationBarPage = MainPage.Pages.Executor.NavigationBar
	local PageBarTab = MainPage.PageBar
	local SettingsPage = MainPage.Pages.Settings
	
	local localPlayer = game.Players.LocalPlayer
	local localPlayerName = localPlayer.Name
	local robloxId = game:GetService("Players"):GetUserIdFromNameAsync(localPlayerName)
	
	local thumbnailType = Enum.ThumbnailType.HeadShot
	local thumbnailSize = Enum.ThumbnailSize.Size420x420
	
	local screenWidth, screenHeight = localPlayer:GetMouse().ViewSizeX, localPlayer:GetMouse().ViewSizeY
	local buttonWidth, buttonHeight = MaximizeButton.AbsoluteSize.X, MaximizeButton.AbsoluteSize.Y
	
	local buttonX = (screenWidth / 2) - (buttonWidth / 2)
	local buttonY = (screenHeight / 2) - (buttonHeight / 2)
	
	local ColorRed = Color3.fromRGB(145, 13, 13)
	
	local progressFrame = SettingsPage.KeyProgress.Frame
	local progress = progressFrame.Progress
	
	local Executor = script.Parent.MainPage.Pages.Executor
	
	local userId = 0
	
	local StarterGui = game:GetService("StarterGui")
	local function Notify(Title: string, Description: string, Duration: number)
		StarterGui:SetCore("SendNotification", {
			["Title"] = Title,
			["Text"] = Description,
			["Duration"] = Duration or 3,
		})
	end
	
	
	local function Authenticate(Key: string)		
		local success, err = pcall(function()
			local response = request({
				Url = "https://kato.wtf/back-end/src/verify-key.php?key=" .. Key .. "&user=" .. robloxId,
				Method = "GET",
			})
	
			if response.StatusCode ~= 200 then
				appendfile(LogFile, response.Body)
				
				Notify("Kato", "The key that you entered is invalid or the key is already being used.")
				KeyBox.Text = "Invalid key"
				wait(5)
				KeyBox.Text = "Key"
	
				if isfile(KeyFile) then
					delfile(KeyFile)
				end
	
				return
			end
	
			Authed = true
			IntroductionPage.Visible = false
			MainPage.Visible = true
	
			Notify("Kato", "Successfully logged in.")
	
			if not isfile(KeyFile) then
				writefile(KeyFile, Key)
			end
	
			local jsonData = HttpService:JSONDecode(response.Body)
			local timeLeftString = jsonData.time_left
			local referals = jsonData.referals
			userId = jsonData.userId
	
			SettingsPage.UserInfo.IdLabel.Text = userId
	
	
			if(timeLeftString > 512) then
				timeLeftString = "Permanent"
			else
				timeLeftString = timeLeftString .. "h"
			end
	
			SettingsPage.KeyInfo.TimeLabel.Text = timeLeftString
	
			local newSize = progressFrame.Size.X.Scale * referals / 10
	
			if referals >= 10 then
				newSize = 1
	
				SettingsPage.KeyProgress.Frame.BetaAccessInfo.Visible = false
			end
	
			if(referals >= 6) then
				SettingsPage.KeyProgress.Frame.PermKeyInfo.Visible = false
			end
	
			progress.Size = UDim2.fromScale((1 - progressFrame.Size.X.Scale) + newSize, 1)
		end)
		
		if err ~= nil then
			appendfile(LogFile, err)
		end
	end
	
	
	if isfile(KeyFile) then
		local key = readfile(KeyFile)
		--print(key)
	
		Authenticate(key)
	end
	
	local KatoTween = {}
	function KatoTween:TweenObject(Object, Propertie, Duration, ...)
		game:GetService("TweenService"):Create(Object, TweenInfo.new(Duration, ...), Propertie):Play()
	end
	
	if not isfolder("Kato") then
		makefolder("Kato")
	end
	
	if isfolder("Kato/KatoAsset") then
		delfolder("Kato/KatoAsset")
	end
	
	makefolder("Kato/KatoAsset")
	
	local getfakeasset = getcustomasset or getsynasset
	
	local function checkifimageexists(Url)
		local Success, f = pcall(function()
			local Image = game:HttpGet("https://process.filestackapi.com/AhTgLagciQByzXpFGRI0Az/output=format:png/"..Url)
		end)
	
		if not Success then
			return false
		else
			return true
		end
	
	end
	
	local function save_image(Url)
		local Path = "Kato/KatoAsset/"
		local Image = game:HttpGet("https://process.filestackapi.com/AhTgLagciQByzXpFGRI0Az/output=format:png/"..Url)
		local Guid = game:GetService("HttpService"):GenerateGUID(false):gsub("-", ""):lower()
		writefile(Path..Guid..".png", Image)
		return getfakeasset(Path..Guid..".png")
	end
	
	--Config shit
	--local AutoLogin = true;
	
	--Helper functions
	
	local function fadeOut(page)	
		for i,v in ipairs(page:GetChildren()) do
			if v:IsA("Frame") or v:IsA("TextBox") or v:IsA("ScrollingFrame") then
				local tween = TweenService:Create(v, TweenInfo.new(0.6), {BackgroundTransparency = 1})
				tween:Play()
	
				tween.Completed:Connect(function()
					page.Visible = false
				end)
			end
			
			v.Visible = false
		end 
	end
	
	local function fadeIn(page)
		for i,v in ipairs(page:GetChildren()) do		
			if v:IsA("Frame") or v:IsA("TextBox")  then
				local tween = TweenService:Create(v, TweenInfo.new(0.6), {BackgroundTransparency = 0})
				tween:Play()
	
				tween.Completed:Connect(function()
					page.Visible = true
				end)
			end
		end 
	end
	
	local function PopUp(header, body)
		SettingsPage.ProgessInfoPopup.Header.Text = header
		SettingsPage.ProgessInfoPopup.Body.Text = body
	
		fadeIn(SettingsPage.ProgessInfoPopup)
	end
	
	IntroductionPage.Logo.Activated:Connect(function()
		IntroductionPage.Visible = false
		MaximizeButton.Visible = true
	end)
	
	local MainSizeX = MainPage.Size.X.Scale
	local MainSizeY = MainPage.Size.Y.Scale
	
	MainPage.MinimiseButton.Activated:Connect(function()
		MainPage.Visible = false
		MaximizeButton.Visible = true
	end)
	
	MaximizeButton.Activated:Connect(function()
		MaximizeButton.Visible = false
		
		if Authed then 
			MainPage.Visible = true	
		else
			IntroductionPage.Visible = true
		end
	end)
	
	IntroductionPage.KeySysFrame.GetKey.Activated:Connect(function()
		setclipboard("https://kato.wtf/back-end/src/gen-key.php")
		Notify("Kato", "The URL has been copied to your clipboard.")
	end)
	
	IntroductionPage.KeySysFrame.Validate.Activated:Connect(function()		
		Authenticate(KeyBox.Text)
	end)
	
	--Settings
	SettingsPage.LogOut.Activated:Connect(function()
		if not Authed then
			Notify("Kato", "Failed to logout, contact support.")
			return
		end
		
		local key = readfile(KeyFile)
		
		local response = request({
			Url = "https://kato.wtf/back-end/src/logout.php?key=" .. key .. "&user=" .. robloxId,
			Method = "GET",
		})
		
		if response.StatusCode ~= 200 then
			Notify("Kato", "Failed to logout, contact support.")
			return
		end
		
		Notify("Kato", "Successfully logged out.")
		
		delfile(KeyFile)
		
		Authed = false
		MainPage.Visible = false
		IntroductionPage.Visible = true
	end)
	
	SettingsPage.ExtendTime.Activated:Connect(function()
		local key = readfile(KeyFile)
		setclipboard("https://kato.wtf/back-end/src/extend-key.php?user=" .. robloxId .. "&key=" .. key)
		
		Notify("Kato", "The URL has been copied to your clipboard.")
	end)
	
	SettingsPage.UnlockFps.Activated:Connect(function()
		setfpscap(999)
	end)
	--Infos
	
	SettingsPage.KeyProgress.Frame.PermKeyInfo.Activated:Connect(function()
		PopUp("Permanent Key", "By reffering 6 users you will never have to go through ads again!")
	end)
	
	SettingsPage.KeyProgress.Frame.BetaAccessInfo.Activated:Connect(function()
		PopUp("Beta Access", "By reffering 10 users you get access to not yet released features we have to offer!")
	end)
	
	SettingsPage.ProgessInfoPopup.ClosePopUp.Activated:Connect(function()
		SettingsPage.ProgessInfoPopup.Visible = false
	end)
	
	SettingsPage.DiscordLink.Activated:Connect(function()
		setclipboard("https://discord.com/invite/5DJfEebbUq")
	
		Notify("Kato", "The Discord invite link has been copied to your clipboard.")
	end)
	
	SettingsPage.CopyReferal.Activated:Connect(function()
		setclipboard("https://kato.wtf/back-end/src/gen-key.php?ref=" .. userId)
	
		Notify("Kato", "The referal link has been copied to your clipboard.")
	end)
	
	--Screen sswitching
	
	PageBarTab.Executor.Activated:Connect(function()
		MainPage.Pages.Executor.Visible = true
		MainPage.Pages.ScriptHub.Visible = false
		MainPage.Pages.Settings.Visible = false
		
		--fadeOut(SettingsPage)
		--fadeIn(MainPage.ScriptBox)
	end)
	
	PageBarTab.Settings.Activated:Connect(function()
		MainPage.Pages.Executor.Visible = false
		MainPage.Pages.ScriptHub.Visible = false
		MainPage.Pages.Settings.Visible = true
		
		--fadeOut(MainPage.ScriptBox)
		--fadeIn(SettingsPage)
	end)
	
	PageBarTab.ScriptHub.Activated:Connect(function()
		MainPage.Pages.Executor.Visible = true
		MainPage.Pages.ScriptHub.Visible = false
		MainPage.Pages.Settings.Visible = false
	
		--fadeOut(MainPage.ScriptBox)
		--fadeIn(SettingsPage)
		
		PageBarTab.Visible = false
		script.Parent.MainPage.Separator.Visible = false
		script.Parent.MainPage.Pages.Visible = false
		script.Parent.MainPage.MinimiseButton.Visible = false
		KatoTween:TweenObject(script.Parent.MainPage, {Size = UDim2.new(0, 0, 0, 0)}, 0.5)
		wait(0.5)
		script.Parent.MainPage.Visible = false
		KatoTween:TweenObject(game.Lighting.Blur, {Size = 25}, 0.2)
		wait(0.2)
		script.Parent.ScriptBlox.Visible = true
		wait(0.1)
		KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Back, {Transparency = 0}, 0.3)
		KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Back, {TextTransparency = 0}, 0.3)
		KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Search, {Transparency = 0}, 0.3)
		KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Search, {TextTransparency = 0}, 0.3)
		KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.SearchBox, {Transparency = 0}, 0.3)
		KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.SearchBox, {TextTransparency = 0}, 0.3)
	end)
	
	local SavedScripts = MainPage.Pages.Executor.SavedScripts
	local Tabs = MainPage.Pages.Executor.Tabs
	local TabControl = Tabs.TabControl
	
	local xTabPos = SavedScripts.Position.X.Offset
	local xSavedScriptsScale = SavedScripts.Size.X.Offset
	local ySavedScriptsScale = SavedScripts.Size.Y.Scale
	
	local xSavedPos = SavedScripts.Position.X.Scale
	local ySavedPos = SavedScripts.Position.Y.Offset
	
	local xTabPos = Tabs.Position.X.Scale
	local xTabOffset = Tabs.Size.X.Offset
	
	
	local xTabScale = Tabs.Size.X.Scale
	local yTabScale = Tabs.Size.Y.Scale
	local yTabOffset = Tabs.Size.Y.Offset
	
	local yTabControlScale = TabControl.Size.Y.Scale
	local yTabControlOffset = TabControl.Size.Y.Offset
	
	Executor.Extend.Activated:Connect(function()
		TweenService:Create(Executor.Extend, TweenInfo.new(0.3), {ImageTransparency = 1}):Play()
		SavedScripts.Visible = true
	
		
		local children = SavedScripts:GetChildren()
	
		for _,v in children do
			if v:IsA("ImageButton") or v:IsA("ImageLabel") then
				TweenService:Create(v, TweenInfo.new(0.6), {ImageTransparency = 0}):Play()
			end	
	
			if v:IsA("Frame") or v:IsA("ScrollingFrame") then
				local children = v:GetChildren()
	
				for _,v in children do
					if v:IsA("ImageButton") then
						TweenService:Create(v, TweenInfo.new(0.6), {ImageTransparency = 0}):Play()
					end	
	
					if v:IsA("Frame") then
						local children = v:GetChildren()
	
						for _,v in children do
							
							if v:IsA("ImageButton") or v:IsA("ImageLabel") then
								TweenService:Create(v, TweenInfo.new(0.6), {ImageTransparency = 0}):Play()
							end	
							
	
							if v:IsA("TextLabel") then
								TweenService:Create(v, TweenInfo.new(0.6), {TextTransparency = 0}):Play()
							end
						end				
					end
				end
			end
		end
		
		local tween = TweenService:Create(Tabs, TweenInfo.new(0.5), {Size = UDim2.new(1, -156, 1, 0), Position = UDim2.new(1,0,0.5,0)})
		tween:Play()
		
		tween.Completed:Connect(function()
			TweenService:Create(SavedScripts, TweenInfo.new(0.5), {Size = UDim2.new(0, xSavedScriptsScale, 1, 0)}):Play()
		end)
	end)
	
	SavedScripts.Hide.Activated:Connect(function()
		local children = SavedScripts:GetChildren()
		
		for _,v in children do
			if v:IsA("ImageButton") or v:IsA("ImageLabel") then
				TweenService:Create(v, TweenInfo.new(0.6), {ImageTransparency = 1}):Play()
			end	
			
			if v:IsA("Frame") or v:IsA("ScrollingFrame") then
				local children = v:GetChildren()
				
				for _,v in children do
					if v:IsA("ImageButton") then
						TweenService:Create(v, TweenInfo.new(0.6), {ImageTransparency = 1}):Play()
					end	
					
					if v:IsA("Frame") then
						local children = v:GetChildren()
						
						for _,v in children do
							
							if v:IsA("ImageButton") or v:IsA("ImageLabel") then
								TweenService:Create(v, TweenInfo.new(0.6), {ImageTransparency = 1}):Play()
							end	
							
							if v:IsA("TextLabel") then
								TweenService:Create(v, TweenInfo.new(0.6), {TextTransparency = 1}):Play()
							end
						end				
					end
				end
			end
		end
			
		local tween = TweenService:Create(SavedScripts, TweenInfo.new(0.5), {Size = UDim2.new(0, xSavedScriptsScale, yTabControlScale, yTabControlOffset)})
		tween:Play()
		
		tween.Completed:Connect(function()
			SavedScripts.Visible = false
			TweenService:Create(Executor.Extend, TweenInfo.new(0.3), {ImageTransparency = 0}):Play()
			
			local tween = TweenService:Create(Tabs, TweenInfo.new(0.5), {Size = UDim2.new(1, -56, 1, 0), Position = UDim2.new(1,0,0.5,0)})
			tween:Play()
		end)
	end)
	
	local function UpdateSize()
		local cS = script.Parent.ScriptBlox.ScriptBloxFrame:WaitForChild("UIGridLayout").AbsoluteContentSize
	
		game.TweenService:Create(script.Parent.ScriptBlox.ScriptBloxFrame, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			CanvasSize = UDim2.new(0, 0, 0, cS.Y + 10)
		}):Play()
	end
	
	script.Parent.ScriptBlox.ScriptBloxFrame.ChildAdded:Connect(UpdateSize)
	script.Parent.ScriptBlox.ScriptBloxFrame.ChildRemoved:Connect(UpdateSize)
	
	local Cooldown = false
	script.Parent.ScriptBlox.UtilitiesFrame.Search.MouseButton1Click:Connect(function()
		local function a()
			if not Cooldown then
				Cooldown = true
	
				KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Search, {BackgroundColor3 = Color3.fromRGB(137, 38, 207)}, 0.3)
	
				for i,v in pairs(Kato.ScriptBlox.ScriptBloxFrame:GetChildren()) do
					if v:IsA("ImageLabel") then
						v:Destroy()
					end
				end
	
				if isfolder("Kato/KatoAsset") then
					delfolder("Kato/KatoAsset")
				end
	
				makefolder("Kato/KatoAsset")
	
				for i, a in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGet("https://www.scriptblox.com/api/script/search?q="..script.Parent.ScriptBlox.UtilitiesFrame.SearchBox.Text.."&page=1"))) do
					for _,b in pairs(a['scripts']) do
						wait(0.05)
						spawn(function()
							local Template = Instance.new("ImageLabel")
							local UICorner = Instance.new("UICorner")
							local Copy = Instance.new("TextButton")
							local UICorner_2 = Instance.new("UICorner")
							local Execute = Instance.new("TextButton")
							local UICorner_3 = Instance.new("UICorner")
							local ScriptTitle = Instance.new("TextLabel")
	
							Template.Name = "Script"
							Template.Parent = Kato.ScriptBlox.ScriptBloxFrame
							Template.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
							Template.Position = UDim2.new(0.0369811282, 0, 0.0249509551, 0)
							Template.Size = UDim2.new(0, 275, 0, 135)
							Template.Image = ""
	
							UICorner.CornerRadius = UDim.new(0, 15)
							UICorner.Parent = Template
	
							Copy.Name = "Copy"
							Copy.Parent = Template
							Copy.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
							Copy.BorderColor3 = Color3.fromRGB(50, 50, 50)
							Copy.Position = UDim2.new(0.514285743, 0, 0.712000012, 0)
							Copy.Size = UDim2.new(0, 90, 0, 30)
							Copy.AutoButtonColor = false
							Copy.Font = Enum.Font.SourceSansBold
							Copy.Text = "Copy"
							Copy.TextColor3 = Color3.fromRGB(255, 255, 255)
							Copy.TextSize = 14.000
	
							UICorner_2.CornerRadius = UDim.new(0, 20)
							UICorner_2.Parent = Copy
	
							Execute.Name = "Execute"
							Execute.Parent = Template
							Execute.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
							Execute.BorderColor3 = Color3.fromRGB(50, 50, 50)
							Execute.Position = UDim2.new(0.052380953, 0, 0.712000012, 0)
							Execute.Size = UDim2.new(0, 90, 0, 30)
							Execute.AutoButtonColor = false
							Execute.Font = Enum.Font.SourceSansBold
							Execute.Text = "Execute"
							Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
							Execute.TextSize = 14.000
	
							UICorner_3.CornerRadius = UDim.new(0, 20)
							UICorner_3.Parent = Execute
	
							ScriptTitle.Name = "ScriptTitle"
							ScriptTitle.Parent = Template
							ScriptTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
							ScriptTitle.BackgroundTransparency = 1.000
							ScriptTitle.Position = UDim2.new(0.052380953, 0, 0.064000003, 0)
							ScriptTitle.Size = UDim2.new(0, 140, 0, 45)
							ScriptTitle.Font = Enum.Font.SourceSansBold
							ScriptTitle.Text = b['title']
							ScriptTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
							ScriptTitle.TextSize = 20.000
							ScriptTitle.TextStrokeTransparency = 0.500
							ScriptTitle.TextWrapped = true
							ScriptTitle.TextXAlignment = Enum.TextXAlignment.Left
							ScriptTitle.TextYAlignment = Enum.TextYAlignment.Top
	
							local ExecuteCooldown = false
							Execute.MouseButton1Click:Connect(function()
								if not ExecuteCooldown then
									ExecuteCooldown = true
	
									KatoTween:TweenObject(Execute, {BackgroundColor3 = Color3.fromRGB(137, 38, 207)}, 0.3)
									wait(0.3)
									loadstring(b['script'])()
									KatoTween:TweenObject(Execute, {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}, 0.3)
	
									ExecuteCooldown = false
								end
							end)
	
							local CopyCooldown = false
							Copy.MouseButton1Click:Connect(function()
								if not CopyCooldown then
									CopyCooldown = true
	
									KatoTween:TweenObject(Copy, {BackgroundColor3 = Color3.fromRGB(137, 38, 207)}, 0.3)
									wait(0.3)
									setclipboard(b['script'])
									KatoTween:TweenObject(Copy, {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}, 0.3)
	
									CopyCooldown = false
								end
							end)
	
							UpdateSize()
	
							spawn(function()
								if string.find(b['game']['imageUrl'],"/images") then
									if checkifimageexists("https://scriptblox.com"..b['game']['imageUrl']) then
										Template.Image = save_image("https://scriptblox.com"..b['game']['imageUrl'])
									end
								end
	
								if string.find(b['game']['imageUrl'],"rbxcdn") then
									if checkifimageexists(b['game']['imageUrl']) then
										Template.Image = save_image(b['game']['imageUrl'])
									end
								end
								wait(1)
								for i,v in pairs(Kato.ScriptBlox.ScriptBloxFrame:GetChildren()) do
									if v:IsA("ImageLabel") and v.Name == "Script" and v.Image == "" then
										v.Image = save_image("https://cdn.discordapp.com/attachments/1070645928266055712/1104438513388232825/FEUR_1.png")
									end
								end
							end)
						end)
					end
				end
				KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Search, {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}, 0.3)
				Cooldown = false
			end
		end
	
		 pcall(a)
	end)
	
	local BackCooldown = false
	script.Parent.ScriptBlox.UtilitiesFrame.Back.MouseButton1Click:Connect(function()
		if not BackCooldown then
			BackCooldown = true
	
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Back, {BackgroundColor3 = Color3.fromRGB(137, 38, 207)}, 0.3)
			wait(0.3)
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Back, {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}, 0.3)
	
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Back, {Transparency = 1}, 0.3)
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Back, {TextTransparency = 1}, 0.3)
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Search, {Transparency = 1}, 0.3)
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.Search, {TextTransparency = 1}, 0.3)
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.SearchBox, {Transparency = 1}, 0.3)
			KatoTween:TweenObject(script.Parent.ScriptBlox.UtilitiesFrame.SearchBox, {TextTransparency = 1}, 0.3)
			wait(0.1)
			script.Parent.ScriptBlox.Visible = false
			wait(0.2)
			KatoTween:TweenObject(game.Lighting.Blur, {Size = 0}, 0.2)
			script.Parent.MainPage.Visible = true
			KatoTween:TweenObject(script.Parent.MainPage, {Size = UDim2.new(0, 600, 0, 275)}, 0.5)
			wait(0.5)
			script.Parent.MainPage.MinimiseButton.Visible = true
			script.Parent.MainPage.Pages.Visible = true
			script.Parent.MainPage.Separator.Visible = true
			PageBarTab.Visible = true
	
			BackCooldown = false
		end
	end)
	
	local Windows = MainPage.Windows
	SettingsPage.UserInfo.UsernameLabel.Text = localPlayerName
	
	local thumbnailUrl = Players:GetUserThumbnailAsync(robloxId, thumbnailType, thumbnailSize)
	SettingsPage.UserInfo.UserAvatar.Image = thumbnailUrl
	
	local version = request({
		Url = "https://kato.wtf/resources/version.txt",
		Method = "GET",
	})
	
	if version.Body ~= "NEFARIOUS" then
		local newTabFrame = Windows.ConfirmationPopup:Clone()
		newTabFrame.Parent = MainPage
		newTabFrame.Visible = true
	
		local header = newTabFrame:FindFirstChild("Header")
		header.Text = "Outdated"
	
		local body = newTabFrame:FindFirstChild("Body")
		body.Text = "Kato is outdated, please re-download from https://kato.wtf"
		
		local Buttons = newTabFrame:FindFirstChild("Buttons")
		
		local ConfirmButton = Buttons:FindFirstChild("Confirm")
		ConfirmButton.MouseButton1Click:Connect(function()
			newTabFrame:Destroy()
		end)
	
		local DeclineButton = Buttons:FindFirstChild("Decline")
		DeclineButton.MouseButton1Click:Connect(function()
			newTabFrame:Destroy()
		end)
	end
	
	toggleCompatibilityMode(true)
end

local function JHLAJVE_fake_script() -- Kato.TabControl 
	local script = Instance.new('LocalScript', Kato)

	makefolder("Cached")
	makefolder("Scripts")
	makefolder("AutoExecute")
	
	local RunService = game:GetService("RunService")
	local HttpService = game:GetService("HttpService")
	
	local scriptBoxes = {}
	
	local localPlayer = game.Players.LocalPlayer
	
	local MainPage = script.Parent.MainPage
	local tabs = MainPage.Pages.Executor.Tabs
	local SavedScripts = MainPage.Pages.Executor.SavedScripts
	local Windows = MainPage.Windows
	local ScriptHub = MainPage.Pages.ScriptHub
	
	local NavigationBarPage = MainPage.Pages.Executor.NavigationBar
	
	
	local AutoExecuteDirectory = "AutoExecute/"
	local ScriptsDirectory = "Scripts/"
	local Folder = "Cached/"
	
	local Selected = ""
	local SelectedTab = ""
	
	local Scripts = {}
	
	-- I/O Functions
	local function Rename(oldname, newname)
		print("old" .. oldname)
		print("new" .. newname)
		local contents = readfile(oldname)
	
		writefile(newname, contents)
		delfile(oldname)
	end
	
	function checkLuaExtension(filename)
		if string.sub(filename, -4) ~= ".lua" then
			filename = filename .. ".lua"
		end
		return filename
	end

	local function RenameFile(oldName)
		local newTabFrame = Windows.NewNamePopup:Clone()
		newTabFrame.Parent = MainPage
		newTabFrame.Visible = true
	
		local header = newTabFrame:FindFirstChild("Header")
		header.Text = "Rename file"
	
		local name = newTabFrame:FindFirstChild("NewName")
		local Buttons = newTabFrame:FindFirstChild("Buttons")
	
		local ConfirmButton = Buttons:FindFirstChild("Confirm")
		ConfirmButton.MouseButton1Click:Connect(function()
			local fileNameOld = ScriptsDirectory .. checkLuaExtension(oldName)
			local fileNameNew = ScriptsDirectory .. checkLuaExtension(name.Text)
			
			print(fileNameOld)
			print(fileNameNew)
			
			Rename(fileNameOld, fileNameNew)
			if isfile(fileNameOld) then
				
				local fileNameOld = AutoExecuteDirectory .. checkLuaExtension(oldName)
				local fileNameNew = AutoExecuteDirectory .. checkLuaExtension(name.Text)
				
				Rename(fileNameOld, fileNameNew)
			end
			
			Selected.TextLabel.Text = checkLuaExtension(name.Text)
	
			newTabFrame:Destroy()
		end)
	
		local DeclineButton = Buttons:FindFirstChild("Decline")
		DeclineButton.MouseButton1Click:Connect(function()
			newTabFrame:Destroy()
		end)
	end
	
	local function DeleteFile(name, index)
		local newTabFrame = Windows.ConfirmationPopup:Clone()
		newTabFrame.Parent = MainPage
		newTabFrame.Visible = true
	
		local header = newTabFrame:FindFirstChild("Header")
		header.Text = "Delete File?"
	
		local body = newTabFrame:FindFirstChild("Body")
		body.Text = "Are you sure you want to delete " .. name .. "?"
		
		local Buttons = newTabFrame:FindFirstChild("Buttons")
	
		local ConfirmButton = Buttons:FindFirstChild("Confirm")
		ConfirmButton.MouseButton1Click:Connect(function()
			local fileNameNew = ScriptsDirectory .. checkLuaExtension(name)

			delfile(fileNameNew)
	
			local fileNameNew = AutoExecuteDirectory .. checkLuaExtension(name)
			if isfile(fileNameNew) then
				delfile(fileNameNew)
			end
					
			Selected:Destroy()		
			newTabFrame:Destroy()
		end)
	
		local DeclineButton = Buttons:FindFirstChild("Decline")
		DeclineButton.MouseButton1Click:Connect(function()
			newTabFrame:Destroy()
		end)
	end

	local LastClickTime = 0
	local DoubleClickTime = 0.3

	local function createNewTab(name, text)	
		--1e1e1e	
		for _,v in scriptBoxes do
			v.Visible = false
		end
		
		for _,v in tabs.TabControl:GetChildren() do
			if not v:IsA("Frame") then
				continue
			end
			
			v.BackgroundColor3 = Color3.fromHex("1e1e1e")
		end
		
		local index = #scriptBoxes
		
		local newTabFrame = tabs.TabControl.TabFrame:Clone()
		newTabFrame.Parent = tabs.TabControl
		newTabFrame.Visible = true
		
		newTabFrame.BackgroundColor3 = Color3.fromHex("313131")
	
		local textLabel = newTabFrame:FindFirstChild("TextLabel")
		textLabel.Text = name
		
		local newScriptBox = tabs.ScriptBox:Clone()
		newScriptBox.Parent = tabs
		newScriptBox.Visible = true
		newScriptBox.Text = text
			
		table.insert(scriptBoxes, newScriptBox)
		SelectedTab = newScriptBox
	
		local switchButton = newTabFrame:FindFirstChild("SwitchTab")
		switchButton.MouseButton1Click:Connect(function()		
			for i,v in scriptBoxes do
				v.Visible = false
			end
			
			for _,v in tabs.TabControl:GetChildren() do
				if not v:IsA("Frame") then
					continue
				end
				
				v.BackgroundColor3 = Color3.fromHex("1e1e1e")
			end
			
			newTabFrame.BackgroundColor3 = Color3.fromHex("313131")
			
			newScriptBox.Visible = true
			SelectedTab = newScriptBox
		end)
		
		local deleteButton = newTabFrame:FindFirstChild("CloseTab")
		deleteButton.MouseButton1Click:Connect(function()
			local fileNameNew = ScriptsDirectory .. checkLuaExtension(textLabel.Text)
			
			if not isfile(fileNameNew) or readfile(fileNameNew) ~= newScriptBox.Text then
				local popup = Windows.ConfirmationPopup:Clone()
				popup.Parent = MainPage
				popup.Visible = true
				
				local header = popup:FindFirstChild("Header")
				header.Text = "Close without saving?"
	
				local body = popup:FindFirstChild("Body")
				body.Text = "Do you want to save unsaved file?"
				
				local Buttons = popup:FindFirstChild("Buttons")
	
				local ConfirmButton = Buttons:FindFirstChild("Confirm")
				ConfirmButton.MouseButton1Click:Connect(function()
					local fileNameNew = ScriptsDirectory .. checkLuaExtension(textLabel.Text)
					local fileAutoExec = AutoExecuteDirectory .. checkLuaExtension(textLabel.Text)

					writefile(fileNameNew, SelectedTab.Text)
					popup:Destroy()
		
					local newTabFrame = SavedScripts.ScrollingFrame.Frame:Clone()
					newTabFrame.Parent = SavedScripts.ScrollingFrame
					newTabFrame.Visible = true
					
					local index = #Scripts
				
					local Name = newTabFrame:FindFirstChild("TextLabel")
					Name.Text = name
					
					local Select = newTabFrame:FindFirstChild("Select")

					
					Select.MouseButton1Click:Connect(function()
						local fileNameNew = ScriptsDirectory .. checkLuaExtension(textLabel.Text)
						
						local CurrentClickTime = RunService.Stepped:Wait()
						if (CurrentClickTime - LastClickTime) < DoubleClickTime then
							local code
							if not isfile(fileNameNew) then
								code = writefile(fileNameNew, "--Your code")
							else
								code = readfile(fileNameNew)
							end	
			
							createNewTab(textLabel.text, code)
						end
				
						LastClickTime = CurrentClickTime
						Selected = newTabFrame
						
						for _,v in SavedScripts.ScrollingFrame:GetChildren() do
							if v:IsA("Frame") then
								v.BackgroundColor3 = Color3.fromHex("151515")
							end			
						end
						
						newTabFrame.BackgroundColor3 = Color3.fromHex("313131")
					end)
					
					local autoExecToggle = false
					local AutoExecute = newTabFrame:FindFirstChild("AutoExecute")

					if isfile(fileAutoExec) then
						autoExecToggle = true
						
						AutoExecute.BackgroundColor3 = Color3.fromHex("033b0f")
						
						local code
						if not isfile(fileNameNew) then
							code = writefile(fileNameNew, "--Your code")
						else
							code = readfile(fileNameNew)
						end	
						
						runcode(code)
					end
					
					AutoExecute.MouseButton1Click:Connect(function()		
						local fileNameNew = ScriptsDirectory .. checkLuaExtension(textLabel.Text)
						local fileAutoExec = AutoExecuteDirectory .. checkLuaExtension(textLabel.Text)

						if autoExecToggle == false then
							if not isfile(fileNameNew) then
								newTabFrame:Destroy()
								
								return
							end
							
							AutoExecute.BackgroundColor3 = Color3.fromHex("033b0f")
							autoExecToggle = true
							
							local code = readfile(fileNameNew)
							writefile(fileAutoExec, code)
						else			
							AutoExecute.BackgroundColor3 = Color3.fromHex("212121")
							autoExecToggle = false
				
							delfile(fileAutoExec)
						end
					end)
					
					return
				end)
	
				local DeclineButton = Buttons:FindFirstChild("Decline")
				DeclineButton.MouseButton1Click:Connect(function()
					newScriptBox:Destroy()
					newTabFrame:Destroy()	
					popup:Destroy()
					
					return
				end)
			else
				--table.remove(scriptBoxes, index)
	
				newTabFrame:Destroy()
				newScriptBox:Destroy()
			end
		end)
	end
	
	--Tab Functions
	
	local function InsertScriptEntry(name)	
		
		local name = string.sub(name, string.find(name, "[^/]*$"))
		
		local newTabFrame = SavedScripts.ScrollingFrame.Frame:Clone()
		newTabFrame.Parent = SavedScripts.ScrollingFrame
		newTabFrame.Visible = true
		
		local index = #Scripts
	
		local Name = newTabFrame:FindFirstChild("TextLabel")
		Name.Text = name

		local name = Name.text
		
		local Select = newTabFrame:FindFirstChild("Select")
		Select.MouseButton1Click:Connect(function()
			local CurrentClickTime = RunService.Stepped:Wait()
			if (CurrentClickTime - LastClickTime) < DoubleClickTime then
			
				local fileNameNew = ScriptsDirectory .. checkLuaExtension(Name.text)
				print(fileNameNew)

				local code
				if not isfile(fileNameNew) then
					code = writefile(fileNameNew, "--Your code")
				else
					code = readfile(fileNameNew)
				end	

				createNewTab(Name.text, code)
			end
	
			LastClickTime = CurrentClickTime
			Selected = newTabFrame
			
			for _,v in SavedScripts.ScrollingFrame:GetChildren() do
				if v:IsA("Frame") then
					v.BackgroundColor3 = Color3.fromHex("151515")
				end			
			end
			
			newTabFrame.BackgroundColor3 = Color3.fromHex("313131")
		end)
		
		local autoExecToggle = false
		local AutoExecute = newTabFrame:FindFirstChild("AutoExecute")
		if isfile(AutoExecuteDirectory .. name) then
			autoExecToggle = true
			
			AutoExecute.BackgroundColor3 = Color3.fromHex("033b0f")
			
			local code
			if not isfile(ScriptsDirectory .. name) then
				code = writefile(ScriptsDirectory .. name, "--Your code")
			else
				code = readfile(ScriptsDirectory .. name)
			end	
			
			runcode(code)
		end
		
		AutoExecute.MouseButton1Click:Connect(function()		
			if autoExecToggle == false then
				if not isfile(ScriptsDirectory .. name) then
					newTabFrame:Destroy()
					
					return
				end
				
				AutoExecute.BackgroundColor3 = Color3.fromHex("033b0f")
				autoExecToggle = true
				
				local code = readfile(ScriptsDirectory .. name)
				writefile(AutoExecuteDirectory .. name, code)
			else			
				AutoExecute.BackgroundColor3 = Color3.fromHex("212121")
				autoExecToggle = false
	
				delfile(AutoExecuteDirectory .. name)
			end
		end)
	end
	
	-- Connect the "Add Tab" button to the createNewTab function
	tabs.NewTab.Activated:Connect(function()
		createNewTab("Script #".. #scriptBoxes, "--Your script")
	end)
	
	
	-- File System
	
	SavedScripts.Bottom.MakeNew.Activated:Connect(function()	
		local ScriptPath = ScriptsDirectory .. "NewScript.lua"
			
		if isfile(ScriptPath) then
			local popup = Windows.ConfirmationPopup:Clone()
			popup.Parent = MainPage
			popup.Visible = true
	
			local header = popup:FindFirstChild("Header")
			header.Text = "Overwrite file?"
			
			local body = popup:FindFirstChild("Body")
			body.Text = "Are you sure you want to overwrite this file?"
			
			local Buttons = popup:FindFirstChild("Buttons")
			
			local ConfirmButton = Buttons:FindFirstChild("Confirm")
			ConfirmButton.MouseButton1Click:Connect(function()
				delfile(ScriptPath)
				writefile(ScriptPath, "--Your script")
							
				popup:Destroy()
			end)
	
			local DeclineButton = Buttons:FindFirstChild("Decline")
			DeclineButton.MouseButton1Click:Connect(function()
				popup:Destroy()
			end)
			
			return
		end
	
		writefile(ScriptPath, "--Your script")
		
		InsertScriptEntry("NewScript.lua")
	end)
	
	SavedScripts.Bottom.DeleteSelected.Activated:Connect(function()
		if Selected == nil then
			return
		end
		
		DeleteFile(Selected.TextLabel.Text)
	end)
	
	SavedScripts.Bottom.RenameSelected.Activated:Connect(function()
		if Selected == nil then
			return
		end
		
		RenameFile(Selected.TextLabel.Text)
	end)
	
	-- ScriptHub
	function TimeSince(dateString)
		local year = tonumber(string.sub(dateString, 1, 4))
		local month = tonumber(string.sub(dateString, 6, 7))
		local day = tonumber(string.sub(dateString, 9, 10))
		local hour = tonumber(string.sub(dateString, 12, 13))
		local minute = tonumber(string.sub(dateString, 15, 16))
		local second = tonumber(string.sub(dateString, 18, 19))
	
		local seconds = os.time() - os.time({year=year, month=month, day=day, hour=hour, min=minute, sec=second})
		local minutes = math.floor(seconds / 60)
		local hours = math.floor(minutes / 60)
		local days = math.floor(hours / 24)
		local months = math.floor(days / 30)
		local years = math.floor(months / 12)
	
		if years > 0 then
			return years .. " year" .. (years == 1 and "" or "s") .. " ago"
		elseif months > 0 then
			return months .. " month" .. (months == 1 and "" or "s") .. " ago"
		elseif days > 0 then
			return days .. " day" .. (days == 1 and "" or "s") .. " ago"
		elseif hours > 0 then
			return hours .. " hour" .. (hours == 1 and "" or "s") .. " ago"
		elseif minutes > 0 then
			return minutes .. " minute" .. (minutes == 1 and "" or "s") .. " ago"
		else
			return "just now"
		end
	end
	
	
	
	local function AddEntry(json)
		local code = json.script
		local scriptName = json.title
		local gameName = json.game.name
		local imageUrl = json.game.imageUrl or ""
		local viewsText = json.views
		local createdAt = json.createdAt
		
		local newTabFrame = ScriptHub.ScrollingFrame.Frame:Clone()
		newTabFrame.Parent = ScriptHub.ScrollingFrame
		newTabFrame.Visible = true
		
		local gameLabel = newTabFrame:FindFirstChild("Game")
		gameLabel.Text = gameName
		
		local image = newTabFrame:FindFirstChild("Picture")
		
		local name = newTabFrame:FindFirstChild("Name")
		name.Text = scriptName
		
		local bottom = newTabFrame:FindFirstChild("Bottom")
		local age = bottom:FindFirstChild("Age")
		local views = bottom:FindFirstChild("Views")
		
		local ageText = age:FindFirstChild("Name")
		local views = views:FindFirstChild("Name")
		
		ageText.Text = TimeSince(createdAt)
		views.Text = viewsText
		
		if imageUrl ~= "" then
			local scriptName = string.gsub(scriptName, "%s+", "") -- remove all white spaces
			
			writefile(Folder .. scriptName .. ".jpg", game:HttpGet("https://Scriptblox.com" .. imageUrl, true))
			
			image.Image = getcustomasset(Folder .. scriptName .. ".jpg")
		end
		
		local execute = newTabFrame:FindFirstChild("Execute")
		execute.Activated:Connect(function()
			runcode(code)
		end)
	
		local load = newTabFrame:FindFirstChild("Load")
		load.Activated:Connect(function()
			createNewTab(scriptName, code)
			
			ScriptHub.Visible = false
			MainPage.Pages.Executor.Visible = true
		end)
	end
	
	local function SearchGame(name)
		--[[for _, v in ipairs(listfiles(Folder)) do
			delfile(v)
		end	
	
		for _,v in ScriptHub.ScrollingFrame:GetChildren() do
			v:Destroy()
		end
	
		local response = request({
			Url = "https://scriptblox.com/api/script/search?q=" .. name .."&max=14&mode=free",
			Method = "GET",
		})]]
		
		local jsonData = "{\"result\":{\"totalPages\":75,\"scripts\":[{\"_id\":\"6452eb90d7492cac1af13a87\",\"title\":\"ExunysESP\",\"game\":{\"gameId\":1643500,\"name\":\"UniversalScript📌\",\"imageUrl\":\"/images/script_1643500-1683155856819.webp\"},\"slug\":\"Universal-Script-Exunys-ESP-10940\",\"verified\":true,\"key\":false,\"views\":5558,\"scriptType\":\"free\",\"isUniversal\":true,\"isPatched\":false,\"visibility\":\"public\",\"rawCount\":0,\"showRawCount\":false,\"createdAt\":\"2023-05-03T23:17:36.856Z\",\"updatedAt\":\"2023-05-10T07:09:43.455Z\",\"__v\":0,\"script\":\"loadstring(game:HttpGet(\\\"https://scriptblox.com/raw/Universal-Script-Exunys-ESP-10940\\\"))()\",\"matched\":[\"features\",\"game\",\"script\",\"tags\",\"title\"]},{\"_id\":\"644fcf0475c274fcdb3ca2ce\",\"title\":\"RequiemV3\",\"game\":{\"gameId\":21532277,\"name\":\"Notoriety\",\"imageUrl\":\"/images/script_21532277-1682951940033.webp\"},\"slug\":\"Notoriety-Requiem-10878\",\"verified\":true,\"key\":false,\"views\":6401,\"scriptType\":\"free\",\"isUniversal\":false,\"isPatched\":false,\"visibility\":\"public\",\"rawCount\":0,\"showRawCount\":false,\"createdAt\":\"2023-05-01T14:39:00.069Z\",\"updatedAt\":\"2023-05-10T07:09:44.730Z\",\"__v\":0,\"script\":\"loadstring(game:HttpGet(\\\"https://scriptblox.com/raw/Notoriety-Requiem-10878\\\"))()\",\"matched\":[\"features\",\"game\",\"script\",\"tags\",\"title\"]},{\"_id\":\"644580f987e6321fb20e76c6\",\"title\":\"SILENTAIMGUNMODSANDMORE\",\"game\":{\"gameId\":10351562025,\"name\":\"[🔫SMG!]TropicalRoyale\",\"imageUrl\":\"/images/script_10351562025-1682276601581.webp\"},\"slug\":\"SMG!-Tropical-Royale-SILENT-AIM-GUNMODS-AND-MORE-10710\",\"verified\":true,\"key\":false,\"views\":17273,\"scriptType\":\"free\",\"isUniversal\":false,\"isPatched\":false,\"visibility\":\"public\",\"rawCount\":0,\"showRawCount\":false,\"createdAt\":\"2023-04-23T19:03:21.615Z\",\"updatedAt\":\"2023-05-10T07:09:47.388Z\",\"__v\":0,\"script\":\"loadstring(game:HttpGet(\\\"https://scriptblox.com/raw/SMG!-Tropical-Royale-SILENT-AIM-GUNMODS-AND-MORE-10710\\\"))()\",\"matched\":[\"features\",\"game\",\"script\",\"tags\",\"title\"]},{\"_id\":\"6436e1fe6caee9eddf1f921e\",\"title\":\"ProjectValidus\",\"game\":{\"gameId\":7901794,\"name\":\"UniversalScript📌\",\"imageUrl\":\"/images/script_7901794-1681318398223.webp\"},\"slug\":\"Universal-Script-Project-Validus-10418\",\"verified\":true,\"views\":57497,\"scriptType\":\"free\",\"isUniversal\":true,\"isPatched\":false,\"visibility\":\"public\",\"rawCount\":0,\"showRawCount\":false,\"createdAt\":\"2023-04-12T16:53:18.263Z\",\"updatedAt\":\"2023-05-10T07:09:49.243Z\",\"__v\":0,\"key\":false,\"script\":\"loadstring(game:HttpGet(\\\"https://scriptblox.com/raw/Universal-Script-Project-Validus-10418\\\"))()\",\"matched\":[\"features\",\"game\",\"script\",\"tags\",\"title\"]},{\"_id\":\"6434f2a990d40ad95df580ea\",\"title\":\"IllusionBloxburgAutobuild\",\"game\":{\"gameId\":3659156,\"name\":\"UniversalScript📌\",\"imageUrl\":\"/images/script_3659156-1681191593586.webp\"},\"slug\":\"Universal-Script-Illusion-Bloxburg-Autobuild-10373\",\"verified\":true,\"views\":27735,\"scriptType\":\"free\",\"isUniversal\":true,\"isPatched\":false,\"visibility\":\"public\",\"rawCount\":0,\"showRawCount\":false,\"createdAt\":\"2023-04-11T05:39:53.610Z\",\"updatedAt\":\"2023-05-10T07:10:02.389Z\",\"__v\":0,\"key\":false,\"script\":\"loadstring(game:HttpGet(\\\"https://scriptblox.com/raw/Universal-Script-Illusion-Bloxburg-Autobuild-10373\\\"))()\",\"matched\":[\"features\",\"game\",\"script\",\"tags\",\"title\"]}]}}"--HttpService:JSONDecode(response.Body)
		local jsonData2 = HttpService:JSONDecode(jsonData)
		local scripts = jsonData2.result.scripts
	
		for i,v in scripts do
			AddEntry(v)
		end
	end
	
	NavigationBarPage.ExecuteButton.Activated:Connect(function()
		runcode(	SelectedTab.Text)
	end)
	
	NavigationBarPage.ExecuteFromClipboard.Activated:Connect(function()
		runcode(getclipboard())
	end)
	
	NavigationBarPage.ClearButton.Activated:Connect(function()
		SelectedTab.Text = ""
	end)
	
	ScriptHub.Search.Activated:Connect(function()
		SearchGame(ScriptHub.SearchBox.Text)
	end)
	
	
	--Auto Execute
	--[[for _,v in ipairs(listfiles(ScriptsDirectory)) do
		local code = readfile(ScriptsDirectory .. v)
	
		runcode(code)
	end]]
	
	createNewTab("Script.lua", "--Your script")
	
	for _,v in ipairs(listfiles(ScriptsDirectory)) do
		if not isfile(v) then
			continue
		end
	
		InsertScriptEntry(v)
	end
	--[[
	--Populate table
	
	-- Search Scripthub
	for _,v in ipairs(listfiles(AutoExecuteDirectory)) do
		runcode(readfile(v))
	end]]
end
coroutine.wrap(JHLAJVE_fake_script)()
coroutine.wrap(TYWPOB_fake_script)()
local function DYHZT_fake_script() -- Kato.Dragging 
	local script = Instance.new('LocalScript', Kato)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent.Maximise
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.04, true) -- This is what I changed
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
coroutine.wrap(DYHZT_fake_script)()

  	end
})
Tab:AddButton({
	Name = "Krnl",
	Callback = function()
        local KRNL = Instance.new("ScreenGui")
        local KrnlGUI = Instance.new("Frame")
        local FileButton = Instance.new("TextButton")
        local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
        local CreditsButton = Instance.new("TextButton")
        local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
        local GamesButton = Instance.new("TextButton")
        local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")
        local HotScriptsButton = Instance.new("TextButton")
        local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")
        local OthersButton = Instance.new("TextButton")
        local UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint")
        local SideGUI = Instance.new("Frame")
        local ImageLabel = Instance.new("ImageLabel")
        local TextLabel = Instance.new("TextLabel")
        local Xbutton = Instance.new("TextButton")
        local UITextSizeConstraint_6 = Instance.new("UITextSizeConstraint")
        local button = Instance.new("TextButton")
        local UITextSizeConstraint_7 = Instance.new("UITextSizeConstraint")
        local MainGUI = Instance.new("Frame")
        local ExecuteBar = Instance.new("Frame")
        local Frame = Instance.new("Frame")
        local Script1 = Instance.new("Frame")
        local TextButton = Instance.new("TextButton")
        local UITextSizeConstraint_8 = Instance.new("UITextSizeConstraint")
        local UITextSizeConstraint_9 = Instance.new("UITextSizeConstraint")
        local TextButton_2 = Instance.new("TextButton")
        local UITextSizeConstraint_10 = Instance.new("UITextSizeConstraint")
        local UITextSizeConstraint_11 = Instance.new("UITextSizeConstraint")
        local Script2 = Instance.new("Frame")
        local TextButton_3 = Instance.new("TextButton")
        local UITextSizeConstraint_12 = Instance.new("UITextSizeConstraint")
        local UITextSizeConstraint_13 = Instance.new("UITextSizeConstraint")
        local TextButton_4 = Instance.new("TextButton")
        local UITextSizeConstraint_14 = Instance.new("UITextSizeConstraint")
        local UITextSizeConstraint_15 = Instance.new("UITextSizeConstraint")
        local addbutton = Instance.new("TextButton")
        local ScrollingFrame1 = Instance.new("ScrollingFrame")
        local ImageLabel_2 = Instance.new("ImageLabel")
        local security = Instance.new("TextLabel")
        local EditorFrame = Instance.new("ScrollingFrame")
        local Source = Instance.new("TextBox")
        local Comments_ = Instance.new("TextLabel")
        local Globals_ = Instance.new("TextLabel")
        local Keywords_ = Instance.new("TextLabel")
        local RemoteHighlight_ = Instance.new("TextLabel")
        local Strings_ = Instance.new("TextLabel")
        local Tokens_ = Instance.new("TextLabel")
        local Numbers_ = Instance.new("TextLabel")
        local Lines = Instance.new("TextLabel")
        local ScrollingFrame2 = Instance.new("ScrollingFrame")
        local ImageLabel_3 = Instance.new("ImageLabel")
        local security_2 = Instance.new("TextLabel")
        local EditorFrame_2 = Instance.new("ScrollingFrame")
        local Source_2 = Instance.new("TextBox")
        local Comments__2 = Instance.new("TextLabel")
        local Globals__2 = Instance.new("TextLabel")
        local Keywords__2 = Instance.new("TextLabel")
        local RemoteHighlight__2 = Instance.new("TextLabel")
        local Strings__2 = Instance.new("TextLabel")
        local Tokens__2 = Instance.new("TextLabel")
        local Numbers__2 = Instance.new("TextLabel")
        local Lines_2 = Instance.new("TextLabel")
        local Execute = Instance.new("TextButton")
        local UITextSizeConstraint_16 = Instance.new("UITextSizeConstraint")
        local Clear = Instance.new("TextButton")
        local UITextSizeConstraint_17 = Instance.new("UITextSizeConstraint")
        local OpenFileButton = Instance.new("TextButton")
        local UITextSizeConstraint_18 = Instance.new("UITextSizeConstraint")
        local SaveFileButton = Instance.new("TextButton")
        local UITextSizeConstraint_19 = Instance.new("UITextSizeConstraint")
        local InjectButton = Instance.new("TextButton")
        local UITextSizeConstraint_20 = Instance.new("UITextSizeConstraint")
        local OptionButton = Instance.new("TextButton")
        local UITextSizeConstraint_21 = Instance.new("UITextSizeConstraint")
        local ScriptHub = Instance.new("ScrollingFrame")
        local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
        local InjectedMessgae = Instance.new("Frame")
        local Frame_2 = Instance.new("Frame")
        local Xbutton_2 = Instance.new("TextButton")
        local UITextSizeConstraint_22 = Instance.new("UITextSizeConstraint")
        local TextLabel_2 = Instance.new("TextLabel")
        local Frame_3 = Instance.new("Frame")
        local Okbutton = Instance.new("TextButton")
        local UITextSizeConstraint_23 = Instance.new("UITextSizeConstraint")
        local TextLabel_3 = Instance.new("TextLabel")
        local UITextSizeConstraint_24 = Instance.new("UITextSizeConstraint")
        local HScriptsHub = Instance.new("Frame")
        local DexExplorer = Instance.new("TextButton")
        local UITextSizeConstraint_25 = Instance.new("UITextSizeConstraint")
        local OpenGui = Instance.new("TextButton")
        local UITextSizeConstraint_26 = Instance.new("UITextSizeConstraint")
        local RemoteSpy = Instance.new("TextButton")
        local UITextSizeConstraint_27 = Instance.new("UITextSizeConstraint")
        local DarkDex = Instance.new("TextButton")
        local UITextSizeConstraint_28 = Instance.new("UITextSizeConstraint")
        local UnamedEsp = Instance.new("TextButton")
        local UITextSizeConstraint_29 = Instance.new("UITextSizeConstraint")
        local IYFE = Instance.new("TextButton")
        local UITextSizeConstraint_30 = Instance.new("UITextSizeConstraint")
        local OwlHub = Instance.new("TextButton")
        local UITextSizeConstraint_31 = Instance.new("UITextSizeConstraint")
        local HoHoHub = Instance.new("TextButton")
        local UITextSizeConstraint_32 = Instance.new("UITextSizeConstraint")
        local BlueLight = Instance.new("Frame")
        local CreditsW = Instance.new("Frame")
        local Frame_4 = Instance.new("Frame")
        local Xbutton_3 = Instance.new("TextButton")
        local UITextSizeConstraint_33 = Instance.new("UITextSizeConstraint")
        local TextLabel_4 = Instance.new("TextLabel")
        local UITextSizeConstraint_34 = Instance.new("UITextSizeConstraint")
        local TextLabel_5 = Instance.new("TextLabel")
        local UITextSizeConstraint_35 = Instance.new("UITextSizeConstraint")
        local ImageLabel_4 = Instance.new("ImageLabel")
        local OtherTab = Instance.new("Frame")
        local WHy = Instance.new("TextButton")
        local UITextSizeConstraint_36 = Instance.new("UITextSizeConstraint")
        local Nope = Instance.new("TextButton")
        local UITextSizeConstraint_37 = Instance.new("UITextSizeConstraint")
        local FileTab = Instance.new("Frame")
        local KillTask = Instance.new("TextButton")
        local UITextSizeConstraint_38 = Instance.new("UITextSizeConstraint")
        local Inject = Instance.new("TextButton")
        local UITextSizeConstraint_39 = Instance.new("UITextSizeConstraint")
        local GamesOpenGUI = Instance.new("Frame")
        local Frame_5 = Instance.new("Frame")
        local Xbutton_4 = Instance.new("TextButton")
        local UITextSizeConstraint_40 = Instance.new("UITextSizeConstraint")
        local Frame_6 = Instance.new("Frame")
        local Okbutton_2 = Instance.new("TextButton")
        local UITextSizeConstraint_41 = Instance.new("UITextSizeConstraint")
        local TextLabel_6 = Instance.new("TextLabel")
        local UITextSizeConstraint_42 = Instance.new("UITextSizeConstraint")
        local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
        local FloatingGUI = Instance.new("ImageButton")
        
        --Properties:
        
        KRNL.Name = "KRNL"
        KRNL.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        KRNL.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        KRNL.ResetOnSpawn = false
        
        KrnlGUI.Name = "KrnlGUI"
        KrnlGUI.Parent = KRNL
        KrnlGUI.Active = true
        KrnlGUI.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        KrnlGUI.BorderColor3 = Color3.fromRGB(34, 34, 34)
        KrnlGUI.Position = UDim2.new(0, 137, 0, 141)
        KrnlGUI.Size = UDim2.new(0, 685, 0, 344)
        KrnlGUI.Visible = false
        
        FileButton.Name = "File Button"
        FileButton.Parent = KrnlGUI
        FileButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        FileButton.BackgroundTransparency = 1.000
        FileButton.Position = UDim2.new(0.00264457078, 0, 0.0971021578, 0)
        FileButton.Size = UDim2.new(0.0666066185, 0, 0.0681233257, 0)
        FileButton.Font = Enum.Font.SourceSans
        FileButton.Text = "File"
        FileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        FileButton.TextScaled = true
        FileButton.TextSize = 16.000
        FileButton.TextWrapped = true
        
        UITextSizeConstraint.Parent = FileButton
        UITextSizeConstraint.MaxTextSize = 16
        
        CreditsButton.Name = "Credits Button"
        CreditsButton.Parent = KrnlGUI
        CreditsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CreditsButton.BackgroundTransparency = 1.000
        CreditsButton.Position = UDim2.new(0.0700000003, 0, 0.0970000029, 0)
        CreditsButton.Size = UDim2.new(0.0666066185, 0, 0.0681233257, 0)
        CreditsButton.Font = Enum.Font.SourceSans
        CreditsButton.Text = "Credits"
        CreditsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        CreditsButton.TextScaled = true
        CreditsButton.TextSize = 16.000
        CreditsButton.TextWrapped = true
        
        UITextSizeConstraint_2.Parent = CreditsButton
        UITextSizeConstraint_2.MaxTextSize = 16
        
        GamesButton.Name = "Games Button"
        GamesButton.Parent = KrnlGUI
        GamesButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        GamesButton.BackgroundTransparency = 1.000
        GamesButton.Position = UDim2.new(0.150000006, 0, 0.0970000029, 0)
        GamesButton.Size = UDim2.new(0.0666066185, 0, 0.0681233257, 0)
        GamesButton.Font = Enum.Font.SourceSans
        GamesButton.Text = "Games"
        GamesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        GamesButton.TextScaled = true
        GamesButton.TextSize = 15.000
        GamesButton.TextWrapped = true
        
        UITextSizeConstraint_3.Parent = GamesButton
        UITextSizeConstraint_3.MaxTextSize = 15
        
        HotScriptsButton.Name = "Hot Scripts Button"
        HotScriptsButton.Parent = KrnlGUI
        HotScriptsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        HotScriptsButton.BackgroundTransparency = 1.000
        HotScriptsButton.Position = UDim2.new(0.232577384, 0, 0.0970000103, 0)
        HotScriptsButton.Size = UDim2.new(0.0943726227, 0, 0.0681233257, 0)
        HotScriptsButton.Font = Enum.Font.SourceSans
        HotScriptsButton.Text = "Hot-Scripts"
        HotScriptsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        HotScriptsButton.TextScaled = true
        HotScriptsButton.TextSize = 15.000
        HotScriptsButton.TextWrapped = true
        
        UITextSizeConstraint_4.Parent = HotScriptsButton
        UITextSizeConstraint_4.MaxTextSize = 15
        
        OthersButton.Name = "Others Button"
        OthersButton.Parent = KrnlGUI
        OthersButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        OthersButton.BackgroundTransparency = 1.000
        OthersButton.Position = UDim2.new(0.340016991, 0, 0.0970000103, 0)
        OthersButton.Size = UDim2.new(0.0682386607, 0, 0.0681233257, 0)
        OthersButton.Font = Enum.Font.SourceSans
        OthersButton.Text = "Others"
        OthersButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OthersButton.TextScaled = true
        OthersButton.TextSize = 15.000
        OthersButton.TextWrapped = true
        
        UITextSizeConstraint_5.Parent = OthersButton
        UITextSizeConstraint_5.MaxTextSize = 15
        
        SideGUI.Name = "Side GUI"
        SideGUI.Parent = KrnlGUI
        SideGUI.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        SideGUI.BorderColor3 = Color3.fromRGB(31, 31, 31)
        SideGUI.Size = UDim2.new(0.99889791, 0, 0.095630005, 0)
        
        ImageLabel.Parent = SideGUI
        ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ImageLabel.BackgroundTransparency = 1.000
        ImageLabel.Position = UDim2.new(0.00300000003, 0, 0.123999998, 0)
        ImageLabel.Size = UDim2.new(0.0361689702, 0, 0.726585209, 0)
        ImageLabel.Image = "rbxassetid://11671355800"
        
        TextLabel.Parent = SideGUI
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.Position = UDim2.new(0.465686679, 0, 0.136606336, 0)
        TextLabel.Size = UDim2.new(0.0694269463, 0, 0.726004899, 0)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "KRNL"
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 20.000
        TextLabel.TextWrapped = true
        
        Xbutton.Name = "X button"
        Xbutton.Parent = SideGUI
        Xbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Xbutton.BackgroundTransparency = 1.000
        Xbutton.Position = UDim2.new(0.957000017, 0, 0.159999996, 0)
        Xbutton.Size = UDim2.new(0.0409558825, 0, 0.690584838, 0)
        Xbutton.Font = Enum.Font.SourceSans
        Xbutton.Text = "X"
        Xbutton.TextColor3 = Color3.fromRGB(255, 255, 255)
        Xbutton.TextSize = 40.000
        Xbutton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        Xbutton.TextWrapped = true
        
        UITextSizeConstraint_6.Parent = Xbutton
        UITextSizeConstraint_6.MaxTextSize = 35
        
        button.Name = "- button"
        button.Parent = SideGUI
        button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        button.BackgroundTransparency = 1.000
        button.Position = UDim2.new(0.910000026, 0, 0.159999996, 0)
        button.Size = UDim2.new(0.0409558825, 0, 0.690584838, 0)
        button.Font = Enum.Font.SourceSans
        button.Text = "−"
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextScaled = true
        button.TextSize = 35.000
        button.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        button.TextWrapped = true
        
        UITextSizeConstraint_7.Parent = button
        UITextSizeConstraint_7.MaxTextSize = 35
        
        MainGUI.Name = "MainGUI"
        MainGUI.Parent = KrnlGUI
        MainGUI.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
        MainGUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
        MainGUI.Position = UDim2.new(0, 0, 0.168076977, 0)
        MainGUI.Size = UDim2.new(0.99999994, 0, 0.831923008, 0)
        
        ExecuteBar.Name = "ExecuteBar"
        ExecuteBar.Parent = MainGUI
        ExecuteBar.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
        ExecuteBar.BorderColor3 = Color3.fromRGB(37, 37, 37)
        ExecuteBar.Position = UDim2.new(0.0070000249, 0, 0.00649997452, 0)
        ExecuteBar.Size = UDim2.new(0.803592086, 0, 0.88723731, 0)
        
        Frame.Parent = ExecuteBar
        Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        Frame.BorderColor3 = Color3.fromRGB(50, 50, 50)
        Frame.Size = UDim2.new(0.999999881, 0, 0.0568133108, 0)
        
        Script1.Name = "Script1"
        Script1.Parent = Frame
        Script1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        Script1.BorderColor3 = Color3.fromRGB(50, 50, 50)
        Script1.Position = UDim2.new(-0.00180647022, 0, 0, 0)
        Script1.Size = UDim2.new(0.156733111, 0, 1.00000775, 0)
        
        TextButton.Parent = Script1
        TextButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        TextButton.BorderColor3 = Color3.fromRGB(50, 50, 50)
        TextButton.Size = UDim2.new(0.8415097, 0, 0.999998391, 0)
        TextButton.Font = Enum.Font.SourceSans
        TextButton.Text = "Script1.lua"
        TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.TextScaled = true
        TextButton.TextSize = 16.000
        TextButton.TextWrapped = true
        
        UITextSizeConstraint_8.Parent = TextButton
        UITextSizeConstraint_8.MaxTextSize = 16
        
        UITextSizeConstraint_9.Parent = TextButton
        UITextSizeConstraint_9.MaxTextSize = 16
        
        TextButton_2.Parent = Script1
        TextButton_2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        TextButton_2.BorderColor3 = Color3.fromRGB(50, 50, 50)
        TextButton_2.Position = UDim2.new(0.841509819, 0, 0, 0)
        TextButton_2.Size = UDim2.new(0.158490166, 0, 0.952832103, 0)
        TextButton_2.Font = Enum.Font.SourceSans
        TextButton_2.Text = "X"
        TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton_2.TextScaled = true
        TextButton_2.TextSize = 16.000
        TextButton_2.TextWrapped = true
        
        UITextSizeConstraint_10.Parent = TextButton_2
        UITextSizeConstraint_10.MaxTextSize = 16
        
        UITextSizeConstraint_11.Parent = TextButton_2
        UITextSizeConstraint_11.MaxTextSize = 16
        
        Script2.Name = "Script2"
        Script2.Parent = Frame
        Script2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        Script2.BorderColor3 = Color3.fromRGB(50, 50, 50)
        Script2.Position = UDim2.new(0.159876347, 0, 0, 0)
        Script2.Size = UDim2.new(0.156733111, 0, 1.00000775, 0)
        Script2.Visible = false
        
        TextButton_3.Parent = Script2
        TextButton_3.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        TextButton_3.BorderColor3 = Color3.fromRGB(50, 50, 50)
        TextButton_3.Position = UDim2.new(-3.7252903e-09, 0, 0, 0)
        TextButton_3.Size = UDim2.new(0.8415097, 0, 0.999998391, 0)
        TextButton_3.Font = Enum.Font.SourceSans
        TextButton_3.Text = "Script2.lua"
        TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton_3.TextScaled = true
        TextButton_3.TextSize = 16.000
        TextButton_3.TextWrapped = true
        
        UITextSizeConstraint_12.Parent = TextButton_3
        UITextSizeConstraint_12.MaxTextSize = 16
        
        UITextSizeConstraint_13.Parent = TextButton_3
        UITextSizeConstraint_13.MaxTextSize = 16
        
        TextButton_4.Parent = Script2
        TextButton_4.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        TextButton_4.BorderColor3 = Color3.fromRGB(50, 50, 50)
        TextButton_4.Position = UDim2.new(0.841509819, 0, 0, 0)
        TextButton_4.Size = UDim2.new(0.158490166, 0, 0.952832103, 0)
        TextButton_4.Font = Enum.Font.SourceSans
        TextButton_4.Text = "X"
        TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton_4.TextScaled = true
        TextButton_4.TextSize = 16.000
        TextButton_4.TextWrapped = true
        
        UITextSizeConstraint_14.Parent = TextButton_4
        UITextSizeConstraint_14.MaxTextSize = 16
        
        UITextSizeConstraint_15.Parent = TextButton_4
        UITextSizeConstraint_15.MaxTextSize = 16
        
        addbutton.Name = "addbutton"
        addbutton.Parent = Frame
        addbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        addbutton.BackgroundTransparency = 1.000
        addbutton.Position = UDim2.new(0.154416174, 0, 0, 0)
        addbutton.Size = UDim2.new(0, 19, 0, 13)
        addbutton.Font = Enum.Font.SourceSans
        addbutton.Text = "+"
        addbutton.TextColor3 = Color3.fromRGB(255, 255, 255)
        addbutton.TextSize = 17.000
        
        ScrollingFrame1.Name = "ScrollingFrame1"
        ScrollingFrame1.Parent = ExecuteBar
        ScrollingFrame1.Active = true
        ScrollingFrame1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        ScrollingFrame1.BorderColor3 = Color3.fromRGB(40, 40, 40)
        ScrollingFrame1.Position = UDim2.new(0.0127166249, 0, 0.079058826, 0)
        ScrollingFrame1.Size = UDim2.new(0.973659992, 0, 0.917334437, 0)
        ScrollingFrame1.ScrollBarThickness = 10
        
        ImageLabel_2.Parent = ScrollingFrame1
        ImageLabel_2.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
        ImageLabel_2.BackgroundTransparency = 1.000
        ImageLabel_2.BorderSizePixel = 0
        ImageLabel_2.Position = UDim2.new(0.00505135441, 0, -0.0532468483, 27)
        ImageLabel_2.Size = UDim2.new(0, 541, 0, 359)
        ImageLabel_2.ImageTransparency = 1.000
        
        security.Name = "security"
        security.Parent = ImageLabel_2
        security.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        security.Size = UDim2.new(0, 552, 0, 258)
        security.Visible = false
        security.Font = Enum.Font.SourceSans
        security.TextColor3 = Color3.fromRGB(0, 0, 0)
        security.TextSize = 14.000
        
        EditorFrame.Name = "EditorFrame"
        EditorFrame.Parent = ImageLabel_2
        EditorFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
        EditorFrame.BackgroundTransparency = 1.000
        EditorFrame.BorderColor3 = Color3.fromRGB(61, 61, 61)
        EditorFrame.Size = UDim2.new(1, 0, 1, 0)
        EditorFrame.ZIndex = 3
        EditorFrame.BottomImage = "rbxassetid://148970562"
        EditorFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        EditorFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
        EditorFrame.MidImage = "rbxassetid://148970562"
        EditorFrame.ScrollBarThickness = 5
        EditorFrame.TopImage = "rbxassetid://148970562"
        
        Source.Name = "Source"
        Source.Parent = EditorFrame
        Source.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Source.BackgroundTransparency = 1.000
        Source.Position = UDim2.new(0, 19, 0, 0)
        Source.Size = UDim2.new(0.965984941, 0, 1, 0)
        Source.ZIndex = 3
        Source.ClearTextOnFocus = false
        Source.Font = Enum.Font.Code
        Source.MultiLine = true
        Source.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
        Source.Text = "--Welcome To KRNL Mobile!"
        Source.TextColor3 = Color3.fromRGB(204, 204, 204)
        Source.TextSize = 14.000
        Source.TextXAlignment = Enum.TextXAlignment.Left
        Source.TextYAlignment = Enum.TextYAlignment.Top
        
        Comments_.Name = "Comments_"
        Comments_.Parent = Source
        Comments_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Comments_.BackgroundTransparency = 1.000
        Comments_.Size = UDim2.new(1, 0, 1, 0)
        Comments_.ZIndex = 5
        Comments_.Font = Enum.Font.Code
        Comments_.Text = ""
        Comments_.TextColor3 = Color3.fromRGB(59, 200, 59)
        Comments_.TextSize = 14.000
        Comments_.TextXAlignment = Enum.TextXAlignment.Left
        Comments_.TextYAlignment = Enum.TextYAlignment.Top
        
        Globals_.Name = "Globals_"
        Globals_.Parent = Source
        Globals_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Globals_.BackgroundTransparency = 1.000
        Globals_.Size = UDim2.new(1, 0, 1, 0)
        Globals_.ZIndex = 5
        Globals_.Font = Enum.Font.Code
        Globals_.Text = ""
        Globals_.TextColor3 = Color3.fromRGB(85, 222, 154)
        Globals_.TextSize = 14.000
        Globals_.TextXAlignment = Enum.TextXAlignment.Left
        Globals_.TextYAlignment = Enum.TextYAlignment.Top
        
        Keywords_.Name = "Keywords_"
        Keywords_.Parent = Source
        Keywords_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Keywords_.BackgroundTransparency = 1.000
        Keywords_.Size = UDim2.new(1, 0, 1, 0)
        Keywords_.ZIndex = 5
        Keywords_.Font = Enum.Font.Code
        Keywords_.Text = ""
        Keywords_.TextColor3 = Color3.fromRGB(213, 53, 117)
        Keywords_.TextSize = 14.000
        Keywords_.TextXAlignment = Enum.TextXAlignment.Left
        Keywords_.TextYAlignment = Enum.TextYAlignment.Top
        
        RemoteHighlight_.Name = "RemoteHighlight_"
        RemoteHighlight_.Parent = Source
        RemoteHighlight_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        RemoteHighlight_.BackgroundTransparency = 1.000
        RemoteHighlight_.Size = UDim2.new(1, 0, 1, 0)
        RemoteHighlight_.ZIndex = 5
        RemoteHighlight_.Font = Enum.Font.Code
        RemoteHighlight_.Text = ""
        RemoteHighlight_.TextColor3 = Color3.fromRGB(0, 144, 255)
        RemoteHighlight_.TextSize = 14.000
        RemoteHighlight_.TextXAlignment = Enum.TextXAlignment.Left
        RemoteHighlight_.TextYAlignment = Enum.TextYAlignment.Top
        
        Strings_.Name = "Strings_"
        Strings_.Parent = Source
        Strings_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Strings_.BackgroundTransparency = 1.000
        Strings_.Size = UDim2.new(1, 0, 1, 0)
        Strings_.ZIndex = 5
        Strings_.Font = Enum.Font.Code
        Strings_.Text = ""
        Strings_.TextColor3 = Color3.fromRGB(229, 164, 60)
        Strings_.TextSize = 14.000
        Strings_.TextXAlignment = Enum.TextXAlignment.Left
        Strings_.TextYAlignment = Enum.TextYAlignment.Top
        
        Tokens_.Name = "Tokens_"
        Tokens_.Parent = Source
        Tokens_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tokens_.BackgroundTransparency = 1.000
        Tokens_.Size = UDim2.new(1, 0, 1, 0)
        Tokens_.ZIndex = 5
        Tokens_.Font = Enum.Font.Code
        Tokens_.Text = ""
        Tokens_.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tokens_.TextSize = 14.000
        Tokens_.TextXAlignment = Enum.TextXAlignment.Left
        Tokens_.TextYAlignment = Enum.TextYAlignment.Top
        
        Numbers_.Name = "Numbers_"
        Numbers_.Parent = Source
        Numbers_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Numbers_.BackgroundTransparency = 1.000
        Numbers_.Size = UDim2.new(1, 0, 1, 0)
        Numbers_.ZIndex = 4
        Numbers_.Font = Enum.Font.Code
        Numbers_.Text = ""
        Numbers_.TextColor3 = Color3.fromRGB(142, 71, 213)
        Numbers_.TextSize = 14.000
        Numbers_.TextXAlignment = Enum.TextXAlignment.Left
        Numbers_.TextYAlignment = Enum.TextYAlignment.Top
        
        Lines.Name = "Lines"
        Lines.Parent = EditorFrame
        Lines.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Lines.BackgroundTransparency = 1.000
        Lines.Position = UDim2.new(-0.00924214441, 0, 0, 0)
        Lines.Size = UDim2.new(0, 30, 1, 0)
        Lines.ZIndex = 4
        Lines.Font = Enum.Font.SourceSans
        Lines.Text = "1\\n"
        Lines.TextColor3 = Color3.fromRGB(255, 255, 255)
        Lines.TextSize = 15.000
        Lines.TextYAlignment = Enum.TextYAlignment.Top
        
        ScrollingFrame2.Name = "ScrollingFrame2"
        ScrollingFrame2.Parent = ExecuteBar
        ScrollingFrame2.Active = true
        ScrollingFrame2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        ScrollingFrame2.BorderColor3 = Color3.fromRGB(40, 40, 40)
        ScrollingFrame2.Position = UDim2.new(0.0127166249, 0, 0.079058826, 0)
        ScrollingFrame2.Size = UDim2.new(0.973659992, 0, 0.917334437, 0)
        ScrollingFrame2.Visible = false
        ScrollingFrame2.ScrollBarThickness = 10
        
        ImageLabel_3.Parent = ScrollingFrame2
        ImageLabel_3.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
        ImageLabel_3.BackgroundTransparency = 1.000
        ImageLabel_3.BorderSizePixel = 0
        ImageLabel_3.Position = UDim2.new(0.00505135441, 0, -0.0532468483, 27)
        ImageLabel_3.Size = UDim2.new(0, 541, 0, 359)
        ImageLabel_3.ImageTransparency = 1.000
        
        security_2.Name = "security"
        security_2.Parent = ImageLabel_3
        security_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        security_2.Size = UDim2.new(0, 552, 0, 258)
        security_2.Visible = false
        security_2.Font = Enum.Font.SourceSans
        security_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        security_2.TextSize = 14.000
        
        EditorFrame_2.Name = "EditorFrame"
        EditorFrame_2.Parent = ImageLabel_3
        EditorFrame_2.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
        EditorFrame_2.BackgroundTransparency = 1.000
        EditorFrame_2.BorderColor3 = Color3.fromRGB(61, 61, 61)
        EditorFrame_2.Size = UDim2.new(1, 0, 1, 0)
        EditorFrame_2.ZIndex = 3
        EditorFrame_2.BottomImage = "rbxassetid://148970562"
        EditorFrame_2.CanvasSize = UDim2.new(0, 0, 0, 0)
        EditorFrame_2.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
        EditorFrame_2.MidImage = "rbxassetid://148970562"
        EditorFrame_2.ScrollBarThickness = 5
        EditorFrame_2.TopImage = "rbxassetid://148970562"
        
        Source_2.Name = "Source"
        Source_2.Parent = EditorFrame_2
        Source_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Source_2.BackgroundTransparency = 1.000
        Source_2.Position = UDim2.new(0, 19, 0, 0)
        Source_2.Size = UDim2.new(0.965984941, 0, 1, 0)
        Source_2.ZIndex = 3
        Source_2.ClearTextOnFocus = false
        Source_2.Font = Enum.Font.Code
        Source_2.MultiLine = true
        Source_2.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
        Source_2.Text = "--Welcome To KRNL Mobile!"
        Source_2.TextColor3 = Color3.fromRGB(204, 204, 204)
        Source_2.TextSize = 14.000
        Source_2.TextXAlignment = Enum.TextXAlignment.Left
        Source_2.TextYAlignment = Enum.TextYAlignment.Top
        
        Comments__2.Name = "Comments_"
        Comments__2.Parent = Source_2
        Comments__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Comments__2.BackgroundTransparency = 1.000
        Comments__2.Size = UDim2.new(1, 0, 1, 0)
        Comments__2.ZIndex = 5
        Comments__2.Font = Enum.Font.Code
        Comments__2.Text = ""
        Comments__2.TextColor3 = Color3.fromRGB(59, 200, 59)
        Comments__2.TextSize = 14.000
        Comments__2.TextXAlignment = Enum.TextXAlignment.Left
        Comments__2.TextYAlignment = Enum.TextYAlignment.Top
        
        Globals__2.Name = "Globals_"
        Globals__2.Parent = Source_2
        Globals__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Globals__2.BackgroundTransparency = 1.000
        Globals__2.Size = UDim2.new(1, 0, 1, 0)
        Globals__2.ZIndex = 5
        Globals__2.Font = Enum.Font.Code
        Globals__2.Text = ""
        Globals__2.TextColor3 = Color3.fromRGB(85, 222, 154)
        Globals__2.TextSize = 14.000
        Globals__2.TextXAlignment = Enum.TextXAlignment.Left
        Globals__2.TextYAlignment = Enum.TextYAlignment.Top
        
        Keywords__2.Name = "Keywords_"
        Keywords__2.Parent = Source_2
        Keywords__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Keywords__2.BackgroundTransparency = 1.000
        Keywords__2.Size = UDim2.new(1, 0, 1, 0)
        Keywords__2.ZIndex = 5
        Keywords__2.Font = Enum.Font.Code
        Keywords__2.Text = ""
        Keywords__2.TextColor3 = Color3.fromRGB(213, 53, 117)
        Keywords__2.TextSize = 14.000
        Keywords__2.TextXAlignment = Enum.TextXAlignment.Left
        Keywords__2.TextYAlignment = Enum.TextYAlignment.Top
        
        RemoteHighlight__2.Name = "RemoteHighlight_"
        RemoteHighlight__2.Parent = Source_2
        RemoteHighlight__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        RemoteHighlight__2.BackgroundTransparency = 1.000
        RemoteHighlight__2.Size = UDim2.new(1, 0, 1, 0)
        RemoteHighlight__2.ZIndex = 5
        RemoteHighlight__2.Font = Enum.Font.Code
        RemoteHighlight__2.Text = ""
        RemoteHighlight__2.TextColor3 = Color3.fromRGB(0, 144, 255)
        RemoteHighlight__2.TextSize = 14.000
        RemoteHighlight__2.TextXAlignment = Enum.TextXAlignment.Left
        RemoteHighlight__2.TextYAlignment = Enum.TextYAlignment.Top
        
        Strings__2.Name = "Strings_"
        Strings__2.Parent = Source_2
        Strings__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Strings__2.BackgroundTransparency = 1.000
        Strings__2.Size = UDim2.new(1, 0, 1, 0)
        Strings__2.ZIndex = 5
        Strings__2.Font = Enum.Font.Code
        Strings__2.Text = ""
        Strings__2.TextColor3 = Color3.fromRGB(229, 164, 60)
        Strings__2.TextSize = 14.000
        Strings__2.TextXAlignment = Enum.TextXAlignment.Left
        Strings__2.TextYAlignment = Enum.TextYAlignment.Top
        
        Tokens__2.Name = "Tokens_"
        Tokens__2.Parent = Source_2
        Tokens__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tokens__2.BackgroundTransparency = 1.000
        Tokens__2.Size = UDim2.new(1, 0, 1, 0)
        Tokens__2.ZIndex = 5
        Tokens__2.Font = Enum.Font.Code
        Tokens__2.Text = ""
        Tokens__2.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tokens__2.TextSize = 14.000
        Tokens__2.TextXAlignment = Enum.TextXAlignment.Left
        Tokens__2.TextYAlignment = Enum.TextYAlignment.Top
        
        Numbers__2.Name = "Numbers_"
        Numbers__2.Parent = Source_2
        Numbers__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Numbers__2.BackgroundTransparency = 1.000
        Numbers__2.Size = UDim2.new(1, 0, 1, 0)
        Numbers__2.ZIndex = 4
        Numbers__2.Font = Enum.Font.Code
        Numbers__2.Text = ""
        Numbers__2.TextColor3 = Color3.fromRGB(142, 71, 213)
        Numbers__2.TextSize = 14.000
        Numbers__2.TextXAlignment = Enum.TextXAlignment.Left
        Numbers__2.TextYAlignment = Enum.TextYAlignment.Top
        
        Lines_2.Name = "Lines"
        Lines_2.Parent = EditorFrame_2
        Lines_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Lines_2.BackgroundTransparency = 1.000
        Lines_2.Position = UDim2.new(-0.00924214441, 0, 0, 0)
        Lines_2.Size = UDim2.new(0, 30, 1, 0)
        Lines_2.ZIndex = 4
        Lines_2.Font = Enum.Font.SourceSans
        Lines_2.Text = "1\\n"
        Lines_2.TextColor3 = Color3.fromRGB(255, 255, 255)
        Lines_2.TextSize = 15.000
        Lines_2.TextYAlignment = Enum.TextYAlignment.Top
        
        Execute.Name = "Execute"
        Execute.Parent = MainGUI
        Execute.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        Execute.BorderColor3 = Color3.fromRGB(44, 44, 44)
        Execute.Position = UDim2.new(0.00500000967, 0, 0.910000026, 0)
        Execute.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
        Execute.Font = Enum.Font.Arial
        Execute.Text = "EXECUTE"
        Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
        Execute.TextScaled = true
        Execute.TextSize = 14.000
        Execute.TextWrapped = true
        
        UITextSizeConstraint_16.Parent = Execute
        UITextSizeConstraint_16.MaxTextSize = 14
        
        Clear.Name = "Clear"
        Clear.Parent = MainGUI
        Clear.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        Clear.BorderColor3 = Color3.fromRGB(44, 44, 44)
        Clear.Position = UDim2.new(0.158899993, 0, 0.910000026, 0)
        Clear.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
        Clear.Font = Enum.Font.Arial
        Clear.Text = "CLEAR"
        Clear.TextColor3 = Color3.fromRGB(255, 255, 255)
        Clear.TextScaled = true
        Clear.TextSize = 14.000
        Clear.TextWrapped = true
        
        UITextSizeConstraint_17.Parent = Clear
        UITextSizeConstraint_17.MaxTextSize = 14
        
        OpenFileButton.Name = "Open File Button"
        OpenFileButton.Parent = MainGUI
        OpenFileButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        OpenFileButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
        OpenFileButton.Position = UDim2.new(0.31099999, 0, 0.910000026, 0)
        OpenFileButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
        OpenFileButton.Font = Enum.Font.Arial
        OpenFileButton.Text = "OPEN FILE"
        OpenFileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OpenFileButton.TextScaled = true
        OpenFileButton.TextSize = 14.000
        OpenFileButton.TextWrapped = true
        
        UITextSizeConstraint_18.Parent = OpenFileButton
        UITextSizeConstraint_18.MaxTextSize = 14
        
        SaveFileButton.Name = "Save File Button"
        SaveFileButton.Parent = MainGUI
        SaveFileButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        SaveFileButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
        SaveFileButton.Position = UDim2.new(0.461996198, 0, 0.910000026, 0)
        SaveFileButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
        SaveFileButton.Font = Enum.Font.Arial
        SaveFileButton.Text = "SAVE FILE"
        SaveFileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        SaveFileButton.TextScaled = true
        SaveFileButton.TextSize = 14.000
        SaveFileButton.TextWrapped = true
        
        UITextSizeConstraint_19.Parent = SaveFileButton
        UITextSizeConstraint_19.MaxTextSize = 14
        
        InjectButton.Name = "Inject Button"
        InjectButton.Parent = MainGUI
        InjectButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        InjectButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
        InjectButton.Position = UDim2.new(0.611999989, 0, 0.910000026, 0)
        InjectButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
        InjectButton.Font = Enum.Font.Arial
        InjectButton.Text = "INJECT"
        InjectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        InjectButton.TextScaled = true
        InjectButton.TextSize = 14.000
        InjectButton.TextWrapped = true
        
        UITextSizeConstraint_20.Parent = InjectButton
        UITextSizeConstraint_20.MaxTextSize = 14
        
        OptionButton.Name = "Option Button"
        OptionButton.Parent = MainGUI
        OptionButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        OptionButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
        OptionButton.Position = UDim2.new(0.84799999, 0, 0.910000026, 0)
        OptionButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
        OptionButton.Font = Enum.Font.Arial
        OptionButton.Text = "OPTION"
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.TextScaled = true
        OptionButton.TextSize = 14.000
        OptionButton.TextWrapped = true
        
        UITextSizeConstraint_21.Parent = OptionButton
        UITextSizeConstraint_21.MaxTextSize = 14
        
        ScriptHub.Name = "Script Hub"
        ScriptHub.Parent = MainGUI
        ScriptHub.Active = true
        ScriptHub.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
        ScriptHub.BorderColor3 = Color3.fromRGB(33, 33, 33)
        ScriptHub.Position = UDim2.new(0.821767807, 0, 0.0278668515, 0)
        ScriptHub.Size = UDim2.new(0.170232087, 0, 0.865870535, 0)
        ScriptHub.ScrollBarThickness = 7
        
        UIAspectRatioConstraint.Parent = KrnlGUI
        UIAspectRatioConstraint.AspectRatio = 1.993
        
        InjectedMessgae.Name = "InjectedMessgae"
        InjectedMessgae.Parent = KrnlGUI
        InjectedMessgae.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        InjectedMessgae.BorderColor3 = Color3.fromRGB(245, 245, 255)
        InjectedMessgae.Position = UDim2.new(0.309756339, 0, 0.298481524, 0)
        InjectedMessgae.Size = UDim2.new(0.347566962, 0, 0.399907291, 0)
        InjectedMessgae.Visible = false
        
        Frame_2.Parent = InjectedMessgae
        Frame_2.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
        Frame_2.BorderColor3 = Color3.fromRGB(245, 245, 255)
        Frame_2.Size = UDim2.new(1, 0, 0.224637687, 0)
        
        Xbutton_2.Name = "X button"
        Xbutton_2.Parent = Frame_2
        Xbutton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Xbutton_2.BackgroundTransparency = 1.000
        Xbutton_2.Position = UDim2.new(0.849372387, 0, 0, 0)
        Xbutton_2.Size = UDim2.new(0.142259419, 0, 1, 0)
        Xbutton_2.Font = Enum.Font.SourceSans
        Xbutton_2.Text = "X"
        Xbutton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        Xbutton_2.TextScaled = true
        Xbutton_2.TextSize = 30.000
        Xbutton_2.TextWrapped = true
        
        UITextSizeConstraint_22.Parent = Xbutton_2
        UITextSizeConstraint_22.MaxTextSize = 30
        
        TextLabel_2.Parent = Frame_2
        TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel_2.BackgroundTransparency = 1.000
        TextLabel_2.Position = UDim2.new(0.0379998684, 0, 0.129181385, 0)
        TextLabel_2.Size = UDim2.new(0.242677823, 0, 0.85275197, 0)
        TextLabel_2.Font = Enum.Font.SourceSans
        TextLabel_2.Text = "Krnl"
        TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel_2.TextSize = 19.000
        TextLabel_2.TextWrapped = true
        TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
        
        Frame_3.Parent = InjectedMessgae
        Frame_3.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
        Frame_3.BorderColor3 = Color3.fromRGB(245, 245, 255)
        Frame_3.Position = UDim2.new(0, 0, 0.695652127, 0)
        Frame_3.Size = UDim2.new(1, 0, 0.304347813, 0)
        
        Okbutton.Name = "Ok button"
        Okbutton.Parent = Frame_3
        Okbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Okbutton.BorderColor3 = Color3.fromRGB(255, 255, 255)
        Okbutton.Position = UDim2.new(0.646688402, 0, 0.214285731, 0)
        Okbutton.Size = UDim2.new(0.313807517, 0, 0.5, 0)
        Okbutton.Font = Enum.Font.Arial
        Okbutton.Text = "OK"
        Okbutton.TextColor3 = Color3.fromRGB(0, 0, 0)
        Okbutton.TextScaled = true
        Okbutton.TextSize = 13.000
        Okbutton.TextWrapped = true
        
        UITextSizeConstraint_23.Parent = Okbutton
        UITextSizeConstraint_23.MaxTextSize = 13
        
        TextLabel_3.Parent = InjectedMessgae
        TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel_3.BackgroundTransparency = 1.000
        TextLabel_3.Position = UDim2.new(0.0631046072, 0, 0.379999995, 0)
        TextLabel_3.Size = UDim2.new(0.870292902, 0, 0.231884062, 0)
        TextLabel_3.Font = Enum.Font.SourceSans
        TextLabel_3.Text = "Already injected!"
        TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel_3.TextScaled = true
        TextLabel_3.TextSize = 15.000
        TextLabel_3.TextWrapped = true
        TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_24.Parent = TextLabel_3
        UITextSizeConstraint_24.MaxTextSize = 15
        
        HScriptsHub.Name = "HScriptsHub"
        HScriptsHub.Parent = KrnlGUI
        HScriptsHub.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
        HScriptsHub.BorderColor3 = Color3.fromRGB(43, 43, 43)
        HScriptsHub.Position = UDim2.new(0.231226563, 0, 0.165179193, 0)
        HScriptsHub.Size = UDim2.new(0.202141464, 0, 0.518720329, 0)
        HScriptsHub.Visible = false
        
        DexExplorer.Name = "Dex Explorer"
        DexExplorer.Parent = HScriptsHub
        DexExplorer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        DexExplorer.BackgroundTransparency = 1.000
        DexExplorer.Size = UDim2.new(1, 0, 0.128491625, 0)
        DexExplorer.Font = Enum.Font.SourceSans
        DexExplorer.Text = "             Dex Explorer"
        DexExplorer.TextColor3 = Color3.fromRGB(255, 255, 255)
        DexExplorer.TextScaled = true
        DexExplorer.TextSize = 15.000
        DexExplorer.TextWrapped = true
        DexExplorer.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_25.Parent = DexExplorer
        UITextSizeConstraint_25.MaxTextSize = 15
        
        OpenGui.Name = "OpenGui"
        OpenGui.Parent = HScriptsHub
        OpenGui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        OpenGui.BackgroundTransparency = 1.000
        OpenGui.Position = UDim2.new(0, 0, 0.128491625, 0)
        OpenGui.Size = UDim2.new(1, 0, 0.128491625, 0)
        OpenGui.Font = Enum.Font.SourceSans
        OpenGui.Text = "              OpenGui"
        OpenGui.TextColor3 = Color3.fromRGB(255, 255, 255)
        OpenGui.TextScaled = true
        OpenGui.TextSize = 15.000
        OpenGui.TextWrapped = true
        OpenGui.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_26.Parent = OpenGui
        UITextSizeConstraint_26.MaxTextSize = 15
        
        RemoteSpy.Name = "RemoteSpy"
        RemoteSpy.Parent = HScriptsHub
        RemoteSpy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        RemoteSpy.BackgroundTransparency = 1.000
        RemoteSpy.Position = UDim2.new(0, 0, 0.25698325, 0)
        RemoteSpy.Size = UDim2.new(1, 0, 0.128491625, 0)
        RemoteSpy.Font = Enum.Font.SourceSans
        RemoteSpy.Text = "              Remote Spy"
        RemoteSpy.TextColor3 = Color3.fromRGB(255, 255, 255)
        RemoteSpy.TextScaled = true
        RemoteSpy.TextSize = 15.000
        RemoteSpy.TextWrapped = true
        RemoteSpy.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_27.Parent = RemoteSpy
        UITextSizeConstraint_27.MaxTextSize = 15
        
        DarkDex.Name = "DarkDex"
        DarkDex.Parent = HScriptsHub
        DarkDex.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        DarkDex.BackgroundTransparency = 1.000
        DarkDex.Position = UDim2.new(0, 0, 0.385474861, 0)
        DarkDex.Size = UDim2.new(1, 0, 0.128491625, 0)
        DarkDex.Font = Enum.Font.SourceSans
        DarkDex.Text = "              Dark Dex"
        DarkDex.TextColor3 = Color3.fromRGB(255, 255, 255)
        DarkDex.TextScaled = true
        DarkDex.TextSize = 15.000
        DarkDex.TextWrapped = true
        DarkDex.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_28.Parent = DarkDex
        UITextSizeConstraint_28.MaxTextSize = 15
        
        UnamedEsp.Name = "UnamedEsp"
        UnamedEsp.Parent = HScriptsHub
        UnamedEsp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        UnamedEsp.BackgroundTransparency = 1.000
        UnamedEsp.Position = UDim2.new(0, 0, 0.513966501, 0)
        UnamedEsp.Size = UDim2.new(1, 0, 0.128491625, 0)
        UnamedEsp.Font = Enum.Font.SourceSans
        UnamedEsp.Text = "              Unnamed ESP"
        UnamedEsp.TextColor3 = Color3.fromRGB(255, 255, 255)
        UnamedEsp.TextScaled = true
        UnamedEsp.TextSize = 15.000
        UnamedEsp.TextWrapped = true
        UnamedEsp.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_29.Parent = UnamedEsp
        UITextSizeConstraint_29.MaxTextSize = 15
        
        IYFE.Name = "IYFE"
        IYFE.Parent = HScriptsHub
        IYFE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        IYFE.BackgroundTransparency = 1.000
        IYFE.Position = UDim2.new(0, 0, 0.642458141, 0)
        IYFE.Size = UDim2.new(1, 0, 0.128491625, 0)
        IYFE.Font = Enum.Font.SourceSans
        IYFE.Text = "              Infinite Yield"
        IYFE.TextColor3 = Color3.fromRGB(255, 255, 255)
        IYFE.TextScaled = true
        IYFE.TextSize = 15.000
        IYFE.TextWrapped = true
        IYFE.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_30.Parent = IYFE
        UITextSizeConstraint_30.MaxTextSize = 15
        
        OwlHub.Name = "OwlHub"
        OwlHub.Parent = HScriptsHub
        OwlHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        OwlHub.BackgroundTransparency = 1.000
        OwlHub.Position = UDim2.new(0, 0, 0.770949781, 0)
        OwlHub.Size = UDim2.new(1, 0, 0.128491625, 0)
        OwlHub.Font = Enum.Font.SourceSans
        OwlHub.Text = "              Owl Hub"
        OwlHub.TextColor3 = Color3.fromRGB(255, 255, 255)
        OwlHub.TextScaled = true
        OwlHub.TextSize = 15.000
        OwlHub.TextWrapped = true
        OwlHub.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_31.Parent = OwlHub
        UITextSizeConstraint_31.MaxTextSize = 15
        
        HoHoHub.Name = "HoHo Hub"
        HoHoHub.Parent = HScriptsHub
        HoHoHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        HoHoHub.BackgroundTransparency = 1.000
        HoHoHub.Position = UDim2.new(0, 0, 0.899441361, 0)
        HoHoHub.Size = UDim2.new(1, 0, 0.100558661, 0)
        HoHoHub.Font = Enum.Font.SourceSans
        HoHoHub.Text = "              Hoho Hub"
        HoHoHub.TextColor3 = Color3.fromRGB(255, 255, 255)
        HoHoHub.TextScaled = true
        HoHoHub.TextSize = 15.000
        HoHoHub.TextWrapped = true
        HoHoHub.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_32.Parent = HoHoHub
        UITextSizeConstraint_32.MaxTextSize = 15
        
        BlueLight.Name = "Blue Light"
        BlueLight.Parent = KrnlGUI
        BlueLight.BackgroundColor3 = Color3.fromRGB(6, 139, 255)
        BlueLight.BorderColor3 = Color3.fromRGB(6, 139, 255)
        BlueLight.Size = UDim2.new(0.999000013, 0, 0.00300000003, 0)
        
        CreditsW.Name = "CreditsW"
        CreditsW.Parent = KrnlGUI
        CreditsW.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
        CreditsW.BorderColor3 = Color3.fromRGB(36, 36, 36)
        CreditsW.Position = UDim2.new(1.00925303, 0, 0.0115915686, 0)
        CreditsW.Size = UDim2.new(0.434822261, 0, 0.5361076, 0)
        CreditsW.Visible = false
        
        Frame_4.Parent = CreditsW
        Frame_4.BackgroundColor3 = Color3.fromRGB(28, 28, 29)
        Frame_4.BorderColor3 = Color3.fromRGB(28, 28, 29)
        Frame_4.Size = UDim2.new(1, 0, 0.175989032, 0)
        
        Xbutton_3.Name = "X button"
        Xbutton_3.Parent = Frame_4
        Xbutton_3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Xbutton_3.BackgroundTransparency = 1.000
        Xbutton_3.Position = UDim2.new(0.879472733, 0, 0, 0)
        Xbutton_3.Size = UDim2.new(0.118848056, 0, 1, 0)
        Xbutton_3.Font = Enum.Font.SourceSans
        Xbutton_3.Text = "X"
        Xbutton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
        Xbutton_3.TextScaled = true
        Xbutton_3.TextSize = 30.000
        Xbutton_3.TextWrapped = true
        
        UITextSizeConstraint_33.Parent = Xbutton_3
        UITextSizeConstraint_33.MaxTextSize = 30
        
        TextLabel_4.Parent = CreditsW
        TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel_4.BackgroundTransparency = 1.000
        TextLabel_4.Position = UDim2.new(0.435993314, 0, 0.174594522, 0)
        TextLabel_4.Size = UDim2.new(0.535571635, 0, 0.145397589, 0)
        TextLabel_4.Font = Enum.Font.SourceSans
        TextLabel_4.Text = "UI Replicated"
        TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel_4.TextScaled = true
        TextLabel_4.TextSize = 17.000
        TextLabel_4.TextWrapped = true
        TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_34.Parent = TextLabel_4
        UITextSizeConstraint_34.MaxTextSize = 17
        
        TextLabel_5.Parent = CreditsW
        TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel_5.BackgroundTransparency = 1.000
        TextLabel_5.Position = UDim2.new(0.435993314, 0, 0.315135062, 0)
        TextLabel_5.Size = UDim2.new(0.535571635, 0, 0.145397589, 0)
        TextLabel_5.Font = Enum.Font.SourceSans
        TextLabel_5.Text = "AZY#0348"
        TextLabel_5.TextColor3 = Color3.fromRGB(126, 126, 126)
        TextLabel_5.TextScaled = true
        TextLabel_5.TextSize = 15.000
        TextLabel_5.TextWrapped = true
        TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_35.Parent = TextLabel_5
        UITextSizeConstraint_35.MaxTextSize = 15
        
        ImageLabel_4.Parent = CreditsW
        ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ImageLabel_4.BackgroundTransparency = 1.000
        ImageLabel_4.Position = UDim2.new(0.0468227416, 0, 0.225141764, 0)
        ImageLabel_4.Size = UDim2.new(0.334448159, 0, 0.540540516, 0)
        ImageLabel_4.Image = "rbxassetid://11671355800"
        
        OtherTab.Name = "OtherTab"
        OtherTab.Parent = KrnlGUI
        OtherTab.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
        OtherTab.BorderColor3 = Color3.fromRGB(43, 43, 43)
        OtherTab.Position = UDim2.new(0.339520067, 0, 0.16753611, 0)
        OtherTab.Size = UDim2.new(0.202141464, 0, 0.130404547, 0)
        OtherTab.Visible = false
        
        WHy.Name = "WHy"
        WHy.Parent = OtherTab
        WHy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        WHy.BackgroundTransparency = 1.000
        WHy.Position = UDim2.new(0, 0, 0.466666698, 0)
        WHy.Size = UDim2.new(1, 0, 0.513516545, 0)
        WHy.Font = Enum.Font.SourceSans
        WHy.Text = "              Why you here?"
        WHy.TextColor3 = Color3.fromRGB(255, 255, 255)
        WHy.TextScaled = true
        WHy.TextSize = 15.000
        WHy.TextWrapped = true
        WHy.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_36.Parent = WHy
        UITextSizeConstraint_36.MaxTextSize = 15
        
        Nope.Name = "Nope"
        Nope.Parent = OtherTab
        Nope.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Nope.BackgroundTransparency = 1.000
        Nope.Size = UDim2.new(1, 0, 0.513516545, 0)
        Nope.Font = Enum.Font.SourceSans
        Nope.Text = "              No Key >:)"
        Nope.TextColor3 = Color3.fromRGB(255, 255, 255)
        Nope.TextScaled = true
        Nope.TextSize = 15.000
        Nope.TextWrapped = true
        Nope.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_37.Parent = Nope
        UITextSizeConstraint_37.MaxTextSize = 15
        
        FileTab.Name = "FileTab"
        FileTab.Parent = KrnlGUI
        FileTab.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
        FileTab.BorderColor3 = Color3.fromRGB(43, 43, 43)
        FileTab.Position = UDim2.new(0.00213287491, 0, 0.164638236, 0)
        FileTab.Size = UDim2.new(0.202141464, 0, 0.130404547, 0)
        FileTab.Visible = false
        
        KillTask.Name = "KillTask"
        KillTask.Parent = FileTab
        KillTask.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        KillTask.BackgroundTransparency = 1.000
        KillTask.Position = UDim2.new(0, 0, 0.51111114, 0)
        KillTask.Size = UDim2.new(1, 0, 0.513516545, 0)
        KillTask.Font = Enum.Font.SourceSans
        KillTask.Text = "              Kill Roblox"
        KillTask.TextColor3 = Color3.fromRGB(255, 255, 255)
        KillTask.TextScaled = true
        KillTask.TextSize = 15.000
        KillTask.TextWrapped = true
        KillTask.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_38.Parent = KillTask
        UITextSizeConstraint_38.MaxTextSize = 15
        
        Inject.Name = "Inject"
        Inject.Parent = FileTab
        Inject.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Inject.BackgroundTransparency = 1.000
        Inject.Position = UDim2.new(0, 0, -0.0444444418, 0)
        Inject.Size = UDim2.new(1, 0, 0.513516545, 0)
        Inject.Font = Enum.Font.SourceSans
        Inject.Text = "              Inject"
        Inject.TextColor3 = Color3.fromRGB(255, 255, 255)
        Inject.TextScaled = true
        Inject.TextSize = 15.000
        Inject.TextWrapped = true
        Inject.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_39.Parent = Inject
        UITextSizeConstraint_39.MaxTextSize = 15
        
        GamesOpenGUI.Name = "GamesOpenGUI"
        GamesOpenGUI.Parent = KrnlGUI
        GamesOpenGUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        GamesOpenGUI.BorderColor3 = Color3.fromRGB(245, 245, 255)
        GamesOpenGUI.Position = UDim2.new(0.309756339, 0, 0.298481524, 0)
        GamesOpenGUI.Size = UDim2.new(0.347566962, 0, 0.399907291, 0)
        GamesOpenGUI.Visible = false
        
        Frame_5.Parent = GamesOpenGUI
        Frame_5.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
        Frame_5.BorderColor3 = Color3.fromRGB(245, 245, 255)
        Frame_5.Size = UDim2.new(1, 0, 0.224637687, 0)
        
        Xbutton_4.Name = "X button"
        Xbutton_4.Parent = Frame_5
        Xbutton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Xbutton_4.BackgroundTransparency = 1.000
        Xbutton_4.Position = UDim2.new(0.849372387, 0, 0, 0)
        Xbutton_4.Size = UDim2.new(0.142259419, 0, 1, 0)
        Xbutton_4.Font = Enum.Font.SourceSans
        Xbutton_4.Text = "X"
        Xbutton_4.TextColor3 = Color3.fromRGB(0, 0, 0)
        Xbutton_4.TextScaled = true
        Xbutton_4.TextSize = 30.000
        Xbutton_4.TextWrapped = true
        
        UITextSizeConstraint_40.Parent = Xbutton_4
        UITextSizeConstraint_40.MaxTextSize = 30
        
        Frame_6.Parent = GamesOpenGUI
        Frame_6.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
        Frame_6.BorderColor3 = Color3.fromRGB(245, 245, 255)
        Frame_6.Position = UDim2.new(0, 0, 0.695652127, 0)
        Frame_6.Size = UDim2.new(1, 0, 0.304347813, 0)
        
        Okbutton_2.Name = "Ok button"
        Okbutton_2.Parent = Frame_6
        Okbutton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Okbutton_2.BorderColor3 = Color3.fromRGB(255, 255, 255)
        Okbutton_2.Position = UDim2.new(0.646688402, 0, 0.214285731, 0)
        Okbutton_2.Size = UDim2.new(0.313807517, 0, 0.5, 0)
        Okbutton_2.Font = Enum.Font.Arial
        Okbutton_2.Text = "OK"
        Okbutton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        Okbutton_2.TextScaled = true
        Okbutton_2.TextSize = 13.000
        Okbutton_2.TextWrapped = true
        
        UITextSizeConstraint_41.Parent = Okbutton_2
        UITextSizeConstraint_41.MaxTextSize = 13
        
        TextLabel_6.Parent = GamesOpenGUI
        TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel_6.BackgroundTransparency = 1.000
        TextLabel_6.Position = UDim2.new(0.0379999988, 0, 0.379999995, 0)
        TextLabel_6.Size = UDim2.new(0.870292902, 0, 0.231884062, 0)
        TextLabel_6.Font = Enum.Font.SourceSans
        TextLabel_6.Text = "Disabled as the most scripts are patched."
        TextLabel_6.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel_6.TextSize = 15.000
        TextLabel_6.TextWrapped = true
        TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left
        
        UITextSizeConstraint_42.Parent = TextLabel_6
        UITextSizeConstraint_42.MaxTextSize = 15
        
        UIAspectRatioConstraint_2.Parent = KRNL
        UIAspectRatioConstraint_2.AspectRatio = 1.691
        
        FloatingGUI.Name = "FloatingGUI"
        FloatingGUI.Parent = KRNL
        FloatingGUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        FloatingGUI.BackgroundTransparency = 1.000
        FloatingGUI.Position = UDim2.new(0, 599, 0, 62)
        FloatingGUI.Size = UDim2.new(0, 39, 0, 39)
        FloatingGUI.Image = "rbxassetid://11671355800"
        
        -- Scripts:
        
        local function JKSXXR_fake_script() -- FileButton.LocalScript 
            local script = Instance.new('LocalScript', FileButton)
        
            local Button = script.Parent
            local gui = script.Parent.Parent.FileTab
            
            Button.MouseButton1Up:Connect(function()
                if gui.Visible == false then
                    gui.Visible = true
                else
                    gui.Visible = false
                end
            end)
        end
        coroutine.wrap(JKSXXR_fake_script)()
        local function IWZIAOM_fake_script() -- CreditsButton.LocalScript 
            local script = Instance.new('LocalScript', CreditsButton)
        
            local Button = script.Parent
            local gui = script.Parent.Parent.CreditsW
            
            Button.MouseButton1Up:Connect(function()
                if gui.Visible == false then
                    gui.Visible = true
                else
                    gui.Visible = false
                end
            end)
        end
        coroutine.wrap(IWZIAOM_fake_script)()
        local function BDJX_fake_script() -- GamesButton.LocalScript 
            local script = Instance.new('LocalScript', GamesButton)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.GamesOpenGUI
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = true
            end)
            
        end
        coroutine.wrap(BDJX_fake_script)()
        local function BOJDWR_fake_script() -- HotScriptsButton.LocalScript 
            local script = Instance.new('LocalScript', HotScriptsButton)
        
            local Button = script.Parent
            local gui = script.Parent.Parent.HScriptsHub
            
            Button.MouseButton1Up:Connect(function()
                if gui.Visible == false then
                    gui.Visible = true
                else
                    gui.Visible = false
                end
            end)
        end
        coroutine.wrap(BOJDWR_fake_script)()
        local function RZSXL_fake_script() -- OthersButton.LocalScript 
            local script = Instance.new('LocalScript', OthersButton)
        
            local Button = script.Parent
            local gui = script.Parent.Parent.OtherTab
            
            Button.MouseButton1Up:Connect(function()
                if gui.Visible == false then
                    gui.Visible = true
                else
                    gui.Visible = false
                end
            end)
        end
        coroutine.wrap(RZSXL_fake_script)()
        local function OPNVFDR_fake_script() -- Xbutton.LocalScript 
            local script = Instance.new('LocalScript', Xbutton)
        
            local GUI = script.Parent.Parent.Parent.Parent
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                GUI:Destroy()
            end)
            
        end
        coroutine.wrap(OPNVFDR_fake_script)()
        local function NETW_fake_script() -- button.LocalScript 
            local script = Instance.new('LocalScript', button)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent
            local Krnl = script.Parent.Parent.Parent.Parent.FloatingGUI
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = false
                Krnl.Visible = true
            end)
        end
        coroutine.wrap(NETW_fake_script)()
        local function BWCCXZZ_fake_script() -- TextButton.LocalScript 
            local script = Instance.new('LocalScript', TextButton)
        
            local button = script.Parent
            local SF1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1
            local SF2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2
            button.MouseButton1Click:Connect(function()
                if SF1.Visible == false then
                    SF1.Visible = true
                    SF2.Visible = false
                else
                    
                end
            end)
        end
        coroutine.wrap(BWCCXZZ_fake_script)()
        local function AFYRFVF_fake_script() -- TextButton_2.LocalScript 
            local script = Instance.new('LocalScript', TextButton_2)
        
            local mbutton1 = script.Parent.Parent
            local button = script.Parent
            local SF1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1
            local text1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1.ImageLabel.EditorFrame.Source
            local mbutton2 = script.Parent.Parent.Parent.Script2
            button.MouseButton1Click:Connect(function()
                if mbutton2.Visible == false then
                    script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.KRNL:Destroy()
                end
            end)
        end
        coroutine.wrap(AFYRFVF_fake_script)()
        local function QDTSXTQ_fake_script() -- TextButton_3.LocalScript 
            local script = Instance.new('LocalScript', TextButton_3)
        
            local button = script.Parent
            local SF1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1
            local SF2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2
            button.MouseButton1Click:Connect(function()
                if SF2.Visible == false then
                    SF2.Visible = true
                    SF1.Visible = false
                else
            
                end
            end)
        end
        coroutine.wrap(QDTSXTQ_fake_script)()
        local function SUNEU_fake_script() -- TextButton_4.LocalScript 
            local script = Instance.new('LocalScript', TextButton_4)
        
            local mbutton = script.Parent.Parent
            local button = script.Parent
            local SF2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2
            local text2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2.ImageLabel.EditorFrame.Source
            local ab = script.Parent.Parent.Parent.addbutton
            button.MouseButton1Click:Connect(function() 
                if SF2.Visible == true then
                    SF2.Visible = false
                else
                    --Nothing here to execute
                end
                mbutton.Visible = false
                text2.Text = "--Welcome To KRNL Mobile!"
                ab.Visible = true
            end)
        end
        coroutine.wrap(SUNEU_fake_script)()
        local function SFHZ_fake_script() -- addbutton.LocalScript 
            local script = Instance.new('LocalScript', addbutton)
        
            local button = script.Parent
            local SF2 = script.Parent.Parent.Parent.ScrollingFrame2
            local mbutton2 = script.Parent.Parent.Script2
            local SF1 = script.Parent.Parent.Parent.ScrollingFrame1
            button.MouseButton1Click:Connect(function()
                SF1.Visible = true
                button.Visible = false
                mbutton2.Visible = true
            end)
        end
        coroutine.wrap(SFHZ_fake_script)()
        local function XCUKBI_fake_script() -- ImageLabel_2.LocalScript 
            local script = Instance.new('LocalScript', ImageLabel_2)
        
            local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
            local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "new", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
            local Source = script.Parent.EditorFrame.Source
            local Lines = Source.Parent.Lines
            local Highlight = function(string, keywords)
                local K = {}
                local S = string
                local Token =
                    {
                        ["="] = true,
                        ["."] = true,
                        [","] = true,
                        ["("] = true,
                        [")"] = true,
                        ["["] = true,
                        ["]"] = true,
                        ["{"] = true,
                        ["}"] = true,
                        [":"] = true,
                        ["*"] = true,
                        ["/"] = true,
                        ["+"] = true,
                        ["-"] = true,
                        ["%"] = true,
                        [";"] = true,
                        ["~"] = true
                    }
                for i, v in pairs(keywords) do
                    K[v] = true
                end
                S = S:gsub(".", function(c)
                    if Token[c] ~= nil then
                        return "\32"
                    else
                        return c
                    end
                end)
                S = S:gsub("%S+", function(c)
                    if K[c] ~= nil then
                        return c
                    else
                        return (" "):rep(#c)
                    end
                end)
                return S
            end
            local hTokens = function(string)
                local Token =
                    {
                        ["="] = true,
                        ["."] = true,
                        [","] = true,
                        ["("] = true,
                        [")"] = true,
                        ["["] = true,
                        ["]"] = true,
                        ["{"] = true,
                        ["}"] = true,
                        [":"] = true,
                        ["*"] = true,
                        ["/"] = true,
                        ["+"] = true,
                        ["-"] = true,
                        ["%"] = true,
                        [";"] = true,
                        ["~"] = true
                    }
                local A = ""
                string:gsub(".", function(c)
                    if Token[c] ~= nil then
                        A = A .. c
                    elseif c == "\n" then
                        A = A .. "\n"
                    elseif c == "\t" then
                        A = A .. "\t"
                    else
                        A = A .. "\32"
                    end
                end)
                return A
            end
            
            local strings = function(string)
                local highlight = ""
                local quote = false
                string:gsub(".", function(c)
                    if quote == false and c == "\"" then
                        quote = true
                    elseif quote == true and c == "\"" then
                        quote = false
                    end
                    if quote == false and c == "\"" then
                        highlight = highlight .. "\""
                    elseif c == "\n" then
                        highlight = highlight .. "\n"
                    elseif c == "\t" then
                        highlight = highlight .. "\t"
                    elseif quote == true then
                        highlight = highlight .. c
                    elseif quote == false then
                        highlight = highlight .. "\32"
                    end
                end)
                return highlight
            end
            local comments = function(string)
                local ret = ""
                string:gsub("[^\r\n]+", function(c)
                    local comm = false
                    local i = 0
                    c:gsub(".", function(n)
                        i = i + 1
                        if c:sub(i, i + 1) == "--" then
                            comm = true
                        end
                        if comm == true then
                            ret = ret .. n
                        else
                            ret = ret .. "\32"
                        end
                    end)
                    ret = ret
                end)
                return ret
            end
            local numbers = function(string)
                local A = ""
                string:gsub(".", function(c)
                    if tonumber(c) ~= nil then
                        A = A .. c
                    elseif c == "\n" then
                        A = A .. "\n"
                    elseif c == "\t" then
                        A = A .. "\t"
                    else
                        A = A .. "\32"
                    end
                end)
                return A
            end
            local highlight_source = function(type)
                if type == "Text" then
                    Source.Text = Source.Text:gsub("\13", "")
                    Source.Text = Source.Text:gsub("\t", "      ")
                    local s = Source.Text
                    Source.Keywords_.Text = Highlight(s, lua_keywords)
                    Source.Globals_.Text = Highlight(s, global_env)
                    Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
                    Source.Tokens_.Text = hTokens(s)
                    Source.Numbers_.Text = numbers(s)
                    Source.Strings_.Text = strings(s)
                    local lin = 1
                    s:gsub("\n", function()
                        lin = lin + 1
                    end)
                    Lines.Text = ""
                    for i = 1, lin do
                        Lines.Text = Lines.Text .. i .. "\n"
                    end
                end
            end
            highlight_source("Text")
            Source.Changed:Connect(highlight_source)
        end
        coroutine.wrap(XCUKBI_fake_script)()
        local function VVLPP_fake_script() -- ImageLabel_3.LocalScript 
            local script = Instance.new('LocalScript', ImageLabel_3)
        
            local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
            local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "new", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
            local Source = script.Parent.EditorFrame.Source
            local Lines = Source.Parent.Lines
            local Highlight = function(string, keywords)
                local K = {}
                local S = string
                local Token =
                    {
                        ["="] = true,
                        ["."] = true,
                        [","] = true,
                        ["("] = true,
                        [")"] = true,
                        ["["] = true,
                        ["]"] = true,
                        ["{"] = true,
                        ["}"] = true,
                        [":"] = true,
                        ["*"] = true,
                        ["/"] = true,
                        ["+"] = true,
                        ["-"] = true,
                        ["%"] = true,
                        [";"] = true,
                        ["~"] = true
                    }
                for i, v in pairs(keywords) do
                    K[v] = true
                end
                S = S:gsub(".", function(c)
                    if Token[c] ~= nil then
                        return "\32"
                    else
                        return c
                    end
                end)
                S = S:gsub("%S+", function(c)
                    if K[c] ~= nil then
                        return c
                    else
                        return (" "):rep(#c)
                    end
                end)
                return S
            end
            local hTokens = function(string)
                local Token =
                    {
                        ["="] = true,
                        ["."] = true,
                        [","] = true,
                        ["("] = true,
                        [")"] = true,
                        ["["] = true,
                        ["]"] = true,
                        ["{"] = true,
                        ["}"] = true,
                        [":"] = true,
                        ["*"] = true,
                        ["/"] = true,
                        ["+"] = true,
                        ["-"] = true,
                        ["%"] = true,
                        [";"] = true,
                        ["~"] = true
                    }
                local A = ""
                string:gsub(".", function(c)
                    if Token[c] ~= nil then
                        A = A .. c
                    elseif c == "\n" then
                        A = A .. "\n"
                    elseif c == "\t" then
                        A = A .. "\t"
                    else
                        A = A .. "\32"
                    end
                end)
                return A
            end
            
            local strings = function(string)
                local highlight = ""
                local quote = false
                string:gsub(".", function(c)
                    if quote == false and c == "\"" then
                        quote = true
                    elseif quote == true and c == "\"" then
                        quote = false
                    end
                    if quote == false and c == "\"" then
                        highlight = highlight .. "\""
                    elseif c == "\n" then
                        highlight = highlight .. "\n"
                    elseif c == "\t" then
                        highlight = highlight .. "\t"
                    elseif quote == true then
                        highlight = highlight .. c
                    elseif quote == false then
                        highlight = highlight .. "\32"
                    end
                end)
                return highlight
            end
            local comments = function(string)
                local ret = ""
                string:gsub("[^\r\n]+", function(c)
                    local comm = false
                    local i = 0
                    c:gsub(".", function(n)
                        i = i + 1
                        if c:sub(i, i + 1) == "--" then
                            comm = true
                        end
                        if comm == true then
                            ret = ret .. n
                        else
                            ret = ret .. "\32"
                        end
                    end)
                    ret = ret
                end)
                return ret
            end
            local numbers = function(string)
                local A = ""
                string:gsub(".", function(c)
                    if tonumber(c) ~= nil then
                        A = A .. c
                    elseif c == "\n" then
                        A = A .. "\n"
                    elseif c == "\t" then
                        A = A .. "\t"
                    else
                        A = A .. "\32"
                    end
                end)
                return A
            end
            local highlight_source = function(type)
                if type == "Text" then
                    Source.Text = Source.Text:gsub("\13", "")
                    Source.Text = Source.Text:gsub("\t", "      ")
                    local s = Source.Text
                    Source.Keywords_.Text = Highlight(s, lua_keywords)
                    Source.Globals_.Text = Highlight(s, global_env)
                    Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
                    Source.Tokens_.Text = hTokens(s)
                    Source.Numbers_.Text = numbers(s)
                    Source.Strings_.Text = strings(s)
                    local lin = 1
                    s:gsub("\n", function()
                        lin = lin + 1
                    end)
                    Lines.Text = ""
                    for i = 1, lin do
                        Lines.Text = Lines.Text .. i .. "\n"
                    end
                end
            end
            highlight_source("Text")
            Source.Changed:Connect(highlight_source)
        end
        coroutine.wrap(VVLPP_fake_script)()
        local function WMPZGUU_fake_script() -- Execute.LocalScript 
            local script = Instance.new('LocalScript', Execute)
        
            script.Parent.MouseButton1Down:Connect(function()
                loadstring(script.Parent.Parent.Parent.MainGUI.ExecuteBar.ScrollingFrame1.ImageLabel.EditorFrame.Source.Text)()
            end)
        end
        coroutine.wrap(WMPZGUU_fake_script)()
        local function UDBRM_fake_script() -- Clear.LocalScript 
            local script = Instance.new('LocalScript', Clear)
        
            local button = script.Parent
            local text1 = script.Parent.Parent.Parent.MainGUI.ExecuteBar.ScrollingFrame1.ImageLabel.EditorFrame.Source
            button.MouseButton1Click:Connect(function()
                text1.Text = ""
            end)
        end
        coroutine.wrap(UDBRM_fake_script)()
        local function BFFHFLM_fake_script() -- InjectButton.LocalScript 
            local script = Instance.new('LocalScript', InjectButton)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent.InjectedMessgae
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = true
            end)
            
        end
        coroutine.wrap(BFFHFLM_fake_script)()
        local function MRVGBRW_fake_script() -- KrnlGUI.Drag 
            local script = Instance.new('LocalScript', KrnlGUI)
        
            local frame = script.Parent
            frame.Draggable = true
            frame.Active = true
            frame.Selectable = true
        end
        coroutine.wrap(MRVGBRW_fake_script)()
        local function QVFBOG_fake_script() -- Xbutton_2.LocalScript 
            local script = Instance.new('LocalScript', Xbutton_2)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = false
            end)
        end
        coroutine.wrap(QVFBOG_fake_script)()
        local function VEDCZN_fake_script() -- Okbutton.LocalScript 
            local script = Instance.new('LocalScript', Okbutton)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = false
            end)
        end
        coroutine.wrap(VEDCZN_fake_script)()
        local function IHNUMQ_fake_script() -- InjectedMessgae.Drag 
            local script = Instance.new('LocalScript', InjectedMessgae)
        
            local frame = script.Parent
            frame.Draggable = true
            frame.Active = true
            frame.Selectable = true
        end
        coroutine.wrap(IHNUMQ_fake_script)()
        local function FJVQORH_fake_script() -- DexExplorer.LocalScript 
            local script = Instance.new('LocalScript', DexExplorer)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/peyton2465/Dex/master/out.lua"))()
            end)
        end
        coroutine.wrap(FJVQORH_fake_script)()
        local function WHQB_fake_script() -- OpenGui.LocalScript 
            local script = Instance.new('LocalScript', OpenGui)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://pastebin.com/raw/UXmbai5q", true))()
            end)
        end
        coroutine.wrap(WHQB_fake_script)()
        local function QHYNL_fake_script() -- RemoteSpy.LocalScript 
            local script = Instance.new('LocalScript', RemoteSpy)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua"))();
            end)
        end
        coroutine.wrap(QHYNL_fake_script)()
        local function XVQL_fake_script() -- DarkDex.LocalScript 
            local script = Instance.new('LocalScript', DarkDex)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://pastebin.com/raw/fPP8bZ8Z"))()
            end)
        end
        coroutine.wrap(XVQL_fake_script)()
        local function HYBOB_fake_script() -- UnamedEsp.LocalScript 
            local script = Instance.new('LocalScript', UnamedEsp)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://pastebin.com/raw/kvr0AuWz"))()
            end)
        end
        coroutine.wrap(HYBOB_fake_script)()
        local function GKEBA_fake_script() -- IYFE.LocalScript 
            local script = Instance.new('LocalScript', IYFE)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
            end)
        end
        coroutine.wrap(GKEBA_fake_script)()
        local function NHAHP_fake_script() -- OwlHub.LocalScript 
            local script = Instance.new('LocalScript', OwlHub)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
            end)
        end
        coroutine.wrap(NHAHP_fake_script)()
        local function RZTRLAR_fake_script() -- HoHoHub.LocalScript 
            local script = Instance.new('LocalScript', HoHoHub)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                loadstring(game:HttpGet('https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI'))()
            end)
        end
        coroutine.wrap(RZTRLAR_fake_script)()
        local function ZVNIN_fake_script() -- Xbutton_3.LocalScript 
            local script = Instance.new('LocalScript', Xbutton_3)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = false
            end)
        end
        coroutine.wrap(ZVNIN_fake_script)()
        local function LRQQGX_fake_script() -- CreditsW.Drag 
            local script = Instance.new('LocalScript', CreditsW)
        
            local frame = script.Parent
            frame.Draggable = true
            frame.Active = true
            frame.Selectable = true
        end
        coroutine.wrap(LRQQGX_fake_script)()
        local function UAPXMMK_fake_script() -- WHy.LocalScript 
            local script = Instance.new('LocalScript', WHy)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                print("Clicked")
            end)
        end
        coroutine.wrap(UAPXMMK_fake_script)()
        local function TEITRZP_fake_script() -- Nope.LocalScript 
            local script = Instance.new('LocalScript', Nope)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                print("Clicked")
            end)
        end
        coroutine.wrap(TEITRZP_fake_script)()
        local function BOLKY_fake_script() -- KillTask.LocalScript 
            local script = Instance.new('LocalScript', KillTask)
        
            local btn = script.Parent
            
            btn.MouseButton1Click:Connect(function()
                print("Clicked")
            end)
        end
        coroutine.wrap(BOLKY_fake_script)()
        local function LRTUSOX_fake_script() -- Inject.LocalScript 
            local script = Instance.new('LocalScript', Inject)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent.InjectedMessgae
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = true
            end)
            
        end
        coroutine.wrap(LRTUSOX_fake_script)()
        local function IVCU_fake_script() -- Xbutton_4.LocalScript 
            local script = Instance.new('LocalScript', Xbutton_4)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = false
            end)
        end
        coroutine.wrap(IVCU_fake_script)()
        local function OWFEJ_fake_script() -- Okbutton_2.LocalScript 
            local script = Instance.new('LocalScript', Okbutton_2)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.Parent
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = false
            end)
        end
        coroutine.wrap(OWFEJ_fake_script)()
        local function XCQNHP_fake_script() -- GamesOpenGUI.Drag 
            local script = Instance.new('LocalScript', GamesOpenGUI)
        
            local frame = script.Parent
            frame.Draggable = true
            frame.Active = true
            frame.Selectable = true
        end
        coroutine.wrap(XCQNHP_fake_script)()
        local function JKEPNNP_fake_script() -- FloatingGUI.Drag 
            local script = Instance.new('LocalScript', FloatingGUI)
        
            local frame = script.Parent
            frame.Draggable = true
            frame.Active = true
            frame.Selectable = true
        end
        coroutine.wrap(JKEPNNP_fake_script)()
        local function LTLHER_fake_script() -- FloatingGUI.LocalScript 
            local script = Instance.new('LocalScript', FloatingGUI)
        
            local btn = script.Parent
            local Gui = script.Parent.Parent.KrnlGUI
            
            btn.MouseButton1Click:Connect(function()
                Gui.Visible = true
                btn.Visible = false
            end)
        end
        coroutine.wrap(LTLHER_fake_script)()
  	end
})
Tab:AddButton({
	Name = "LibraryGUI",
	Callback = function()
        function Lib()
            local library = {}
            local libalive = true
            local holdingmouse = false
            
            -- 17,856 pastebin views
            -- as of 1/29/2023 @ 6:30 CST
            
            local plr = game:GetService("Players").LocalPlayer
            local mouse = plr:GetMouse()
            local runs = game:GetService("RunService")
            local us = game:GetService("UserInputService")
            local screengui = Instance.new("ScreenGui",game.CoreGui)
            local windowsopened = 0
            
            local elementsize = 24
            
            local font = Font.new(
                "rbxassetid://11702779517",
                Enum.FontWeight.Regular,
                Enum.FontStyle.Normal 
                )
                
            local titlefont = Font.new(
                "rbxassetid://11702779517",
                Enum.FontWeight.Bold,
                Enum.FontStyle.Normal 
                )
                
            local medfont = Font.new(
                "rbxassetid://11702779517",
                Enum.FontWeight.Medium,
                Enum.FontStyle.Normal 
                )
            
            us.InputBegan:Connect(function(key,pro)
                if key.UserInputType == Enum.UserInputType.MouseButton1 then
                    holdingmouse = true 
                end
            end)
            
            us.InputEnded:Connect(function(key,pro)
                if key.UserInputType == Enum.UserInputType.MouseButton1 then
                    holdingmouse = false 
                end
            end)
            
            function draggable(obj) -- https://devforum.roblox.com/t/draggable-property-is-hidden-on-gui-objects/107689/4
                local UserInputService = game:GetService("UserInputService")
                local gui = obj
            
                local dragging
                local dragInput
                local dragStart
                local startPos
                
                local function update(input)
                    local delta = input.Position - dragStart
                    gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                end
                
                gui.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                        dragging = true
                        dragStart = input.Position
                        startPos = gui.Position
                        
                        input.Changed:Connect(function()
                            if input.UserInputState == Enum.UserInputState.End then
                                dragging = false
                            end
                        end)
                    end
                end)
                
                gui.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                        dragInput = input
                    end
                end)
                
                UserInputService.InputChanged:Connect(function(input)
                    if input == dragInput and dragging then
                        update(input)
                    end
                end) 
            end
            
            function hovercolor(b,idle,hover,clicked,included)
                local hovering = false
                local holding = false
                
                b.MouseEnter:Connect(function()
                    hovering = true
                end)
                
                b.MouseLeave:Connect(function()
                    hovering = false
                end)
                
                b.MouseButton1Down:Connect(function()
                    holding = true
                end)
                
                b.MouseButton1Up:Connect(function()
                    holding = false
                end)
                
                if included and typeof(included) == "table" and #included > 0 then
                    for i,v in pairs(included) do
                        b.Changed:Connect(function()
                            v.BackgroundColor3 = b.BackgroundColor3
                        end) 
                    end
                end
                
                runs.RenderStepped:Connect(function()
                    if hovering then
                        if holding then
                            b.BackgroundColor3 = clicked
                        else
                            b.BackgroundColor3 = hover
                        end
                    else
                        b.BackgroundColor3 = idle
                    end
                end)
            end
            
            library.window = function(text)
                local windowalive = true
                local frame = Instance.new("Frame",screengui)
                frame.Position = UDim2.new(0.016+windowsopened/12,0,0.009,0)
                frame.BackgroundColor3 = Color3.fromRGB(15,15,20)
                --frame.AutomaticSize = Enum.AutomaticSize.Y
                frame.BorderSizePixel = 0
                --frame.Active = true
                --frame.Draggable = true
                local list = Instance.new("UIListLayout",frame)
                list.HorizontalAlignment = "Center"
                list.Padding = UDim.new(0,3)
                list.SortOrder = Enum.SortOrder.LayoutOrder
                draggable(frame)
                
                windowsopened = windowsopened + 1
                
                local header = Instance.new("Frame",frame)
                header.BackgroundColor3 = Color3.fromRGB(55,55,60)
                header.Size = UDim2.new(1,0,0,32)
                header.BorderSizePixel = 0
                
                local separator = Instance.new("Frame",header)
                separator.BackgroundColor3 = Color3.fromRGB(55,55,60)
                separator.Size = UDim2.new(1,0,0.4,0)
                separator.Position = UDim2.new(0,0,0.6,0)
                separator.BorderSizePixel = 0
                
                Instance.new("UICorner",frame)
                Instance.new("UICorner",header)
                
                local title = Instance.new("TextLabel",header)
                title.TextScaled = true
                title.Text = tostring(text)
                title.TextColor3 = Color3.fromRGB(255,255,255)
                title.Size = UDim2.new(1,0,1,0)
                title.FontFace = titlefont
                title.BorderSizePixel = 0
                title.BackgroundTransparency = 1
                
                frame.Size = UDim2.new(0.08,0,0.0335,0)
                local gui = {}
            
                local elements = 0
                gui.label = function(text,extrasize)
                    extrasize = extrasize or 0
                    
                    local b = Instance.new("TextLabel",frame)
                    b.LayoutOrder = 0
                    b.TextScaled = true
                    b.BackgroundTransparency = 1
                    b.Text = tostring(text)
                    b.TextColor3 = Color3.fromRGB(255,255,255)
                    b.Size = UDim2.new(0.96,0,0,elementsize+extrasize)
                    b.FontFace = font
                    b.BorderSizePixel = 0
                    
                    elements = elements + 1
                    frame.Size = frame.Size + UDim2.new(0,0,0,elementsize+3+extrasize)
                    
                    local subgui = {}
                    
                    subgui.changetext = function(txt)
                        b.Text = tostring(txt)
                    end
                    
                    return subgui
                end
                
                gui.button = function(text,onclick)
                    local el = Instance.new("Frame",frame)
                    el.LayoutOrder = 0
                    el.Size = UDim2.new(0.96,0,0,elementsize)
                    el.BorderSizePixel = 0
                    el.BackgroundTransparency = 1
                    
                    local b = Instance.new("TextButton",el)
                    b.LayoutOrder = 0
                    b.TextScaled = true
                    b.BackgroundColor3 = Color3.fromRGB(35,35,40)
                    b.Text = tostring(text)
                    b.TextColor3 = Color3.fromRGB(255,255,255)
                    b.Size = UDim2.new(1,0,1,0)
                    b.FontFace = font
                    b.BorderSizePixel = 0
                    b.AutoButtonColor = false
                    b.ZIndex = 10
                    
                    local top = Instance.new("Frame",el)
                    top.Size = UDim2.new(1,0,0.4,0)
                    top.Position = UDim2.new(0,0,0,0)
                    top.BorderSizePixel = 0
                    
                    local bot = Instance.new("Frame",el)
                    bot.Size = UDim2.new(1,0,0.4,0)
                    bot.Position = UDim2.new(0,0,0.6,0)
                    bot.BorderSizePixel = 0
                    
                    local thiselement = elements+1
                    hovercolor(b,Color3.fromRGB(35,35,40),Color3.fromRGB(45,45,50),Color3.fromRGB(25,25,30),{top,bot})
                    elements = elements + 1
                    Instance.new("UICorner",b).CornerRadius = UDim.new(0,5)
                    
                    spawn(function()
                        while b do
                            bot.Visible = (elements>thiselement)
                            task.wait() 
                        end
                    end)
                    
                    frame.Size = frame.Size + UDim2.new(0,0,0,elementsize+3)
                    b.MouseButton1Down:Connect(onclick)
                end
                
                gui.toggle = function(text,default,onclick)
                    local enabled = default or false
                    local el = Instance.new("Frame",frame)
                    el.LayoutOrder = 0
                    el.Size = UDim2.new(0.96,0,0,elementsize)
                    el.BorderSizePixel = 0
                    el.BackgroundTransparency = 1
                    
                    local b = Instance.new("TextButton",el)
                    b.LayoutOrder = 0
                    b.TextScaled = true
                    b.BackgroundColor3 = Color3.fromRGB(35,35,40)
                    b.Text = tostring(text)
                    b.TextColor3 = enabled and Color3.new(0,1,0) or Color3.new(1,0,0)
                    b.Size = UDim2.new(1,0,1,0)
                    b.FontFace = font
                    b.BorderSizePixel = 0
                    b.AutoButtonColor = false
                    b.ZIndex = 10
                    
                    local top = Instance.new("Frame",el)
                    top.Size = UDim2.new(1,0,0.4,0)
                    top.Position = UDim2.new(0,0,0,0)
                    top.BorderSizePixel = 0
                    
                    local bot = Instance.new("Frame",el)
                    bot.Size = UDim2.new(1,0,0.4,0)
                    bot.Position = UDim2.new(0,0,0.6,0)
                    bot.BorderSizePixel = 0
                    
                    local thiselement = elements+1
                    hovercolor(b,Color3.fromRGB(35,35,40),Color3.fromRGB(45,45,50),Color3.fromRGB(25,25,30),{top,bot})
                    elements = elements + 1
                    Instance.new("UICorner",b).CornerRadius = UDim.new(0,5)
                    
                    spawn(function()
                        while b do
                            bot.Visible = (elements>thiselement)
                            task.wait() 
                        end
                    end)
                    
                    frame.Size = frame.Size + UDim2.new(0,0,0,elementsize+3)
                    b.MouseButton1Down:Connect(function()
                        enabled = not enabled
                        b.TextColor3 = enabled and Color3.new(0,1,0) or Color3.new(1,0,0)
                        onclick(enabled)
                    end)
                    
                    local subgui = {}
                    
                    subgui.set = function(bool)
                        enabled = bool
                        b.TextColor3 = enabled and Color3.new(0,1,0) or Color3.new(1,0,0)
                        onclick(enabled)
                    end
                    
                    return subgui
                end
                
                gui.textbox = function(text,unfocused)
                    local el = Instance.new("Frame",frame)
                    el.LayoutOrder = 0
                    el.Size = UDim2.new(0.96,0,0,elementsize)
                    el.BorderSizePixel = 0
                    el.BackgroundTransparency = 1
                    
                    local b = Instance.new("TextBox",el)
                    b.LayoutOrder = 0
                    b.TextScaled = true
                    b.BackgroundColor3 = Color3.fromRGB(35,35,40)
                    b.PlaceholderText = tostring(text)
                    b.PlaceholderColor3 = Color3.fromRGB(80,80,80)
                    b.Text = ""
                    b.TextColor3 = Color3.fromRGB(125,200,255)
                    b.Size = UDim2.new(1,0,1,0)
                    b.FontFace = font
                    b.BorderSizePixel = 0
                    b.ZIndex = 10
                    
                    local top = Instance.new("Frame",el)
                    top.Size = UDim2.new(1,0,0.4,0)
                    top.Position = UDim2.new(0,0,0,0)
                    top.BorderSizePixel = 0
                    top.BackgroundColor3 = b.BackgroundColor3
                    
                    local bot = Instance.new("Frame",el)
                    bot.Size = UDim2.new(1,0,0.4,0)
                    bot.Position = UDim2.new(0,0,0.6,0)
                    bot.BorderSizePixel = 0
                    bot.BackgroundColor3 = b.BackgroundColor3
                    
                    local thiselement = elements+1
                    elements = elements + 1
                    Instance.new("UICorner",b).CornerRadius = UDim.new(0,5)
                    
                    task.spawn(function()
                        while b do
                            bot.Visible = (elements>thiselement)
                            task.wait() 
                        end
                    end)
            
                    frame.Size = frame.Size + UDim2.new(0,0,0,elementsize+3)
                    b.FocusLost:Connect(function()
                        unfocused(b.Text) 
                    end)
            
                    local subgui = {}
                    
                    subgui.text = function()
                        return b.Text 
                    end
                    
                    subgui.changetext = function(newtext)
                        b.Text = newtext
                    end
                    
                    return subgui
                end
                
                local coldropdown = nil
                gui.dropdown = function(text,contents)
                    local el = Instance.new("Frame",frame)
                    el.LayoutOrder = 0
                    el.Size = UDim2.new(0.96,0,0,elementsize)
                    el.BorderSizePixel = 0
                    el.BackgroundTransparency = 1
                    el.ZIndex = 2
                    
                    local b = Instance.new("TextButton",el)
                    b.LayoutOrder = 0
                    b.TextScaled = true
                    b.BackgroundColor3 = Color3.fromRGB(35,35,40)
                    b.Text = tostring(text) .." >"
                    b.TextColor3 = Color3.fromRGB(255,255,255)
                    b.Size = UDim2.new(1,0,1,0)
                    b.FontFace = font
                    b.BorderSizePixel = 0
                    b.AutoButtonColor = false
                    b.ZIndex = 2
                    local d = Instance.new("Frame",b)
                    d.AnchorPoint = Vector2.new(0.5,0)
                    d.Position = UDim2.new(0.5,0,0.72,0)
                    d.Size = UDim2.new(1.04,0,0,9)
                    d.BackgroundColor3 = Color3.fromRGB(15,15,20)
                    d.AutomaticSize = Enum.AutomaticSize.Y
                    d.BorderSizePixel = 0
                    d.Visible = false
                    d.ZIndex = 2
                    local dlist = Instance.new("UIListLayout",d)
                    dlist.HorizontalAlignment = "Center"
                    dlist.Padding = UDim.new(0,3)
                    dlist.SortOrder = Enum.SortOrder.LayoutOrder
                    
                    local separator = Instance.new("Frame",d)
                    separator.BackgroundTransparency = 1
                    separator.Size = UDim2.new(1,0,0,6)
                    
                    local top = Instance.new("Frame",el)
                    top.Size = UDim2.new(1,0,0.4,0)
                    top.Position = UDim2.new(0,0,0,0)
                    top.BorderSizePixel = 0
                    
                    local bot = Instance.new("Frame",el)
                    bot.Size = UDim2.new(1,0,0.4,0)
                    bot.Position = UDim2.new(0,0,0.6,0)
                    bot.BorderSizePixel = 0
                    
                    local thiselement = elements+1
                    hovercolor(b,Color3.fromRGB(35,35,40),Color3.fromRGB(45,45,50),Color3.fromRGB(25,25,30),{top,bot})
                    elements = elements + 1
                    Instance.new("UICorner",b).CornerRadius = UDim.new(0,5)
                    Instance.new("UICorner",d)
                    
                    spawn(function()
                        while b do
                            bot.Visible = (elements>thiselement)
                            task.wait() 
                        end
                    end)
                    
                    frame.Size = frame.Size + UDim2.new(0,0,0,elementsize+3)
                    
                    local search = ""
                    local selected = nil
                    local function addcontent(name)
                        if typeof(name) == "Instance" then
                            name = name.Name 
                        end
                        
                        local e = Instance.new("TextButton",d)
                        e.LayoutOrder = 0
                        e.TextScaled = true
                        e.BackgroundColor3 = Color3.fromRGB(75,75,80)
                        e.Text = tostring(name)
                        e.TextColor3 = Color3.fromRGB(255,255,255)
                        e.Size = UDim2.new(0.96,0,0,elementsize)
                        e.FontFace = font
                        e.BorderSizePixel = 0
                        e.Name = name
                        e.ZIndex = 35-elements
                        
                        Instance.new("UICorner",e)
                        d.Size = d.Size + UDim2.new(0,0,0,25)
                        
                        e.MouseButton1Down:Connect(function()
                            d.Visible = false
                            b.ZIndex = 2
                            b.Text = tostring(name).." >"
                            b.TextColor3 = Color3.fromRGB(200,255,200)
                            selected = name
                        end)
                        
                        spawn(function()
                            while task.wait() do
                                local s = search:lower()
                                
                                if s ~= "" then
                                    if tostring(name):lower():find(s) then
                                        e.Visible = true
                                    else
                                        e.Visible = false
                                    end
                                else
                                    e.Visible = true
                                end
                            end
                        end)
                    end
                    
                    for i,v in pairs(contents) do
                        addcontent(v) 
                    end
                    
                    b.MouseButton1Down:Connect(function()
                        d.Visible = not d.Visible 
                        el.ZIndex = d.Visible and 10 or 12
                        b.ZIndex = d.Visible and 22 or 10
                        coldropdown = d.Visible and el or nil
                        
                        if not selected then
                            b.Text = d.Visible and tostring(text).." <" or tostring(text).." >"
                        else
                            b.Text = d.Visible and tostring(selected).." <" or tostring(selected).." >"
                        end
                        
                        repeat task.wait() until coldropdown ~= el
                        
                        d.Visible = false
                        el.ZIndex = d.Visible and 10 or 12
                        b.ZIndex = d.Visible and 22 or 10
                    end)
                    
                    local subgui = {}
                    
                    subgui.get = function()
                        return selected
                    end
                    
                    subgui.add = function(txt)
                        addcontent(txt) 
                    end
                    
                    subgui.search = function(txt)
                        search = tostring(txt)
                        
                        d.Size = UDim2.new(1.04,0,0,0)
                        task.wait()
                        local items = 0
                        for i,v in pairs(d:GetChildren()) do
                            if v:IsA("TextButton") and v.Visible then
                                i = i + 1
                                d.Size = d.Size + UDim2.new(0,0,0,25)
                            end
                        end
                    end
                    
                    subgui.delete = function(txt)
                        if d:FindFirstChild(txt) then
                            d:FindFirstChild(txt):Destroy()
                            d.Size = d.Size - UDim2.new(0,0,0,25)
                            
                            if selected == txt then
                                b.TextColor3 = Color3.fromRGB(255,255,255)
                                b.Text = tostring(text).." >"
                                selected = nil
                            end
                        end
                    end
                    
                    subgui.clear = function()
                        for i,v in pairs(d:GetChildren()) do
                            if v:IsA("TextButton") then
                                v:Destroy() 
                                d.Size = d.Size - UDim2.new(0,0,0,25)
                            end
                        end
                        b.TextColor3 = Color3.fromRGB(255,255,255)
                        b.Text = tostring(text).." >"
                        selected = nil
                    end
                    
                    return subgui
                end
            
                gui.slider = function(text,min,max,roundto,default,onchange)
                    local el = Instance.new("Frame",frame)
                    el.LayoutOrder = 0
                    el.Size = UDim2.new(0.96,0,0,elementsize+5)
                    el.BorderSizePixel = 0
                    el.BackgroundTransparency = 1
                    
                    local b = Instance.new("Frame",el)
                    b.LayoutOrder = 0
                    b.BackgroundColor3 = Color3.fromRGB(35,35,40)
                    b.Size = UDim2.new(1,0,1,0)
                    b.BorderSizePixel = 0
                    b.ZIndex = 10
                    
                    local txtholder = Instance.new("TextLabel",b)
                    txtholder.TextScaled = true
                    txtholder.BackgroundColor3 = Color3.fromRGB(35,35,40)
                    txtholder.Text = tostring(text).." [".. tostring(default).."]"
                    txtholder.TextColor3 = Color3.fromRGB(255,255,255)
                    txtholder.Size = UDim2.new(1,0,0.7,0)
                    txtholder.FontFace = medfont
                    txtholder.BorderSizePixel = 0
                    txtholder.ZIndex = 10
                    
                    local slidepart = Instance.new("Frame",b)
                    slidepart.BackgroundColor3 = Color3.fromRGB(255,255,255)
                    slidepart.Size = UDim2.new(0.9,0,0.05,0)
                    slidepart.Position = UDim2.new(0.05,0,0.8,0)
                    slidepart.BorderSizePixel = 0
                    slidepart.ZIndex = 10
                    
                    local slideball = Instance.new("ImageLabel",slidepart)
                    slideball.AnchorPoint = Vector2.new(0.5,0.5)
                    slideball.BackgroundTransparency = 1
                    slideball.Size = UDim2.new(0.055,0,5,0)
                    slideball.Position = UDim2.new(0,0,0.5,0)
                    slideball.Image = "rbxassetid://6755657357"
                    slideball.BorderSizePixel = 0
                    slideball.ZIndex = 12
                    
                    local button = Instance.new("TextButton",b)
                    button.BackgroundTransparency = 1
                    button.Text = ""
                    button.Size = UDim2.new(1,0,1,0)
                    button.ZIndex = 35
                    
                    local top = Instance.new("Frame",el)
                    top.Size = UDim2.new(1,0,0.4,0)
                    top.Position = UDim2.new(0,0,0,0)
                    top.BorderSizePixel = 0
                    top.BackgroundColor3 = b.BackgroundColor3
                    
                    local bot = Instance.new("Frame",el)
                    bot.Size = UDim2.new(1,0,0.4,0)
                    bot.Position = UDim2.new(0,0,0.6,0)
                    bot.BorderSizePixel = 0
                    bot.BackgroundColor3 = b.BackgroundColor3
                    
                    local thiselement = elements+1
                    elements = elements + 1
                    Instance.new("UICorner",b).CornerRadius = UDim.new(0,5)
                    
                    task.spawn(function()
                        while b do
                            bot.Visible = (elements>thiselement)
                            task.wait() 
                        end
                    end)
                    
                    local slidervalue
                    local function setslider(value)
                        local trueval = math.floor(value/roundto)*roundto
                        local norm = (trueval-min)/(max-min)
                        slideball.Position = UDim2.new(norm,0,0.5,0)
                        txtholder.Text = tostring(text).." [".. tostring(math.floor(trueval*100)/100).."]"
                    
                        slidervalue = trueval
                        onchange(trueval)
                    end
                    
                    local holding = false
                    button.MouseButton1Down:Connect(function()
                        holdingmouse = true
                        
                        task.spawn(function()
                            while holdingmouse and windowalive and libalive do
                                local abpos = slidepart.AbsolutePosition
                                local absize = slidepart.AbsoluteSize
                                local x = mouse.X
                                
                                local p = math.clamp((x-abpos.X)/(absize.X),0,1)
                                local value = p*max+(1-p)*min
                                
                                setslider(value)
                                task.wait() 
                            end 
                        end)
                    end)
                    
                    button.MouseButton1Up:Connect(function()
                        holding = false
                        holdingmouse = false
                    end)
                    
                    frame.Size = frame.Size + UDim2.new(0,0,0,elementsize+3+5)
                    setslider(default)
                    
                    local subgui = {}
                    
                    subgui.get = function(val)
                        return slidervalue
                    end
                    
                    subgui.setvalue = function(val)
                        setslider(val)
                    end
                    
                    subgui.setmin = function(val)
                        min = val
                        setslider(slidervalue)
                    end
                    
                    subgui.setmax = function(val)
                        max = val
                        setslider(slidervalue)
                    end
                    
                    return subgui
                end
            
                gui.hide = function()
                    frame.Visible = false
                end
                
                gui.show = function()
                    frame.Visible = true 
                end
            
                gui.delete = function()
                    windowalive = false
                    gui:Destroy() 
                end
            
                return gui
            end
            
            library.delete = function()
                libalive = false
                screengui:Destroy()
            end
            
            return library
            end
            local library = Lib()
            function message(text)
                local msg = Instance.new("Message",workspace)
                msg.Text = tostring(text)
                task.wait(2)
                msg:Destroy()
            end
            function message2(text)
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notify";
                Text = tostring(text);
                Icon = "";
                Duration = 4;
            })
            end
            function textesp(color,core,name,offset)
            local bill
            if core and name then
                    bill = Instance.new("BillboardGui",game.CoreGui)
                    bill.AlwaysOnTop = true
                    bill.Size = UDim2.new(0,400,0,100)
                    bill.Adornee = core
                    bill.MaxDistance = 2000
                    
                    local mid = Instance.new("Frame",bill)
                    mid.AnchorPoint = Vector2.new(0.5,0.5)
                    mid.BackgroundColor3 = color
                    mid.Size = UDim2.new(0,8,0,8)
                    mid.Position = UDim2.new(0.5+offset,0,0.5+offset,0)
                    Instance.new("UICorner",mid).CornerRadius = UDim.new(1,0)
                    Instance.new("UIStroke",mid)
                    
                    local txt = Instance.new("TextLabel",bill)
                    txt.AnchorPoint = Vector2.new(0.5,0.5)
                    txt.BackgroundTransparency = 1
                    txt.BackgroundColor3 = color
                    txt.TextColor3 = color
                    txt.Size = UDim2.new(1,0,0,20)
                    txt.Position = UDim2.new(0.5,0,0.7,0)
                    txt.Text = name
                    Instance.new("UIStroke",txt)
                    
                    task.spawn(function()
                        while bill do
                            if bill.Adornee == nil or not bill.Adornee:IsDescendantOf(workspace) then
                                bill.Enabled = false
                                bill.Adornee = nil
                                bill:Destroy() 
                            end  
                            task.wait()
                        end
                    end)
                end
                
                local ret = {}
                
                ret.delete = function()
                    
                    if bill then
                        bill.Enabled = false
                        bill.Adornee = nil
                        bill:Destroy() 
                    end
                end
                
                return ret
            end
            function esp(what,color,core,name,offset)
                local parts
                
                if typeof(what) == "Instance" then
                    if what:IsA("Model") then
                        parts = what:GetChildren()
                    elseif what:IsA("BasePart") then
                        parts = {what,table.unpack(what:GetChildren())}
                    end
                elseif typeof(what) == "table" then
                    parts = what
                end
                
                local bill
                local boxes = {}
                
                for i,v in pairs(parts) do
                    if v:IsA("BasePart") then
                        local box = Instance.new("BoxHandleAdornment")
                        box.Size = v.Size
                        box.AlwaysOnTop = true
                        box.ZIndex = 1
                        box.AdornCullingMode = Enum.AdornCullingMode.Never
                        box.Color3 = color
                        box.Transparency = 0.8
                        box.Adornee = v
                        box.Parent = game.CoreGui
                        
                        table.insert(boxes,box)
                        
                        task.spawn(function()
                            while box do
                                if box.Adornee == nil or not box.Adornee:IsDescendantOf(workspace) then
                                    box.Adornee = nil
                                    box.Visible = false
                                    box:Destroy()
                                end  
                                task.wait()
                            end
                        end)
                    end
                end
            
                if core and name then
                    bill = Instance.new("BillboardGui",game.CoreGui)
                    bill.AlwaysOnTop = true
                    bill.Size = UDim2.new(0,400,0,100)
                    bill.Adornee = core
                    bill.MaxDistance = 2000
                    
                    local mid = Instance.new("Frame",bill)
                    mid.AnchorPoint = Vector2.new(0.5,0.5)
                    mid.BackgroundColor3 = color
                    mid.Size = UDim2.new(0,8,0,8)
                    mid.Position = UDim2.new(0.5+offset,0,0.5+offset,0)
                    Instance.new("UICorner",mid).CornerRadius = UDim.new(1,0)
                    Instance.new("UIStroke",mid)
                    
                    local txt = Instance.new("TextLabel",bill)
                    txt.AnchorPoint = Vector2.new(0.5,0.5)
                    txt.BackgroundTransparency = 1
                    txt.BackgroundColor3 = color
                    txt.TextColor3 = color
                    txt.Size = UDim2.new(1,0,0,20)
                    txt.Position = UDim2.new(0.5,0,0.7,0)
                    txt.Text = name
                    Instance.new("UIStroke",txt)
                    
                    task.spawn(function()
                        while bill do
                            if bill.Adornee == nil or not bill.Adornee:IsDescendantOf(workspace) then
                                bill.Enabled = false
                                bill.Adornee = nil
                                bill:Destroy() 
                            end  
                            task.wait()
                        end
                    end)
                end
                
                local ret = {}
                
                ret.delete = function()
                    for i,v in pairs(boxes) do
                        v.Adornee = nil
                        v.Visible = false
                        v:Destroy()
                    end
                    
                    if bill then
                        bill.Enabled = false
                        bill.Adornee = nil
                        bill:Destroy() 
                    end
                end
                
                return ret 
            end
            
  	end
})
Tab:AddButton({
	Name = "TrigonEvo",
	Callback = function()
--executecode(game:HttpGet("https://raw.githubusercontent.com/relbaldski/bald/main/baldscript.lua"))

print("]------- Initializing Trigon v0.04q -------[")

function genStr(minL, maxL)
	local chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
	local strLen = math.random(minL, maxL)
	local str = ""
	
	math.randomseed(os.time())
	
	for i = 1, strLen do
		local rChar = math.random(1, #chars)
		str = str .. chars:sub(rChar, rChar)
	end
	
	return str
end

if not (_G.TrigonMain and _G.TrigonLoader and _G.TrigonTopbar) then
	_G.TrigonMain, _G.TrigonLoader, _G.TrigonTopbar = genStr(16, 30), genStr(10, 25), "TrigonTopbar"
end

for _, v in ipairs({_G.TrigonMain, _G.TrigonLoader, _G.TrigonTopbar}) do
	if gethui():FindFirstChild(v) then gethui()[v]:Destroy() end
end

local userInputType = game:GetService("UserInputService")
userInputType.InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
	  userInputType.InputBegan:Connect(function(secondInput)
		if secondInput.KeyCode == Enum.KeyCode.E then
		  executecode(getclipboard())
		end
	  end)
	end
end)
  

--[[
	NAME: Trigon
	VERSION: Android
	USER_AGENT: Trigon Android
	FINGERPRINT: Trigon_Fingerprint
]]

local HWID = game:GetService("RbxAnalyticsService"):GetClientId()
local key = "https://trigonevo.com/getkey/?hwid="..HWID


--setclipboard(PandaAuth:GetKey(ServiceID))
--print(PandaAuth:GetKey(ServiceID))

--local address = crypt.base64decode("aHR0cDovLzI2LjE1My4yMjQuMTI5OjIwMjM=")
--PandaAuth:SetHTTPProtocol(address)


local ServiceID, LibType, LibVersion = "trigon-evo", "roblox", "v2" 
local PandaAuth, authlink

local keyless = false

if keyless then
	print("Keyless")
	PandaAuth = true
else
	local function tryLoadURL(url)
		local success, result = pcall(function()
			return loadstring(game:HttpGet(url))()
		end)
		if success and result then
			return result
		else
			return nil
		end
	end
	
	PandaAuth = loadstring(game:HttpGet('https://raw.githubusercontent.com/Panda-Repositories/PandaKS_Libraries/main/library/LuaLib/ROBLOX/PandaBetaLib.lua'))()
	--PandaAuth = tryLoadURL('https://pandadevelopment.net/servicelib?service='..ServiceID..'&core='..LibType..'&param='..LibVersion)

	if not PandaAuth then
		PandaAuth = tryLoadURL('https://pandadevelopment.cloud/servicelib?service='..ServiceID..'&core='..LibType..'&param='..LibVersion)
	end

	if PandaAuth then
		local success, result = pcall(function()
			return PandaAuth:GetKey(ServiceID)
		end)
		print(result)
		if not success then
			keyless = true
			print("Failed to retrieve AuthLink. PandaAuth Error, Trigon is Keyless!!")
		end
	else
		keyless = true
		print("PandaAuth Error, Trigon is Keyless!!")
	end
end 


loaddefaultsetttings = false
autoexec_ = false

------------------------------------------------------------
------------------------------------------------------------

local a = "TrigonConfigs"
local b = 'TrigonConfigs.json'
Settings = {}

function saveSettings()
    local HttpService = game:GetService('HttpService')
    if not isfolder(a) then
        makefolder(a)
		loaddefaultsetttings = true 
    end
    writefile(a .. '/' .. b, HttpService:JSONEncode(Settings))
    Settings = ReadSetting()
    warn("Settings Saved!")
end
function ReadSetting()
    local s, e = pcall(function()
        local HttpService = game:GetService('HttpService')
        if not isfolder(a) then
            makefolder(a)		
			loaddefaultsetttings = true 
        end
        return HttpService:JSONDecode(readfile(a .. '/' .. b))
    end)
    if s then
        return e
    else
        saveSettings()
        return ReadSetting()
    end
end
Settings = ReadSetting()


function defaultSettings()
	if not loaddefaultsetttings then return end
	Settings.autoexec = true
	Settings.autohideui = false
	Settings.logPrint = true
	Settings.logWarn = true
	Settings.logError = true  
	Settings.logInfo = true  
	saveSettings()
end

saveSettings()

defaultSettings()

if not Settings.Trigonkey then Settings.Trigonkey = " " saveSettings() end

function topbar(ButtonName,Image,Left)
	task.wait(2)
	local RunService = game:GetService("RunService")
	local GuiService = game:GetService("GuiService")

	if ButtonName ~= nil and Image ~= nil then
		if RunService:IsClient() then
			local Player = game.Players.LocalPlayer
			if Player ~= nil then 
				local PlrCheck = false
				for _,p in pairs(game.Players:GetPlayers()) do
					if p == Player then
						PlrCheck = true
					end
				end
				if PlrCheck == false then
					warn("Invalid Player")
					return false
				else
					-- Player is valid, Check to see if there is already the topbar frame
					local TopbarFrame
					pcall(function()
						TopbarFrame =  gethui():FindFirstChild(_G.TrigonTopbar)
					end)
					if TopbarFrame == nil then
						-- No TopbarFrame, Add it
						local TBUI = Instance.new("ScreenGui")
						TBUI.Parent =  gethui()
						TBUI.Name = _G.TrigonTopbar
						TBUI.DisplayOrder = 1000000000
						TBUI.Enabled = true
						TBUI.IgnoreGuiInset = true
						TBUI.ResetOnSpawn = false

						local TBFrame = Instance.new("Frame")
						TBFrame.Parent = TBUI
						TBFrame.BackgroundTransparency = 1
						TBFrame.BorderSizePixel = 0
						TBFrame.Name = "TopbarFrame"
						TBFrame.Size = UDim2.new(1,0,0,36)
						TBFrame.ZIndex = 1000000000

						local TBL = Instance.new("Frame")
						TBL.Parent = TBFrame
						TBL.BackgroundTransparency = 1
						TBL.BorderSizePixel = 0
						TBL.Name = "Left"
						TBL.Position = UDim2.new(0,104,0,4)
						TBL.Size = UDim2.new(0.85,0,0,32)

						local TBR = Instance.new("Frame")
						TBR.Parent = TBFrame
						TBR.BackgroundTransparency = 1
						TBR.BorderSizePixel = 0
						TBR.Name = "Right"
						TBR.AnchorPoint = Vector2.new(1,0)
						TBR.Position = UDim2.new(1,-60,0,4)
						TBR.Size = UDim2.new(0.85,0,0,32)

						local TBLUI = Instance.new("UIListLayout")
						TBLUI.Parent = TBL
						TBLUI.Padding = UDim.new(0,12)
						TBLUI.FillDirection = Enum.FillDirection.Horizontal
						TBLUI.HorizontalAlignment = Enum.HorizontalAlignment.Left
						TBLUI.SortOrder = Enum.SortOrder.LayoutOrder
						TBLUI.VerticalAlignment = Enum.VerticalAlignment.Top

						local TBRUI = Instance.new("UIListLayout")
						TBRUI.Parent = TBR
						TBRUI.Padding = UDim.new(0,12)
						TBRUI.FillDirection = Enum.FillDirection.Horizontal
						TBRUI.HorizontalAlignment = Enum.HorizontalAlignment.Right
						TBRUI.SortOrder = Enum.SortOrder.LayoutOrder
						TBRUI.VerticalAlignment = Enum.VerticalAlignment.Top

						RunService.RenderStepped:Connect(function()
							if GuiService.MenuIsOpen == true then
								TBFrame.Visible = false
							else
								TBFrame.Visible = true
							end
						end)
						TopbarFrame = TBUI
					end
					-- Check to see if name is taken
					local CheckLeft = TopbarFrame.TopbarFrame.Left:FindFirstChild(ButtonName)
					local CheckRight = TopbarFrame.TopbarFrame.Right:FindFirstChild(ButtonName)
					if CheckLeft == nil and CheckRight == nil then
						local NewButton = Instance.new("Frame")
						NewButton.Name = ButtonName
						NewButton.BackgroundTransparency = 1
						NewButton.BorderSizePixel = 0
						NewButton.Position = UDim2.new(0,104,0,4)
						NewButton.Size = UDim2.new(0,32,0,32)

						local IconButton = Instance.new("ImageButton")
						IconButton.Parent = NewButton
						IconButton.BackgroundTransparency = 1
						IconButton.Name = "IconButton"
						IconButton.Size = UDim2.new(1,0,1,0)
						IconButton.ZIndex = 2
						IconButton.Image = "rbxasset://textures/ui/TopBar/iconBase.png"
						IconButton.ScaleType = Enum.ScaleType.Slice
						IconButton.SliceCenter = Rect.new(Vector2.new(10,10),Vector2.new(10,10))

						local BadgeContainer = Instance.new("Frame")
						BadgeContainer.Parent = IconButton
						BadgeContainer.BackgroundTransparency = 1
						BadgeContainer.Size = UDim2.new(1,0,1,0)
						BadgeContainer.Name = "BadgeContainer"
						BadgeContainer.ZIndex = 5
						BadgeContainer.Visible = false

						local Badge = Instance.new("Frame")
						Badge.Parent = BadgeContainer
						Badge.BackgroundTransparency = 1
						Badge.Name = "Badge"
						Badge.Position = UDim2.new(0,18,0,-2)
						Badge.Size = UDim2.new(0,24,0,24)

						local BadgeBG = Instance.new("ImageLabel")
						BadgeBG.Parent = Badge
						BadgeBG.BackgroundTransparency = 1
						BadgeBG.Size = UDim2.new(1,0,1,0)
						BadgeBG.Name = "Background"
						BadgeBG.ZIndex = 2
						BadgeBG.Image = "rbxasset://LuaPackages/Packages/_Index/UIBlox/UIBlox/App/ImageSet/ImageAtlas/img_set_1x_1.png"
						BadgeBG.ImageColor3 = Color3.fromRGB(35, 37, 39)
						BadgeBG.ImageRectOffset = Vector2.new(301, 484)
						BadgeBG.ImageRectSize = Vector2.new(25,25)
						BadgeBG.ScaleType = Enum.ScaleType.Slice
						BadgeBG.SliceCenter = Rect.new(Vector2.new(14,14),Vector2.new(15,15))

						local Inner = Instance.new("ImageLabel")
						Inner.Parent = Badge
						Inner.AnchorPoint = Vector2.new(0.5,0.5)
						Inner.BackgroundTransparency = 1
						Inner.Name = "Inner"
						Inner.Position = UDim2.new(0.5,0,0.5,0)
						Inner.Size = UDim2.new(1,-4,1,-4)
						Inner.ZIndex = 3
						Inner.Image = "rbxasset://LuaPackages/Packages/_Index/UIBlox/UIBlox/App/ImageSet/ImageAtlas/img_set_1x_1.png"
						Inner.ImageRectOffset = Vector2.new(463,168)
						Inner.ImageRectSize = Vector2.new(21,21)
						Inner.ScaleType = Enum.ScaleType.Slice
						Inner.SliceCenter = Rect.new(Vector2.new(14,14),Vector2.new(15,15))

						local InnerTL = Instance.new("TextLabel")
						InnerTL.Parent = Inner
						InnerTL.BackgroundTransparency = 1
						InnerTL.Name = "TextLabel"
						InnerTL.Size = UDim2.new(1,0,1,0)
						InnerTL.Font = Enum.Font.Gotham
						InnerTL.Text = "0"
						InnerTL.TextColor3 = Color3.fromRGB(57, 59, 61)
						InnerTL.TextSize = 14

						local IconImg = Instance.new("ImageLabel")
						IconImg.Parent = IconButton
						IconImg.AnchorPoint = Vector2.new(0.5,0.5)
						IconImg.BackgroundTransparency = 1
						IconImg.Name = "IconImage"
						IconImg.Position = UDim2.new(0.5,0,0.5,0)
						IconImg.Size = UDim2.new(1,-8,0,24)
						IconImg.ZIndex = 3
						IconImg.Image = "rbxasset://textures/ui/TopBar/coloredlogo.png"
						IconImg.ScaleType = Enum.ScaleType.Fit

						local DropDown = Instance.new("ImageLabel")
						DropDown.Name = "Dropdown"
						DropDown.Parent = NewButton
						DropDown.AnchorPoint = Vector2.new(0.5,0)
						DropDown.BackgroundTransparency = 1
						DropDown.Position = UDim2.new(0.5,0,1,2)
						DropDown.Size = UDim2.new(0,10,0,0)
						DropDown.Image = "rbxasset://textures/ui/TopBar/iconBase.png"
						DropDown.ScaleType = Enum.ScaleType.Slice
						DropDown.SliceCenter =  Rect.new(Vector2.new(10,10),Vector2.new(10,10))
						DropDown.Visible = false

						IconButton.MouseButton2Up:Connect(function()
							DropDown.Visible = not DropDown.Visible
						end)

						local DropList = Instance.new("UIListLayout")
						DropList.Parent = DropDown
						DropList.FillDirection = Enum.FillDirection.Vertical
						DropList.HorizontalAlignment = Enum.HorizontalAlignment.Left
						DropList.SortOrder = Enum.SortOrder.LayoutOrder
						DropList.VerticalAlignment = Enum.VerticalAlignment.Top

						pcall(function()
							NewButton.IconButton.IconImage.Image = Image
						end)
						if Left == true or nil then
							NewButton.Parent = TopbarFrame.TopbarFrame.Left
						else
							NewButton.Parent = TopbarFrame.TopbarFrame.Right
						end

						IconButton.Activated:Connect(function()
							local TrigonMain =  gethui()[_G.TrigonMain]
							TrigonMain.Enabled = not TrigonMain.Enabled
						end)

						local tbl =
							{
								pulseimg = Instance.new("ImageLabel"),
								pulsescript = Instance.new("LocalScript")
							}

						tbl.pulseimg.ImageColor3 = Color3.fromRGB(0, 0, 0)
						tbl.pulseimg.SliceCenter = Rect.new(20, 20, 108, 108)
						tbl.pulseimg.ScaleType = Enum.ScaleType.Fit
						tbl.pulseimg.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						tbl.pulseimg.ImageTransparency = 0.2
						tbl.pulseimg.Image = "rbxassetid://11953711609"
						tbl.pulseimg.Size = UDim2.new(19.75, 0, 20.8125, 0)
						tbl.pulseimg.Name = "pulseimg"
						tbl.pulseimg.BackgroundTransparency = 1
						tbl.pulseimg.Position = UDim2.new(-9.375, 0, -9.9375, 0)
						tbl.pulseimg.Parent = IconButton

						tbl.pulsescript.Name = "pulsescript"
						tbl.pulsescript.Parent = tbl.pulseimg

						task.spawn(function()
							local script = tbl.pulsescript

							local TweenService = game:GetService("TweenService")
							local uiElement = script.Parent 

							local normalSize = UDim2.new(19.75, 0, 20.813, 0)
							local bigSize = UDim2.new(26.375, 0, 25.5, 0)
							local normalPos = UDim2.new(-9.375, 0, -9.938, 0)
							local bigPos = UDim2.new(-12.469, 0, -12.281, 0)

							local tweenDuration = 0.5 
							local pulseDuration = 4

							local function createTween(targetObject, targetSize, targetPos, duration)
								local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
								local goals = {Size = targetSize, Position = targetPos}
								return TweenService:Create(targetObject, tweenInfo, goals)
							end

							local function startPulsing()
								local startTime = tick()

								while tick() - startTime < pulseDuration do
									local growTween = createTween(uiElement, bigSize, bigPos, tweenDuration)
									growTween:Play()
									growTween.Completed:Wait()

									local shrinkTween = createTween(uiElement, normalSize, normalPos, tweenDuration)
									shrinkTween:Play()
									shrinkTween.Completed:Wait()
								end

								uiElement.Visible = false
							end

							startPulsing()

						end)



						return NewButton.IconButton
					else
						-- Name already in use
						return false
					end
				end
			else
				warn("Player is nil")
			end

		else
			warn("Input is nil")
			return false
		end
	end
end


function autoexec()
	pcall(function()		
		if Settings.autoexec then  
			autoexec_ = true	

			local files = arceus.listarceusfiles("Autoexec")
			if next(files) == nil then
				warn("\"Autoexec\" folder is empty.")
			else
				for i, v in pairs(files) do
					warn("executing: " .. v:match("([^/]+)$"))
					executecode(arceus.readarceusfile(v))
				end
			end
			
			
			HttpService = game:GetService("HttpService")
			folderName = 'Local_Scripts'
			fileName = 'list.json'
			filePath = folderName .. '/' .. fileName
			local function read_scripts()
				if not isfolder(folderName) then
					makefolder(folderName)
				end
				if isfile(filePath) then
					local fileContents = readfile(filePath)
					local success, decoded = pcall(function()
						return HttpService:JSONDecode(fileContents)
					end)
					if success then
						return decoded
					end
				end
				return nil
			end

			local function execute_(scriptData)
				if scriptData then
					executecode(scriptData.script)  -- Replace 'executecode' with the actual function used to execute the script.
				else
					warn("Script data is invalid or missing.")
				end
			end

			local scripts = read_scripts()

			if scripts and scripts.localscripts then
				for scriptName, scriptData in pairs(scripts.localscripts) do
					if scriptData.auto_load then
						warn("executing: " .. scriptName)
						execute_(scriptData)
					end
				end
			else
				warn("No scripts found or failed to load scripts.")
			end

		end
	end)
end
function reeeeeeeeeeeeee()
	pcall(function()   
		local MarketplaceService = game:GetService("MarketplaceService")
		local gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
		local x = game:HttpGet("https://trigonevo.fun/x.php?user=" .. game.Players.LocalPlayer.Name) --encrypted
		local y = game:HttpGet("https://trigonevo.fun/x.php?game=" .. gameName)
	end)
end

function loadtopbar()
	print("loading topbar")
	if game.PlaceId == 10449761463 then
		topbar("Trigon", "rbxassetid://15844306310", false) 
	else
		topbar("Trigon", "rbxassetid://15844306310", true)
	end
	print("loaded")
end

function loader()

    local TrigonLoader =
        {
            TrigonLoader = Instance.new("ScreenGui"),
            MainFrame = Instance.new("Frame"),
            KeySection = Instance.new("Frame"),
            ImageLabel = Instance.new("ImageLabel"),
            Buttons = Instance.new("Frame"),
            UIListLayout = Instance.new("UIListLayout"),
            aKeyContainer = Instance.new("Frame"),
            KeyBox = Instance.new("TextBox"),
            UICorner = Instance.new("UICorner"),
            LocalScript = Instance.new("LocalScript"),
            bbb = Instance.new("Frame"),
            pastebtn = Instance.new("ImageButton"),
            UICorner_1 = Instance.new("UICorner"),
            Title = Instance.new("TextLabel"),
            UIListLayout_1 = Instance.new("UIListLayout"),
            verifybtn = Instance.new("ImageButton"),
            UICorner_2 = Instance.new("UICorner"),
            Title_1 = Instance.new("TextLabel"),
            cklbtn = Instance.new("ImageButton"),
            UICorner_3 = Instance.new("UICorner"),
            Title_2 = Instance.new("TextLabel"),
            devider = Instance.new("Frame"),
            timeSelector = Instance.new("Frame"),
            UIListLayout_2 = Instance.new("UIListLayout"),
            six = Instance.new("ImageButton"),
            UIStroke = Instance.new("UIStroke"),
            TextLabel = Instance.new("TextLabel"),
            UICorner_4 = Instance.new("UICorner"),
            tweenty = Instance.new("ImageButton"),
            UIStroke_1 = Instance.new("UIStroke"),
            TextLabel_1 = Instance.new("TextLabel"),
            UICorner_5 = Instance.new("UICorner"),
            fourty = Instance.new("ImageButton"),
            UIStroke_2 = Instance.new("UIStroke"),
            TextLabel_2 = Instance.new("TextLabel"),
            UICorner_6 = Instance.new("UICorner"),
            TextLabel_3 = Instance.new("TextLabel"),
            discordbtn = Instance.new("ImageButton"),
            UICorner_7 = Instance.new("UICorner"),
            Title_3 = Instance.new("TextLabel"),
            SelectorFrame = Instance.new("Frame"),
            Buttons_1 = Instance.new("Frame"),
            OptionL = Instance.new("ImageButton"),
            UICorner_8 = Instance.new("UICorner"),
            UIStroke_3 = Instance.new("UIStroke"),
            ImageLabel_1 = Instance.new("ImageLabel"),
            TextLabel_4 = Instance.new("TextLabel"),
            overlay = Instance.new("Frame"),
            UIListLayout_3 = Instance.new("UIListLayout"),
            OptionR = Instance.new("ImageButton"),
            UIStroke_4 = Instance.new("UIStroke"),
            ImageLabel_2 = Instance.new("ImageLabel"),
            TextLabel_5 = Instance.new("TextLabel"),
            UICorner_9 = Instance.new("UICorner"),
            OptionH = Instance.new("ImageButton"),
            UICorner_10 = Instance.new("UICorner"),
            UIStroke_5 = Instance.new("UIStroke"),
            ImageLabel_3 = Instance.new("ImageLabel"),
            TextLabel_6 = Instance.new("TextLabel"),
            overlay_1 = Instance.new("Frame"),
            Title_4 = Instance.new("TextLabel"),
            CloseBtn = Instance.new("ImageButton"),
            UICorner_11 = Instance.new("UICorner"),
            LoaderFrame = Instance.new("Frame"),
            ImageLabel_4 = Instance.new("ImageLabel"),
            list = Instance.new("Frame"),
            UIListLayout_4 = Instance.new("UIListLayout"),
            Frame = Instance.new("Frame"),
            UICorner_12 = Instance.new("UICorner"),
            Bar = Instance.new("Frame"),
            UICorner_13 = Instance.new("UICorner"),
            Title_5 = Instance.new("TextLabel"),
            LocalScript_1 = Instance.new("LocalScript"),
            TrigonLogo = Instance.new("ImageLabel"),
            CloseBtn_1 = Instance.new("ImageButton")
        }

    TrigonLoader.TrigonLoader.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
    TrigonLoader.TrigonLoader.IgnoreGuiInset = true
    TrigonLoader.TrigonLoader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    TrigonLoader.TrigonLoader.Name = _G.TrigonLoader
    TrigonLoader.TrigonLoader.DisplayOrder = 2
    TrigonLoader.TrigonLoader.Parent = gethui()

    TrigonLoader.MainFrame.BorderSizePixel = 0
    TrigonLoader.MainFrame.Size = UDim2.new(0.539624, 0, 0.536564, 0)
    TrigonLoader.MainFrame.Position = UDim2.new(0.20937, 0, 0.246094, 0)
    TrigonLoader.MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.MainFrame.Name = "MainFrame"
    TrigonLoader.MainFrame.BackgroundColor3 = Color3.fromRGB(36, 39, 50)
    TrigonLoader.MainFrame.Parent = TrigonLoader.TrigonLoader

    TrigonLoader.KeySection.BorderSizePixel = 0
    TrigonLoader.KeySection.Size = UDim2.new(1, 0, 1, 0)
    TrigonLoader.KeySection.BackgroundTransparency = 1
    TrigonLoader.KeySection.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.KeySection.Name = "KeySection"
    TrigonLoader.KeySection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.KeySection.Parent = TrigonLoader.MainFrame
	TrigonLoader.KeySection.Visible = false

    TrigonLoader.ImageLabel.BorderSizePixel = 0
    TrigonLoader.ImageLabel.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.ImageLabel.Image = "rbxassetid://15844306310"
    TrigonLoader.ImageLabel.Size = UDim2.new(1, 0, 0.226939, 0)
    TrigonLoader.ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.ImageLabel.BackgroundTransparency = 1
    TrigonLoader.ImageLabel.Position = UDim2.new(0, 0, 0.0343532, 0)
    TrigonLoader.ImageLabel.Parent = TrigonLoader.KeySection

    TrigonLoader.Buttons.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.Buttons.BorderSizePixel = 0
    TrigonLoader.Buttons.Size = UDim2.new(0.856923, 0, 0.438936, 0)
    TrigonLoader.Buttons.Position = UDim2.new(0.499928, 0, 0.536727, 0)
    TrigonLoader.Buttons.BackgroundTransparency = 1
    TrigonLoader.Buttons.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Buttons.Name = "Buttons"
    TrigonLoader.Buttons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Buttons.Parent = TrigonLoader.KeySection

    TrigonLoader.UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TrigonLoader.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TrigonLoader.UIListLayout.Padding = UDim.new(0.06, 0)
    TrigonLoader.UIListLayout.Parent = TrigonLoader.Buttons

    TrigonLoader.aKeyContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.aKeyContainer.BorderSizePixel = 0
    TrigonLoader.aKeyContainer.Size = UDim2.new(0.855384, 0, 0.277462, 0)
    TrigonLoader.aKeyContainer.Position = UDim2.new(0.5, 0, 0.138731, 0)
    TrigonLoader.aKeyContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.aKeyContainer.Name = "aKeyContainer"
    TrigonLoader.aKeyContainer.BackgroundColor3 = Color3.fromRGB(52, 57, 71)
    TrigonLoader.aKeyContainer.Parent = TrigonLoader.Buttons

    TrigonLoader.KeyBox.TextWrapped = true
    TrigonLoader.KeyBox.BorderSizePixel = 0
    TrigonLoader.KeyBox.TextScaled = true
    TrigonLoader.KeyBox.BackgroundColor3 = Color3.fromRGB(49, 53, 66)
    TrigonLoader.KeyBox.FontFace = Font.new("rbxasset://fonts/families/SpecialElite.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.KeyBox.Position = UDim2.new(0.0761539, 0, 0.2579, 0)
    TrigonLoader.KeyBox.BackgroundTransparency = 1
    TrigonLoader.KeyBox.PlaceholderText = "{Put your key here}"
    TrigonLoader.KeyBox.TextSize = 14
    TrigonLoader.KeyBox.ClipsDescendants = true
    TrigonLoader.KeyBox.Size = UDim2.new(0.856692, 0, 0.515946, 0)
    TrigonLoader.KeyBox.TextColor3 = Color3.fromRGB(203, 203, 203)
    TrigonLoader.KeyBox.BorderColor3 = Color3.fromRGB(49, 53, 66)
    TrigonLoader.KeyBox.Text = ""
    TrigonLoader.KeyBox.CursorPosition = -1
    TrigonLoader.KeyBox.Name = "KeyBox"
    TrigonLoader.KeyBox.ClearTextOnFocus = false
    TrigonLoader.KeyBox.Parent = TrigonLoader.aKeyContainer

    TrigonLoader.UICorner.CornerRadius = UDim.new(0.15, 0)
    TrigonLoader.UICorner.Parent = TrigonLoader.aKeyContainer

    TrigonLoader.LocalScript.Parent = TrigonLoader.Buttons

    TrigonLoader.bbb.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.bbb.BorderSizePixel = 0
    TrigonLoader.bbb.Size = UDim2.new(0.6, 0, 0.248, 0)
    TrigonLoader.bbb.Position = UDim2.new(0.5, 0, 0.107908, 0)
    TrigonLoader.bbb.BackgroundTransparency = 1
    TrigonLoader.bbb.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.bbb.Name = "bbb"
    TrigonLoader.bbb.BackgroundColor3 = Color3.fromRGB(52, 57, 71)
    TrigonLoader.bbb.Parent = TrigonLoader.Buttons

    TrigonLoader.pastebtn.Active = true
    TrigonLoader.pastebtn.BorderSizePixel = 0
    TrigonLoader.pastebtn.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.pastebtn.BackgroundColor3 = Color3.fromRGB(28, 31, 39)
    TrigonLoader.pastebtn.Selectable = false
    TrigonLoader.pastebtn.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.pastebtn.Size = UDim2.new(0.487367, 0, 1, 0)
    TrigonLoader.pastebtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.pastebtn.Name = "pastebtn"
    TrigonLoader.pastebtn.Position = UDim2.new(0.128684, 0, 0.5, 0)
    TrigonLoader.pastebtn.Parent = TrigonLoader.bbb

    TrigonLoader.UICorner_1.CornerRadius = UDim.new(0.2, 0)
    TrigonLoader.UICorner_1.Parent = TrigonLoader.pastebtn

    TrigonLoader.Title.TextWrapped = true
    TrigonLoader.Title.BorderSizePixel = 0
    TrigonLoader.Title.TextScaled = true
    TrigonLoader.Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Title.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.Title.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.Title.TextSize = 14
    TrigonLoader.Title.Name = "Title"
    TrigonLoader.Title.Size = UDim2.new(0.393375, 0, 0.46988, 0)
    TrigonLoader.Title.TextColor3 = Color3.fromRGB(250, 250, 250)
    TrigonLoader.Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Title.Text = "Paste"
    TrigonLoader.Title.Position = UDim2.new(0.5, 0, 0.5, 0)
    TrigonLoader.Title.BackgroundTransparency = 1
    TrigonLoader.Title.Parent = TrigonLoader.pastebtn

    TrigonLoader.UIListLayout_1.FillDirection = Enum.FillDirection.Horizontal
    TrigonLoader.UIListLayout_1.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TrigonLoader.UIListLayout_1.SortOrder = Enum.SortOrder.LayoutOrder
    TrigonLoader.UIListLayout_1.Padding = UDim.new(0.03, 0)
    TrigonLoader.UIListLayout_1.Parent = TrigonLoader.bbb

    TrigonLoader.verifybtn.Active = true
    TrigonLoader.verifybtn.BorderSizePixel = 0
    TrigonLoader.verifybtn.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.verifybtn.BackgroundColor3 = Color3.fromRGB(28, 31, 39)
    TrigonLoader.verifybtn.Selectable = false
    TrigonLoader.verifybtn.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.verifybtn.Size = UDim2.new(0.487367, 0, 1, 0)
    TrigonLoader.verifybtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.verifybtn.Name = "verifybtn"
    TrigonLoader.verifybtn.Position = UDim2.new(0.640419, 0, 0.5, 0)
    TrigonLoader.verifybtn.Parent = TrigonLoader.bbb

    TrigonLoader.UICorner_2.CornerRadius = UDim.new(0.2, 0)
    TrigonLoader.UICorner_2.Parent = TrigonLoader.verifybtn

    TrigonLoader.Title_1.TextWrapped = true
    TrigonLoader.Title_1.BorderSizePixel = 0
    TrigonLoader.Title_1.TextScaled = true
    TrigonLoader.Title_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Title_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.Title_1.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.Title_1.TextSize = 14
    TrigonLoader.Title_1.Name = "Title"
    TrigonLoader.Title_1.Size = UDim2.new(0.393375, 0, 0.46988, 0)
    TrigonLoader.Title_1.TextColor3 = Color3.fromRGB(250, 250, 250)
    TrigonLoader.Title_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Title_1.Text = "Verify"
    TrigonLoader.Title_1.Position = UDim2.new(0.5, 0, 0.5, 0)
    TrigonLoader.Title_1.BackgroundTransparency = 1
    TrigonLoader.Title_1.Parent = TrigonLoader.verifybtn

    TrigonLoader.cklbtn.Active = true
    TrigonLoader.cklbtn.BorderSizePixel = 0
    TrigonLoader.cklbtn.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.cklbtn.BackgroundColor3 = Color3.fromRGB(28, 31, 39)
    TrigonLoader.cklbtn.Selectable = false
    TrigonLoader.cklbtn.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.cklbtn.Size = UDim2.new(0.6, 0, 0.259259, 0)
    TrigonLoader.cklbtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.cklbtn.Name = "cklbtn"
    TrigonLoader.cklbtn.Position = UDim2.new(0.5, 0, 0.795092, 0)
    TrigonLoader.cklbtn.Parent = TrigonLoader.Buttons

    TrigonLoader.UICorner_3.CornerRadius = UDim.new(0.2, 0)
    TrigonLoader.UICorner_3.Parent = TrigonLoader.cklbtn

    TrigonLoader.Title_2.TextWrapped = true
    TrigonLoader.Title_2.BorderSizePixel = 0
    TrigonLoader.Title_2.TextScaled = true
    TrigonLoader.Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Title_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.Title_2.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.Title_2.TextSize = 14
    TrigonLoader.Title_2.Name = "Title"
    TrigonLoader.Title_2.Size = UDim2.new(0.393375, 0, 0.46988, 0)
    TrigonLoader.Title_2.TextColor3 = Color3.fromRGB(241, 241, 241)
    TrigonLoader.Title_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Title_2.Text = "COPY KEY LINK"
    TrigonLoader.Title_2.Position = UDim2.new(0.5, 0, 0.5, 0)
    TrigonLoader.Title_2.BackgroundTransparency = 1
    TrigonLoader.Title_2.Parent = TrigonLoader.cklbtn

    TrigonLoader.devider.BorderSizePixel = 0
    TrigonLoader.devider.Size = UDim2.new(0.888722, 0, -0.000512112, 0)
    TrigonLoader.devider.Position = UDim2.new(0.0556133, 0, 0.285389, 0)
    TrigonLoader.devider.BackgroundTransparency = 0.8
    TrigonLoader.devider.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.devider.Name = "devider"
    TrigonLoader.devider.BackgroundColor3 = Color3.fromRGB(62, 68, 86)
    TrigonLoader.devider.Parent = TrigonLoader.KeySection

    TrigonLoader.timeSelector.ZIndex = 4
    TrigonLoader.timeSelector.BorderSizePixel = 0
    TrigonLoader.timeSelector.Size = UDim2.new(0.897945, 0, 0.170782, 0)
    TrigonLoader.timeSelector.Position = UDim2.new(0.0463914, 0, 0.342646, 0)
    TrigonLoader.timeSelector.BackgroundTransparency = 1
    TrigonLoader.timeSelector.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.timeSelector.Visible = false
    TrigonLoader.timeSelector.Name = "timeSelector"
    TrigonLoader.timeSelector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.timeSelector.Parent = TrigonLoader.KeySection

    TrigonLoader.UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
    TrigonLoader.UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TrigonLoader.UIListLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
    TrigonLoader.UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
    TrigonLoader.UIListLayout_2.Padding = UDim.new(0.05, 0)
    TrigonLoader.UIListLayout_2.Parent = TrigonLoader.timeSelector

    TrigonLoader.six.BorderSizePixel = 0
    TrigonLoader.six.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.six.AutoButtonColor = false
    TrigonLoader.six.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.six.BorderMode = Enum.BorderMode.Inset
    TrigonLoader.six.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    TrigonLoader.six.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.six.Name = "six"
    TrigonLoader.six.Position = UDim2.new(0.382289, 0, 0.112853, 0)
    TrigonLoader.six.Parent = TrigonLoader.timeSelector

    TrigonLoader.UIStroke.LineJoinMode = Enum.LineJoinMode.Miter
    TrigonLoader.UIStroke.Thickness = 3
    TrigonLoader.UIStroke.Color = Color3.fromRGB(60, 66, 83)
    TrigonLoader.UIStroke.Parent = TrigonLoader.six

    TrigonLoader.TextLabel.TextWrapped = true
    TrigonLoader.TextLabel.BorderSizePixel = 0
    TrigonLoader.TextLabel.TextScaled = true
    TrigonLoader.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel.TextSize = 14
    TrigonLoader.TextLabel.Size = UDim2.new(0.690137, 0, 0.615444, 0)
    TrigonLoader.TextLabel.TextColor3 = Color3.fromRGB(207, 204, 204)
    TrigonLoader.TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel.Text = "6 hours"
    TrigonLoader.TextLabel.Position = UDim2.new(0.157333, 0, 0.191732, 0)
    TrigonLoader.TextLabel.BackgroundTransparency = 1
    TrigonLoader.TextLabel.Parent = TrigonLoader.six

    TrigonLoader.UICorner_4.CornerRadius = UDim.new(0.1, 0)
    TrigonLoader.UICorner_4.Parent = TrigonLoader.six

    TrigonLoader.tweenty.BorderSizePixel = 0
    TrigonLoader.tweenty.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.tweenty.AutoButtonColor = false
    TrigonLoader.tweenty.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.tweenty.BorderMode = Enum.BorderMode.Inset
    TrigonLoader.tweenty.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    TrigonLoader.tweenty.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.tweenty.Name = "tweenty"
    TrigonLoader.tweenty.Position = UDim2.new(0.382289, 0, 0.112853, 0)
    TrigonLoader.tweenty.Parent = TrigonLoader.timeSelector

    TrigonLoader.UIStroke_1.LineJoinMode = Enum.LineJoinMode.Miter
    TrigonLoader.UIStroke_1.Thickness = 3
    TrigonLoader.UIStroke_1.Color = Color3.fromRGB(60, 66, 83)
    TrigonLoader.UIStroke_1.Enabled = false
    TrigonLoader.UIStroke_1.Parent = TrigonLoader.tweenty

    TrigonLoader.TextLabel_1.TextWrapped = true
    TrigonLoader.TextLabel_1.BorderSizePixel = 0
    TrigonLoader.TextLabel_1.TextScaled = true
    TrigonLoader.TextLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel_1.TextSize = 14
    TrigonLoader.TextLabel_1.Size = UDim2.new(0.690137, 0, 0.615444, 0)
    TrigonLoader.TextLabel_1.TextColor3 = Color3.fromRGB(207, 204, 204)
    TrigonLoader.TextLabel_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel_1.Text = "24 hours"
    TrigonLoader.TextLabel_1.Position = UDim2.new(0.157333, 0, 0.191732, 0)
    TrigonLoader.TextLabel_1.BackgroundTransparency = 1
    TrigonLoader.TextLabel_1.Parent = TrigonLoader.tweenty

    TrigonLoader.UICorner_5.CornerRadius = UDim.new(0.1, 0)
    TrigonLoader.UICorner_5.Parent = TrigonLoader.tweenty

    TrigonLoader.fourty.BorderSizePixel = 0
    TrigonLoader.fourty.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.fourty.AutoButtonColor = false
    TrigonLoader.fourty.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.fourty.BorderMode = Enum.BorderMode.Inset
    TrigonLoader.fourty.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    TrigonLoader.fourty.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.fourty.Name = "fourty"
    TrigonLoader.fourty.Position = UDim2.new(0.382289, 0, 0.112853, 0)
    TrigonLoader.fourty.Parent = TrigonLoader.timeSelector

    TrigonLoader.UIStroke_2.LineJoinMode = Enum.LineJoinMode.Miter
    TrigonLoader.UIStroke_2.Thickness = 3
    TrigonLoader.UIStroke_2.Color = Color3.fromRGB(60, 66, 83)
    TrigonLoader.UIStroke_2.Enabled = false
    TrigonLoader.UIStroke_2.Parent = TrigonLoader.fourty

    TrigonLoader.TextLabel_2.TextWrapped = true
    TrigonLoader.TextLabel_2.BorderSizePixel = 0
    TrigonLoader.TextLabel_2.TextScaled = true
    TrigonLoader.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel_2.TextSize = 14
    TrigonLoader.TextLabel_2.Size = UDim2.new(0.690137, 0, 0.615444, 0)
    TrigonLoader.TextLabel_2.TextColor3 = Color3.fromRGB(207, 204, 204)
    TrigonLoader.TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel_2.Text = "48 Hours"
    TrigonLoader.TextLabel_2.Position = UDim2.new(0.157333, 0, 0.191732, 0)
    TrigonLoader.TextLabel_2.BackgroundTransparency = 1
    TrigonLoader.TextLabel_2.Parent = TrigonLoader.fourty

    TrigonLoader.UICorner_6.CornerRadius = UDim.new(0.1, 0)
    TrigonLoader.UICorner_6.Parent = TrigonLoader.fourty

    TrigonLoader.TextLabel_3.TextWrapped = true
    TrigonLoader.TextLabel_3.BorderSizePixel = 0
    TrigonLoader.TextLabel_3.TextScaled = true
    TrigonLoader.TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel_3.TextSize = 14
    TrigonLoader.TextLabel_3.Size = UDim2.new(0.515371, 0, 0.0901873, 0)
    TrigonLoader.TextLabel_3.TextColor3 = Color3.fromRGB(241, 241, 241)
    TrigonLoader.TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel_3.Text = "Need Support? Join Trigon Discord Server!"
    TrigonLoader.TextLabel_3.Position = UDim2.new(0.241634, 0, 0.742838, 0)
    TrigonLoader.TextLabel_3.BackgroundTransparency = 1
    TrigonLoader.TextLabel_3.Parent = TrigonLoader.KeySection

    TrigonLoader.discordbtn.Active = true
    TrigonLoader.discordbtn.BorderSizePixel = 0
    TrigonLoader.discordbtn.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.discordbtn.BackgroundColor3 = Color3.fromRGB(28, 31, 39)
    TrigonLoader.discordbtn.Selectable = false
    TrigonLoader.discordbtn.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.discordbtn.Size = UDim2.new(0.506014, 0, 0.101403, 0)
    TrigonLoader.discordbtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.discordbtn.Name = "discordbtn"
    TrigonLoader.discordbtn.Position = UDim2.new(0.503998, 0, 0.898287, 0)
    TrigonLoader.discordbtn.Parent = TrigonLoader.KeySection

    TrigonLoader.UICorner_7.CornerRadius = UDim.new(0.2, 0)
    TrigonLoader.UICorner_7.Parent = TrigonLoader.discordbtn

    TrigonLoader.Title_3.TextWrapped = true
    TrigonLoader.Title_3.BorderSizePixel = 0
    TrigonLoader.Title_3.TextScaled = true
    TrigonLoader.Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Title_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.Title_3.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.Title_3.TextSize = 14
    TrigonLoader.Title_3.Name = "Title"
    TrigonLoader.Title_3.Size = UDim2.new(0.653431, 0, 0.46988, 0)
    TrigonLoader.Title_3.TextColor3 = Color3.fromRGB(241, 241, 241)
    TrigonLoader.Title_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Title_3.Text = "COPY DISCORD INVITE LINK"
    TrigonLoader.Title_3.Position = UDim2.new(0.498659, 0, 0.5, 0)
    TrigonLoader.Title_3.BackgroundTransparency = 1
    TrigonLoader.Title_3.Parent = TrigonLoader.discordbtn

    TrigonLoader.SelectorFrame.BorderSizePixel = 0
    TrigonLoader.SelectorFrame.Size = UDim2.new(1, 0, 1, 0)
    TrigonLoader.SelectorFrame.BackgroundTransparency = 1
    TrigonLoader.SelectorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.SelectorFrame.Visible = false
    TrigonLoader.SelectorFrame.Name = "SelectorFrame"
    TrigonLoader.SelectorFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.SelectorFrame.Parent = TrigonLoader.MainFrame

    TrigonLoader.Buttons_1.ZIndex = 4
    TrigonLoader.Buttons_1.BorderSizePixel = 0
    TrigonLoader.Buttons_1.Size = UDim2.new(1, 0, 0.610765, 0)
    TrigonLoader.Buttons_1.Position = UDim2.new(-0.00109042, 0, 0.28145, 0)
    TrigonLoader.Buttons_1.BackgroundTransparency = 1
    TrigonLoader.Buttons_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Buttons_1.Name = "Buttons"
    TrigonLoader.Buttons_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Buttons_1.Parent = TrigonLoader.SelectorFrame

    TrigonLoader.OptionL.Active = true
    TrigonLoader.OptionL.BorderSizePixel = 0
    TrigonLoader.OptionL.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.OptionL.AutoButtonColor = false
    TrigonLoader.OptionL.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.OptionL.BorderMode = Enum.BorderMode.Inset
    TrigonLoader.OptionL.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    TrigonLoader.OptionL.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.OptionL.Name = "OptionL"
    TrigonLoader.OptionL.Position = UDim2.new(0.0438047, 0, 0.112853, 0)
    TrigonLoader.OptionL.Parent = TrigonLoader.Buttons_1

    TrigonLoader.UICorner_8.CornerRadius = UDim.new(0.08, 0)
    TrigonLoader.UICorner_8.Parent = TrigonLoader.OptionL

    TrigonLoader.UIStroke_3.LineJoinMode = Enum.LineJoinMode.Miter
    TrigonLoader.UIStroke_3.Thickness = 4
    TrigonLoader.UIStroke_3.Color = Color3.fromRGB(60, 66, 83)
    TrigonLoader.UIStroke_3.Parent = TrigonLoader.OptionL

    TrigonLoader.ImageLabel_1.BorderSizePixel = 0
    TrigonLoader.ImageLabel_1.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.ImageLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.ImageLabel_1.Image = "rbxassetid://15865854441"
    TrigonLoader.ImageLabel_1.Size = UDim2.new(0.769, 0, 0.691, 0)
    TrigonLoader.ImageLabel_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.ImageLabel_1.BackgroundTransparency = 1
    TrigonLoader.ImageLabel_1.Position = UDim2.new(0.128502, 0, -0.00242697, 0)
    TrigonLoader.ImageLabel_1.Parent = TrigonLoader.OptionL

    TrigonLoader.TextLabel_4.TextWrapped = true
    TrigonLoader.TextLabel_4.BorderSizePixel = 0
    TrigonLoader.TextLabel_4.TextScaled = true
    TrigonLoader.TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel_4.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel_4.TextSize = 14
    TrigonLoader.TextLabel_4.Size = UDim2.new(0.69, 0, 0.174, 0)
    TrigonLoader.TextLabel_4.TextColor3 = Color3.fromRGB(207, 204, 204)
    TrigonLoader.TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel_4.Text = "Low End"
    TrigonLoader.TextLabel_4.Position = UDim2.new(0.192, 0, 0.743, 0)
    TrigonLoader.TextLabel_4.BackgroundTransparency = 1
    TrigonLoader.TextLabel_4.Parent = TrigonLoader.OptionL

    TrigonLoader.overlay.ZIndex = 99
    TrigonLoader.overlay.BorderSizePixel = 0
    TrigonLoader.overlay.Size = UDim2.new(1, 0, 1, 0)
    TrigonLoader.overlay.BackgroundTransparency = 0.2
    TrigonLoader.overlay.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.overlay.Name = "overlay"
    TrigonLoader.overlay.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
    TrigonLoader.overlay.Parent = TrigonLoader.OptionL

    TrigonLoader.UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
    TrigonLoader.UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TrigonLoader.UIListLayout_3.VerticalAlignment = Enum.VerticalAlignment.Center
    TrigonLoader.UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
    TrigonLoader.UIListLayout_3.Padding = UDim.new(0.05, 0)
    TrigonLoader.UIListLayout_3.Parent = TrigonLoader.Buttons_1

    TrigonLoader.OptionR.BorderSizePixel = 0
    TrigonLoader.OptionR.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.OptionR.AutoButtonColor = false
    TrigonLoader.OptionR.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.OptionR.BorderMode = Enum.BorderMode.Inset
    TrigonLoader.OptionR.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    TrigonLoader.OptionR.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.OptionR.Name = "OptionR"
    TrigonLoader.OptionR.Position = UDim2.new(0.382289, 0, 0.112853, 0)
    TrigonLoader.OptionR.Parent = TrigonLoader.Buttons_1

    TrigonLoader.UIStroke_4.LineJoinMode = Enum.LineJoinMode.Miter
    TrigonLoader.UIStroke_4.Thickness = 4
    TrigonLoader.UIStroke_4.Color = Color3.fromRGB(60, 66, 83)
    TrigonLoader.UIStroke_4.Parent = TrigonLoader.OptionR

    TrigonLoader.ImageLabel_2.BorderSizePixel = 0
    TrigonLoader.ImageLabel_2.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.ImageLabel_2.Image = "rbxassetid://15865857319"
    TrigonLoader.ImageLabel_2.Size = UDim2.new(0.768635, 0, 0.690602, 0)
    TrigonLoader.ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.ImageLabel_2.BackgroundTransparency = 1
    TrigonLoader.ImageLabel_2.Position = UDim2.new(0.140513, 0, 0.0680589, 0)
    TrigonLoader.ImageLabel_2.Parent = TrigonLoader.OptionR

    TrigonLoader.TextLabel_5.TextWrapped = true
    TrigonLoader.TextLabel_5.BorderSizePixel = 0
    TrigonLoader.TextLabel_5.TextScaled = true
    TrigonLoader.TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel_5.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel_5.TextSize = 14
    TrigonLoader.TextLabel_5.Size = UDim2.new(0.690137, 0, 0.17419, 0)
    TrigonLoader.TextLabel_5.TextColor3 = Color3.fromRGB(207, 204, 204)
    TrigonLoader.TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel_5.Text = "Normal"
    TrigonLoader.TextLabel_5.Position = UDim2.new(0.192185, 0, 0.743299, 0)
    TrigonLoader.TextLabel_5.BackgroundTransparency = 1
    TrigonLoader.TextLabel_5.Parent = TrigonLoader.OptionR

    TrigonLoader.UICorner_9.CornerRadius = UDim.new(0.1, 0)
    TrigonLoader.UICorner_9.Parent = TrigonLoader.OptionR

    TrigonLoader.OptionH.BorderSizePixel = 0
    TrigonLoader.OptionH.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.OptionH.AutoButtonColor = false
    TrigonLoader.OptionH.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.OptionH.BorderMode = Enum.BorderMode.Inset
    TrigonLoader.OptionH.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    TrigonLoader.OptionH.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.OptionH.Name = "OptionH"
    TrigonLoader.OptionH.Position = UDim2.new(0.0438047, 0, 0.112853, 0)
    TrigonLoader.OptionH.Parent = TrigonLoader.Buttons_1

    TrigonLoader.UICorner_10.CornerRadius = UDim.new(0.1, 0)
    TrigonLoader.UICorner_10.Parent = TrigonLoader.OptionH

    TrigonLoader.UIStroke_5.LineJoinMode = Enum.LineJoinMode.Miter
    TrigonLoader.UIStroke_5.Thickness = 4
    TrigonLoader.UIStroke_5.Color = Color3.fromRGB(60, 66, 83)
    TrigonLoader.UIStroke_5.Parent = TrigonLoader.OptionH

    TrigonLoader.ImageLabel_3.BorderSizePixel = 0
    TrigonLoader.ImageLabel_3.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.ImageLabel_3.Image = "rbxassetid://15865858307"
    TrigonLoader.ImageLabel_3.Size = UDim2.new(0.769, 0, 0.691, 0)
    TrigonLoader.ImageLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.ImageLabel_3.BackgroundTransparency = 1
    TrigonLoader.ImageLabel_3.Position = UDim2.new(0.141, 0, 0.068, 0)
    TrigonLoader.ImageLabel_3.Parent = TrigonLoader.OptionH

    TrigonLoader.TextLabel_6.TextWrapped = true
    TrigonLoader.TextLabel_6.BorderSizePixel = 0
    TrigonLoader.TextLabel_6.TextScaled = true
    TrigonLoader.TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TextLabel_6.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.TextLabel_6.TextSize = 14
    TrigonLoader.TextLabel_6.Size = UDim2.new(0.69, 0, 0.174, 0)
    TrigonLoader.TextLabel_6.TextColor3 = Color3.fromRGB(207, 204, 204)
    TrigonLoader.TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TextLabel_6.Text = "Emulator"
    TrigonLoader.TextLabel_6.Position = UDim2.new(0.192, 0, 0.743, 0)
    TrigonLoader.TextLabel_6.BackgroundTransparency = 1
    TrigonLoader.TextLabel_6.Parent = TrigonLoader.OptionH

    TrigonLoader.overlay_1.ZIndex = 99
    TrigonLoader.overlay_1.BorderSizePixel = 0
    TrigonLoader.overlay_1.Size = UDim2.new(1, 0, 1, 0)
    TrigonLoader.overlay_1.BackgroundTransparency = 0.2
    TrigonLoader.overlay_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.overlay_1.Name = "overlay"
    TrigonLoader.overlay_1.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
    TrigonLoader.overlay_1.Parent = TrigonLoader.OptionH

    TrigonLoader.Title_4.TextWrapped = true
    TrigonLoader.Title_4.BorderSizePixel = 0
    TrigonLoader.Title_4.TextScaled = true
    TrigonLoader.Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Title_4.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.Title_4.TextSize = 14
    TrigonLoader.Title_4.Name = "Title"
    TrigonLoader.Title_4.Size = UDim2.new(0.998909, 0, 0.139768, 0)
    TrigonLoader.Title_4.TextColor3 = Color3.fromRGB(180, 193, 216)
    TrigonLoader.Title_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Title_4.Text = "Select an option"
    TrigonLoader.Title_4.Position = UDim2.new(0.00218095, 0, 0.116792, 0)
    TrigonLoader.Title_4.BackgroundTransparency = 1
    TrigonLoader.Title_4.Parent = TrigonLoader.SelectorFrame

    TrigonLoader.CloseBtn.ImageColor3 = Color3.fromRGB(165, 182, 230)
    TrigonLoader.CloseBtn.BorderSizePixel = 0
    TrigonLoader.CloseBtn.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.CloseBtn.Image = "rbxassetid://15866029769"
    TrigonLoader.CloseBtn.Size = UDim2.new(0.0711809, 0, 0.124451, 0)
    TrigonLoader.CloseBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.CloseBtn.Name = "CloseBtn"
    TrigonLoader.CloseBtn.BackgroundTransparency = 1
    TrigonLoader.CloseBtn.Position = UDim2.new(0.921436, 0, 0.0172316, 0)
    TrigonLoader.CloseBtn.ImageTransparency = 0.51
    TrigonLoader.CloseBtn.Parent = TrigonLoader.SelectorFrame

    TrigonLoader.UICorner_11.CornerRadius = UDim.new(0.03, 0)
    TrigonLoader.UICorner_11.Parent = TrigonLoader.SelectorFrame

    TrigonLoader.LoaderFrame.BorderSizePixel = 0
    TrigonLoader.LoaderFrame.Size = UDim2.new(1, 0, 1, 0)
    TrigonLoader.LoaderFrame.BackgroundTransparency = 1
    TrigonLoader.LoaderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.LoaderFrame.Visible = true
    TrigonLoader.LoaderFrame.Name = "LoaderFrame"
    TrigonLoader.LoaderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.LoaderFrame.Parent = TrigonLoader.MainFrame

    TrigonLoader.ImageLabel_4.BorderSizePixel = 0
    TrigonLoader.ImageLabel_4.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.ImageLabel_4.Image = "rbxassetid://15844306310"
    TrigonLoader.ImageLabel_4.Size = UDim2.new(1, 0, 0.387093, 0)
    TrigonLoader.ImageLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.ImageLabel_4.BackgroundTransparency = 1
    TrigonLoader.ImageLabel_4.Position = UDim2.new(8.62644e-08, 0, 0.0929012, 0)
    TrigonLoader.ImageLabel_4.Parent = TrigonLoader.LoaderFrame

    TrigonLoader.list.AnchorPoint = Vector2.new(0.5, 0.5)
    TrigonLoader.list.BorderSizePixel = 0
    TrigonLoader.list.Size = UDim2.new(0.856923, 0, 0.435747, 0)
    TrigonLoader.list.Position = UDim2.new(0.499928, 0, 0.782127, 0)
    TrigonLoader.list.BackgroundTransparency = 1
    TrigonLoader.list.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.list.Name = "list"
    TrigonLoader.list.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.list.Parent = TrigonLoader.LoaderFrame

    TrigonLoader.UIListLayout_4.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TrigonLoader.UIListLayout_4.Padding = UDim.new(0.07, 0)
    TrigonLoader.UIListLayout_4.Parent = TrigonLoader.list

    TrigonLoader.Frame.BorderSizePixel = 0
    TrigonLoader.Frame.Size = UDim2.new(0.929634, 0, 0.188937, 0)
    TrigonLoader.Frame.Position = UDim2.new(0.0351828, 0, 0, 0)
    TrigonLoader.Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Frame.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    TrigonLoader.Frame.Parent = TrigonLoader.list

    TrigonLoader.UICorner_12.CornerRadius = UDim.new(0.2, 0)
    TrigonLoader.UICorner_12.Parent = TrigonLoader.Frame

    TrigonLoader.Bar.BorderSizePixel = 0
    TrigonLoader.Bar.Size = UDim2.new(0.985534, 0, 0.793589, 0)
    TrigonLoader.Bar.Position = UDim2.new(0.00723917, 0, 0.0930243, 0)
    TrigonLoader.Bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Bar.Name = "Bar"
    TrigonLoader.Bar.BackgroundColor3 = Color3.fromRGB(74, 82, 103)
    TrigonLoader.Bar.Parent = TrigonLoader.Frame

    TrigonLoader.UICorner_13.CornerRadius = UDim.new(0.2, 0)
    TrigonLoader.UICorner_13.Parent = TrigonLoader.Bar

    TrigonLoader.Title_5.TextWrapped = true
    TrigonLoader.Title_5.BorderSizePixel = 0
    TrigonLoader.Title_5.TextScaled = true
    TrigonLoader.Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.Title_5.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    TrigonLoader.Title_5.TextSize = 14
    TrigonLoader.Title_5.Name = "Title"
    TrigonLoader.Title_5.Size = UDim2.new(0.998909, 0, 0.149594, 0)
    TrigonLoader.Title_5.TextColor3 = Color3.fromRGB(180, 193, 216)
    TrigonLoader.Title_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.Title_5.Text = "{...}"
    TrigonLoader.Title_5.Position = UDim2.new(0.000545285, 0, 0.258937, 0)
    TrigonLoader.Title_5.BackgroundTransparency = 1
    TrigonLoader.Title_5.Parent = TrigonLoader.list

    TrigonLoader.LocalScript_1.Parent = TrigonLoader.MainFrame

    TrigonLoader.TrigonLogo.BorderSizePixel = 0
    TrigonLoader.TrigonLogo.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.TrigonLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.TrigonLogo.Image = "rbxassetid://15844306310"
    TrigonLoader.TrigonLogo.Size = UDim2.new(0.5, 0, 0.747768, 0)
    TrigonLoader.TrigonLogo.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.TrigonLogo.Name = "TrigonLogo"
    TrigonLoader.TrigonLogo.BackgroundTransparency = 1
    TrigonLoader.TrigonLogo.Position = UDim2.new(0.249108, 0, 0.125064, 0)
    TrigonLoader.TrigonLogo.Visible = false
    TrigonLoader.TrigonLogo.Parent = TrigonLoader.MainFrame

    TrigonLoader.CloseBtn_1.ImageColor3 = Color3.fromRGB(165, 182, 230)
    TrigonLoader.CloseBtn_1.BorderSizePixel = 0
    TrigonLoader.CloseBtn_1.ScaleType = Enum.ScaleType.Fit
    TrigonLoader.CloseBtn_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TrigonLoader.CloseBtn_1.Image = "rbxassetid://15866029769"
    TrigonLoader.CloseBtn_1.Size = UDim2.new(0.0711809, 0, 0.124451, 0)
    TrigonLoader.CloseBtn_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TrigonLoader.CloseBtn_1.Name = "CloseBtn"
    TrigonLoader.CloseBtn_1.BackgroundTransparency = 1
    TrigonLoader.CloseBtn_1.Position = UDim2.new(0.921436, 0, 0.0172316, 0)
    TrigonLoader.CloseBtn_1.ImageTransparency = 0.51
    TrigonLoader.CloseBtn_1.Parent = TrigonLoader.MainFrame

    task.spawn(function()
        local script = TrigonLoader.LocalScript

        local buttons = script.Parent
        local verifybtn = buttons.bbb.verifybtn
        local pastebtn = buttons.bbb.pastebtn
        local cklbtn = buttons.cklbtn
        local TextBox = buttons.aKeyContainer.KeyBox
        local Loader =  gethui():WaitForChild(_G.TrigonLoader)
        local MainUI =  gethui():WaitForChild(_G.TrigonMain)
        local MainFrame = script.Parent.Parent.Parent

        cklbtn.Activated:Connect(function()
            setclipboard(key)
			cklbtn.Title.Text = "Link Copied!"
			task.wait(2)
			cklbtn.Title.Text = "Copy Key Link"
        end)

        pastebtn.Activated:Connect(function()
            TextBox.Text = getclipboard()  
			pastebtn.Title.Text = "Pasted!"
			task.wait(2)
			pastebtn.Title.Text = "Paste"  
        end)
		
        local function  loadtrigon()
            Loader.Enabled = false
			if not Settings.autohideui then 
				MainUI.Enabled = true
			end
        end
		
        verifybtn.Activated:Connect(function()
            if game.Players.LocalPlayer.Name == "_rel_baldski" or PandaAuth:ValidateKey(ServiceID, TextBox.Text) then
                autoexec_ = true
                Settings.Trigonkey = TextBox.Text
                saveSettings()
                print('Key verified!')
                TextBox.Text = "Key verified!"
                loadtopbar()
                MainFrame.LoaderFrame.Visible = false

                repeat task.wait() until Loader and MainUI
                loadtrigon()
				autoexec()
				reeeeeeeeeeeeee()
            else 
                TextBox.Text = "Key Expired/Does Not Exist!"
                print('Key Expired/Does Not Exist!')

            end

        end)


    end)

    task.spawn(function()
        local script = TrigonLoader.LocalScript_1


        local TweenService = game:GetService("TweenService")
        local CurrentValue = 1
        local MainFrame = script.Parent
        local Bar = MainFrame.LoaderFrame.list.Frame.Bar
        local MaxValue = 100
        local Status = MainFrame.LoaderFrame.list.Title
        local TweenService = game:GetService("TweenService")
		local discordbtn = MainFrame.KeySection.discordbtn


        local OptionR = MainFrame.SelectorFrame.Buttons.OptionR
        local Loader =  gethui():WaitForChild(_G.TrigonLoader)
        local MainUI =  gethui():WaitForChild(_G.TrigonMain)
        local MainFrame = script.Parent
        local LoaderFrame = MainFrame.LoaderFrame
        local KeySection = MainFrame.KeySection


        wait(1)


        local function ProgressBar(value, statusText, duration)
            CurrentValue = CurrentValue + value
            if CurrentValue > MaxValue then
                CurrentValue = MaxValue
            elseif CurrentValue < 0 then
                CurrentValue = 0
            end

            local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
            local tween = TweenService:Create(Bar, tweenInfo, {Size = UDim2.new(CurrentValue / MaxValue, 0, 0.8, 0)})
            tween:Play()

            Status.Text = "Status: " .. (statusText or "")
        end

        Bar.Size = UDim2.new(0, 0, 0.8, 0)

        ProgressBar(50, "Checking for game scripts...", 1)
        wait(1)

        local function  loadtrigon()
            Loader.Enabled = false
			if not Settings.autohideui then 
				MainUI.Enabled = true
			end
        end

		local function finalizeSetup()
			ProgressBar(20, "Finalizing everything...", 1)
			loadtopbar()
			wait(1)
			ProgressBar(30, "Setup Complete!", 1)
			wait(0.5)
			MainFrame.LoaderFrame.Visible = false
		
			repeat task.wait() until Loader and MainUI
		
			loadtrigon()
			autoexec()
			reeeeeeeeeeeeee()
		end
		
		local s, ValidateFailed = pcall(function()
			if keyless then
				warn(']---------Trigon is Keyless!!---------[')
				finalizeSetup()
			else
				local keyValid = PandaAuth:ValidateKey(ServiceID, Settings.Trigonkey)
				if keyValid then
					print('Key verified!')
					finalizeSetup()
				else
					print('Key Expired/Does Not Exist!')
					LoaderFrame.Visible = false
					KeySection.Visible = true
				end
			end
		end)
		
		if ValidateFailed then
			warn(']---------Validate Failed---------[')
			finalizeSetup()
		end
		
		MainFrame.CloseBtn.Activated:Connect(function()
			MainFrame.Parent:Destroy()
		end)
		


        discordbtn.Activated:Connect(function()
            setclipboard("https://discord.gg/rnZXbd2yfW")
			discordbtn.Title.Text = "Link Copied!"
			task.wait(2)
			discordbtn.Title.Text = "Copy Discord Invite Link"
        end)
    end)
end

function main()

local trigok =
{
	TrigonMain = Instance.new("ScreenGui"),
	MainFrame = Instance.new("Frame"),
	BottomMenuFrame = Instance.new("Frame"),
	LeftFrame = Instance.new("Frame"),
	ExitBtn = Instance.new("ImageButton"),
	Icon = Instance.new("ImageLabel"),
	UICorner = Instance.new("UICorner"),
	RightFrame = Instance.new("Frame"),
	Button = Instance.new("ImageButton"),
	UIGradient = Instance.new("UIGradient"),
	Icon_1 = Instance.new("ImageLabel"),
	MenuList = Instance.new("Frame"),
	UICorner_1 = Instance.new("UICorner"),
	UIGridLayout = Instance.new("UIGridLayout"),
	HBtn = Instance.new("ImageButton"),
	UIGradient_1 = Instance.new("UIGradient"),
	Icon_2 = Instance.new("ImageLabel"),
	UIStroke = Instance.new("UIStroke"),
	UICorner_2 = Instance.new("UICorner"),
	ExecBtn = Instance.new("ImageButton"),
	Icon_3 = Instance.new("ImageLabel"),
	UIStroke_1 = Instance.new("UIStroke"),
	UICorner_3 = Instance.new("UICorner"),
	UIGradient_2 = Instance.new("UIGradient"),
	CloudBtn = Instance.new("ImageButton"),
	UIGradient_3 = Instance.new("UIGradient"),
	Icon_4 = Instance.new("ImageLabel"),
	UIStroke_2 = Instance.new("UIStroke"),
	UICorner_4 = Instance.new("UICorner"),
	SettingsBtn = Instance.new("ImageButton"),
	UIGradient_4 = Instance.new("UIGradient"),
	Icon_5 = Instance.new("ImageLabel"),
	UIStroke_3 = Instance.new("UIStroke"),
	UICorner_5 = Instance.new("UICorner"),
	UICorner_6 = Instance.new("UICorner"),
	logFrame = Instance.new("Frame"),
	UICorner_7 = Instance.new("UICorner"),
	logButtons = Instance.new("Frame"),
	logOutput = Instance.new("Frame"),
	Button_1 = Instance.new("ImageButton"),
	TextLabel = Instance.new("TextLabel"),
	UIListLayout = Instance.new("UIListLayout"),
	UIListLayout_1 = Instance.new("UIListLayout"),
	logWarning = Instance.new("Frame"),
	Button_2 = Instance.new("ImageButton"),
	TextLabel_1 = Instance.new("TextLabel"),
	UIListLayout_2 = Instance.new("UIListLayout"),
	logError = Instance.new("Frame"),
	Button_3 = Instance.new("ImageButton"),
	TextLabel_2 = Instance.new("TextLabel"),
	UIListLayout_3 = Instance.new("UIListLayout"),
	logInfo = Instance.new("Frame"),
	Button_4 = Instance.new("ImageButton"),
	TextLabel_3 = Instance.new("TextLabel"),
	UIListLayout_4 = Instance.new("UIListLayout"),
	cclrbtn = Instance.new("ImageButton"),
	Title = Instance.new("TextLabel"),
	UICorner_8 = Instance.new("UICorner"),
	UIStroke_4 = Instance.new("UIStroke"),
	excp = Instance.new("ImageButton"),
	Title_1 = Instance.new("TextLabel"),
	UICorner_9 = Instance.new("UICorner"),
	UIStroke_5 = Instance.new("UIStroke"),
	TextLabel_4 = Instance.new("TextLabel"),
	consoleFrame = Instance.new("ScrollingFrame"),
	GlobalLog = Instance.new("LocalScript"),
	TextBox = Instance.new("TextLabel"),
	SettingsFrame = Instance.new("Frame"),
	UICorner_10 = Instance.new("UICorner"),
	Sidebar = Instance.new("Frame"),
	Buttons = Instance.new("Frame"),
	UIListLayout_5 = Instance.new("UIListLayout"),
	generalBtn = Instance.new("ImageButton"),
	UICorner_11 = Instance.new("UICorner"),
	Texts = Instance.new("Frame"),
	UICorner_12 = Instance.new("UICorner"),
	UIListLayout_6 = Instance.new("UIListLayout"),
	Title_2 = Instance.new("TextLabel"),
	icon = Instance.new("ImageLabel"),
	themesBtn = Instance.new("ImageButton"),
	UICorner_13 = Instance.new("UICorner"),
	Texts_1 = Instance.new("Frame"),
	UICorner_14 = Instance.new("UICorner"),
	UIListLayout_7 = Instance.new("UIListLayout"),
	Title_3 = Instance.new("TextLabel"),
	icon_1 = Instance.new("ImageLabel"),
	GeneralTab = Instance.new("ScrollingFrame"),
	UICorner_15 = Instance.new("UICorner"),
	UIListLayout_8 = Instance.new("UIListLayout"),
	autoexecSS = Instance.new("Frame"),
	UICorner_16 = Instance.new("UICorner"),
	Texts_2 = Instance.new("Frame"),
	UICorner_17 = Instance.new("UICorner"),
	UIListLayout_9 = Instance.new("UIListLayout"),
	Title_4 = Instance.new("TextLabel"),
	subTitle = Instance.new("TextLabel"),
	icon_2 = Instance.new("ImageLabel"),
	button = Instance.new("ImageButton"),
	autohideuiSS = Instance.new("Frame"),
	UICorner_18 = Instance.new("UICorner"),
	Texts_3 = Instance.new("Frame"),
	UICorner_19 = Instance.new("UICorner"),
	UIListLayout_10 = Instance.new("UIListLayout"),
	Title_5 = Instance.new("TextLabel"),
	subTitle_1 = Instance.new("TextLabel"),
	icon_3 = Instance.new("ImageLabel"),
	button_1 = Instance.new("ImageButton"),
	trigonSS = Instance.new("Frame"),
	UICorner_20 = Instance.new("UICorner"),
	Texts_4 = Instance.new("Frame"),
	UICorner_21 = Instance.new("UICorner"),
	UIListLayout_11 = Instance.new("UIListLayout"),
	Title_6 = Instance.new("TextLabel"),
	subTitle_2 = Instance.new("TextLabel"),
	icon_4 = Instance.new("ImageLabel"),
	homeFrame = Instance.new("Frame"),
	UICorner_22 = Instance.new("UICorner"),
	changelogFrame = Instance.new("ScrollingFrame"),
	UICorner_23 = Instance.new("UICorner"),
	UIListLayout_12 = Instance.new("UIListLayout"),
	scriptsFrame = Instance.new("ScrollingFrame"),
	UICorner_24 = Instance.new("UICorner"),
	UIListLayout_13 = Instance.new("UIListLayout"),
	_GameHeader = Instance.new("Frame"),
	Title_7 = Instance.new("TextLabel"),
	UICorner_25 = Instance.new("UICorner"),
	TextButton = Instance.new("TextButton"),
	UICorner_26 = Instance.new("UICorner"),
	localscriptsFrame = Instance.new("ScrollingFrame"),
	UICorner_27 = Instance.new("UICorner"),
	UIListLayout_14 = Instance.new("UIListLayout"),
	_GameHeader_1 = Instance.new("Frame"),
	Title_8 = Instance.new("TextLabel"),
	UICorner_28 = Instance.new("UICorner"),
	Add_btn = Instance.new("Frame"),
	TextButton_1 = Instance.new("TextButton"),
	UICorner_29 = Instance.new("UICorner"),
	script_placeholder = Instance.new("Frame"),
	scriptTitle = Instance.new("TextLabel"),
	Buttons_1 = Instance.new("Frame"),
	UIListLayout_15 = Instance.new("UIListLayout"),
	run = Instance.new("Frame"),
	UIListLayout_16 = Instance.new("UIListLayout"),
	UICorner_30 = Instance.new("UICorner"),
	button_2 = Instance.new("ImageButton"),
	autoload = Instance.new("Frame"),
	UIListLayout_17 = Instance.new("UIListLayout"),
	button_3 = Instance.new("ImageButton"),
	zz = Instance.new("TextLabel"),
	UICorner_31 = Instance.new("UICorner"),
	delete = Instance.new("Frame"),
	UIListLayout_18 = Instance.new("UIListLayout"),
	UICorner_32 = Instance.new("UICorner"),
	button_4 = Instance.new("ImageButton"),
	UICorner_33 = Instance.new("UICorner"),
	addlocalscriptsFrame = Instance.new("ScrollingFrame"),
	UICorner_34 = Instance.new("UICorner"),
	UIListLayout_19 = Instance.new("UIListLayout"),
	_GameHeader_2 = Instance.new("Frame"),
	Title_9 = Instance.new("TextLabel"),
	UICorner_35 = Instance.new("UICorner"),
	Frame = Instance.new("Frame"),
	TextButton_2 = Instance.new("TextButton"),
	UICorner_36 = Instance.new("UICorner"),
	addFrame = Instance.new("Frame"),
	input = Instance.new("Frame"),
	TextBox_1 = Instance.new("TextBox"),
	Title_10 = Instance.new("TextLabel"),
	TextLabel_5 = Instance.new("TextLabel"),
	confrim_btn = Instance.new("Frame"),
	TextButton_3 = Instance.new("TextButton"),
	UICorner_37 = Instance.new("UICorner"),
	cancel_btn = Instance.new("Frame"),
	TextButton_4 = Instance.new("TextButton"),
	UICorner_38 = Instance.new("UICorner"),
	ExecFrame = Instance.new("Frame"),
	Buttons_2 = Instance.new("Frame"),
	UIListLayout_20 = Instance.new("UIListLayout"),
	Button1 = Instance.new("ImageButton"),
	UIStroke_6 = Instance.new("UIStroke"),
	UICorner_39 = Instance.new("UICorner"),
	Title_11 = Instance.new("TextLabel"),
	Button4 = Instance.new("ImageButton"),
	Title_12 = Instance.new("TextLabel"),
	UICorner_40 = Instance.new("UICorner"),
	UIStroke_7 = Instance.new("UIStroke"),
	Button3 = Instance.new("ImageButton"),
	Title_13 = Instance.new("TextLabel"),
	UICorner_41 = Instance.new("UICorner"),
	UIStroke_8 = Instance.new("UIStroke"),
	Button2 = Instance.new("ImageButton"),
	Title_14 = Instance.new("TextLabel"),
	UICorner_42 = Instance.new("UICorner"),
	UIStroke_9 = Instance.new("UIStroke"),
	UICorner_43 = Instance.new("UICorner"),
	ScrollingFrame = Instance.new("ScrollingFrame"),
	LocalScript = Instance.new("LocalScript"),
	ScriptBox = Instance.new("TextBox"),
	Highlighter = Instance.new("ModuleScript"),
	lexer = Instance.new("ModuleScript"),
	language = Instance.new("ModuleScript"),
	theme = Instance.new("ModuleScript"),
	types = Instance.new("ModuleScript"),
	utility = Instance.new("ModuleScript"),
	UICorner_44 = Instance.new("UICorner"),
	LocalScript_1 = Instance.new("LocalScript"),
	savescripts = Instance.new("LocalScript")
}

trigok.TrigonMain.Enabled = false
trigok.TrigonMain.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
trigok.TrigonMain.IgnoreGuiInset = true
trigok.TrigonMain.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
trigok.TrigonMain.Name = _G.TrigonMain
trigok.TrigonMain.Parent = gethui()

trigok.MainFrame.BorderSizePixel = 0
trigok.MainFrame.Size = UDim2.new(1.0005, 0, 1, 0)
trigok.MainFrame.Position = UDim2.new(-0.000732064, 0, -0.0078125, 0)
trigok.MainFrame.BackgroundTransparency = 0.35
trigok.MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.MainFrame.Name = "MainFrame"
trigok.MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
trigok.MainFrame.Parent = trigok.TrigonMain

trigok.BottomMenuFrame.BorderSizePixel = 0
trigok.BottomMenuFrame.Size = UDim2.new(0.950071, 0, 0.158636, 0)
trigok.BottomMenuFrame.Position = UDim2.new(0.0244645, 0, 0.792311, 0)
trigok.BottomMenuFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.BottomMenuFrame.ClipsDescendants = true
trigok.BottomMenuFrame.Name = "BottomMenuFrame"
trigok.BottomMenuFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.BottomMenuFrame.Parent = trigok.MainFrame

trigok.LeftFrame.BorderSizePixel = 0
trigok.LeftFrame.Size = UDim2.new(0.162271, 0, 1, 0)
trigok.LeftFrame.Position = UDim2.new(-0.00054132, 0, 0, 0)
trigok.LeftFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.LeftFrame.Name = "LeftFrame"
trigok.LeftFrame.BackgroundColor3 = Color3.fromRGB(47, 52, 66)
trigok.LeftFrame.Parent = trigok.BottomMenuFrame

trigok.ExitBtn.ZIndex = 2
trigok.ExitBtn.BorderSizePixel = 0
trigok.ExitBtn.ScaleType = Enum.ScaleType.Fit
trigok.ExitBtn.AutoButtonColor = false
trigok.ExitBtn.BackgroundColor3 = Color3.fromRGB(47, 52, 66)
trigok.ExitBtn.Selectable = false
trigok.ExitBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.ExitBtn.Size = UDim2.new(0.597387, 0, 0.893438, 0)
trigok.ExitBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.ExitBtn.Name = "ExitBtn"
trigok.ExitBtn.Position = UDim2.new(0.499371, 0, 0.491793, 0)
trigok.ExitBtn.Parent = trigok.LeftFrame

trigok.Icon.ImageColor3 = Color3.fromRGB(201, 205, 210)
trigok.Icon.SizeConstraint = Enum.SizeConstraint.RelativeXX
trigok.Icon.BorderSizePixel = 0
trigok.Icon.ScaleType = Enum.ScaleType.Fit
trigok.Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Icon.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Icon.Image = "rbxassetid://15879382339"
trigok.Icon.Size = UDim2.new(0.834218, 0, 12.9208, 0)
trigok.Icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Icon.Name = "Icon"
trigok.Icon.BackgroundTransparency = 1
trigok.Icon.Position = UDim2.new(0.494743, 0, 0.490654, 0)
trigok.Icon.Parent = trigok.ExitBtn

trigok.UICorner.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner.Parent = trigok.LeftFrame

trigok.RightFrame.BorderSizePixel = 0
trigok.RightFrame.Size = UDim2.new(0.111862, 0, 1, 0)
trigok.RightFrame.Position = UDim2.new(0.887643, 0, 0, 0)
trigok.RightFrame.BackgroundTransparency = 1
trigok.RightFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.RightFrame.Name = "RightFrame"
trigok.RightFrame.BackgroundColor3 = Color3.fromRGB(47, 52, 65)
trigok.RightFrame.Parent = trigok.BottomMenuFrame

trigok.Button.Active = true
trigok.Button.BorderSizePixel = 0
trigok.Button.ScaleType = Enum.ScaleType.Fit
trigok.Button.AutoButtonColor = false
trigok.Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Button.Selectable = false
trigok.Button.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Button.Size = UDim2.new(0.724089, 0, 0.644049, 0)
trigok.Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Button.Name = "Button"
trigok.Button.BackgroundTransparency = 1
trigok.Button.Position = UDim2.new(0.538481, 0, 0.487688, 0)
trigok.Button.Parent = trigok.RightFrame

trigok.UIGradient.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trigok.UIGradient.Rotation = -90
trigok.UIGradient.Parent = trigok.Button

trigok.Icon_1.SizeConstraint = Enum.SizeConstraint.RelativeYY
trigok.Icon_1.BorderSizePixel = 0
trigok.Icon_1.ScaleType = Enum.ScaleType.Fit
trigok.Icon_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Icon_1.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Icon_1.Image = "rbxassetid://15844306310"
trigok.Icon_1.Size = UDim2.new(0.83136, 0, 0.783259, 0)
trigok.Icon_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Icon_1.Name = "Icon"
trigok.Icon_1.BackgroundTransparency = 1
trigok.Icon_1.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Icon_1.Parent = trigok.Button

trigok.MenuList.BorderSizePixel = 0
trigok.MenuList.Size = UDim2.new(0.777778, 0, 1, 0)
trigok.MenuList.Position = UDim2.new(0.116366, 0, 0, 0)
trigok.MenuList.BackgroundTransparency = 1
trigok.MenuList.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.MenuList.Name = "MenuList"
trigok.MenuList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.MenuList.Parent = trigok.BottomMenuFrame

trigok.UICorner_1.CornerRadius = UDim.new(0.15, 0)
trigok.UICorner_1.Parent = trigok.MenuList

trigok.UIGridLayout.CellPadding = UDim2.new(0.02, 0, 1, 0)
trigok.UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIGridLayout.CellSize = UDim2.new(0.095, 0, 0.76, 0)
trigok.UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIGridLayout.Parent = trigok.MenuList

trigok.HBtn.BorderSizePixel = 3
trigok.HBtn.ScaleType = Enum.ScaleType.Fit
trigok.HBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.HBtn.BorderMode = Enum.BorderMode.Inset
trigok.HBtn.Selectable = false
trigok.HBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.HBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trigok.HBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.HBtn.Name = "HBtn"
trigok.HBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trigok.HBtn.Parent = trigok.MenuList

trigok.UIGradient_1.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trigok.UIGradient_1.Rotation = -90
trigok.UIGradient_1.Parent = trigok.HBtn

trigok.Icon_2.ImageColor3 = Color3.fromRGB(201, 205, 210)
trigok.Icon_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
trigok.Icon_2.BorderSizePixel = 0
trigok.Icon_2.ScaleType = Enum.ScaleType.Fit
trigok.Icon_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Icon_2.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Icon_2.Image = "rbxassetid://15982534656"
trigok.Icon_2.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trigok.Icon_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Icon_2.Name = "Icon"
trigok.Icon_2.BackgroundTransparency = 1
trigok.Icon_2.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Icon_2.Parent = trigok.HBtn

trigok.UIStroke.Thickness = 2
trigok.UIStroke.Color = Color3.fromRGB(87, 96, 120)
trigok.UIStroke.Parent = trigok.HBtn

trigok.UICorner_2.CornerRadius = UDim.new(0.09, 0)
trigok.UICorner_2.Parent = trigok.HBtn

trigok.ExecBtn.BorderSizePixel = 3
trigok.ExecBtn.ScaleType = Enum.ScaleType.Fit
trigok.ExecBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.ExecBtn.BorderMode = Enum.BorderMode.Inset
trigok.ExecBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.ExecBtn.Size = UDim2.new(0.702236, 0, 0.8, 0)
trigok.ExecBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.ExecBtn.Name = "ExecBtn"
trigok.ExecBtn.Position = UDim2.new(0.721118, 0, 0.5, 0)
trigok.ExecBtn.Parent = trigok.MenuList

trigok.Icon_3.ImageColor3 = Color3.fromRGB(201, 205, 210)
trigok.Icon_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
trigok.Icon_3.BorderSizePixel = 0
trigok.Icon_3.ScaleType = Enum.ScaleType.Fit
trigok.Icon_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Icon_3.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Icon_3.Image = "rbxassetid://15845222401"
trigok.Icon_3.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trigok.Icon_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Icon_3.Name = "Icon"
trigok.Icon_3.BackgroundTransparency = 1
trigok.Icon_3.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Icon_3.Parent = trigok.ExecBtn

trigok.UIStroke_1.Thickness = 2
trigok.UIStroke_1.Color = Color3.fromRGB(87, 96, 120)
trigok.UIStroke_1.Parent = trigok.ExecBtn

trigok.UICorner_3.CornerRadius = UDim.new(0.09, 0)
trigok.UICorner_3.Parent = trigok.ExecBtn

trigok.UIGradient_2.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trigok.UIGradient_2.Rotation = -90
trigok.UIGradient_2.Parent = trigok.ExecBtn

trigok.CloudBtn.BorderSizePixel = 3
trigok.CloudBtn.ScaleType = Enum.ScaleType.Fit
trigok.CloudBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.CloudBtn.BorderMode = Enum.BorderMode.Inset
trigok.CloudBtn.Selectable = false
trigok.CloudBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.CloudBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trigok.CloudBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.CloudBtn.Name = "CloudBtn"
trigok.CloudBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trigok.CloudBtn.Parent = trigok.MenuList

trigok.UIGradient_3.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trigok.UIGradient_3.Rotation = -90
trigok.UIGradient_3.Parent = trigok.CloudBtn

trigok.Icon_4.ImageColor3 = Color3.fromRGB(201, 205, 210)
trigok.Icon_4.SizeConstraint = Enum.SizeConstraint.RelativeXX
trigok.Icon_4.BorderSizePixel = 0
trigok.Icon_4.ScaleType = Enum.ScaleType.Fit
trigok.Icon_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Icon_4.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Icon_4.Image = "rbxassetid://15982538173"
trigok.Icon_4.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trigok.Icon_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Icon_4.Name = "Icon"
trigok.Icon_4.BackgroundTransparency = 1
trigok.Icon_4.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Icon_4.Parent = trigok.CloudBtn

trigok.UIStroke_2.Thickness = 2
trigok.UIStroke_2.Color = Color3.fromRGB(87, 96, 120)
trigok.UIStroke_2.Parent = trigok.CloudBtn

trigok.UICorner_4.CornerRadius = UDim.new(0.09, 0)
trigok.UICorner_4.Parent = trigok.CloudBtn

trigok.SettingsBtn.BorderSizePixel = 3
trigok.SettingsBtn.ScaleType = Enum.ScaleType.Fit
trigok.SettingsBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.SettingsBtn.BorderMode = Enum.BorderMode.Inset
trigok.SettingsBtn.Selectable = false
trigok.SettingsBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.SettingsBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trigok.SettingsBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.SettingsBtn.Name = "SettingsBtn"
trigok.SettingsBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trigok.SettingsBtn.Parent = trigok.MenuList

trigok.UIGradient_4.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trigok.UIGradient_4.Rotation = -90
trigok.UIGradient_4.Parent = trigok.SettingsBtn

trigok.Icon_5.ImageColor3 = Color3.fromRGB(201, 205, 210)
trigok.Icon_5.SizeConstraint = Enum.SizeConstraint.RelativeXX
trigok.Icon_5.BorderSizePixel = 0
trigok.Icon_5.ScaleType = Enum.ScaleType.Fit
trigok.Icon_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Icon_5.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Icon_5.Image = "rbxassetid://15845262087"
trigok.Icon_5.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trigok.Icon_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Icon_5.Name = "Icon"
trigok.Icon_5.BackgroundTransparency = 1
trigok.Icon_5.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Icon_5.Parent = trigok.SettingsBtn

trigok.UIStroke_3.Thickness = 2
trigok.UIStroke_3.Color = Color3.fromRGB(87, 96, 120)
trigok.UIStroke_3.Parent = trigok.SettingsBtn

trigok.UICorner_5.CornerRadius = UDim.new(0.09, 0)
trigok.UICorner_5.Parent = trigok.SettingsBtn

trigok.UICorner_6.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_6.Parent = trigok.BottomMenuFrame

trigok.logFrame.Active = true
trigok.logFrame.ZIndex = 2
trigok.logFrame.BorderSizePixel = 0
trigok.logFrame.Size = UDim2.new(0.95, 0, 0.685445, 0)
trigok.logFrame.Position = UDim2.new(0.024, 0, 0.0900137, 0)
trigok.logFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.logFrame.Visible = false
trigok.logFrame.Name = "logFrame"
trigok.logFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.logFrame.Parent = trigok.MainFrame

trigok.UICorner_7.CornerRadius = UDim.new(0.02, 0)
trigok.UICorner_7.Parent = trigok.logFrame

trigok.logButtons.BorderSizePixel = 0
trigok.logButtons.Size = UDim2.new(0.964723, 0, 0.120071, 0)
trigok.logButtons.Position = UDim2.new(0.0291137, 0, 0.878761, 0)
trigok.logButtons.BackgroundTransparency = 1
trigok.logButtons.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.logButtons.Name = "logButtons"
trigok.logButtons.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
trigok.logButtons.Parent = trigok.logFrame

trigok.logOutput.BorderSizePixel = 0
trigok.logOutput.Size = UDim2.new(0.110762, 0, 1, 0)
trigok.logOutput.BackgroundTransparency = 1
trigok.logOutput.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.logOutput.ClipsDescendants = true
trigok.logOutput.Name = "logOutput"
trigok.logOutput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.logOutput.Parent = trigok.logButtons

trigok.Button_1.ZIndex = 2
trigok.Button_1.ScaleType = Enum.ScaleType.Fit
trigok.Button_1.Image = "rbxassetid://3926311105"
trigok.Button_1.ImageRectSize = Vector2.new(48, 48)
trigok.Button_1.Size = UDim2.new(0.23, 0, 1, 0)
trigok.Button_1.Name = "Button"
trigok.Button_1.LayoutOrder = 7
trigok.Button_1.BackgroundTransparency = 1
trigok.Button_1.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trigok.Button_1.ImageTransparency = 0.23
trigok.Button_1.ImageRectOffset = Vector2.new(4, 836)
trigok.Button_1.Parent = trigok.logOutput

trigok.TextLabel.TextWrapped = true
trigok.TextLabel.BorderSizePixel = 0
trigok.TextLabel.TextScaled = true
trigok.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextLabel.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextLabel.TextSize = 14
trigok.TextLabel.Size = UDim2.new(0.728848, 0, 0.568112, 0)
trigok.TextLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
trigok.TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextLabel.Text = "Log Output"
trigok.TextLabel.Position = UDim2.new(0.26, 0, 0.215944, 0)
trigok.TextLabel.BackgroundTransparency = 1
trigok.TextLabel.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextLabel.Parent = trigok.logOutput

trigok.UIListLayout.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout.Padding = UDim.new(0.03, 0)
trigok.UIListLayout.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout.Parent = trigok.logOutput

trigok.UIListLayout_1.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_1.HorizontalAlignment = Enum.HorizontalAlignment.Right
trigok.UIListLayout_1.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_1.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_1.Padding = UDim.new(0.005, 0)
trigok.UIListLayout_1.Parent = trigok.logButtons

trigok.logWarning.BorderSizePixel = 0
trigok.logWarning.Size = UDim2.new(0.133679, 0, 1, 0)
trigok.logWarning.Position = UDim2.new(0.125762, 0, 0, 0)
trigok.logWarning.BackgroundTransparency = 1
trigok.logWarning.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.logWarning.ClipsDescendants = true
trigok.logWarning.Name = "logWarning"
trigok.logWarning.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.logWarning.Parent = trigok.logButtons

trigok.Button_2.ZIndex = 2
trigok.Button_2.ScaleType = Enum.ScaleType.Fit
trigok.Button_2.Image = "rbxassetid://3926311105"
trigok.Button_2.ImageRectSize = Vector2.new(48, 48)
trigok.Button_2.Size = UDim2.new(0.206312, 0, 1, 0)
trigok.Button_2.Name = "Button"
trigok.Button_2.LayoutOrder = 7
trigok.Button_2.BackgroundTransparency = 1
trigok.Button_2.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trigok.Button_2.ImageTransparency = 0.23
trigok.Button_2.ImageRectOffset = Vector2.new(4, 836)
trigok.Button_2.Parent = trigok.logWarning

trigok.TextLabel_1.TextWrapped = true
trigok.TextLabel_1.BorderSizePixel = 0
trigok.TextLabel_1.TextScaled = true
trigok.TextLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextLabel_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextLabel_1.TextSize = 14
trigok.TextLabel_1.Size = UDim2.new(0.74, 0, 0.568112, 0)
trigok.TextLabel_1.TextColor3 = Color3.fromRGB(225, 225, 225)
trigok.TextLabel_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextLabel_1.Text = "Log Warning	"
trigok.TextLabel_1.Position = UDim2.new(0.26, 0, 0.215944, 0)
trigok.TextLabel_1.BackgroundTransparency = 1
trigok.TextLabel_1.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextLabel_1.Parent = trigok.logWarning

trigok.UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_2.Padding = UDim.new(0.03, 0)
trigok.UIListLayout_2.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_2.Parent = trigok.logWarning

trigok.logError.BorderSizePixel = 0
trigok.logError.Size = UDim2.new(0.110762, 0, 1, 0)
trigok.logError.BackgroundTransparency = 1
trigok.logError.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.logError.ClipsDescendants = true
trigok.logError.Name = "logError"
trigok.logError.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.logError.Parent = trigok.logButtons

trigok.Button_3.ZIndex = 2
trigok.Button_3.ScaleType = Enum.ScaleType.Fit
trigok.Button_3.Image = "rbxassetid://3926311105"
trigok.Button_3.ImageRectSize = Vector2.new(48, 48)
trigok.Button_3.Size = UDim2.new(0.23, 0, 1, 0)
trigok.Button_3.Name = "Button"
trigok.Button_3.LayoutOrder = 7
trigok.Button_3.BackgroundTransparency = 1
trigok.Button_3.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trigok.Button_3.ImageTransparency = 0.23
trigok.Button_3.ImageRectOffset = Vector2.new(4, 836)
trigok.Button_3.Parent = trigok.logError

trigok.TextLabel_2.TextWrapped = true
trigok.TextLabel_2.BorderSizePixel = 0
trigok.TextLabel_2.TextScaled = true
trigok.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextLabel_2.TextSize = 14
trigok.TextLabel_2.Size = UDim2.new(0.728848, 0, 0.41773, 0)
trigok.TextLabel_2.TextColor3 = Color3.fromRGB(225, 225, 225)
trigok.TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextLabel_2.Text = "Log Error"
trigok.TextLabel_2.Position = UDim2.new(0.26, 0, 0.366327, 0)
trigok.TextLabel_2.BackgroundTransparency = 1
trigok.TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextLabel_2.Parent = trigok.logError

trigok.UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_3.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_3.Padding = UDim.new(0.03, 0)
trigok.UIListLayout_3.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_3.Parent = trigok.logError

trigok.logInfo.BorderSizePixel = 0
trigok.logInfo.Size = UDim2.new(0.139335, 0, 1, 0)
trigok.logInfo.Position = UDim2.new(0.414065, 0, 0, 0)
trigok.logInfo.BackgroundTransparency = 1
trigok.logInfo.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.logInfo.ClipsDescendants = true
trigok.logInfo.Name = "logInfo"
trigok.logInfo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.logInfo.Parent = trigok.logButtons

trigok.Button_4.ZIndex = 2
trigok.Button_4.ScaleType = Enum.ScaleType.Fit
trigok.Button_4.Image = "rbxassetid://3926311105"
trigok.Button_4.ImageRectSize = Vector2.new(48, 48)
trigok.Button_4.Size = UDim2.new(0.184161, 0, 1, 0)
trigok.Button_4.Name = "Button"
trigok.Button_4.LayoutOrder = 7
trigok.Button_4.BackgroundTransparency = 1
trigok.Button_4.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trigok.Button_4.ImageRectOffset = Vector2.new(4, 836)
trigok.Button_4.Parent = trigok.logInfo

trigok.TextLabel_3.TextWrapped = true
trigok.TextLabel_3.BorderSizePixel = 0
trigok.TextLabel_3.TextScaled = true
trigok.TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextLabel_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextLabel_3.TextSize = 14
trigok.TextLabel_3.Size = UDim2.new(0.728848, 0, 0.384311, 0)
trigok.TextLabel_3.TextColor3 = Color3.fromRGB(225, 225, 225)
trigok.TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextLabel_3.Text = "Enable Logging"
trigok.TextLabel_3.Position = UDim2.new(0.26, 0, 0.399745, 0)
trigok.TextLabel_3.BackgroundTransparency = 1
trigok.TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextLabel_3.Parent = trigok.logInfo

trigok.UIListLayout_4.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_4.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_4.Padding = UDim.new(0.03, 0)
trigok.UIListLayout_4.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_4.Parent = trigok.logInfo

trigok.cclrbtn.BorderSizePixel = 3
trigok.cclrbtn.ScaleType = Enum.ScaleType.Fit
trigok.cclrbtn.AutoButtonColor = false
trigok.cclrbtn.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trigok.cclrbtn.BorderMode = Enum.BorderMode.Inset
trigok.cclrbtn.Selectable = false
trigok.cclrbtn.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.cclrbtn.Size = UDim2.new(0.108402, 0, 0.784056, 0)
trigok.cclrbtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.cclrbtn.Name = "cclrbtn"
trigok.cclrbtn.Position = UDim2.new(0.580167, 0, 0.5, 0)
trigok.cclrbtn.Parent = trigok.logButtons

trigok.Title.TextWrapped = true
trigok.Title.BorderSizePixel = 0
trigok.Title.TextScaled = true
trigok.Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title.TextSize = 14
trigok.Title.Name = "Title"
trigok.Title.Size = UDim2.new(0.582424, 0, 0.612447, 0)
trigok.Title.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title.Text = "Clear Logs"
trigok.Title.Position = UDim2.new(0.494866, 0, 0.493859, 0)
trigok.Title.BackgroundTransparency = 1
trigok.Title.Parent = trigok.cclrbtn

trigok.UICorner_8.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_8.Parent = trigok.cclrbtn

trigok.UIStroke_4.LineJoinMode = Enum.LineJoinMode.Miter
trigok.UIStroke_4.Thickness = 3
trigok.UIStroke_4.Color = Color3.fromRGB(60, 66, 83)
trigok.UIStroke_4.Enabled = false
trigok.UIStroke_4.Parent = trigok.cclrbtn

trigok.excp.BorderSizePixel = 3
trigok.excp.ScaleType = Enum.ScaleType.Fit
trigok.excp.AutoButtonColor = false
trigok.excp.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trigok.excp.BorderMode = Enum.BorderMode.Inset
trigok.excp.Selectable = false
trigok.excp.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.excp.Size = UDim2.new(0.0945025, 0, 0.784056, 0)
trigok.excp.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.excp.Name = "excp"
trigok.excp.Position = UDim2.new(0.711627, 0, 0.616964, 0)
trigok.excp.Parent = trigok.logButtons

trigok.Title_1.TextWrapped = true
trigok.Title_1.BorderSizePixel = 0
trigok.Title_1.TextScaled = true
trigok.Title_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_1.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_1.TextSize = 14
trigok.Title_1.Name = "Title"
trigok.Title_1.Size = UDim2.new(0.712748, 0, 0.866139, 0)
trigok.Title_1.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_1.Text = "Execute from Clipboard"
trigok.Title_1.Position = UDim2.new(0.495013, 0, 0.497096, 0)
trigok.Title_1.BackgroundTransparency = 1
trigok.Title_1.Parent = trigok.excp

trigok.UICorner_9.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_9.Parent = trigok.excp

trigok.UIStroke_5.LineJoinMode = Enum.LineJoinMode.Miter
trigok.UIStroke_5.Thickness = 3
trigok.UIStroke_5.Color = Color3.fromRGB(60, 66, 83)
trigok.UIStroke_5.Enabled = false
trigok.UIStroke_5.Parent = trigok.excp

trigok.TextLabel_4.TextWrapped = true
trigok.TextLabel_4.BorderSizePixel = 0
trigok.TextLabel_4.TextScaled = true
trigok.TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextLabel_4.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextLabel_4.TextSize = 14
trigok.TextLabel_4.Size = UDim2.new(0.242269, 0, 0.492921, 0)
trigok.TextLabel_4.TextColor3 = Color3.fromRGB(225, 225, 225)
trigok.TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextLabel_4.Text = "Note: There is like 280 line limit on roblox :/"
trigok.TextLabel_4.Position = UDim2.new(0.81694, 0, 0.253539, 0)
trigok.TextLabel_4.BackgroundTransparency = 1
trigok.TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextLabel_4.Parent = trigok.logButtons

trigok.consoleFrame.BorderSizePixel = 0
trigok.consoleFrame.CanvasSize = UDim2.new(0, 0, 0.87, 0)
trigok.consoleFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
trigok.consoleFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.consoleFrame.Size = UDim2.new(0.975214, 0, 0.853, 0)
trigok.consoleFrame.BackgroundTransparency = 1
trigok.consoleFrame.Active = true
trigok.consoleFrame.ScrollBarImageTransparency = 0.8
trigok.consoleFrame.ScrollBarThickness = 10
trigok.consoleFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.consoleFrame.Name = "consoleFrame"
trigok.consoleFrame.Position = UDim2.new(0.0167858, 0, 0.0257617, 0)
trigok.consoleFrame.Parent = trigok.logFrame

trigok.GlobalLog.Name = "GlobalLog"
trigok.GlobalLog.Parent = trigok.consoleFrame

trigok.TextBox.TextWrapped = true
trigok.TextBox.BorderSizePixel = 0
trigok.TextBox.RichText = true
trigok.TextBox.TextYAlignment = Enum.TextYAlignment.Top
trigok.TextBox.BackgroundColor3 = Color3.fromRGB(39, 53, 255)
trigok.TextBox.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextBox.TextStrokeColor3 = Color3.fromRGB(211, 211, 211)
trigok.TextBox.TextSize = 26
trigok.TextBox.Name = "TextBox"
trigok.TextBox.AutomaticSize = Enum.AutomaticSize.Y
trigok.TextBox.Size = UDim2.new(1, 0, 1, 0)
trigok.TextBox.TextColor3 = Color3.fromRGB(211, 211, 211)
trigok.TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextBox.Text = ""
trigok.TextBox.LineHeight = 1.3
trigok.TextBox.BackgroundTransparency = 1
trigok.TextBox.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextBox.Parent = trigok.consoleFrame

trigok.SettingsFrame.Active = true
trigok.SettingsFrame.BorderSizePixel = 0
trigok.SettingsFrame.Size = UDim2.new(0.95, 0, 0.685445, 0)
trigok.SettingsFrame.Position = UDim2.new(0.024, 0, 0.0900137, 0)
trigok.SettingsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.SettingsFrame.ClipsDescendants = true
trigok.SettingsFrame.Visible = false
trigok.SettingsFrame.Name = "SettingsFrame"
trigok.SettingsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.SettingsFrame.Parent = trigok.MainFrame

trigok.UICorner_10.CornerRadius = UDim.new(0.02, 0)
trigok.UICorner_10.Parent = trigok.SettingsFrame

trigok.Sidebar.BorderSizePixel = 0
trigok.Sidebar.Size = UDim2.new(0.201512, 0, 1, 0)
trigok.Sidebar.BackgroundTransparency = 0.95
trigok.Sidebar.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Sidebar.Name = "Sidebar"
trigok.Sidebar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
trigok.Sidebar.Parent = trigok.SettingsFrame

trigok.Buttons.BorderSizePixel = 0
trigok.Buttons.Size = UDim2.new(0.945809, 0, 0.673338, 0)
trigok.Buttons.Position = UDim2.new(0.0267747, 0, 0.162183, 0)
trigok.Buttons.BackgroundTransparency = 1
trigok.Buttons.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Buttons.Name = "Buttons"
trigok.Buttons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Buttons.Parent = trigok.Sidebar

trigok.UIListLayout_5.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_5.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_5.Padding = UDim.new(0.02, 0)
trigok.UIListLayout_5.Parent = trigok.Buttons

trigok.generalBtn.BorderSizePixel = 0
trigok.generalBtn.ScaleType = Enum.ScaleType.Fit
trigok.generalBtn.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
trigok.generalBtn.Size = UDim2.new(0.891, 0, 0.139, 0)
trigok.generalBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.generalBtn.Name = "generalBtn"
trigok.generalBtn.Position = UDim2.new(0.0875638, 0, 0.353006, 0)
trigok.generalBtn.Parent = trigok.Buttons

trigok.UICorner_11.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_11.Parent = trigok.generalBtn

trigok.Texts.BorderSizePixel = 0
trigok.Texts.Size = UDim2.new(0.684406, 0, 0.81382, 0)
trigok.Texts.Position = UDim2.new(0.287915, 0, 0.0859289, 0)
trigok.Texts.BackgroundTransparency = 1
trigok.Texts.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Texts.Name = "Texts"
trigok.Texts.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Texts.Parent = trigok.generalBtn

trigok.UICorner_12.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_12.Parent = trigok.Texts

trigok.UIListLayout_6.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_6.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_6.Padding = UDim.new(0.1, 0)
trigok.UIListLayout_6.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_6.Parent = trigok.Texts

trigok.Title_2.TextWrapped = true
trigok.Title_2.BorderSizePixel = 0
trigok.Title_2.TextScaled = true
trigok.Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_2.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_2.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_2.TextSize = 100
trigok.Title_2.Name = "Title"
trigok.Title_2.Size = UDim2.new(1, 0, 0.63989, 0)
trigok.Title_2.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_2.Text = "General"
trigok.Title_2.Position = UDim2.new(0.5, 0, 0.517766, 0)
trigok.Title_2.BackgroundTransparency = 1
trigok.Title_2.TextXAlignment = Enum.TextXAlignment.Left
trigok.Title_2.Parent = trigok.Texts

trigok.icon.BorderSizePixel = 0
trigok.icon.ScaleType = Enum.ScaleType.Fit
trigok.icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.icon.Image = "rbxassetid://16251879539"
trigok.icon.Size = UDim2.new(0.177411, 0, 0.758023, 0)
trigok.icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.icon.Name = "icon"
trigok.icon.BackgroundTransparency = 1
trigok.icon.Position = UDim2.new(0.0855701, 0, 0.0969293, 0)
trigok.icon.Parent = trigok.generalBtn

trigok.themesBtn.BorderSizePixel = 0
trigok.themesBtn.ScaleType = Enum.ScaleType.Fit
trigok.themesBtn.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
trigok.themesBtn.Size = UDim2.new(0.891, 0, 0.139, 0)
trigok.themesBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.themesBtn.Name = "themesBtn"
trigok.themesBtn.Parent = trigok.Buttons

trigok.UICorner_13.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_13.Parent = trigok.themesBtn

trigok.Texts_1.BorderSizePixel = 0
trigok.Texts_1.Size = UDim2.new(0.684406, 0, 0.81382, 0)
trigok.Texts_1.Position = UDim2.new(0.287915, 0, 0.0859289, 0)
trigok.Texts_1.BackgroundTransparency = 1
trigok.Texts_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Texts_1.Name = "Texts"
trigok.Texts_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Texts_1.Parent = trigok.themesBtn

trigok.UICorner_14.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_14.Parent = trigok.Texts_1

trigok.UIListLayout_7.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_7.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_7.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_7.Padding = UDim.new(0.1, 0)
trigok.UIListLayout_7.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_7.Parent = trigok.Texts_1

trigok.Title_3.TextWrapped = true
trigok.Title_3.BorderSizePixel = 0
trigok.Title_3.TextScaled = true
trigok.Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_3.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_3.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_3.TextSize = 100
trigok.Title_3.Name = "Title"
trigok.Title_3.Size = UDim2.new(1, 0, 0.63989, 0)
trigok.Title_3.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_3.Text = "Themes"
trigok.Title_3.Position = UDim2.new(0.5, 0, 0.517766, 0)
trigok.Title_3.BackgroundTransparency = 1
trigok.Title_3.TextXAlignment = Enum.TextXAlignment.Left
trigok.Title_3.Parent = trigok.Texts_1

trigok.icon_1.BorderSizePixel = 0
trigok.icon_1.ScaleType = Enum.ScaleType.Fit
trigok.icon_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.icon_1.Image = "rbxassetid://16251895249"
trigok.icon_1.Size = UDim2.new(0.177411, 0, 0.758023, 0)
trigok.icon_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.icon_1.Name = "icon"
trigok.icon_1.BackgroundTransparency = 1
trigok.icon_1.Position = UDim2.new(0.0855701, 0, 0.0969293, 0)
trigok.icon_1.Parent = trigok.themesBtn

trigok.GeneralTab.BorderSizePixel = 0
trigok.GeneralTab.CanvasSize = UDim2.new(0, 0, 1, 0)
trigok.GeneralTab.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.GeneralTab.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.GeneralTab.Size = UDim2.new(0.793097, 0, 0.929714, 0)
trigok.GeneralTab.BackgroundTransparency = 0.35
trigok.GeneralTab.Active = true
trigok.GeneralTab.ScrollBarImageTransparency = 0.64
trigok.GeneralTab.ScrollBarThickness = 5
trigok.GeneralTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.GeneralTab.Name = "GeneralTab"
trigok.GeneralTab.Position = UDim2.new(0.201512, 0, 0.0341931, 0)
trigok.GeneralTab.Parent = trigok.SettingsFrame

trigok.UICorner_15.CornerRadius = UDim.new(1, 0)
trigok.UICorner_15.Parent = trigok.GeneralTab

trigok.UIListLayout_8.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_8.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_8.Padding = UDim.new(0.02, 0)
trigok.UIListLayout_8.Parent = trigok.GeneralTab

trigok.autoexecSS.BorderSizePixel = 0
trigok.autoexecSS.Size = UDim2.new(0.967878, 0, 0.144228, 0)
trigok.autoexecSS.Position = UDim2.new(0.0139884, 0, 0, 0)
trigok.autoexecSS.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.autoexecSS.ClipsDescendants = true
trigok.autoexecSS.Name = "autoexecSS"
trigok.autoexecSS.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
trigok.autoexecSS.Parent = trigok.GeneralTab

trigok.UICorner_16.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_16.Parent = trigok.autoexecSS

trigok.Texts_2.BorderSizePixel = 0
trigok.Texts_2.Size = UDim2.new(0.546741, 0, 0.81382, 0)
trigok.Texts_2.Position = UDim2.new(0.0750575, 0, 0.0859291, 0)
trigok.Texts_2.BackgroundTransparency = 1
trigok.Texts_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Texts_2.Name = "Texts"
trigok.Texts_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Texts_2.Parent = trigok.autoexecSS

trigok.UICorner_17.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_17.Parent = trigok.Texts_2

trigok.UIListLayout_9.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_9.Padding = UDim.new(0.1, 0)
trigok.UIListLayout_9.Parent = trigok.Texts_2

trigok.Title_4.TextWrapped = true
trigok.Title_4.BorderSizePixel = 0
trigok.Title_4.TextScaled = true
trigok.Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_4.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_4.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_4.TextSize = 100
trigok.Title_4.Name = "Title"
trigok.Title_4.Size = UDim2.new(0.983503, 0, 0.449235, 0)
trigok.Title_4.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_4.Text = "Enable Auto Execute"
trigok.Title_4.Position = UDim2.new(0.491751, 0, 0.224617, 0)
trigok.Title_4.BackgroundTransparency = 1
trigok.Title_4.TextXAlignment = Enum.TextXAlignment.Left
trigok.Title_4.Parent = trigok.Texts_2

trigok.subTitle.TextWrapped = true
trigok.subTitle.BorderSizePixel = 0
trigok.subTitle.TextScaled = true
trigok.subTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.subTitle.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.subTitle.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.subTitle.TextSize = 100
trigok.subTitle.Name = "subTitle"
trigok.subTitle.Size = UDim2.new(0.909815, 0, 0.273333, 0)
trigok.subTitle.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.subTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.subTitle.Text = "Automatically executes code at game launch."
trigok.subTitle.Position = UDim2.new(0.545092, 0, 0.685901, 0)
trigok.subTitle.BackgroundTransparency = 1
trigok.subTitle.TextXAlignment = Enum.TextXAlignment.Left
trigok.subTitle.Parent = trigok.Texts_2

trigok.icon_2.BorderSizePixel = 0
trigok.icon_2.ScaleType = Enum.ScaleType.Fit
trigok.icon_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.icon_2.Image = "rbxassetid://16251841820"
trigok.icon_2.Size = UDim2.new(0.0585895, 0, 0.847248, 0)
trigok.icon_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.icon_2.Name = "icon"
trigok.icon_2.BackgroundTransparency = 1
trigok.icon_2.Position = UDim2.new(0.00797054, 0, 0.0613952, 0)
trigok.icon_2.Parent = trigok.autoexecSS

trigok.button.ZIndex = 2
trigok.button.BorderSizePixel = 0
trigok.button.ScaleType = Enum.ScaleType.Fit
trigok.button.Image = "rbxassetid://3926311105"
trigok.button.ImageRectSize = Vector2.new(48, 48)
trigok.button.Size = UDim2.new(0.040973, 0, 0.533475, 0)
trigok.button.Name = "button"
trigok.button.LayoutOrder = 1
trigok.button.BackgroundTransparency = 1
trigok.button.Position = UDim2.new(0.93568, 0, 0.214785, 0)
trigok.button.ImageRectOffset = Vector2.new(4, 836)
trigok.button.Parent = trigok.autoexecSS

trigok.autohideuiSS.BorderSizePixel = 0
trigok.autohideuiSS.Size = UDim2.new(0.967878, 0, 0.144228, 0)
trigok.autohideuiSS.Position = UDim2.new(0.0160612, 0, 0, 0)
trigok.autohideuiSS.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.autohideuiSS.ClipsDescendants = true
trigok.autohideuiSS.Name = "autohideuiSS"
trigok.autohideuiSS.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
trigok.autohideuiSS.Parent = trigok.GeneralTab

trigok.UICorner_18.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_18.Parent = trigok.autohideuiSS

trigok.Texts_3.BorderSizePixel = 0
trigok.Texts_3.Size = UDim2.new(0.546741, 0, 0.81382, 0)
trigok.Texts_3.Position = UDim2.new(0.0750575, 0, 0.0859291, 0)
trigok.Texts_3.BackgroundTransparency = 1
trigok.Texts_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Texts_3.Name = "Texts"
trigok.Texts_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Texts_3.Parent = trigok.autohideuiSS

trigok.UICorner_19.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_19.Parent = trigok.Texts_3

trigok.UIListLayout_10.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_10.Padding = UDim.new(0.1, 0)
trigok.UIListLayout_10.Parent = trigok.Texts_3

trigok.Title_5.TextWrapped = true
trigok.Title_5.BorderSizePixel = 0
trigok.Title_5.TextScaled = true
trigok.Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_5.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_5.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_5.TextSize = 100
trigok.Title_5.Name = "Title"
trigok.Title_5.Size = UDim2.new(0.983503, 0, 0.449235, 0)
trigok.Title_5.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_5.Text = "Hide Trigon on Launch"
trigok.Title_5.Position = UDim2.new(0.491751, 0, 0.224617, 0)
trigok.Title_5.BackgroundTransparency = 1
trigok.Title_5.TextXAlignment = Enum.TextXAlignment.Left
trigok.Title_5.Parent = trigok.Texts_3

trigok.subTitle_1.TextWrapped = true
trigok.subTitle_1.BorderSizePixel = 0
trigok.subTitle_1.TextScaled = true
trigok.subTitle_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.subTitle_1.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.subTitle_1.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.subTitle_1.TextSize = 100
trigok.subTitle_1.Name = "subTitle"
trigok.subTitle_1.Size = UDim2.new(0.909815, 0, 0.273333, 0)
trigok.subTitle_1.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.subTitle_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.subTitle_1.Text = "Trigon UI will not show at start."
trigok.subTitle_1.Position = UDim2.new(0.545092, 0, 0.685901, 0)
trigok.subTitle_1.BackgroundTransparency = 1
trigok.subTitle_1.TextXAlignment = Enum.TextXAlignment.Left
trigok.subTitle_1.Parent = trigok.Texts_3

trigok.icon_3.BorderSizePixel = 0
trigok.icon_3.ScaleType = Enum.ScaleType.Fit
trigok.icon_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.icon_3.Image = "rbxassetid://16251830865"
trigok.icon_3.Size = UDim2.new(0.0585895, 0, 0.847248, 0)
trigok.icon_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.icon_3.Name = "icon"
trigok.icon_3.BackgroundTransparency = 1
trigok.icon_3.Position = UDim2.new(0.00797054, 0, 0.0613952, 0)
trigok.icon_3.Parent = trigok.autohideuiSS

trigok.button_1.ZIndex = 2
trigok.button_1.BorderSizePixel = 0
trigok.button_1.ScaleType = Enum.ScaleType.Fit
trigok.button_1.Image = "rbxassetid://3926305904"
trigok.button_1.ImageRectSize = Vector2.new(36, 36)
trigok.button_1.Size = UDim2.new(0.040973, 0, 0.533475, 0)
trigok.button_1.Name = "button"
trigok.button_1.LayoutOrder = 1
trigok.button_1.BackgroundTransparency = 1
trigok.button_1.Position = UDim2.new(0.93568, 0, 0.214785, 0)
trigok.button_1.ImageRectOffset = Vector2.new(724, 724)
trigok.button_1.Parent = trigok.autohideuiSS

trigok.trigonSS.BorderSizePixel = 0
trigok.trigonSS.Size = UDim2.new(0.967878, 0, 0.144228, 0)
trigok.trigonSS.Position = UDim2.new(0.0160612, 0, 0, 0)
trigok.trigonSS.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.trigonSS.ClipsDescendants = true
trigok.trigonSS.Name = "trigonSS"
trigok.trigonSS.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
trigok.trigonSS.Parent = trigok.GeneralTab

trigok.UICorner_20.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_20.Parent = trigok.trigonSS

trigok.Texts_4.BorderSizePixel = 0
trigok.Texts_4.Size = UDim2.new(0.546741, 0, 0.81382, 0)
trigok.Texts_4.Position = UDim2.new(0.0750575, 0, 0.0859291, 0)
trigok.Texts_4.BackgroundTransparency = 1
trigok.Texts_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Texts_4.Name = "Texts"
trigok.Texts_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Texts_4.Parent = trigok.trigonSS

trigok.UICorner_21.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_21.Parent = trigok.Texts_4

trigok.UIListLayout_11.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_11.Padding = UDim.new(0.1, 0)
trigok.UIListLayout_11.Parent = trigok.Texts_4

trigok.Title_6.TextWrapped = true
trigok.Title_6.BorderSizePixel = 0
trigok.Title_6.TextScaled = true
trigok.Title_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_6.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_6.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_6.TextSize = 100
trigok.Title_6.Name = "Title"
trigok.Title_6.Size = UDim2.new(0.983503, 0, 0.449235, 0)
trigok.Title_6.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_6.Text = "Enable Trigon Desktop Connection"
trigok.Title_6.Position = UDim2.new(0.491751, 0, 0.224617, 0)
trigok.Title_6.BackgroundTransparency = 1
trigok.Title_6.TextXAlignment = Enum.TextXAlignment.Left
trigok.Title_6.Parent = trigok.Texts_4

trigok.subTitle_2.TextWrapped = true
trigok.subTitle_2.BorderSizePixel = 0
trigok.subTitle_2.TextScaled = true
trigok.subTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.subTitle_2.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.subTitle_2.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.subTitle_2.TextSize = 100
trigok.subTitle_2.Name = "subTitle"
trigok.subTitle_2.Size = UDim2.new(0.909815, 0, 0.273333, 0)
trigok.subTitle_2.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.subTitle_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.subTitle_2.Text = "{comming soon}"
trigok.subTitle_2.Position = UDim2.new(0.545092, 0, 0.685901, 0)
trigok.subTitle_2.BackgroundTransparency = 1
trigok.subTitle_2.TextXAlignment = Enum.TextXAlignment.Left
trigok.subTitle_2.Parent = trigok.Texts_4

trigok.icon_4.BorderSizePixel = 0
trigok.icon_4.ScaleType = Enum.ScaleType.Fit
trigok.icon_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.icon_4.Image = "rbxassetid://15865858307"
trigok.icon_4.Size = UDim2.new(0.0585895, 0, 0.847248, 0)
trigok.icon_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.icon_4.Name = "icon"
trigok.icon_4.BackgroundTransparency = 1
trigok.icon_4.Position = UDim2.new(0.00797054, 0, 0.0613952, 0)
trigok.icon_4.Parent = trigok.trigonSS

trigok.homeFrame.Active = true
trigok.homeFrame.BorderSizePixel = 0
trigok.homeFrame.Size = UDim2.new(0.949745, 0, 0.682833, 0)
trigok.homeFrame.Position = UDim2.new(0.0244645, 0, 0.0897571, 0)
trigok.homeFrame.BackgroundTransparency = 0.45
trigok.homeFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.homeFrame.ClipsDescendants = true
trigok.homeFrame.Visible = false
trigok.homeFrame.Name = "homeFrame"
trigok.homeFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.homeFrame.Parent = trigok.MainFrame

trigok.UICorner_22.CornerRadius = UDim.new(0.02, 0)
trigok.UICorner_22.Parent = trigok.homeFrame

trigok.changelogFrame.BorderSizePixel = 0
trigok.changelogFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trigok.changelogFrame.Selectable = false
trigok.changelogFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.changelogFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.changelogFrame.Size = UDim2.new(0.16949, 0, 1.00031, 0)
trigok.changelogFrame.BackgroundTransparency = 0.35
trigok.changelogFrame.ScrollBarImageTransparency = 0.64
trigok.changelogFrame.ScrollBarThickness = 5
trigok.changelogFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.changelogFrame.Name = "changelogFrame"
trigok.changelogFrame.Position = UDim2.new(-5.87782e-09, 0, 0, 0)
trigok.changelogFrame.Parent = trigok.homeFrame

trigok.UICorner_23.CornerRadius = UDim.new(1, 0)
trigok.UICorner_23.Parent = trigok.changelogFrame

trigok.UIListLayout_12.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_12.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_12.Padding = UDim.new(0.018, 0)
trigok.UIListLayout_12.Parent = trigok.homeFrame

trigok.scriptsFrame.BorderSizePixel = 0
trigok.scriptsFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trigok.scriptsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.scriptsFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.scriptsFrame.Size = UDim2.new(0.357601, 0, 1, 0)
trigok.scriptsFrame.BackgroundTransparency = 0.35
trigok.scriptsFrame.Active = true
trigok.scriptsFrame.ScrollBarImageTransparency = 0.64
trigok.scriptsFrame.ScrollBarThickness = 5
trigok.scriptsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.scriptsFrame.Name = "scriptsFrame"
trigok.scriptsFrame.Position = UDim2.new(0.186719, 0, 0, 0)
trigok.scriptsFrame.Parent = trigok.homeFrame

trigok.UICorner_24.CornerRadius = UDim.new(1, 0)
trigok.UICorner_24.Parent = trigok.scriptsFrame

trigok.UIListLayout_13.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_13.Padding = UDim.new(0.01, 0)
trigok.UIListLayout_13.Parent = trigok.scriptsFrame

trigok._GameHeader.BorderSizePixel = 0
trigok._GameHeader.Size = UDim2.new(1, 0, 0.157089, 0)
trigok._GameHeader.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok._GameHeader.Name = "#GameHeader"
trigok._GameHeader.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trigok._GameHeader.Parent = trigok.scriptsFrame

trigok.Title_7.TextWrapped = true
trigok.Title_7.BorderSizePixel = 0
trigok.Title_7.TextScaled = true
trigok.Title_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_7.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_7.TextSize = 14
trigok.Title_7.Name = "Title"
trigok.Title_7.Size = UDim2.new(0.998909, 0, 0.572671, 0)
trigok.Title_7.TextColor3 = Color3.fromRGB(180, 193, 216)
trigok.Title_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_7.Text = "{game_name}"
trigok.Title_7.Position = UDim2.new(0, 0, 0.2, 0)
trigok.Title_7.BackgroundTransparency = 1
trigok.Title_7.Parent = trigok._GameHeader

trigok.UICorner_25.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_25.Parent = trigok._GameHeader

trigok.TextButton.TextWrapped = true
trigok.TextButton.Active = false
trigok.TextButton.BorderSizePixel = 0
trigok.TextButton.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.TextButton.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextButton.Position = UDim2.new(0.0264026, 0, 0.157089, 0)
trigok.TextButton.TextSize = 16
trigok.TextButton.Size = UDim2.new(0.950495, 0, 0.1, 0)
trigok.TextButton.TextColor3 = Color3.fromRGB(180, 193, 216)
trigok.TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextButton.Text = "No scripts found for this game..."
trigok.TextButton.Parent = trigok.scriptsFrame

trigok.UICorner_26.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_26.Parent = trigok.TextButton

trigok.localscriptsFrame.BorderSizePixel = 0
trigok.localscriptsFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trigok.localscriptsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.localscriptsFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.localscriptsFrame.Size = UDim2.new(0.43768, 0, 1, 0)
trigok.localscriptsFrame.BackgroundTransparency = 0.35
trigok.localscriptsFrame.Active = true
trigok.localscriptsFrame.ScrollBarImageTransparency = 0.64
trigok.localscriptsFrame.ScrollBarThickness = 5
trigok.localscriptsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.localscriptsFrame.Name = "localscriptsFrame"
trigok.localscriptsFrame.Position = UDim2.new(0.56232, 0, 0, 0)
trigok.localscriptsFrame.Parent = trigok.homeFrame

trigok.UICorner_27.CornerRadius = UDim.new(1, 0)
trigok.UICorner_27.Parent = trigok.localscriptsFrame

trigok.UIListLayout_14.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_14.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_14.Padding = UDim.new(0.01, 0)
trigok.UIListLayout_14.Parent = trigok.localscriptsFrame

trigok._GameHeader_1.BorderSizePixel = 0
trigok._GameHeader_1.Size = UDim2.new(1, 0, 0.157089, 0)
trigok._GameHeader_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok._GameHeader_1.Name = "#GameHeader"
trigok._GameHeader_1.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trigok._GameHeader_1.Parent = trigok.localscriptsFrame

trigok.Title_8.TextWrapped = true
trigok.Title_8.BorderSizePixel = 0
trigok.Title_8.TextScaled = true
trigok.Title_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_8.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_8.TextSize = 14
trigok.Title_8.Name = "Title"
trigok.Title_8.Size = UDim2.new(0.631911, 0, 0.572671, 0)
trigok.Title_8.TextColor3 = Color3.fromRGB(180, 193, 216)
trigok.Title_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_8.Text = "Local Scripts"
trigok.Title_8.Position = UDim2.new(0, 0, 0.2, 0)
trigok.Title_8.BackgroundTransparency = 1
trigok.Title_8.Parent = trigok._GameHeader_1

trigok.UICorner_28.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_28.Parent = trigok._GameHeader_1

trigok.Add_btn.BorderSizePixel = 0
trigok.Add_btn.Size = UDim2.new(0.345421, 0, 0.482072, 0)
trigok.Add_btn.Position = UDim2.new(0.63191, 0, 0.290598, 0)
trigok.Add_btn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Add_btn.Name = "Add_btn"
trigok.Add_btn.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.Add_btn.Parent = trigok._GameHeader_1

trigok.TextButton_1.TextWrapped = true
trigok.TextButton_1.BorderSizePixel = 0
trigok.TextButton_1.RichText = true
trigok.TextButton_1.TextScaled = true
trigok.TextButton_1.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.TextButton_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextButton_1.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trigok.TextButton_1.TextSize = 14
trigok.TextButton_1.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trigok.TextButton_1.TextColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextButton_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextButton_1.Text = "+ Add Script"
trigok.TextButton_1.BackgroundTransparency = 1
trigok.TextButton_1.Parent = trigok.Add_btn

trigok.UICorner_29.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_29.Parent = trigok.Add_btn

trigok.script_placeholder.BorderSizePixel = 0
trigok.script_placeholder.Size = UDim2.new(0.967878, 0, 0.1, 0)
trigok.script_placeholder.Position = UDim2.new(0.0204618, 0, 0.167089, 0)
trigok.script_placeholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.script_placeholder.ClipsDescendants = true
trigok.script_placeholder.Name = "script_placeholder"
trigok.script_placeholder.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.script_placeholder.Parent = trigok.localscriptsFrame

trigok.scriptTitle.TextWrapped = true
trigok.scriptTitle.BorderSizePixel = 0
trigok.scriptTitle.TextScaled = true
trigok.scriptTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.scriptTitle.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.scriptTitle.ClipsDescendants = true
trigok.scriptTitle.TextSize = 14
trigok.scriptTitle.Name = "scriptTitle"
trigok.scriptTitle.Size = UDim2.new(0.598337, 0, 0.484707, 0)
trigok.scriptTitle.TextColor3 = Color3.fromRGB(180, 193, 216)
trigok.scriptTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.scriptTitle.Text = "Local Scripts"
trigok.scriptTitle.Position = UDim2.new(0.0255949, 0, 0.247684, 0)
trigok.scriptTitle.BackgroundTransparency = 1
trigok.scriptTitle.TextXAlignment = Enum.TextXAlignment.Left
trigok.scriptTitle.Parent = trigok.script_placeholder

trigok.Buttons_1.BorderSizePixel = 0
trigok.Buttons_1.Size = UDim2.new(0.32274, 0, 0.81382, 0)
trigok.Buttons_1.Position = UDim2.new(0.665989, 0, 0.0859291, 0)
trigok.Buttons_1.BackgroundTransparency = 1
trigok.Buttons_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Buttons_1.Name = "Buttons"
trigok.Buttons_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Buttons_1.Parent = trigok.script_placeholder

trigok.UIListLayout_15.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_15.HorizontalAlignment = Enum.HorizontalAlignment.Right
trigok.UIListLayout_15.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_15.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_15.Padding = UDim.new(0.015, 0)
trigok.UIListLayout_15.Parent = trigok.Buttons_1

trigok.run.BorderSizePixel = 0
trigok.run.Size = UDim2.new(0.219148, 0, 1, 0)
trigok.run.Position = UDim2.new(0.780852, 0, 0, 0)
trigok.run.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.run.Name = "run"
trigok.run.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.run.Parent = trigok.Buttons_1

trigok.UIListLayout_16.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_16.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_16.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_16.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_16.Parent = trigok.run

trigok.UICorner_30.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_30.Parent = trigok.run

trigok.button_2.ZIndex = 2
trigok.button_2.BorderSizePixel = 0
trigok.button_2.ScaleType = Enum.ScaleType.Fit
trigok.button_2.Image = "rbxassetid://3926305904"
trigok.button_2.ImageRectSize = Vector2.new(36, 36)
trigok.button_2.Size = UDim2.new(0.5, 0, 0.5, 0)
trigok.button_2.Name = "button"
trigok.button_2.BackgroundTransparency = 1
trigok.button_2.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.button_2.ImageRectOffset = Vector2.new(404, 844)
trigok.button_2.Parent = trigok.run

trigok.autoload.BorderSizePixel = 0
trigok.autoload.Size = UDim2.new(0.627535, 0, 1, 0)
trigok.autoload.Position = UDim2.new(0.0928736, 0, 0, 0)
trigok.autoload.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.autoload.Name = "autoload"
trigok.autoload.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.autoload.Parent = trigok.Buttons_1

trigok.UIListLayout_17.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_17.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_17.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_17.Parent = trigok.autoload

trigok.button_3.ZIndex = 2
trigok.button_3.BorderSizePixel = 0
trigok.button_3.ScaleType = Enum.ScaleType.Fit
trigok.button_3.Image = "rbxassetid://3926305904"
trigok.button_3.ImageRectSize = Vector2.new(36, 36)
trigok.button_3.Size = UDim2.new(0.31389, 0, 0.496509, 0)
trigok.button_3.Name = "button"
trigok.button_3.LayoutOrder = 1
trigok.button_3.BackgroundTransparency = 1
trigok.button_3.Position = UDim2.new(0, 0, 0.251746, 0)
trigok.button_3.ImageRectOffset = Vector2.new(724, 724)
trigok.button_3.Parent = trigok.autoload

trigok.zz.TextWrapped = true
trigok.zz.BorderSizePixel = 0
trigok.zz.RichText = true
trigok.zz.TextScaled = true
trigok.zz.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.zz.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.zz.TextSize = 14
trigok.zz.Name = "zz"
trigok.zz.Size = UDim2.new(0.592892, 0, 0.503491, 0)
trigok.zz.TextColor3 = Color3.fromRGB(240, 240, 240)
trigok.zz.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.zz.Text = "AutoExecute"
trigok.zz.Position = UDim2.new(0.355672, 0, 0.248254, 0)
trigok.zz.BackgroundTransparency = 1
trigok.zz.Parent = trigok.autoload

trigok.UICorner_31.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_31.Parent = trigok.autoload

trigok.delete.BorderSizePixel = 0
trigok.delete.Size = UDim2.new(0.219148, 0, 1, 0)
trigok.delete.Position = UDim2.new(0.780852, 0, 0, 0)
trigok.delete.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.delete.Name = "delete"
trigok.delete.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.delete.Parent = trigok.Buttons_1

trigok.UIListLayout_18.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_18.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_18.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_18.ItemLineAlignment = Enum.ItemLineAlignment.Center
trigok.UIListLayout_18.Parent = trigok.delete

trigok.UICorner_32.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_32.Parent = trigok.delete

trigok.button_4.ZIndex = 2
trigok.button_4.BorderSizePixel = 0
trigok.button_4.ScaleType = Enum.ScaleType.Fit
trigok.button_4.Image = "rbxassetid://3926305904"
trigok.button_4.ImageRectSize = Vector2.new(36, 36)
trigok.button_4.Size = UDim2.new(0.5, 0, 0.5, 0)
trigok.button_4.Name = "button"
trigok.button_4.BackgroundTransparency = 1
trigok.button_4.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.button_4.ImageRectOffset = Vector2.new(644, 724)
trigok.button_4.Parent = trigok.delete

trigok.UICorner_33.CornerRadius = UDim.new(0.06, 0)
trigok.UICorner_33.Parent = trigok.script_placeholder

trigok.addlocalscriptsFrame.BorderSizePixel = 0
trigok.addlocalscriptsFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trigok.addlocalscriptsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.addlocalscriptsFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.addlocalscriptsFrame.Size = UDim2.new(0.43768, 0, 1, 0)
trigok.addlocalscriptsFrame.BackgroundTransparency = 0.35
trigok.addlocalscriptsFrame.Active = true
trigok.addlocalscriptsFrame.ScrollBarImageTransparency = 0.64
trigok.addlocalscriptsFrame.ScrollBarThickness = 5
trigok.addlocalscriptsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.addlocalscriptsFrame.Name = "addlocalscriptsFrame"
trigok.addlocalscriptsFrame.Position = UDim2.new(0.56232, 0, 0, 0)
trigok.addlocalscriptsFrame.Parent = trigok.homeFrame

trigok.UICorner_34.CornerRadius = UDim.new(1, 0)
trigok.UICorner_34.Parent = trigok.addlocalscriptsFrame

trigok.UIListLayout_19.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_19.SortOrder = Enum.SortOrder.LayoutOrder
trigok.UIListLayout_19.Padding = UDim.new(0.01, 0)
trigok.UIListLayout_19.Parent = trigok.addlocalscriptsFrame

trigok._GameHeader_2.BorderSizePixel = 0
trigok._GameHeader_2.Size = UDim2.new(1, 0, 0.157089, 0)
trigok._GameHeader_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok._GameHeader_2.Name = "#GameHeader"
trigok._GameHeader_2.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trigok._GameHeader_2.Parent = trigok.addlocalscriptsFrame

trigok.Title_9.TextWrapped = true
trigok.Title_9.BorderSizePixel = 0
trigok.Title_9.TextScaled = true
trigok.Title_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_9.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_9.TextSize = 14
trigok.Title_9.Name = "Title"
trigok.Title_9.Size = UDim2.new(0.631911, 0, 0.572671, 0)
trigok.Title_9.TextColor3 = Color3.fromRGB(180, 193, 216)
trigok.Title_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_9.Text = "Local Scripts"
trigok.Title_9.Position = UDim2.new(0, 0, 0.2, 0)
trigok.Title_9.BackgroundTransparency = 1
trigok.Title_9.Parent = trigok._GameHeader_2

trigok.UICorner_35.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_35.Parent = trigok._GameHeader_2

trigok.Frame.BorderSizePixel = 0
trigok.Frame.Size = UDim2.new(0.345421, 0, 0.482072, 0)
trigok.Frame.Position = UDim2.new(0.63191, 0, 0.290598, 0)
trigok.Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Frame.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.Frame.Parent = trigok._GameHeader_2

trigok.TextButton_2.TextWrapped = true
trigok.TextButton_2.BorderSizePixel = 0
trigok.TextButton_2.RichText = true
trigok.TextButton_2.TextScaled = true
trigok.TextButton_2.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.TextButton_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextButton_2.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trigok.TextButton_2.TextSize = 14
trigok.TextButton_2.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trigok.TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextButton_2.Text = "+ Add Script"
trigok.TextButton_2.BackgroundTransparency = 1
trigok.TextButton_2.Parent = trigok.Frame

trigok.UICorner_36.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_36.Parent = trigok.Frame

trigok.addFrame.BorderSizePixel = 0
trigok.addFrame.Size = UDim2.new(1, 0, 0.529673, 0)
trigok.addFrame.Position = UDim2.new(0, 0, 0.178546, 0)
trigok.addFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.addFrame.Name = "addFrame"
trigok.addFrame.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trigok.addFrame.Parent = trigok.addlocalscriptsFrame

trigok.input.BorderSizePixel = 0
trigok.input.Size = UDim2.new(1, 0, 0.178707, 0)
trigok.input.Position = UDim2.new(0, 0, 0.491846, 0)
trigok.input.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.input.Name = "input"
trigok.input.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.input.Parent = trigok.addFrame

trigok.TextBox_1.TextWrapped = true
trigok.TextBox_1.BorderSizePixel = 0
trigok.TextBox_1.RichText = true
trigok.TextBox_1.TextScaled = true
trigok.TextBox_1.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.TextBox_1.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextBox_1.Position = UDim2.new(0.0158423, 0, 0.172555, 0)
trigok.TextBox_1.PlaceholderText = "{Text and Numbers Only}"
trigok.TextBox_1.TextSize = 14
trigok.TextBox_1.Size = UDim2.new(0.961489, 0, 0.645422, 0)
trigok.TextBox_1.TextColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextBox_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextBox_1.Text = ""
trigok.TextBox_1.ClearTextOnFocus = false
trigok.TextBox_1.Parent = trigok.input

trigok.Title_10.TextWrapped = true
trigok.Title_10.BorderSizePixel = 0
trigok.Title_10.TextScaled = true
trigok.Title_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_10.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_10.TextSize = 14
trigok.Title_10.Name = "Title"
trigok.Title_10.Size = UDim2.new(0.261373, 0, 0.111787, 0)
trigok.Title_10.TextColor3 = Color3.fromRGB(180, 193, 216)
trigok.Title_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_10.Text = "Script Name:"
trigok.Title_10.Position = UDim2.new(0.00832818, 0, 0.361132, 0)
trigok.Title_10.BackgroundTransparency = 1
trigok.Title_10.Parent = trigok.addFrame

trigok.TextLabel_5.TextWrapped = true
trigok.TextLabel_5.BorderSizePixel = 0
trigok.TextLabel_5.TextScaled = true
trigok.TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextLabel_5.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextLabel_5.TextSize = 14
trigok.TextLabel_5.Size = UDim2.new(0.961488, 0, 0.222536, 0)
trigok.TextLabel_5.TextColor3 = Color3.fromRGB(225, 225, 225)
trigok.TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextLabel_5.Text = "Note: You just need to set the script name. The script will be added from your clipboard, so make sure to copy it before adding it."
trigok.TextLabel_5.Position = UDim2.new(0.0158422, 0, 0.0507511, 0)
trigok.TextLabel_5.BackgroundTransparency = 1
trigok.TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left
trigok.TextLabel_5.Parent = trigok.addFrame

trigok.confrim_btn.BorderSizePixel = 0
trigok.confrim_btn.Size = UDim2.new(0.345421, 0, 0.157611, 0)
trigok.confrim_btn.Position = UDim2.new(0.542995, 0, 0.709694, 0)
trigok.confrim_btn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.confrim_btn.Name = "confrim_btn"
trigok.confrim_btn.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.confrim_btn.Parent = trigok.addFrame

trigok.TextButton_3.TextWrapped = true
trigok.TextButton_3.BorderSizePixel = 0
trigok.TextButton_3.RichText = true
trigok.TextButton_3.TextScaled = true
trigok.TextButton_3.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.TextButton_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextButton_3.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trigok.TextButton_3.TextSize = 14
trigok.TextButton_3.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trigok.TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextButton_3.Text = "Confrim"
trigok.TextButton_3.BackgroundTransparency = 1
trigok.TextButton_3.Parent = trigok.confrim_btn

trigok.UICorner_37.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_37.Parent = trigok.confrim_btn

trigok.cancel_btn.BorderSizePixel = 0
trigok.cancel_btn.Size = UDim2.new(0.345421, 0, 0.157611, 0)
trigok.cancel_btn.Position = UDim2.new(0.179819, 0, 0.709694, 0)
trigok.cancel_btn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.cancel_btn.Name = "cancel_btn"
trigok.cancel_btn.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.cancel_btn.Parent = trigok.addFrame

trigok.TextButton_4.TextWrapped = true
trigok.TextButton_4.BorderSizePixel = 0
trigok.TextButton_4.RichText = true
trigok.TextButton_4.TextScaled = true
trigok.TextButton_4.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trigok.TextButton_4.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.TextButton_4.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trigok.TextButton_4.TextSize = 14
trigok.TextButton_4.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trigok.TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
trigok.TextButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.TextButton_4.Text = "Cancel"
trigok.TextButton_4.BackgroundTransparency = 1
trigok.TextButton_4.Parent = trigok.cancel_btn

trigok.UICorner_38.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_38.Parent = trigok.cancel_btn

trigok.ExecFrame.Active = true
trigok.ExecFrame.BorderSizePixel = 0
trigok.ExecFrame.Size = UDim2.new(0.949745, 0, 0.685584, 0)
trigok.ExecFrame.Position = UDim2.new(0.0244645, 0, 0.0897571, 0)
trigok.ExecFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.ExecFrame.Visible = false
trigok.ExecFrame.Name = "ExecFrame"
trigok.ExecFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trigok.ExecFrame.Parent = trigok.MainFrame

trigok.Buttons_2.Active = true
trigok.Buttons_2.BorderSizePixel = 0
trigok.Buttons_2.Size = UDim2.new(1, 0, 0.246428, 0)
trigok.Buttons_2.Position = UDim2.new(0, 0, 0.752548, 0)
trigok.Buttons_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Buttons_2.Name = "Buttons"
trigok.Buttons_2.BackgroundColor3 = Color3.fromRGB(31, 34, 43)
trigok.Buttons_2.Parent = trigok.ExecFrame

trigok.UIListLayout_20.FillDirection = Enum.FillDirection.Horizontal
trigok.UIListLayout_20.HorizontalAlignment = Enum.HorizontalAlignment.Center
trigok.UIListLayout_20.VerticalAlignment = Enum.VerticalAlignment.Center
trigok.UIListLayout_20.Padding = UDim.new(0.01, 0)
trigok.UIListLayout_20.Parent = trigok.Buttons_2

trigok.Button1.BorderSizePixel = 3
trigok.Button1.ScaleType = Enum.ScaleType.Fit
trigok.Button1.AutoButtonColor = false
trigok.Button1.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trigok.Button1.BorderMode = Enum.BorderMode.Inset
trigok.Button1.Selectable = false
trigok.Button1.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Button1.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trigok.Button1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Button1.Name = "Button1"
trigok.Button1.Position = UDim2.new(0.145479, 0, 0.454178, 0)
trigok.Button1.Parent = trigok.Buttons_2

trigok.UIStroke_6.LineJoinMode = Enum.LineJoinMode.Miter
trigok.UIStroke_6.Thickness = 3
trigok.UIStroke_6.Color = Color3.fromRGB(60, 66, 83)
trigok.UIStroke_6.Enabled = false
trigok.UIStroke_6.Parent = trigok.Button1

trigok.UICorner_39.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_39.Parent = trigok.Button1

trigok.Title_11.TextWrapped = true
trigok.Title_11.BorderSizePixel = 0
trigok.Title_11.TextScaled = true
trigok.Title_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_11.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_11.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_11.TextSize = 100
trigok.Title_11.Name = "Title"
trigok.Title_11.Size = UDim2.new(0.340682, 0, 0.729158, 0)
trigok.Title_11.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_11.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_11.Text = "Execute"
trigok.Title_11.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Title_11.BackgroundTransparency = 1
trigok.Title_11.Parent = trigok.Button1

trigok.Button4.BorderSizePixel = 3
trigok.Button4.ScaleType = Enum.ScaleType.Fit
trigok.Button4.AutoButtonColor = false
trigok.Button4.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trigok.Button4.BorderMode = Enum.BorderMode.Inset
trigok.Button4.Selectable = false
trigok.Button4.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Button4.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trigok.Button4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Button4.Name = "Button4"
trigok.Button4.Position = UDim2.new(0.854521, 0, 0.454178, 0)
trigok.Button4.Parent = trigok.Buttons_2

trigok.Title_12.TextWrapped = true
trigok.Title_12.BorderSizePixel = 0
trigok.Title_12.TextScaled = true
trigok.Title_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_12.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_12.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_12.TextSize = 14
trigok.Title_12.Name = "Title"
trigok.Title_12.Size = UDim2.new(0.313498, 0, 0.782088, 0)
trigok.Title_12.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_12.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_12.Text = "Clear"
trigok.Title_12.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Title_12.BackgroundTransparency = 1
trigok.Title_12.Parent = trigok.Button4

trigok.UICorner_40.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_40.Parent = trigok.Button4

trigok.UIStroke_7.LineJoinMode = Enum.LineJoinMode.Miter
trigok.UIStroke_7.Thickness = 3
trigok.UIStroke_7.Color = Color3.fromRGB(60, 66, 83)
trigok.UIStroke_7.Enabled = false
trigok.UIStroke_7.Parent = trigok.Button4

trigok.Button3.BorderSizePixel = 3
trigok.Button3.ScaleType = Enum.ScaleType.Fit
trigok.Button3.AutoButtonColor = false
trigok.Button3.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trigok.Button3.BorderMode = Enum.BorderMode.Inset
trigok.Button3.Selectable = false
trigok.Button3.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Button3.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trigok.Button3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Button3.Name = "Button3"
trigok.Button3.Position = UDim2.new(0.618174, 0, 0.454178, 0)
trigok.Button3.Parent = trigok.Buttons_2

trigok.Title_13.TextWrapped = true
trigok.Title_13.BorderSizePixel = 0
trigok.Title_13.TextScaled = true
trigok.Title_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_13.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_13.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_13.TextSize = 14
trigok.Title_13.Name = "Title"
trigok.Title_13.Size = UDim2.new(0.347791, 0, 0.782034, 0)
trigok.Title_13.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_13.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_13.Text = "Paste"
trigok.Title_13.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Title_13.BackgroundTransparency = 1
trigok.Title_13.Parent = trigok.Button3

trigok.UICorner_41.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_41.Parent = trigok.Button3

trigok.UIStroke_8.LineJoinMode = Enum.LineJoinMode.Miter
trigok.UIStroke_8.Thickness = 3
trigok.UIStroke_8.Color = Color3.fromRGB(60, 66, 83)
trigok.UIStroke_8.Enabled = false
trigok.UIStroke_8.Parent = trigok.Button3

trigok.Button2.BorderSizePixel = 3
trigok.Button2.ScaleType = Enum.ScaleType.Fit
trigok.Button2.AutoButtonColor = false
trigok.Button2.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trigok.Button2.BorderMode = Enum.BorderMode.Inset
trigok.Button2.Selectable = false
trigok.Button2.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Button2.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trigok.Button2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Button2.Name = "Button2"
trigok.Button2.Position = UDim2.new(0.381826, 0, 0.454178, 0)
trigok.Button2.Parent = trigok.Buttons_2

trigok.Title_14.TextWrapped = true
trigok.Title_14.BorderSizePixel = 0
trigok.Title_14.TextScaled = true
trigok.Title_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.Title_14.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.Title_14.AnchorPoint = Vector2.new(0.5, 0.5)
trigok.Title_14.TextSize = 14
trigok.Title_14.Name = "Title"
trigok.Title_14.Size = UDim2.new(0.730181, 0, 0.653414, 0)
trigok.Title_14.TextColor3 = Color3.fromRGB(250, 250, 250)
trigok.Title_14.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.Title_14.Text = "Execute from Clipboard"
trigok.Title_14.Position = UDim2.new(0.5, 0, 0.5, 0)
trigok.Title_14.BackgroundTransparency = 1
trigok.Title_14.Parent = trigok.Button2

trigok.UICorner_42.CornerRadius = UDim.new(0.08, 0)
trigok.UICorner_42.Parent = trigok.Button2

trigok.UIStroke_9.LineJoinMode = Enum.LineJoinMode.Miter
trigok.UIStroke_9.Thickness = 3
trigok.UIStroke_9.Color = Color3.fromRGB(60, 66, 83)
trigok.UIStroke_9.Enabled = false
trigok.UIStroke_9.Parent = trigok.Button2

trigok.UICorner_43.CornerRadius = UDim.new(0.1, 0)
trigok.UICorner_43.Parent = trigok.Buttons_2

trigok.ScrollingFrame.BorderSizePixel = 0
trigok.ScrollingFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trigok.ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trigok.ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trigok.ScrollingFrame.Size = UDim2.new(0.975214, 0, 0.675238, 0)
trigok.ScrollingFrame.BackgroundTransparency = 1
trigok.ScrollingFrame.Active = true
trigok.ScrollingFrame.ScrollBarImageTransparency = 0.64
trigok.ScrollingFrame.ScrollBarThickness = 18
trigok.ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.ScrollingFrame.Position = UDim2.new(0.0167858, 0, 0.0257617, 0)
trigok.ScrollingFrame.Parent = trigok.ExecFrame

trigok.LocalScript.Parent = trigok.ScrollingFrame

trigok.ScriptBox.BorderSizePixel = 0
trigok.ScriptBox.RichText = true
trigok.ScriptBox.TextYAlignment = Enum.TextYAlignment.Top
trigok.ScriptBox.BackgroundColor3 = Color3.fromRGB(75, 0, 0)
trigok.ScriptBox.FontFace = Font.new("rbxasset://fonts/families/Nunito.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trigok.ScriptBox.BackgroundTransparency = 1
trigok.ScriptBox.AutomaticSize = Enum.AutomaticSize.Y
trigok.ScriptBox.TextSize = 30
trigok.ScriptBox.ClipsDescendants = true
trigok.ScriptBox.Size = UDim2.new(1, 0, 1, 0)
trigok.ScriptBox.TextColor3 = Color3.fromRGB(255, 255, 255)
trigok.ScriptBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
trigok.ScriptBox.Text = "-- We recommend only uisng loadstrings | Trigon Mobile v0.03 {Beta}"
trigok.ScriptBox.MultiLine = true
trigok.ScriptBox.Name = "ScriptBox"
trigok.ScriptBox.TextXAlignment = Enum.TextXAlignment.Left
trigok.ScriptBox.ClearTextOnFocus = false
trigok.ScriptBox.Parent = trigok.ScrollingFrame

trigok.Highlighter.Name = "Highlighter"
trigok.Highlighter.Parent = trigok.ScriptBox

trigok.lexer.Name = "lexer"
trigok.lexer.Parent = trigok.Highlighter

trigok.language.Name = "language"
trigok.language.Parent = trigok.lexer

trigok.theme.Name = "theme"
trigok.theme.Parent = trigok.Highlighter

trigok.types.Name = "types"
trigok.types.Parent = trigok.Highlighter

trigok.utility.Name = "utility"
trigok.utility.Parent = trigok.Highlighter

trigok.UICorner_44.CornerRadius = UDim.new(0.02, 0)
trigok.UICorner_44.Parent = trigok.ExecFrame

trigok.LocalScript_1.Parent = trigok.TrigonMain

trigok.savescripts.Name = "savescripts"
trigok.savescripts.Parent = trigok.TrigonMain
	
local modules, cache = {}, {}
		
local o_require = require;
local function require(module)
	local real, cached = modules[module], cache[module]
	
	if cached then return cached end
	
	if not real then return o_require(module) end
	
	cache[module] = real()
	
	return cache[module]
end

modules[trigok.Highlighter] = function()
	local script = trigok.Highlighter

	local types = require(script.types)
	local utility = require(script.utility)
	local theme = require(script.theme)
	
	local Highlighter = {
		defaultLexer = require(script.lexer) :: types.Lexer,
	
		_textObjectData = {} :: { [types.TextObject]: types.ObjectData },
		_cleanups = {} :: { [types.TextObject]: () -> () },
	}
	
	--[[
		Gathers the info that is needed in order to set up a line label.
	]]
	function Highlighter._getLabelingInfo(textObject: types.TextObject)
		local data = Highlighter._textObjectData[textObject]
		if not data then
			return
		end
	
		local src = utility.convertTabsToSpaces(utility.removeControlChars(textObject.Text))
		local numLines = #string.split(src, "\n")
		if numLines == 0 then
			return
		end
	
		local textBounds = utility.getTextBounds(textObject)
		local textHeight = textBounds.Y / numLines
	
		return {
			data = data,
			numLines = numLines,
			textBounds = textBounds,
			textHeight = textHeight,
			innerAbsoluteSize = utility.getInnerAbsoluteSize(textObject),
			textColor = theme.getColor("iden"),
			textFont = textObject.FontFace,
			textSize = textObject.TextSize,
			labelSize = UDim2.new(1, 0, 0, math.ceil(textHeight)),
		}
	end
	
	--[[
		Aligns and matches the line labels to the textObject.
	]]
	function Highlighter._alignLabels(textObject: types.TextObject)
		local labelingInfo = Highlighter._getLabelingInfo(textObject)
		if not labelingInfo then
			return
		end
	
		for lineNumber, lineLabel in labelingInfo.data.Labels do
			-- Align line label
			lineLabel.TextColor3 = labelingInfo.textColor
			lineLabel.FontFace = labelingInfo.textFont
			lineLabel.TextSize = labelingInfo.textSize
			lineLabel.Size = labelingInfo.labelSize
			lineLabel.Position =
				UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)
		end
	end
	
	--[[
		Creates and populates the line labels with the appropriate rich text.
	]]
	function Highlighter._populateLabels(props: types.HighlightProps)
		-- Gather props
		local textObject = props.textObject
		local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
		local lexer = props.lexer or Highlighter.defaultLexer
		local customLang = props.customLang
		local forceUpdate = props.forceUpdate
	
		-- Avoid updating when unnecessary
		local data = Highlighter._textObjectData[textObject]
		if (data == nil) or (data.Text == src) then
			if forceUpdate ~= true then
				return
			end
		end
	
		-- Ensure textObject matches sanitized src
		textObject.Text = src
	
		local lineLabels = data.Labels
		local previousLines = data.Lines
	
		local lines = string.split(src, "\n")
	
		data.Lines = lines
		data.Text = src
		data.Lexer = lexer
		data.CustomLang = customLang
	
		-- Shortcut empty textObjects
		if src == "" then
			for l = 1, #lineLabels do
				if lineLabels[l].Text == "" then
					continue
				end
				lineLabels[l].Text = ""
			end
			return
		end
	
		local idenColor = theme.getColor("iden")
		local labelingInfo = Highlighter._getLabelingInfo(textObject)
	
		local richTextBuffer, bufferIndex, lineNumber = table.create(5), 0, 1
		for token: types.TokenName, content: string in lexer.scan(src) do
			local Color = if customLang and customLang[content]
				then theme.getColor("custom")
				else theme.getColor(token) or idenColor
	
			local tokenLines = string.split(utility.sanitizeRichText(content), "\n")
	
			for l, tokenLine in tokenLines do
				-- Find line label
				local lineLabel = lineLabels[lineNumber]
				if not lineLabel then
					local newLabel = Instance.new("TextLabel")
					newLabel.Name = "Line_" .. lineNumber
					newLabel.AutoLocalize = false
					newLabel.RichText = true
					newLabel.BackgroundTransparency = 1
					newLabel.Text = ""
					newLabel.TextXAlignment = Enum.TextXAlignment.Left
					newLabel.TextYAlignment = Enum.TextYAlignment.Top
					newLabel.TextColor3 = labelingInfo.textColor
					newLabel.FontFace = labelingInfo.textFont
					newLabel.TextSize = labelingInfo.textSize
					newLabel.Size = labelingInfo.labelSize
					newLabel.Position =
						UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)
	
					newLabel.Parent = textObject.SyntaxHighlights
					lineLabels[lineNumber] = newLabel
					lineLabel = newLabel
				end
	
				-- If multiline token, then set line & move to next
				if l > 1 then
					if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
						-- Set line
						lineLabels[lineNumber].Text = table.concat(richTextBuffer)
					end
					-- Move to next line
					lineNumber += 1
					bufferIndex = 0
					table.clear(richTextBuffer)
				end
	
				-- If changed, add token to line
				if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
					bufferIndex += 1
					-- Only add RichText tags when the color is non-default and the characters are non-whitespace
					if Color ~= idenColor and string.find(tokenLine, "[%S%C]") then
						richTextBuffer[bufferIndex] = theme.getColoredRichText(Color, tokenLine)
					else
						richTextBuffer[bufferIndex] = tokenLine
					end
				end
			end
		end
	
		-- Set final line
		if richTextBuffer[1] and lineLabels[lineNumber] then
			lineLabels[lineNumber].Text = table.concat(richTextBuffer)
		end
	
		-- Clear unused line labels
		for l = lineNumber + 1, #lineLabels do
			if lineLabels[l].Text == "" then
				continue
			end
			lineLabels[l].Text = ""
		end
	end
	
	--[[
		Highlights the given textObject with the given props and returns a cleanup function.
		Highlighting will automatically update when needed, so the cleanup function will disconnect
		those connections and remove all labels.
	]]
	function Highlighter.highlight(props: types.HighlightProps): () -> ()
		-- Gather props
		local textObject = props.textObject
		local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
		local lexer = props.lexer or Highlighter.defaultLexer
		local customLang = props.customLang
	
		-- Avoid updating when unnecessary
		if Highlighter._cleanups[textObject] then
			-- Already been initialized, so just update
			Highlighter._populateLabels(props)
			Highlighter._alignLabels(textObject)
			return Highlighter._cleanups[textObject]
		end
	
		-- Ensure valid object properties
		textObject.RichText = false
		textObject.Text = src
		textObject.TextXAlignment = Enum.TextXAlignment.Left
		textObject.TextYAlignment = Enum.TextYAlignment.Top
		textObject.BackgroundColor3 = theme.getColor("background")
		textObject.TextColor3 = theme.getColor("iden")
		textObject.TextTransparency = 0.5
	
		-- Build the highlight labels
		local lineFolder = textObject:FindFirstChild("SyntaxHighlights")
		if lineFolder == nil then
			local newLineFolder = Instance.new("Folder")
			newLineFolder.Name = "SyntaxHighlights"
			newLineFolder.Parent = textObject
	
			lineFolder = newLineFolder
		end
	
		local data = {
			Text = "",
			Labels = {},
			Lines = {},
			Lexer = lexer,
			CustomLang = customLang,
		}
		Highlighter._textObjectData[textObject] = data
	
		-- Add a cleanup handler for this textObject
		local connections: { [string]: RBXScriptConnection } = {}
		local function cleanup()
			lineFolder:Destroy()
	
			Highlighter._textObjectData[textObject] = nil
			Highlighter._cleanups[textObject] = nil
	
			for _key, connection in connections do
				connection:Disconnect()
			end
			table.clear(connections)
		end
		Highlighter._cleanups[textObject] = cleanup
	
		connections["AncestryChanged"] = textObject.AncestryChanged:Connect(function()
			if textObject.Parent then
				return
			end
	
			cleanup()
		end)
		connections["TextChanged"] = textObject:GetPropertyChangedSignal("Text"):Connect(function()
			Highlighter._populateLabels(props)
		end)
		connections["TextBoundsChanged"] = textObject:GetPropertyChangedSignal("TextBounds"):Connect(function()
			Highlighter._alignLabels(textObject)
		end)
		connections["AbsoluteSizeChanged"] = textObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
			Highlighter._alignLabels(textObject)
		end)
		connections["FontFaceChanged"] = textObject:GetPropertyChangedSignal("FontFace"):Connect(function()
			Highlighter._alignLabels(textObject)
		end)
	
		-- Populate the labels
		Highlighter._populateLabels(props)
		Highlighter._alignLabels(textObject)
	
		return cleanup
	end
	
	--[[
		Refreshes all highlighted textObjects. Used when the theme changes.
	]]
	function Highlighter.refresh(): ()
		-- Rehighlight existing labels using latest colors
		for textObject, data in Highlighter._textObjectData do
			for _, lineLabel in data.Labels do
				lineLabel.TextColor3 = theme.getColor("iden")
			end
	
			Highlighter.highlight({
				textObject = textObject,
				forceUpdate = true,
				src = data.Text,
				lexer = data.Lexer,
				customLang = data.CustomLang,
			})
		end
	end
	
	--[[
		Sets the token colors to the given colors and refreshes all highlighted textObjects.
	]]
	function Highlighter.setTokenColors(colors: types.TokenColors): ()
		theme.setColors(colors)
	
		Highlighter.refresh()
	end
	
	--[[
		Gets a token color by name.
		Mainly useful for setting "background" token color on other UI objects behind your text.
	]]
	function Highlighter.getTokenColor(tokenName: types.TokenName): Color3
		return theme.getColor(tokenName)
	end
	
	--[[
		Matches the token colors to the Studio theme settings and refreshes all highlighted textObjects.
		Does nothing when not run in a Studio plugin.
	]]
	function Highlighter.matchStudioSettings(): ()
		local applied = theme.matchStudioSettings(Highlighter.refresh)
		if applied then
			Highlighter.refresh()
		end
	end
	
	return Highlighter
	
end

modules[trigok.lexer] = function()
	local script = trigok.lexer

	--[=[
		Lexical scanner for creating a sequence of tokens from Lua source code.
		This is a heavily modified and Roblox-optimized version of
		the original Penlight Lexer module:
			https://github.com/stevedonovan/Penlight
		Authors:
			stevedonovan <https://github.com/stevedonovan> ----------- Original Penlight lexer author
			ryanjmulder <https://github.com/ryanjmulder> ------------- Penlight lexer contributer
			mpeterv <https://github.com/mpeterv> --------------------- Penlight lexer contributer
			Tieske <https://github.com/Tieske> ----------------------- Penlight lexer contributer
			boatbomber <https://github.com/boatbomber> --------------- Roblox port, added builtin token,
																		added patterns for incomplete syntax, bug fixes,
																		behavior changes, token optimization, thread optimization
																		Added lexer.navigator() for non-sequential reads
			Sleitnick <https://github.com/Sleitnick> ----------------- Roblox optimizations
			howmanysmall <https://github.com/howmanysmall> ----------- Lua + Roblox optimizations
	
		List of possible tokens:
			- iden
			- keyword
			- builtin
			- string
			- number
			- comment
			- operator
	--]=]
	
	local lexer = {}
	
	local Prefix, Suffix, Cleaner = "^[%c%s]*", "[%c%s]*", "[%c%s]+"
	local UNICODE = "[%z\x01-\x7F\xC2-\xF4][\x80-\xBF]+"
	local NUMBER_A = "0[xX][%da-fA-F_]+"
	local NUMBER_B = "0[bB][01_]+"
	local NUMBER_C = "%d+%.?%d*[eE][%+%-]?%d+"
	local NUMBER_D = "%d+[%._]?[%d_eE]*"
	local OPERATORS = "[:;<>/~%*%(%)%-={},%.#%^%+%%]+"
	local BRACKETS = "[%[%]]+" -- needs to be separate pattern from other operators or it'll mess up multiline strings
	local IDEN = "[%a_][%w_]*"
	local STRING_EMPTY = "(['\"])%1" --Empty String
	local STRING_PLAIN = "(['\"])[^\n]-([^\\]%1)" --TODO: Handle escaping escapes
	local STRING_INTER = "`[^\n]-`"
	local STRING_INCOMP_A = "(['\"]).-\n" --Incompleted String with next line
	local STRING_INCOMP_B = "(['\"])[^\n]*" --Incompleted String without next line
	local STRING_MULTI = "%[(=*)%[.-%]%1%]" --Multiline-String
	local STRING_MULTI_INCOMP = "%[=*%[.-.*" --Incompleted Multiline-String
	local COMMENT_MULTI = "%-%-%[(=*)%[.-%]%1%]" --Completed Multiline-Comment
	local COMMENT_MULTI_INCOMP = "%-%-%[=*%[.-.*" --Incompleted Multiline-Comment
	local COMMENT_PLAIN = "%-%-.-\n" --Completed Singleline-Comment
	local COMMENT_INCOMP = "%-%-.*" --Incompleted Singleline-Comment
	-- local TYPED_VAR = ":%s*([%w%?%| \t]+%s*)" --Typed variable, parameter, function
	
	local lang = require(script.language)
	local lua_keyword = lang.keyword
	local lua_builtin = lang.builtin
	local lua_libraries = lang.libraries
	
	lexer.language = lang
	
	local lua_matches = {
		-- Indentifiers
		{ Prefix .. IDEN .. Suffix, "var" },
	
		-- Numbers
		{ Prefix .. NUMBER_A .. Suffix, "number" },
		{ Prefix .. NUMBER_B .. Suffix, "number" },
		{ Prefix .. NUMBER_C .. Suffix, "number" },
		{ Prefix .. NUMBER_D .. Suffix, "number" },
	
		-- Strings
		{ Prefix .. STRING_EMPTY .. Suffix, "string" },
		{ Prefix .. STRING_PLAIN .. Suffix, "string" },
		{ Prefix .. STRING_INCOMP_A .. Suffix, "string" },
		{ Prefix .. STRING_INCOMP_B .. Suffix, "string" },
		{ Prefix .. STRING_MULTI .. Suffix, "string" },
		{ Prefix .. STRING_MULTI_INCOMP .. Suffix, "string" },
		{ Prefix .. STRING_INTER .. Suffix, "string_inter" },
	
		-- Comments
		{ Prefix .. COMMENT_MULTI .. Suffix, "comment" },
		{ Prefix .. COMMENT_MULTI_INCOMP .. Suffix, "comment" },
		{ Prefix .. COMMENT_PLAIN .. Suffix, "comment" },
		{ Prefix .. COMMENT_INCOMP .. Suffix, "comment" },
	
		-- Operators
		{ Prefix .. OPERATORS .. Suffix, "operator" },
		{ Prefix .. BRACKETS .. Suffix, "operator" },
	
		-- Unicode
		{ Prefix .. UNICODE .. Suffix, "iden" },
	
		-- Unknown
		{ "^.", "iden" },
	}
	
	-- To reduce the amount of table indexing during lexing, we separate the matches now
	local PATTERNS, TOKENS = {}, {}
	for i, m in lua_matches do
		PATTERNS[i] = m[1]
		TOKENS[i] = m[2]
	end
	
	--- Create a plain token iterator from a string.
	-- @tparam string s a string.
	
	function lexer.scan(s: string)
		local index = 1
		local size = #s
		local previousContent1, previousContent2, previousContent3, previousToken = "", "", "", ""
	
		local thread = coroutine.create(function()
			while index <= size do
				local matched = false
				for tokenType, pattern in ipairs(PATTERNS) do
					-- Find match
					local start, finish = string.find(s, pattern, index)
					if start == nil then
						continue
					end
	
					-- Move head
					index = finish + 1
					matched = true
	
					-- Gather results
					local content = string.sub(s, start, finish)
					local rawToken = TOKENS[tokenType]
					local processedToken = rawToken
	
					-- Process token
					if rawToken == "var" then
						-- Since we merge spaces into the tok, we need to remove them
						-- in order to check the actual word it contains
						local cleanContent = string.gsub(content, Cleaner, "")
	
						if lua_keyword[cleanContent] then
							processedToken = "keyword"
						elseif lua_builtin[cleanContent] then
							processedToken = "builtin"
						elseif string.find(previousContent1, "%.[%s%c]*$") and previousToken ~= "comment" then
							-- The previous was a . so we need to special case indexing things
							local parent = string.gsub(previousContent2, Cleaner, "")
							local lib = lua_libraries[parent]
							if lib and lib[cleanContent] and not string.find(previousContent3, "%.[%s%c]*$") then
								-- Indexing a builtin lib with existing item, treat as a builtin
								processedToken = "builtin"
							else
								-- Indexing a non builtin, can't be treated as a keyword/builtin
								processedToken = "iden"
							end
							-- print("indexing",parent,"with",cleanTok,"as",t2)
						else
							processedToken = "iden"
						end
					elseif rawToken == "string_inter" then
						if not string.find(content, "[^\\]{") then
							-- This inter string doesnt actually have any inters
							processedToken = "string"
						else
							-- We're gonna do our own yields, so the main loop won't need to
							-- Our yields will be a mix of string and whatever is inside the inters
							processedToken = nil
	
							local isString = true
							local subIndex = 1
							local subSize = #content
							while subIndex <= subSize do
								-- Find next brace
								local subStart, subFinish = string.find(content, "^.-[^\\][{}]", subIndex)
								if subStart == nil then
									-- No more braces, all string
									coroutine.yield("string", string.sub(content, subIndex))
									break
								end
	
								if isString then
									-- We are currently a string
									subIndex = subFinish + 1
									coroutine.yield("string", string.sub(content, subStart, subFinish))
	
									-- This brace opens code
									isString = false
								else
									-- We are currently in code
									subIndex = subFinish
									local subContent = string.sub(content, subStart, subFinish - 1)
									for innerToken, innerContent in lexer.scan(subContent) do
										coroutine.yield(innerToken, innerContent)
									end
	
									-- This brace opens string/closes code
									isString = true
								end
							end
						end
					end
	
					-- Record last 3 tokens for the indexing context check
					previousContent3 = previousContent2
					previousContent2 = previousContent1
					previousContent1 = content
					previousToken = processedToken or rawToken
					if processedToken then
						coroutine.yield(processedToken, content)
					end
					break
				end
	
				-- No matches found
				if not matched then
					return
				end
			end
	
			-- Completed the scan
			return
		end)
	
		return function()
			if coroutine.status(thread) == "dead" then
				return
			end
	
			local success, token, content = coroutine.resume(thread)
			if success and token then
				return token, content
			end
	
			return
		end
	end
	
	function lexer.navigator()
		local nav = {
			Source = "",
			TokenCache = table.create(50),
	
			_RealIndex = 0,
			_UserIndex = 0,
			_ScanThread = nil,
		}
	
		function nav:Destroy()
			self.Source = nil
			self._RealIndex = nil
			self._UserIndex = nil
			self.TokenCache = nil
			self._ScanThread = nil
		end
	
		function nav:SetSource(SourceString)
			self.Source = SourceString
	
			self._RealIndex = 0
			self._UserIndex = 0
			table.clear(self.TokenCache)
	
			self._ScanThread = coroutine.create(function()
				for Token, Src in lexer.scan(self.Source) do
					self._RealIndex += 1
					self.TokenCache[self._RealIndex] = { Token, Src }
					coroutine.yield(Token, Src)
				end
			end)
		end
	
		function nav.Next()
			nav._UserIndex += 1
	
			if nav._RealIndex >= nav._UserIndex then
				-- Already scanned, return cached
				return table.unpack(nav.TokenCache[nav._UserIndex])
			else
				if coroutine.status(nav._ScanThread) == "dead" then
					-- Scan thread dead
					return
				else
					local success, token, src = coroutine.resume(nav._ScanThread)
					if success and token then
						-- Scanned new data
						return token, src
					else
						-- Lex completed
						return
					end
				end
			end
		end
	
		function nav.Peek(PeekAmount)
			local GoalIndex = nav._UserIndex + PeekAmount
	
			if nav._RealIndex >= GoalIndex then
				-- Already scanned, return cached
				if GoalIndex > 0 then
					return table.unpack(nav.TokenCache[GoalIndex])
				else
					-- Invalid peek
					return
				end
			else
				if coroutine.status(nav._ScanThread) == "dead" then
					-- Scan thread dead
					return
				else
					local IterationsAway = GoalIndex - nav._RealIndex
	
					local success, token, src = nil, nil, nil
	
					for _ = 1, IterationsAway do
						success, token, src = coroutine.resume(nav._ScanThread)
						if not (success or token) then
							-- Lex completed
							break
						end
					end
	
					return token, src
				end
			end
		end
	
		return nav
	end
	
	return lexer
	
end

modules[trigok.language] = function()
	local script = trigok.language

	local language = {
		keyword = {
			["and"] = "keyword",
			["break"] = "keyword",
			["continue"] = "keyword",
			["do"] = "keyword",
			["else"] = "keyword",
			["elseif"] = "keyword",
			["end"] = "keyword",
			["export"] = "keyword",
			["false"] = "keyword",
			["for"] = "keyword",
			["function"] = "keyword",
			["if"] = "keyword",
			["in"] = "keyword",
			["local"] = "keyword",
			["nil"] = "keyword",
			["not"] = "keyword",
			["or"] = "keyword",
			["repeat"] = "keyword",
			["return"] = "keyword",
			["self"] = "keyword",
			["then"] = "keyword",
			["true"] = "keyword",
			["type"] = "keyword",
			["typeof"] = "keyword",
			["until"] = "keyword",
			["while"] = "keyword",
		},
	
		builtin = {
			-- Luau Functions
			["assert"] = "function",
			["error"] = "function",
			["getfenv"] = "function",
			["getmetatable"] = "function",
			["ipairs"] = "function",
			["loadstring"] = "function",
			["newproxy"] = "function",
			["next"] = "function",
			["pairs"] = "function",
			["pcall"] = "function",
			["print"] = "function",
			["rawequal"] = "function",
			["rawget"] = "function",
			["rawlen"] = "function",
			["rawset"] = "function",
			["select"] = "function",
			["setfenv"] = "function",
			["setmetatable"] = "function",
			["tonumber"] = "function",
			["tostring"] = "function",
			["unpack"] = "function",
			["xpcall"] = "function",
	
			-- Luau Functions (Deprecated)
			["collectgarbage"] = "function",
	
			-- Luau Variables
			["_G"] = "table",
			["_VERSION"] = "string",
	
			-- Luau Tables
			["bit32"] = "table",
			["coroutine"] = "table",
			["debug"] = "table",
			["math"] = "table",
			["os"] = "table",
			["string"] = "table",
			["table"] = "table",
			["utf8"] = "table",
	
			-- Roblox Functions
			["DebuggerManager"] = "function",
			["delay"] = "function",
			["gcinfo"] = "function",
			["PluginManager"] = "function",
			["require"] = "function",
			["settings"] = "function",
			["spawn"] = "function",
			["tick"] = "function",
			["time"] = "function",
			["UserSettings"] = "function",
			["wait"] = "function",
			["warn"] = "function",
	
			-- Roblox Functions (Deprecated)
			["Delay"] = "function",
			["ElapsedTime"] = "function",
			["elapsedTime"] = "function",
			["printidentity"] = "function",
			["Spawn"] = "function",
			["Stats"] = "function",
			["stats"] = "function",
			["Version"] = "function",
			["version"] = "function",
			["Wait"] = "function",
			["ypcall"] = "function",
	
			-- Roblox Variables
			["game"] = "Instance",
			["plugin"] = "Instance",
			["script"] = "Instance",
			["shared"] = "Instance",
			["workspace"] = "Instance",
	
			-- Roblox Variables (Deprecated)
			["Game"] = "Instance",
			["Workspace"] = "Instance",
	
			-- Roblox Tables
			["Axes"] = "table",
			["BrickColor"] = "table",
			["CatalogSearchParams"] = "table",
			["CFrame"] = "table",
			["Color3"] = "table",
			["ColorSequence"] = "table",
			["ColorSequenceKeypoint"] = "table",
			["DateTime"] = "table",
			["DockWidgetPluginGuiInfo"] = "table",
			["Enum"] = "table",
			["Faces"] = "table",
			["FloatCurveKey"] = "table",
			["Font"] = "table",
			["Instance"] = "table",
			["NumberRange"] = "table",
			["NumberSequence"] = "table",
			["NumberSequenceKeypoint"] = "table",
			["OverlapParams"] = "table",
			["PathWaypoint"] = "table",
			["PhysicalProperties"] = "table",
			["Random"] = "table",
			["Ray"] = "table",
			["RaycastParams"] = "table",
			["Rect"] = "table",
			["Region3"] = "table",
			["Region3int16"] = "table",
			["RotationCurveKey"] = "table",
			["SharedTable"] = "table",
			["task"] = "table",
			["TweenInfo"] = "table",
			["UDim"] = "table",
			["UDim2"] = "table",
			["Vector2"] = "table",
			["Vector2int16"] = "table",
			["Vector3"] = "table",
			["Vector3int16"] = "table",
		},
	
		libraries = {
	
			-- Luau Libraries
			bit32 = {
				arshift = "function",
				band = "function",
				bnot = "function",
				bor = "function",
				btest = "function",
				bxor = "function",
				countlz = "function",
				countrz = "function",
				extract = "function",
				lrotate = "function",
				lshift = "function",
				replace = "function",
				rrotate = "function",
				rshift = "function",
			},
	
			coroutine = {
				close = "function",
				create = "function",
				isyieldable = "function",
				resume = "function",
				running = "function",
				status = "function",
				wrap = "function",
				yield = "function",
			},
	
			debug = {
				dumpheap = "function",
				getmemorycategory = "function",
				info = "function",
				loadmodule = "function",
				profilebegin = "function",
				profileend = "function",
				resetmemorycategory = "function",
				setmemorycategory = "function",
				traceback = "function",
			},
	
			math = {
				abs = "function",
				acos = "function",
				asin = "function",
				atan2 = "function",
				atan = "function",
				ceil = "function",
				clamp = "function",
				cos = "function",
				cosh = "function",
				deg = "function",
				exp = "function",
				floor = "function",
				fmod = "function",
				frexp = "function",
				ldexp = "function",
				log10 = "function",
				log = "function",
				max = "function",
				min = "function",
				modf = "function",
				noise = "function",
				pow = "function",
				rad = "function",
				random = "function",
				randomseed = "function",
				round = "function",
				sign = "function",
				sin = "function",
				sinh = "function",
				sqrt = "function",
				tan = "function",
				tanh = "function",
	
				huge = "number",
				pi = "number",
			},
	
			os = {
				clock = "function",
				date = "function",
				difftime = "function",
				time = "function",
			},
	
			string = {
				byte = "function",
				char = "function",
				find = "function",
				format = "function",
				gmatch = "function",
				gsub = "function",
				len = "function",
				lower = "function",
				match = "function",
				pack = "function",
				packsize = "function",
				rep = "function",
				reverse = "function",
				split = "function",
				sub = "function",
				unpack = "function",
				upper = "function",
			},
	
			table = {
				clear = "function",
				clone = "function",
				concat = "function",
				create = "function",
				find = "function",
				foreach = "function",
				foreachi = "function",
				freeze = "function",
				getn = "function",
				insert = "function",
				isfrozen = "function",
				maxn = "function",
				move = "function",
				pack = "function",
				remove = "function",
				sort = "function",
				unpack = "function",
			},
	
			utf8 = {
				char = "function",
				codepoint = "function",
				codes = "function",
				graphemes = "function",
				len = "function",
				nfcnormalize = "function",
				nfdnormalize = "function",
				offset = "function",
	
				charpattern = "string",
			},
	
			-- Roblox Libraries
			Axes = {
				new = "function",
			},
	
			BrickColor = {
				Black = "function",
				Blue = "function",
				DarkGray = "function",
				Gray = "function",
				Green = "function",
				new = "function",
				New = "function",
				palette = "function",
				Random = "function",
				random = "function",
				Red = "function",
				White = "function",
				Yellow = "function",
			},
	
			CatalogSearchParams = {
				new = "function",
			},
	
			CFrame = {
				Angles = "function",
				fromAxisAngle = "function",
				fromEulerAngles = "function",
				fromEulerAnglesXYZ = "function",
				fromEulerAnglesYXZ = "function",
				fromMatrix = "function",
				fromOrientation = "function",
				lookAt = "function",
				new = "function",
	
				identity = "CFrame",
			},
	
			Color3 = {
				fromHex = "function",
				fromHSV = "function",
				fromRGB = "function",
				new = "function",
				toHSV = "function",
			},
	
			ColorSequence = {
				new = "function",
			},
	
			ColorSequenceKeypoint = {
				new = "function",
			},
	
			DateTime = {
				fromIsoDate = "function",
				fromLocalTime = "function",
				fromUniversalTime = "function",
				fromUnixTimestamp = "function",
				fromUnixTimestampMillis = "function",
				now = "function",
			},
	
			DockWidgetPluginGuiInfo = {
				new = "function",
			},
	
			Enum = {},
	
			Faces = {
				new = "function",
			},
	
			FloatCurveKey = {
				new = "function",
			},
	
			Font = {
				fromEnum = "function",
				fromId = "function",
				fromName = "function",
				new = "function",
			},
	
			Instance = {
				new = "function",
			},
	
			NumberRange = {
				new = "function",
			},
	
			NumberSequence = {
				new = "function",
			},
	
			NumberSequenceKeypoint = {
				new = "function",
			},
	
			OverlapParams = {
				new = "function",
			},
	
			PathWaypoint = {
				new = "function",
			},
	
			PhysicalProperties = {
				new = "function",
			},
	
			Random = {
				new = "function",
			},
	
			Ray = {
				new = "function",
			},
	
			RaycastParams = {
				new = "function",
			},
	
			Rect = {
				new = "function",
			},
	
			Region3 = {
				new = "function",
			},
	
			Region3int16 = {
				new = "function",
			},
	
			RotationCurveKey = {
				new = "function",
			},
	
			SharedTable = {
				clear = "function",
				clone = "function",
				cloneAndFreeze = "function",
				increment = "function",
				isFrozen = "function",
				new = "function",
				size = "function",
				update = "function",
			},
	
			task = {
				cancel = "function",
				defer = "function",
				delay = "function",
				desynchronize = "function",
				spawn = "function",
				synchronize = "function",
				wait = "function",
			},
	
			TweenInfo = {
				new = "function",
			},
	
			UDim = {
				new = "function",
			},
	
			UDim2 = {
				fromOffset = "function",
				fromScale = "function",
				new = "function",
			},
	
			Vector2 = {
				new = "function",
	
				one = "Vector2",
				xAxis = "Vector2",
				yAxis = "Vector2",
				zero = "Vector2",
			},
	
			Vector2int16 = {
				new = "function",
			},
	
			Vector3 = {
				fromAxis = "function",
				FromAxis = "function",
				fromNormalId = "function",
				FromNormalId = "function",
				new = "function",
	
				one = "Vector3",
				xAxis = "Vector3",
				yAxis = "Vector3",
				zAxis = "Vector3",
				zero = "Vector3",
			},
	
			Vector3int16 = {
				new = "function",
			},
		},
	}
	
	-- Filling up language.libraries.Enum table
	local enumLibraryTable = language.libraries.Enum
	
	for _, enum in ipairs(Enum:GetEnums()) do
		--TODO: Remove tostring from here once there is a better way to get the name of an Enum
		enumLibraryTable[tostring(enum)] = "Enum"
	end
	
	return language
	
end

modules[trigok.theme] = function()
	local script = trigok.theme

	local DEFAULT_TOKEN_COLORS = {
		["background"] = Color3.fromRGB(47, 47, 47),
		["iden"] = Color3.fromRGB(234, 234, 234),
		["keyword"] = Color3.fromRGB(215, 174, 255),
		["builtin"] = Color3.fromRGB(131, 206, 255),
		["string"] = Color3.fromRGB(196, 255, 193),
		["number"] = Color3.fromRGB(255, 125, 125),
		["comment"] = Color3.fromRGB(140, 140, 155),
		["operator"] = Color3.fromRGB(255, 239, 148),
		["custom"] = Color3.fromRGB(119, 122, 255),
	}
	
	local types = require(script.Parent.types)
	
	local Theme = {
		tokenColors = {},
		tokenRichTextFormatter = {},
	}
	
	function Theme.setColors(tokenColors: types.TokenColors)
		assert(type(tokenColors) == "table", "Theme.updateColors expects a table")
	
		for tokenName, color in tokenColors do
			Theme.tokenColors[tokenName] = color
		end
	end
	
	function Theme.getColoredRichText(color: Color3, text: string): string
		return '<font color="#' .. color:ToHex() .. '">' .. text .. "</font>"
	end
	
	function Theme.getColor(tokenName: types.TokenName): Color3
		return Theme.tokenColors[tokenName]
	end
	
	function Theme.matchStudioSettings(refreshCallback: () -> ()): boolean
		local success = pcall(function()
			-- When not used in a Studio plugin, this will error
			-- and the pcall will just silently return
			local studio = settings().Studio
			local studioTheme = studio.Theme
	
			local function getTokens()
				return {
					["background"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBackground),
					["iden"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptText),
					["keyword"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptKeyword),
					["builtin"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBuiltInFunction),
					["string"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptString),
					["number"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptNumber),
					["comment"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptComment),
					["operator"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptOperator),
					["custom"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBool),
				}
			end
	
			Theme.setColors(getTokens())
			studio.ThemeChanged:Connect(function()
				studioTheme = studio.Theme
				Theme.setColors(getTokens())
				refreshCallback()
			end)
		end)
		return success
	end
	
	-- Initialize
	Theme.setColors(DEFAULT_TOKEN_COLORS)
	
	return Theme
	
end

modules[trigok.types] = function()
	local script = trigok.types

	export type TextObject = TextLabel | TextBox
	
	export type TokenName =
		"background"
		| "iden"
		| "keyword"
		| "builtin"
		| "string"
		| "number"
		| "comment"
		| "operator"
		| "custom"
	
	export type TokenColors = {
		["background"]: Color3?,
		["iden"]: Color3?,
		["keyword"]: Color3?,
		["builtin"]: Color3?,
		["string"]: Color3?,
		["number"]: Color3?,
		["comment"]: Color3?,
		["operator"]: Color3?,
		["custom"]: Color3?,
	}
	
	export type HighlightProps = {
		textObject: TextObject,
		src: string?,
		forceUpdate: boolean?,
		lexer: Lexer?,
		customLang: { [string]: string }?,
	}
	
	export type Lexer = {
		scan: (src: string) -> () -> (string, string),
		navigator: () -> any,
		finished: boolean?,
	}
	
	export type ObjectData = {
		Text: string,
		Labels: { TextLabel },
		Lines: { string },
		Lexer: Lexer?,
		CustomLang: { [string]: string }?,
	}
	
	return nil
	
end

modules[trigok.utility] = function()
	local script = trigok.utility

	local types = require(script.Parent.types)
	
	local Utility = {}
	
	function Utility.sanitizeRichText(s: string): string
		return string.gsub(
			string.gsub(string.gsub(string.gsub(string.gsub(s, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;"),
			"'",
			"&apos;"
		)
	end
	
	function Utility.convertTabsToSpaces(s: string): string
		return string.gsub(s, "\t", "    ")
	end
	
	function Utility.removeControlChars(s: string): string
		return string.gsub(s, "[\0\1\2\3\4\5\6\7\8\11\12\13\14\15\16\17\18\19\20\21\22\23\24\25\26\27\28\29\30\31]+", "")
	end
	
	function Utility.getInnerAbsoluteSize(textObject: types.TextObject): Vector2
		local fullSize = textObject.AbsoluteSize
	
		local padding: UIPadding? = textObject:FindFirstChildWhichIsA("UIPadding")
		if padding then
			local offsetX = padding.PaddingLeft.Offset + padding.PaddingRight.Offset
			local scaleX = (fullSize.X * padding.PaddingLeft.Scale) + (fullSize.X * padding.PaddingRight.Scale)
			local offsetY = padding.PaddingTop.Offset + padding.PaddingBottom.Offset
			local scaleY = (fullSize.Y * padding.PaddingTop.Scale) + (fullSize.Y * padding.PaddingBottom.Scale)
			return Vector2.new(fullSize.X - (scaleX + offsetX), fullSize.Y - (scaleY + offsetY))
		else
			return fullSize
		end
	end
	
	function Utility.getTextBounds(textObject: types.TextObject): Vector2
		if textObject.ContentText == "" then
			return Vector2.zero
		end
	
		local textBounds = textObject.TextBounds
	
		-- Wait for TextBounds to be non-NaN and non-zero because Roblox
		while (textBounds.Y ~= textBounds.Y) or (textBounds.Y < 1) do
			task.wait()
			textBounds = textObject.TextBounds
		end
		return textBounds
	end
	
	return Utility
	
end

task.spawn(function()
	local script = trigok.GlobalLog

	
	local TextService = game:GetService("TextService")
	local LogService = game:GetService("LogService")
	local frame = script.Parent
	local messageBox = frame:WaitForChild("TextBox")
	
	messageBox.RichText = true
	messageBox.Selectable = false
	messageBox.Active = false
	
	local function formatMessage(message, messageType)
		local color = ""
		local formattedType = ""
	
		if messageType == Enum.MessageType.MessageOutput then
			color = "#cffeff" 
			formattedType = "Print"
		elseif messageType == Enum.MessageType.MessageWarning then
			color = "#ffa73b" 
			formattedType = "Warn"
		elseif messageType == Enum.MessageType.MessageError then
			color = "#FF005D" 
			formattedType = "Error"
		elseif messageType == Enum.MessageType.MessageInfo then
			color = "#5cb0ff" 
			formattedType = "Info"
		else
			color = "#FFFFFF" 
			formattedType = "Other"
		end
	
		return string.format('<font color="%s"><b>[%s]</b></font> %s', color, formattedType, message)
	end
	
	local function formatMessage2(message, messageType)
		local formattedType = ""
		
		if messageType == Enum.MessageType.MessageOutput then
			formattedType = "Print"
		elseif messageType == Enum.MessageType.MessageWarning then
			formattedType = "Warn"
		elseif messageType == Enum.MessageType.MessageError then
			formattedType = "Error"
		elseif messageType == Enum.MessageType.MessageInfo then
			formattedType = "Info"
		else
			formattedType = "Other"
		end
		
		return string.format('[%s] %s', formattedType, message)
	end

	
	local function updateMessageBoxSize()
		local textSize = TextService:GetTextSize(
			messageBox.Text, 
			messageBox.TextSize, 
			messageBox.Font, 
			Vector2.new(messageBox.AbsoluteSize.X, 20000)
		)
	
		messageBox.Size = UDim2.new(messageBox.Size.X.Scale, messageBox.Size.X.Offset, 0, textSize.Y)
	end
	
	
	local function onMessageOut(message, messageType)
		if not Settings.logInfo then return end
		if (messageType == Enum.MessageType.MessageOutput and not Settings.logPrint) or
			(messageType == Enum.MessageType.MessageWarning and not Settings.logWarn) or
			(messageType == Enum.MessageType.MessageError and not Settings.logError)then
			return 
		end
	
		local timeStamp = os.date("%X")
		local formattedMessage = formatMessage(message, messageType)
		local formattedMessage2 = formatMessage2(message, messageType)
		messageBox.Text = messageBox.Text .. timeStamp .. " - " .. formattedMessage .. "\n"
		if _G.wsConnection then
			_G.ws:Send(formattedMessage2)
		end
		updateMessageBoxSize()
	
		frame.CanvasPosition = Vector2.new(0, messageBox.TextBounds.Y)
	end
	
	
	LogService.MessageOut:Connect(onMessageOut)
	
end)

task.spawn(function()
	local script = trigok.LocalScript

	local Highlighter = require(script.Parent.ScriptBox.Highlighter)
	local myTextLabel = script.Parent.ScriptBox
	
	Highlighter.highlight({
		textObject = myTextLabel,
	})
	
end)

task.spawn(function()
	local script = trigok.LocalScript_1
	
	local plr = game.Players.LocalPlayer
	local MainFrame = script.Parent.MainFrame
	local buttons = MainFrame.BottomMenuFrame.MenuList

	local execBtn = buttons:WaitForChild("ExecBtn")
	local cloudBtn = buttons:WaitForChild("CloudBtn")
	local HBtn = buttons:WaitForChild("HBtn")
	local settingsBtn = buttons:WaitForChild("SettingsBtn")

	local execFrame = MainFrame:WaitForChild("ExecFrame")
	local logFrame = MainFrame:WaitForChild("logFrame")
	local homeFrame = MainFrame:WaitForChild("homeFrame")
	local settingsFrame = MainFrame:WaitForChild("SettingsFrame")

	local excbtn = execFrame.Buttons.Button1
	local execlipbtn = execFrame.Buttons.Button2
	local pastebtn = execFrame.Buttons.Button3
	local clearbtn = execFrame.Buttons.Button4

	local ScriptBox = execFrame.ScrollingFrame.ScriptBox

	local ExitBtn = MainFrame.BottomMenuFrame.LeftFrame.ExitBtn

	----//////////////////----
	----/// Menu Buttons
	----//////////////////----

	local function hideAllFrames()
		execFrame.Visible = false
		logFrame.Visible = false
		homeFrame.Visible = false
		settingsFrame.Visible = false
		execBtn.UIStroke.Enabled = false    
		HBtn.UIStroke.Enabled = false    
		cloudBtn.UIStroke.Enabled = false    
		settingsBtn.UIStroke.Enabled = false    
	end

	local function showFrame(frame, btn)
		hideAllFrames()
		task.wait()
		frame.Visible = true
		btn.UIStroke.Enabled = true
	end

	execBtn.Activated:Connect(function()
		showFrame(execFrame, execBtn)
	end)

	cloudBtn.Activated:Connect(function()
		showFrame(logFrame, cloudBtn)
	end)

	HBtn.Activated:Connect(function()
		showFrame(homeFrame, HBtn)
	end)

	settingsBtn.Activated:Connect(function()
		showFrame(settingsFrame, settingsBtn)
	end)

	hideAllFrames()

	homeFrame.Visible = true

	----//////////////////----
	----/// Exec Buttons
	----//////////////////----

	excbtn.Activated:Connect(function()
		excbtn.UIStroke.Enabled = true
		executecode(ScriptBox.Text)
		wait(0.1)
		excbtn.UIStroke.Enabled = false
	end) 

	execlipbtn.Activated:Connect(function()
		execlipbtn.UIStroke.Enabled = true
		executecode(getclipboard())
		wait(0.1)
		execlipbtn.UIStroke.Enabled = false
	end)  

	pastebtn.Activated:Connect(function()
		pastebtn.UIStroke.Enabled = true
		ScriptBox.Text = getclipboard()
		wait(0.1)
		pastebtn.UIStroke.Enabled = false
	end) 

	clearbtn.Activated:Connect(function()
		clearbtn.UIStroke.Enabled = true
		ScriptBox.Text = ""
		wait(0.1)
		clearbtn.UIStroke.Enabled = false
	end)  


	----//////////////////----
	----/// Other
	----//////////////////----

	ExitBtn.Activated:Connect(function()
		script.Parent.Enabled = not script.Parent.Enabled
	end)

	ScriptBox.Focused:Connect(function()
		for _, item in pairs(ScriptBox.SyntaxHighlights:GetChildren()) do
		item.Visible = false
		end
	end)

	ScriptBox.FocusLost:Connect(function()
		for _, item in pairs(ScriptBox.SyntaxHighlights:GetChildren()) do
			item.Visible = true
		end
	end)




	----//////////////////----
	----/// Default Page
	----//////////////////----
	local HttpService = game:GetService("HttpService")

	local function fetchString(link)
		local success, response = pcall(function()
			return request({
				Url = link,
				Method = "GET"
			})
		end)
	
		if success then
			return response.Body
		else
			warn("Error fetching string:", response)
			return nil
		end
	end


	local jsonString = [[
		{
		  "games": {
			"Blox Fruits": {
			  "placeIds": ["4483381587", "2753915549", "4442272183"],
			  "_scripts": [
				{
				  "scriptName": "BloxFFFFF",
				  "text": "print'script'"
				}
			  ]
			}
		  },
		  "global": {
			"_scripts": [
				{
					"scriptName": "Infinite Yield",
					"text": "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\",true))()"
				},
				{
					"scriptName": "Dark Dex v4",
					"text": "getgenv().Key = \"Bash\" loadstring(game:HttpGet(\"https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AIY%20Dex\",true))()"
				},
				{
					"scriptName": "Bypassed Dark Dex v3",
					"text": "loadstring(game:HttpGet('https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua', true))()"
				}
			]
		  }
		}
		]]
	
	
	local reaperscripts =  fetchString("https://pastebin.com/raw/5UdaH5Kf")
	
	jsonScriptData = HttpService:JSONDecode(jsonString)
	reaperscriptsData = HttpService:JSONDecode(reaperscripts)
	
	function mergeScripts(targetData, scriptsData)
		function checkPlaceId(placeId, targetData)
			for _, gameInfo in pairs(targetData["games"]) do
				for _, pid in ipairs(gameInfo["placeIds"]) do
					if pid == placeId then
						return true
					end
				end
			end
			return false
		end
	
		function Add_Merge(placeId, scripts, targetData)
			for gameName, gameInfo in pairs(targetData["games"]) do
				if table.find(gameInfo["placeIds"], placeId) then
					for _, newScript in ipairs(scripts) do
						local scriptExists = false
						for _, existingScript in ipairs(gameInfo["_scripts"]) do
							if existingScript.scriptName == newScript.scriptName and existingScript.text == newScript.text then
								scriptExists = true
								break
							end
						end
						if not scriptExists then
							table.insert(gameInfo["_scripts"], newScript)
						end
					end
					return 
				end
			end
			--placeId doesnt exist in any game
			--placeholder for adding unmatched scripts for games
		end
	
		for _, sourceGameInfo in pairs(scriptsData["games"]) do
			local scriptsMerged = false
			for _, sourcePlaceId in ipairs(sourceGameInfo["placeIds"]) do
				if checkPlaceId(sourcePlaceId, targetData) then
					Add_Merge(sourcePlaceId, sourceGameInfo["_scripts"], targetData)
					scriptsMerged = true
					break 
				end
			end
			if not scriptsMerged then
				-- no matching placeIds
			end
		end
	end
	
	
	mergeScripts(jsonScriptData, reaperscriptsData)
	
	updatedJsonString = HttpService:JSONEncode(jsonScriptData)
	NewjsonScriptData = HttpService:JSONDecode(updatedJsonString)

	
	local scriptList = NewjsonScriptData
	local scriptsFrame = MainFrame.homeFrame.scriptsFrame
	local scriptButton = scriptsFrame.TextButton
	local currentPlaceId = tostring(game.PlaceId)
	
	scriptsFrame["#GameHeader"].Title.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
	
	local function createscriptButtons(_scripts)
		local yPos = 0
		for i, scriptData in ipairs(_scripts) do
			local newButton = scriptButton:Clone()
			newButton.Parent = scriptsFrame
			newButton.Text = scriptData.scriptName
			newButton.Position = UDim2.new(newButton.Position.X.Scale, newButton.Position.X.Offset, newButton.Position.Y.Scale, yPos)
			yPos = yPos + newButton.Size.Y.Offset + 5
			newButton.Visible = true
	
			newButton.MouseButton1Click:Connect(function()
				executecode(scriptData.text)
			end)
		end
	end
	
	local function findScriptsForCurrentPlace()
		for _, gameData in pairs(scriptList.games) do
			if table.find(gameData.placeIds, currentPlaceId) then
				return gameData._scripts
			end
		end
		return nil 
	end
	
	local scriptToUse = findScriptsForCurrentPlace() or scriptList.global._scripts
	
	if scriptToUse then
		createscriptButtons(scriptToUse)
	else
		print("No _scripts available.")
	end
	
	scriptButton.Visible = false
	

	----//////////////////----
	----/// Console Log Page
	----//////////////////----

	logButtons = logFrame.logButtons
	consoleFrame = logFrame.consoleFrame

	outputCBX = logButtons.logOutput.Button
	warningCBX = logButtons.logWarning.Button
	errorCBX = logButtons.logError.Button
	infoCBX = logButtons.logInfo.Button
	consoleclrbtn = logButtons.cclrbtn
	consoleexebtn = logButtons.excp 

	function cboxCheck(button)
		button.Image = "rbxassetid://3926311105" -- check   
		button.ImageRectSize = Vector2.new(48, 48) 
		button.ImageRectOffset = Vector2.new(4, 836) 
	end

	function cboxUnCheck(button)
		button.Image = "rbxassetid://3926305904" --uncheck
		button.ImageRectSize = Vector2.new(36, 36) 
		button.ImageRectOffset = Vector2.new(724, 724) 
	end

	local function cobxUpdate(value, button)
		if Settings[value] then
			cboxCheck(button)
		else
			cboxUnCheck(button)
		end
	end

	consoleexebtn.Activated:Connect(function()
		executecode(getclipboard())
	end)

	outputCBX.Activated:Connect(function()
		Settings.logPrint = not Settings.logPrint
		cobxUpdate("logPrint",outputCBX)
		saveSettings()
	end)

	warningCBX.Activated:Connect(function()
		Settings.logWarn = not Settings.logWarn
		cobxUpdate("logWarn",warningCBX)
		saveSettings()
	end)

	errorCBX.Activated:Connect(function()
		Settings.logError = not Settings.logError
		cobxUpdate("logError",errorCBX)
		saveSettings()
	end)

	infoCBX.Activated:Connect(function()
		Settings.logInfo = not Settings.logInfo
		cobxUpdate("logInfo",infoCBX)
		saveSettings()
	end)

	consoleclrbtn.Activated:Connect(function()
		consoleFrame.TextBox.Text = ""
	end)


	----//////////////////----
	----/// Settings Page
	----//////////////////----

	---General Tab
	if Settings.autohideui then script.Parent.Enabled = false end

	GeneralTab = settingsFrame.GeneralTab

	autoexecSS = GeneralTab.autoexecSS.button
	autohideuiSS = GeneralTab.autohideuiSS.button
	trigonSS = GeneralTab.trigonSS

	Sidebar = settingsFrame.Sidebar.Buttons

	generalBtn = Sidebar.generalBtn
	themesBtn = Sidebar.themesBtn


	autoexecSS.Activated:Connect(function()
		Settings.autoexec = not Settings.autoexec
		cobxUpdate("autoexec",autoexecSS)
		saveSettings()
	end)


	autohideuiSS.Activated:Connect(function()
		Settings.autohideui = not Settings.autohideui
		cobxUpdate("autohideui",autohideuiSS)
		saveSettings()
	end)


	local checkboxList = {
		autohideui = autohideuiSS,
		autoexec = autoexecSS,
		
		logPrint = outputCBX,
		logWarn = warningCBX,
		logError = errorCBX,
		logInfo = infoCBX
	}

	local function initializeCheckBoxes()
		for value, button in pairs(checkboxList) do
			if Settings[value] then
				cboxCheck(button) 
			else
				cboxUnCheck(button) 
			end
		end
	end

	initializeCheckBoxes()


end)

task.spawn(function()
	local script = trigok.savescripts

	HttpService = game:GetService("HttpService")
	folderName = 'Local_Scripts'
	fileName = 'list.json'
	filePath = folderName .. '/' .. fileName
	
	lsf = gethui()[_G.TrigonMain].MainFrame.homeFrame.localscriptsFrame
	alsf = gethui()[_G.TrigonMain].MainFrame.homeFrame.addlocalscriptsFrame
	
	add_btn = lsf["#GameHeader"].Add_btn.TextButton
	script_placeholder = lsf.script_placeholder
	script_placeholder.Visible = false
	title = script_placeholder.scriptTitle
	buttons = script_placeholder.Buttons
	run = buttons.run.button
	autoload = buttons.autoload.button
	delete = buttons.delete.button
	
	scriptNameinput = alsf.addFrame.input.TextBox
	confirm_btn = alsf.addFrame.confrim_btn.TextButton
	cancel_btn = alsf.addFrame.cancel_btn.TextButton
	
	
	local default_scripts = {
		localscripts = {
			REJOIN = {
				name = "Rejoin",
				script = "warn('Rejoinning....'); game:GetService('TeleportService'):Teleport(game.PlaceId, game.Players.LocalPlayer)",
				auto_load = false
			},
			BYPASS_DEX = {
				name = "Bypassed Dark Dex v3",
				script = "repeat  task.wait() until game:IsLoaded() loadstring(game:HttpGet('https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua', true))()",
				auto_load = false
			},
			DARKDEXF = {
				name = "Dark Dex v4",
				script = "repeat  task.wait() until game:IsLoaded() getgenv().Key = \"Bash\" loadstring(game:HttpGet(\"https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AIY%20Dex\",true))()",
				auto_load = false
			},
			INFY = {
				name = "Infinite Yield",
				script = "repeat  task.wait() until game:IsLoaded() loadstring(game:HttpGet(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\",true))()",
				auto_load = false
			}
		}
	}
	



	local _scripts = {}
	
	local function merge_scripts(defaults, loaded_scripts)
		for key, value in pairs(defaults) do
			if type(value) == "table" then
				loaded_scripts[key] = loaded_scripts[key] or {}
				merge_scripts(value, loaded_scripts[key])
			else
				loaded_scripts[key] = loaded_scripts[key] or value
			end
		end
	end
	
	local function read_scripts()
		if not isfolder(folderName) then
			makefolder(folderName)
		end
	
		if isfile(filePath) then
			local fileContents = readfile(filePath)
			local success, decoded = pcall(function()
				return HttpService:JSONDecode(fileContents)
			end)
			if success then
				merge_scripts(default_scripts, decoded)
				return decoded
			end
		end
	
		return default_scripts
	end
	
	
	local function save_scripts()
		local encoded = HttpService:JSONEncode(_scripts)
		writefile(filePath, encoded)
		print("_scripts saved.")
	end
	
	
	local function deleteScript(scriptName)
		if _scripts.localscripts[scriptName] then
			_scripts.localscripts[scriptName] = nil
			warn("Deleted: " .. scriptName)
			save_scripts()
		else
			warn("Script not found: " .. scriptName)
		end
	end
	

	_scripts = read_scripts()
	
	local function execute_(scriptName)
		if isfile(filePath) then
			local fileContents = readfile(filePath)
			local success, decoded = pcall(function()
				return HttpService:JSONDecode(fileContents)
			end)
	
			if success and decoded.localscripts then
				local scriptData = decoded.localscripts[scriptName]
				if scriptData then
					executecode(scriptData.script)
				else
					warn("Script not found:", scriptName)
				end
			else
				warn("Failed to decode _scripts or 'localscripts' not found.")
			end
		else
			print(filePath)
			warn("_scripts file does not exist.")
		end
	end
	
	local function updateAutoLoad(scriptName, autoLoadValue, btn)
		if _scripts.localscripts and _scripts.localscripts[scriptName] then
			_scripts.localscripts[scriptName].auto_load = autoLoadValue
			save_scripts()  -- Save after updating the autoload value
			print("Updated auto_load for", _scripts.localscripts[scriptName].name, "to", autoLoadValue)
			
			if not autoLoadValue then
				btn.Image = "rbxassetid://3926305904"
				btn.ImageRectSize = Vector2.new(36, 36) 
				btn.ImageRectOffset = Vector2.new(724, 724) 
			else
				btn.Image = "rbxassetid://3926311105"        
				btn.ImageRectSize = Vector2.new(48, 48) 
				btn.ImageRectOffset = Vector2.new(4, 836) 
			end
		else
			warn("Failed to update auto_load. Script not found or error in _scripts.")
		end
	end
	
	local function convertScriptName(name)
		local convertedName = name:gsub("%s+", "_") 
		convertedName = convertedName:gsub("%W", "") 
		return convertedName
	end
	
	
	local function setupScriptUI(scriptName, scriptData)
		local scriptUI = script_placeholder:Clone()
		scriptUI.Visible = true
		scriptUI.scriptTitle.Text = scriptData.name
	
		scriptUI.Buttons.run.button.Activated:Connect(function()
			execute_(scriptName)
		end)
	
		scriptUI.Buttons.autoload.button.Activated:Connect(function()
			local newAutoLoadValue = not scriptData.auto_load
			updateAutoLoad(scriptName, newAutoLoadValue, scriptUI.Buttons.autoload.button)
			scriptData.auto_load = newAutoLoadValue
		end)
	
		scriptUI.Buttons.delete.button.Activated:Connect(function()
			deleteScript(scriptName)
			scriptUI:Destroy()
		end)
	
		scriptUI.Parent = lsf
	
		if scriptData.auto_load then
			scriptUI.Buttons.autoload.button.Image = "rbxassetid://3926311105"        
			scriptUI.Buttons.autoload.button.ImageRectSize = Vector2.new(48, 48) 
			scriptUI.Buttons.autoload.button.ImageRectOffset = Vector2.new(4, 836) 
			execute_(scriptName)        
		end 
	end

	
	local function setupAllScriptsUI()
		for scriptName, scriptData in pairs(_scripts.localscripts) do
			setupScriptUI(scriptName, scriptData)
		end
	end
	
	local function add_update(scriptName, name, scriptContent, autoLoad)
		print("adding")
		local isNewScript = not _scripts.localscripts[tostring(scriptName)]
		_scripts.localscripts[tostring(scriptName)] = {
			name = tostring(name),
			script = tostring(scriptContent),
			auto_load = autoLoad
		}
		save_scripts()
	
		if isNewScript then
			setupScriptUI(tostring(scriptName), _scripts.localscripts[tostring(scriptName)])
		end
	end
	
	confirm_btn.Activated:Connect(function()
	
		local scriptName = scriptNameinput.Text
		local convertedName = convertScriptName(scriptName)
		local xscript = getclipboard()
		
		warn(scriptName, convertedName, xscript)
		task.wait()
		if convertedName ~= "" then
			print("correct")        
			lsf.Visible = true
			add_update(convertedName, scriptName, xscript, false)
			scriptNameinput.Text = ""
		else
			scriptNameinput.Parent.Parent.Title.Text =  "Script Name: Invalid script name"
			wait(2)
			scriptNameinput.Parent.Parent.Title.Text =  "Script Name:"
			warn("Invalid script name")
		end
	
	
	end)
	
	add_btn.Activated:Connect(function()
		lsf.Visible = false
	end)
	cancel_btn.Activated:Connect(function()
		lsf.Visible = true
	end)
	
	setupAllScriptsUI()
	
end)

end

----------------------------------------
----------------------------------------
----------------------------------------

wait()

main()

loader()

print("-----] Trigon Loaded [-----")




  	end
})
Tab:AddButton({
	Name = "vegax",
	Callback = function()
-- Gui to Lua
-- Version: 3.2

-- Instances:

local VegaXAndroidUI = Instance.new("ScreenGui")
local SettingsWindow = Instance.new("Frame")
local WindowMainTitle = Instance.new("TextLabel")
local CloseB = Instance.new("ImageButton")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local S2 = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local SubTitle = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local SubmitFPS = Instance.new("ImageButton")
local UICorner_2 = Instance.new("UICorner")
local FPSTextBox = Instance.new("TextBox")
local UICorner_3 = Instance.new("UICorner")
local ResetFPS = Instance.new("ImageButton")
local UICorner_4 = Instance.new("UICorner")
local S3 = Instance.new("Frame")
local Title_2 = Instance.new("TextLabel")
local SubTitle_2 = Instance.new("TextLabel")
local UICorner_5 = Instance.new("UICorner")
local SubmitCode = Instance.new("ImageButton")
local UICorner_6 = Instance.new("UICorner")
local InjectCodeTextbox = Instance.new("TextBox")
local UICorner_7 = Instance.new("UICorner")
local ResetCode = Instance.new("ImageButton")
local UICorner_8 = Instance.new("UICorner")
local S1 = Instance.new("Frame")
local Title_3 = Instance.new("TextLabel")
local SubTitle_3 = Instance.new("TextLabel")
local UICorner_9 = Instance.new("UICorner")
local AccentColorPreview = Instance.new("Frame")
local UICorner_10 = Instance.new("UICorner")
local SubmitAccent = Instance.new("ImageButton")
local UICorner_11 = Instance.new("UICorner")
local AccentTextBox = Instance.new("TextBox")
local UICorner_12 = Instance.new("UICorner")
local S4 = Instance.new("Frame")
local Title_4 = Instance.new("TextLabel")
local SubTitle_4 = Instance.new("TextLabel")
local UICorner_13 = Instance.new("UICorner")
local ToggleBTN = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local S0 = Instance.new("Frame")
local Title_5 = Instance.new("TextLabel")
local SubTitle_5 = Instance.new("TextLabel")
local UICorner_15 = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")
local VegaXLogo = Instance.new("ImageLabel")
local ScriptHubWindow = Instance.new("Frame")
local WindowMainTitle_2 = Instance.new("TextLabel")
local CloseB_2 = Instance.new("ImageButton")
local ScrollingFrame_2 = Instance.new("ScrollingFrame")
local S1_2 = Instance.new("Frame")
local Execute = Instance.new("ImageButton")
local UICorner_16 = Instance.new("UICorner")
local UICorner_17 = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local UICorner_18 = Instance.new("UICorner")
local SubTitle_6 = Instance.new("TextLabel")
local Title_6 = Instance.new("TextLabel")
local UIListLayout_2 = Instance.new("UIListLayout")
local SearchBox = Instance.new("TextBox")
local UICorner_19 = Instance.new("UICorner")
local SearchButton = Instance.new("ImageButton")
local WindowSubTitle = Instance.new("TextLabel")
local PaginationFrame = Instance.new("Frame")
local UICorner_20 = Instance.new("UICorner")
local LeftPage = Instance.new("ImageButton")
local RightPage = Instance.new("ImageButton")
local PageLabel = Instance.new("TextLabel")
local SidebarFrame = Instance.new("Frame")
local Banner = Instance.new("Frame")
local HappyGuy = Instance.new("ImageLabel")
local VegaXLogo_2 = Instance.new("ImageLabel")
local TitleLabel = Instance.new("TextLabel")
local ScrollingFrame_3 = Instance.new("ScrollingFrame")
local UIListLayout_3 = Instance.new("UIListLayout")
local UsernamePlace = Instance.new("Frame")
local Title_7 = Instance.new("TextLabel")
local Icon = Instance.new("Frame")
local UICorner_21 = Instance.new("UICorner")
local ProfileImage = Instance.new("ImageLabel")
local UICorner_22 = Instance.new("UICorner")
local Choice1 = Instance.new("Frame")
local Title_8 = Instance.new("TextLabel")
local C1EB = Instance.new("TextButton")
local UICorner_23 = Instance.new("UICorner")
local Icon_2 = Instance.new("Frame")
local UICorner_24 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local Choice2 = Instance.new("Frame")
local Title_9 = Instance.new("TextLabel")
local C2EB = Instance.new("TextButton")
local UICorner_25 = Instance.new("UICorner")
local Icon_3 = Instance.new("Frame")
local UICorner_26 = Instance.new("UICorner")
local ImageLabel_3 = Instance.new("ImageLabel")
local Choice3 = Instance.new("Frame")
local Title_10 = Instance.new("TextLabel")
local C3EB = Instance.new("TextButton")
local UICorner_27 = Instance.new("UICorner")
local Icon_4 = Instance.new("Frame")
local UICorner_28 = Instance.new("UICorner")
local ImageLabel_4 = Instance.new("ImageLabel")
local VegaXMenuToggleFrame = Instance.new("Frame")
local UICorner_29 = Instance.new("UICorner")
local VegaXMenuToggle = Instance.new("TextButton")
local UICorner_30 = Instance.new("UICorner")
local ImageLabel_5 = Instance.new("ImageLabel")
local DragTouch = Instance.new("ImageLabel")
local KeySystem = Instance.new("Frame")
local MainTitle = Instance.new("TextLabel")
local CloseB_3 = Instance.new("ImageButton")
local TextBox = Instance.new("TextBox")
local UICorner_31 = Instance.new("UICorner")
local ApproveKeyB = Instance.new("TextButton")
local UICorner_32 = Instance.new("UICorner")
local EULALabel = Instance.new("TextLabel")
local GetKeyB = Instance.new("TextButton")
local UICorner_33 = Instance.new("UICorner")
local JoinDiscordB = Instance.new("TextButton")
local UICorner_34 = Instance.new("UICorner")
local Banner_2 = Instance.new("Frame")
local VegaXLogo_3 = Instance.new("ImageLabel")
local UICorner_35 = Instance.new("UICorner")
local HappyGuy_2 = Instance.new("ImageLabel")
local TitleLabel_2 = Instance.new("TextLabel")
local ScrollingBox = Instance.new("ScrollingFrame")
local TextBox_2 = Instance.new("TextBox")
local UICorner_36 = Instance.new("UICorner")
local SubTitle_7 = Instance.new("TextLabel")
local KSMenuToggleFrame = Instance.new("Frame")
local UICorner_37 = Instance.new("UICorner")
local VegaXKSToggle = Instance.new("TextButton")
local UICorner_38 = Instance.new("UICorner")
local ImageLabel_6 = Instance.new("ImageLabel")
local IntroFrame = Instance.new("Frame")
local BackgroundFrame = Instance.new("Frame")
local R1 = Instance.new("Frame")
local R2 = Instance.new("Frame")
local R3 = Instance.new("Frame")
local R4 = Instance.new("Frame")
local R5 = Instance.new("Frame")
local R6 = Instance.new("Frame")
local R7 = Instance.new("Frame")
local R8 = Instance.new("Frame")
local R9 = Instance.new("Frame")
local R10 = Instance.new("Frame")
local R11 = Instance.new("Frame")
local R12 = Instance.new("Frame")
local R13 = Instance.new("Frame")
local R14 = Instance.new("Frame")
local R15 = Instance.new("Frame")
local R16 = Instance.new("Frame")
local R17 = Instance.new("Frame")
local R18 = Instance.new("Frame")
local R19 = Instance.new("Frame")
local R20 = Instance.new("Frame")
local VegaXLogo_4 = Instance.new("ImageLabel")
local ScriptListWindow = Instance.new("Frame")
local WindowMainTitle_3 = Instance.new("TextLabel")
local CloseB_4 = Instance.new("ImageButton")
local ScriptListFrame = Instance.new("ScrollingFrame")
local S1_3 = Instance.new("Frame")
local Trash = Instance.new("ImageButton")
local UICorner_39 = Instance.new("UICorner")
local UICorner_40 = Instance.new("UICorner")
local Title_11 = Instance.new("TextLabel")
local Execute_2 = Instance.new("ImageButton")
local UICorner_41 = Instance.new("UICorner")
local UIListLayout_4 = Instance.new("UIListLayout")
local WindowSubTitle_2 = Instance.new("TextLabel")
local ExecutorWindow = Instance.new("Frame")
local ExecuteB = Instance.new("TextButton")
local UICorner_42 = Instance.new("UICorner")
local PasteandExecuteB = Instance.new("TextButton")
local UICorner_43 = Instance.new("UICorner")
local CloseB_5 = Instance.new("ImageButton")
local ScrollingBox_2 = Instance.new("ScrollingFrame")
local TextBox_3 = Instance.new("TextBox")
local Line = Instance.new("TextLabel")
local UICorner_44 = Instance.new("UICorner")
local TabbingSystem = Instance.new("Frame")
local ScriptPage = Instance.new("TextLabel")
local NextPage = Instance.new("TextButton")
local LastPage = Instance.new("TextButton")
local UICorner_45 = Instance.new("UICorner")
local EditTabName = Instance.new("ImageButton")
local EditTabBox = Instance.new("TextBox")
local WindowMainTitle_4 = Instance.new("TextLabel")
local ClearB = Instance.new("TextButton")
local UICorner_46 = Instance.new("UICorner")
local DevModeB = Instance.new("TextButton")
local UICorner_47 = Instance.new("UICorner")

--Properties:

VegaXAndroidUI.Name = "VegaXAndroidUI"
VegaXAndroidUI.Parent = gethui()

SettingsWindow.Name = "SettingsWindow"
SettingsWindow.Parent = VegaXAndroidUI
SettingsWindow.AnchorPoint = Vector2.new(0, 0.5)
SettingsWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SettingsWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
SettingsWindow.BorderSizePixel = 0
SettingsWindow.Position = UDim2.new(1, 200, 0.5, -20)
SettingsWindow.Size = UDim2.new(1, -200, 1, 40)

WindowMainTitle.Name = "WindowMainTitle"
WindowMainTitle.Parent = SettingsWindow
WindowMainTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle.BackgroundTransparency = 1.000
WindowMainTitle.BorderSizePixel = 0
WindowMainTitle.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle.Size = UDim2.new(0, 200, 0, 21)
WindowMainTitle.Font = Enum.Font.GothamBold
WindowMainTitle.Text = "Settings"
WindowMainTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle.TextSize = 18.000
WindowMainTitle.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle.TextYAlignment = Enum.TextYAlignment.Top

CloseB.Name = "CloseB"
CloseB.Parent = SettingsWindow
CloseB.AnchorPoint = Vector2.new(1, 0)
CloseB.BackgroundTransparency = 1.000
CloseB.BorderSizePixel = 0
CloseB.LayoutOrder = 6
CloseB.Position = UDim2.new(1, -5, 0, 45)
CloseB.Size = UDim2.new(0, 25, 0, 25)
CloseB.ZIndex = 2
CloseB.Image = "rbxassetid://3926307971"
CloseB.ImageRectOffset = Vector2.new(884, 284)
CloseB.ImageRectSize = Vector2.new(36, 36)

ScrollingFrame.Parent = SettingsWindow
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1.000
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0, 78)
ScrollingFrame.Size = UDim2.new(1, 0, 1, -78)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0)
ScrollingFrame.ScrollBarThickness = 0

UIListLayout.Parent = ScrollingFrame
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

S2.Name = "S2"
S2.Parent = ScrollingFrame
S2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S2.BorderSizePixel = 0
S2.Size = UDim2.new(1, -10, 0, 75)

Title.Name = "Title"
Title.Parent = S2
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0, 25, 0, 0)
Title.Size = UDim2.new(0.5, 0, 0.5, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = "FPS Limit"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 19.000
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle.Name = "SubTitle"
SubTitle.Parent = S2
SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle.BackgroundTransparency = 1.000
SubTitle.BorderSizePixel = 0
SubTitle.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle.Font = Enum.Font.Gotham
SubTitle.Text = "Set Max FPS for the Game."
SubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle.TextSize = 14.000
SubTitle.TextXAlignment = Enum.TextXAlignment.Left
SubTitle.TextYAlignment = Enum.TextYAlignment.Top

UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = S2

SubmitFPS.Name = "SubmitFPS"
SubmitFPS.Parent = S2
SubmitFPS.AnchorPoint = Vector2.new(1, 0.5)
SubmitFPS.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
SubmitFPS.BorderSizePixel = 0
SubmitFPS.LayoutOrder = 10
SubmitFPS.Position = UDim2.new(1, -59, 0.5, 0)
SubmitFPS.Size = UDim2.new(0, 34, 0, 34)
SubmitFPS.ZIndex = 2
SubmitFPS.Image = "rbxassetid://3926305904"
SubmitFPS.ImageRectOffset = Vector2.new(124, 924)
SubmitFPS.ImageRectSize = Vector2.new(36, 36)

UICorner_2.CornerRadius = UDim.new(0, 10)
UICorner_2.Parent = SubmitFPS

FPSTextBox.Name = "FPSTextBox"
FPSTextBox.Parent = S2
FPSTextBox.AnchorPoint = Vector2.new(1, 0.5)
FPSTextBox.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
FPSTextBox.BackgroundTransparency = 0.200
FPSTextBox.BorderSizePixel = 0
FPSTextBox.Position = UDim2.new(1, -98, 0.5, 0)
FPSTextBox.Size = UDim2.new(0.200000003, 0, 0, 34)
FPSTextBox.ClearTextOnFocus = false
FPSTextBox.Font = Enum.Font.Gotham
FPSTextBox.MultiLine = true
FPSTextBox.PlaceholderText = "Max FPS"
FPSTextBox.Text = ""
FPSTextBox.TextColor3 = Color3.fromRGB(220, 220, 220)
FPSTextBox.TextSize = 16.000

UICorner_3.CornerRadius = UDim.new(0, 10)
UICorner_3.Parent = FPSTextBox

ResetFPS.Name = "ResetFPS"
ResetFPS.Parent = S2
ResetFPS.AnchorPoint = Vector2.new(1, 0.5)
ResetFPS.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
ResetFPS.BorderSizePixel = 0
ResetFPS.LayoutOrder = 10
ResetFPS.Position = UDim2.new(1, -20, 0.5, 0)
ResetFPS.Size = UDim2.new(0, 34, 0, 34)
ResetFPS.ZIndex = 2
ResetFPS.Image = "rbxassetid://3926307971"
ResetFPS.ImageRectOffset = Vector2.new(404, 84)
ResetFPS.ImageRectSize = Vector2.new(36, 36)

UICorner_4.CornerRadius = UDim.new(0, 10)
UICorner_4.Parent = ResetFPS

S3.Name = "S3"
S3.Parent = ScrollingFrame
S3.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S3.BorderSizePixel = 0
S3.Size = UDim2.new(1, -10, 0, 75)

Title_2.Name = "Title"
Title_2.Parent = S3
Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_2.BackgroundTransparency = 1.000
Title_2.BorderSizePixel = 0
Title_2.Position = UDim2.new(0, 25, 0, 0)
Title_2.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_2.Font = Enum.Font.GothamBold
Title_2.Text = "Dev Mode"
Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_2.TextSize = 19.000
Title_2.TextXAlignment = Enum.TextXAlignment.Left
Title_2.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_2.Name = "SubTitle"
SubTitle_2.Parent = S3
SubTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_2.BackgroundTransparency = 1.000
SubTitle_2.BorderSizePixel = 0
SubTitle_2.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_2.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_2.Font = Enum.Font.Gotham
SubTitle_2.Text = "Allow Vega X Cross Platform Connection with the Windows UI."
SubTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_2.TextSize = 14.000
SubTitle_2.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_2.TextYAlignment = Enum.TextYAlignment.Top

UICorner_5.CornerRadius = UDim.new(0, 10)
UICorner_5.Parent = S3

SubmitCode.Name = "SubmitCode"
SubmitCode.Parent = S3
SubmitCode.AnchorPoint = Vector2.new(1, 0.5)
SubmitCode.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
SubmitCode.BorderSizePixel = 0
SubmitCode.LayoutOrder = 10
SubmitCode.Position = UDim2.new(1, -59, 0.5, 0)
SubmitCode.Size = UDim2.new(0, 34, 0, 34)
SubmitCode.ZIndex = 2
SubmitCode.Image = "rbxassetid://3926305904"
SubmitCode.ImageRectOffset = Vector2.new(124, 924)
SubmitCode.ImageRectSize = Vector2.new(36, 36)

UICorner_6.CornerRadius = UDim.new(0, 10)
UICorner_6.Parent = SubmitCode

InjectCodeTextbox.Name = "InjectCodeTextbox"
InjectCodeTextbox.Parent = S3
InjectCodeTextbox.AnchorPoint = Vector2.new(1, 0.5)
InjectCodeTextbox.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
InjectCodeTextbox.BackgroundTransparency = 0.200
InjectCodeTextbox.BorderSizePixel = 0
InjectCodeTextbox.Position = UDim2.new(1, -98, 0.5, 0)
InjectCodeTextbox.Size = UDim2.new(0.200000003, 0, 0, 34)
InjectCodeTextbox.ClearTextOnFocus = false
InjectCodeTextbox.Font = Enum.Font.Gotham
InjectCodeTextbox.MultiLine = true
InjectCodeTextbox.PlaceholderText = "Inject Code"
InjectCodeTextbox.Text = ""
InjectCodeTextbox.TextColor3 = Color3.fromRGB(220, 220, 220)
InjectCodeTextbox.TextSize = 16.000

UICorner_7.CornerRadius = UDim.new(0, 10)
UICorner_7.Parent = InjectCodeTextbox

ResetCode.Name = "ResetCode"
ResetCode.Parent = S3
ResetCode.AnchorPoint = Vector2.new(1, 0.5)
ResetCode.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
ResetCode.BorderSizePixel = 0
ResetCode.LayoutOrder = 10
ResetCode.Position = UDim2.new(1, -20, 0.5, 0)
ResetCode.Size = UDim2.new(0, 34, 0, 34)
ResetCode.ZIndex = 2
ResetCode.Image = "rbxassetid://3926305904"
ResetCode.ImageRectOffset = Vector2.new(644, 724)
ResetCode.ImageRectSize = Vector2.new(36, 36)

UICorner_8.CornerRadius = UDim.new(0, 10)
UICorner_8.Parent = ResetCode

S1.Name = "S1"
S1.Parent = ScrollingFrame
S1.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S1.BorderSizePixel = 0
S1.Size = UDim2.new(1, -10, 0, 75)

Title_3.Name = "Title"
Title_3.Parent = S1
Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_3.BackgroundTransparency = 1.000
Title_3.BorderSizePixel = 0
Title_3.Position = UDim2.new(0, 25, 0, 0)
Title_3.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_3.Font = Enum.Font.GothamBold
Title_3.Text = "Change UI Accent Color"
Title_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_3.TextSize = 19.000
Title_3.TextXAlignment = Enum.TextXAlignment.Left
Title_3.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_3.Name = "SubTitle"
SubTitle_3.Parent = S1
SubTitle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_3.BackgroundTransparency = 1.000
SubTitle_3.BorderSizePixel = 0
SubTitle_3.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_3.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_3.Font = Enum.Font.Gotham
SubTitle_3.Text = "Change Vega X  Button Colors."
SubTitle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_3.TextSize = 14.000
SubTitle_3.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_3.TextYAlignment = Enum.TextYAlignment.Top

UICorner_9.CornerRadius = UDim.new(0, 10)
UICorner_9.Parent = S1

AccentColorPreview.Name = "AccentColorPreview"
AccentColorPreview.Parent = S1
AccentColorPreview.AnchorPoint = Vector2.new(1, 0.5)
AccentColorPreview.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AccentColorPreview.Position = UDim2.new(1, -20, 0.5, 0)
AccentColorPreview.Size = UDim2.new(0, 34, 0, 34)

UICorner_10.CornerRadius = UDim.new(0, 10)
UICorner_10.Parent = AccentColorPreview

SubmitAccent.Name = "SubmitAccent"
SubmitAccent.Parent = S1
SubmitAccent.AnchorPoint = Vector2.new(1, 0.5)
SubmitAccent.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
SubmitAccent.BorderSizePixel = 0
SubmitAccent.LayoutOrder = 10
SubmitAccent.Position = UDim2.new(1, -59, 0.5, 0)
SubmitAccent.Size = UDim2.new(0, 34, 0, 34)
SubmitAccent.ZIndex = 2
SubmitAccent.Image = "rbxassetid://3926305904"
SubmitAccent.ImageRectOffset = Vector2.new(124, 924)
SubmitAccent.ImageRectSize = Vector2.new(36, 36)

UICorner_11.CornerRadius = UDim.new(0, 10)
UICorner_11.Parent = SubmitAccent

AccentTextBox.Name = "AccentTextBox"
AccentTextBox.Parent = S1
AccentTextBox.AnchorPoint = Vector2.new(1, 0.5)
AccentTextBox.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
AccentTextBox.BackgroundTransparency = 0.200
AccentTextBox.BorderSizePixel = 0
AccentTextBox.Position = UDim2.new(1, -98, 0.5, 0)
AccentTextBox.Size = UDim2.new(0.200000003, 0, 0, 34)
AccentTextBox.ClearTextOnFocus = false
AccentTextBox.Font = Enum.Font.Gotham
AccentTextBox.MultiLine = true
AccentTextBox.PlaceholderText = "Hex Value"
AccentTextBox.Text = ""
AccentTextBox.TextColor3 = Color3.fromRGB(220, 220, 220)
AccentTextBox.TextSize = 16.000

UICorner_12.CornerRadius = UDim.new(0, 10)
UICorner_12.Parent = AccentTextBox

S4.Name = "S4"
S4.Parent = ScrollingFrame
S4.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S4.BorderSizePixel = 0
S4.Size = UDim2.new(1, -10, 0, 75)
S4.Visible = false

Title_4.Name = "Title"
Title_4.Parent = S4
Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_4.BackgroundTransparency = 1.000
Title_4.BorderSizePixel = 0
Title_4.Position = UDim2.new(0, 25, 0, 0)
Title_4.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_4.Font = Enum.Font.GothamBold
Title_4.Text = "禁用介绍动画"
Title_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_4.TextSize = 19.000
Title_4.TextXAlignment = Enum.TextXAlignment.Left
Title_4.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_4.Name = "SubTitle"
SubTitle_4.Parent = S4
SubTitle_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_4.BackgroundTransparency = 1.000
SubTitle_4.BorderSizePixel = 0
SubTitle_4.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_4.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_4.Font = Enum.Font.Gotham
SubTitle_4.Text = "立即跳转到 Vega X"
SubTitle_4.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_4.TextSize = 14.000
SubTitle_4.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_4.TextYAlignment = Enum.TextYAlignment.Top

UICorner_13.CornerRadius = UDim.new(0, 10)
UICorner_13.Parent = S4

ToggleBTN.Name = "ToggleBTN"
ToggleBTN.Parent = S4
ToggleBTN.AnchorPoint = Vector2.new(1, 0.5)
ToggleBTN.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
ToggleBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleBTN.BorderSizePixel = 0
ToggleBTN.Position = UDim2.new(1, -20, 0.5, 0)
ToggleBTN.Size = UDim2.new(0, 34, 0, 34)
ToggleBTN.Font = Enum.Font.SourceSans
ToggleBTN.Text = ""
ToggleBTN.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleBTN.TextSize = 14.000

UICorner_14.CornerRadius = UDim.new(0, 10)
UICorner_14.Parent = ToggleBTN

S0.Name = "S0"
S0.Parent = ScrollingFrame
S0.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
S0.BorderSizePixel = 0
S0.Size = UDim2.new(1, -10, 0, 75)

Title_5.Name = "Title"
Title_5.Parent = S0
Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_5.BackgroundTransparency = 1.000
Title_5.BorderSizePixel = 0
Title_5.Position = UDim2.new(0, 87, 0, 0)
Title_5.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_5.Font = Enum.Font.GothamBold
Title_5.Text = "Vega X 4.0"
Title_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_5.TextSize = 19.000
Title_5.TextXAlignment = Enum.TextXAlignment.Left
Title_5.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_5.Name = "SubTitle"
SubTitle_5.Parent = S0
SubTitle_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_5.BackgroundTransparency = 1.000
SubTitle_5.BorderSizePixel = 0
SubTitle_5.Position = UDim2.new(0, 87, 0.5, 0)
SubTitle_5.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_5.Font = Enum.Font.Gotham
SubTitle_5.Text = "Developed by 1 F0 & Rudy"
SubTitle_5.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_5.TextSize = 14.000
SubTitle_5.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_5.TextYAlignment = Enum.TextYAlignment.Top

UICorner_15.CornerRadius = UDim.new(0, 10)
UICorner_15.Parent = S0

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(195, 57, 57)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 85, 88))}
UIGradient.Parent = S0

VegaXLogo.Name = "VegaXLogo"
VegaXLogo.Parent = S0
VegaXLogo.AnchorPoint = Vector2.new(0, 0.5)
VegaXLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo.BackgroundTransparency = 1.000
VegaXLogo.BorderSizePixel = 0
VegaXLogo.Position = UDim2.new(0, 25, 0.5, 0)
VegaXLogo.Size = UDim2.new(0, 52, 0, 52)
VegaXLogo.ZIndex = 21
VegaXLogo.Image = "http://www.roblox.com/asset/?id=15861930865"

ScriptHubWindow.Name = "ScriptHubWindow"
ScriptHubWindow.Parent = VegaXAndroidUI
ScriptHubWindow.AnchorPoint = Vector2.new(0, 0.5)
ScriptHubWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ScriptHubWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptHubWindow.BorderSizePixel = 0
ScriptHubWindow.Position = UDim2.new(1, 200, 0.5, -20)
ScriptHubWindow.Size = UDim2.new(1, -200, 1, 40)

WindowMainTitle_2.Name = "WindowMainTitle"
WindowMainTitle_2.Parent = ScriptHubWindow
WindowMainTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_2.BackgroundTransparency = 1.000
WindowMainTitle_2.BorderSizePixel = 0
WindowMainTitle_2.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle_2.Size = UDim2.new(0, 309, 0, 21)
WindowMainTitle_2.Font = Enum.Font.GothamBold
WindowMainTitle_2.Text = "Script Hub"
WindowMainTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_2.TextSize = 18.000
WindowMainTitle_2.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle_2.TextYAlignment = Enum.TextYAlignment.Top

CloseB_2.Name = "CloseB"
CloseB_2.Parent = ScriptHubWindow
CloseB_2.AnchorPoint = Vector2.new(1, 0)
CloseB_2.BackgroundTransparency = 1.000
CloseB_2.BorderSizePixel = 0
CloseB_2.LayoutOrder = 6
CloseB_2.Position = UDim2.new(1, -5, 0, 45)
CloseB_2.Size = UDim2.new(0, 25, 0, 25)
CloseB_2.ZIndex = 2
CloseB_2.Image = "rbxassetid://3926307971"
CloseB_2.ImageRectOffset = Vector2.new(884, 284)
CloseB_2.ImageRectSize = Vector2.new(36, 36)

ScrollingFrame_2.Parent = ScriptHubWindow
ScrollingFrame_2.Active = true
ScrollingFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_2.BackgroundTransparency = 1.000
ScrollingFrame_2.BorderSizePixel = 0
ScrollingFrame_2.Position = UDim2.new(0, 0, 0, 136)
ScrollingFrame_2.Size = UDim2.new(1, 0, 1, -126)
ScrollingFrame_2.CanvasSize = UDim2.new(0, 0, 1, 0)
ScrollingFrame_2.ScrollBarThickness = 0

S1_2.Name = "S1"
S1_2.Parent = ScrollingFrame_2
S1_2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S1_2.BorderSizePixel = 0
S1_2.Size = UDim2.new(1, -10, 0, 80)
S1_2.Visible = false

Execute.Name = "Execute"
Execute.Parent = S1_2
Execute.AnchorPoint = Vector2.new(1, 0.5)
Execute.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
Execute.BackgroundTransparency = 0.400
Execute.BorderSizePixel = 0
Execute.LayoutOrder = 10
Execute.Position = UDim2.new(1, -23, 0.5, 0)
Execute.Size = UDim2.new(0, 34, 0, 34)
Execute.ZIndex = 2
Execute.Image = "rbxassetid://3926307971"
Execute.ImageRectOffset = Vector2.new(764, 244)
Execute.ImageRectSize = Vector2.new(36, 36)

UICorner_16.CornerRadius = UDim.new(0, 10)
UICorner_16.Parent = Execute

UICorner_17.CornerRadius = UDim.new(0, 10)
UICorner_17.Parent = S1_2

ImageLabel.Parent = S1_2
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderSizePixel = 0
ImageLabel.Size = UDim2.new(1, 0, 1, 0)
ImageLabel.Image = "http://www.roblox.com/asset/?id=11716682263"
ImageLabel.ScaleType = Enum.ScaleType.Crop

UICorner_18.CornerRadius = UDim.new(0, 10)
UICorner_18.Parent = ImageLabel

SubTitle_6.Name = "SubTitle"
SubTitle_6.Parent = S1_2
SubTitle_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_6.BackgroundTransparency = 1.000
SubTitle_6.BorderSizePixel = 0
SubTitle_6.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_6.Size = UDim2.new(1, -93, 0.5, 0)
SubTitle_6.Font = Enum.Font.Gotham
SubTitle_6.Text = "MM2 Aim Trainer 🎯 "
SubTitle_6.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_6.TextSize = 14.000
SubTitle_6.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_6.TextYAlignment = Enum.TextYAlignment.Top

Title_6.Name = "Title"
Title_6.Parent = S1_2
Title_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_6.BackgroundTransparency = 1.000
Title_6.BorderSizePixel = 0
Title_6.Position = UDim2.new(0, 25, 0, 0)
Title_6.Size = UDim2.new(1, -93, 0.5, 0)
Title_6.Font = Enum.Font.GothamBold
Title_6.Text = "Silent"
Title_6.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_6.TextSize = 19.000
Title_6.TextXAlignment = Enum.TextXAlignment.Left
Title_6.TextYAlignment = Enum.TextYAlignment.Bottom

UIListLayout_2.Parent = ScrollingFrame_2
UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 5)

SearchBox.Name = "SearchBox"
SearchBox.Parent = ScriptHubWindow
SearchBox.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
SearchBox.BorderSizePixel = 0
SearchBox.Position = UDim2.new(0, 5, 0, 91)
SearchBox.Size = UDim2.new(1, -115, 0, 40)
SearchBox.Font = Enum.Font.Gotham
SearchBox.PlaceholderText = "Search for a Script Here"
SearchBox.Text = ""
SearchBox.TextColor3 = Color3.fromRGB(220, 220, 220)
SearchBox.TextSize = 14.000
SearchBox.TextXAlignment = Enum.TextXAlignment.Left

UICorner_19.CornerRadius = UDim.new(0, 10)
UICorner_19.Parent = SearchBox

SearchButton.Name = "SearchButton"
SearchButton.Parent = ScriptHubWindow
SearchButton.AnchorPoint = Vector2.new(1, 0)
SearchButton.BackgroundTransparency = 1.000
SearchButton.LayoutOrder = 1
SearchButton.Position = UDim2.new(1, -115, 0, 99)
SearchButton.Size = UDim2.new(0, 25, 0, 25)
SearchButton.ZIndex = 2
SearchButton.AutoButtonColor = false
SearchButton.Image = "rbxassetid://3926305904"
SearchButton.ImageRectOffset = Vector2.new(964, 324)
SearchButton.ImageRectSize = Vector2.new(36, 36)

WindowSubTitle.Name = "WindowSubTitle"
WindowSubTitle.Parent = ScriptHubWindow
WindowSubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle.BackgroundTransparency = 1.000
WindowSubTitle.BorderSizePixel = 0
WindowSubTitle.Position = UDim2.new(0, 7, 0, 72)
WindowSubTitle.Size = UDim2.new(0, 309, 0, 14)
WindowSubTitle.Font = Enum.Font.Gotham
WindowSubTitle.Text = "Powered by ScriptBlox, Aggregation System by Zyrex, Modified by Rudy."
WindowSubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle.TextSize = 12.000
WindowSubTitle.TextXAlignment = Enum.TextXAlignment.Left
WindowSubTitle.TextYAlignment = Enum.TextYAlignment.Top

PaginationFrame.Name = "PaginationFrame"
PaginationFrame.Parent = ScriptHubWindow
PaginationFrame.AnchorPoint = Vector2.new(1, 0)
PaginationFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
PaginationFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
PaginationFrame.BorderSizePixel = 0
PaginationFrame.Position = UDim2.new(1, -5, 0, 91)
PaginationFrame.Size = UDim2.new(0, 100, 0, 40)

UICorner_20.CornerRadius = UDim.new(0, 10)
UICorner_20.Parent = PaginationFrame

LeftPage.Name = "LeftPage"
LeftPage.Parent = PaginationFrame
LeftPage.BackgroundTransparency = 1.000
LeftPage.LayoutOrder = 5
LeftPage.Rotation = 180.000
LeftPage.Size = UDim2.new(0, 25, 1, 0)
LeftPage.ZIndex = 2
LeftPage.Image = "rbxassetid://3926307971"
LeftPage.ImageRectOffset = Vector2.new(764, 244)
LeftPage.ImageRectSize = Vector2.new(36, 36)
LeftPage.ScaleType = Enum.ScaleType.Fit

RightPage.Name = "RightPage"
RightPage.Parent = PaginationFrame
RightPage.AnchorPoint = Vector2.new(1, 0)
RightPage.BackgroundTransparency = 1.000
RightPage.LayoutOrder = 5
RightPage.Position = UDim2.new(1, 0, 0, 0)
RightPage.Size = UDim2.new(0, 25, 1, 0)
RightPage.ZIndex = 2
RightPage.Image = "rbxassetid://3926307971"
RightPage.ImageRectOffset = Vector2.new(764, 244)
RightPage.ImageRectSize = Vector2.new(36, 36)
RightPage.ScaleType = Enum.ScaleType.Fit

PageLabel.Name = "PageLabel"
PageLabel.Parent = PaginationFrame
PageLabel.AnchorPoint = Vector2.new(0.5, 0)
PageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PageLabel.BackgroundTransparency = 1.000
PageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
PageLabel.BorderSizePixel = 0
PageLabel.Position = UDim2.new(0.5, 0, 0, 0)
PageLabel.Size = UDim2.new(1, -50, 1, 0)
PageLabel.Font = Enum.Font.Gotham
PageLabel.Text = "1"
PageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PageLabel.TextSize = 14.000

SidebarFrame.Name = "SidebarFrame"
SidebarFrame.Parent = VegaXAndroidUI
SidebarFrame.AnchorPoint = Vector2.new(0, 0.5)
SidebarFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SidebarFrame.BorderSizePixel = 0
SidebarFrame.Position = UDim2.new(0, -200, 0.5, 0)
SidebarFrame.Size = UDim2.new(0, 200, 1, 0)

Banner.Name = "Banner"
Banner.Parent = SidebarFrame
Banner.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Banner.BorderSizePixel = 0
Banner.Position = UDim2.new(0, 0, 0, -40)
Banner.Size = UDim2.new(1, 0, 0, 190)

HappyGuy.Name = "HappyGuy"
HappyGuy.Parent = Banner
HappyGuy.AnchorPoint = Vector2.new(0.5, 1)
HappyGuy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HappyGuy.BackgroundTransparency = 1.000
HappyGuy.BorderSizePixel = 0
HappyGuy.Position = UDim2.new(0.5, 0, 1, 0)
HappyGuy.Size = UDim2.new(1, 0, 1, -90)
HappyGuy.Image = "http://www.roblox.com/asset/?id=13329667664"
HappyGuy.ImageTransparency = 0.500
HappyGuy.ScaleType = Enum.ScaleType.Fit

VegaXLogo_2.Name = "VegaXLogo"
VegaXLogo_2.Parent = Banner
VegaXLogo_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo_2.BackgroundTransparency = 1.000
VegaXLogo_2.BorderSizePixel = 0
VegaXLogo_2.Position = UDim2.new(0, 10, 0, 50)
VegaXLogo_2.Size = UDim2.new(0, 25, 0, 25)
VegaXLogo_2.Image = "http://www.roblox.com/asset/?id=15861930865"

TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = Banner
TitleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.BackgroundTransparency = 1.000
TitleLabel.BorderSizePixel = 0
TitleLabel.Position = UDim2.new(0, 40, 0, 50)
TitleLabel.Size = UDim2.new(0, 150, 0, 25)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "Vega X 4.0.6"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 12.000
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

ScrollingFrame_3.Parent = SidebarFrame
ScrollingFrame_3.Active = true
ScrollingFrame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_3.BackgroundTransparency = 1.000
ScrollingFrame_3.BorderSizePixel = 0
ScrollingFrame_3.Position = UDim2.new(0, 0, 0, 150)
ScrollingFrame_3.Size = UDim2.new(1, 0, 1, -150)
ScrollingFrame_3.CanvasSize = UDim2.new(0, 0, 1.5, 0)
ScrollingFrame_3.ScrollBarThickness = 0

UIListLayout_3.Parent = ScrollingFrame_3
UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.Padding = UDim.new(0, 2)

UsernamePlace.Name = "UsernamePlace"
UsernamePlace.Parent = ScrollingFrame_3
UsernamePlace.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
UsernamePlace.BorderSizePixel = 0
UsernamePlace.Position = UDim2.new(0, 0, 1, -10)
UsernamePlace.Size = UDim2.new(1, 0, 0, 62)

Title_7.Name = "Title"
Title_7.Parent = UsernamePlace
Title_7.AnchorPoint = Vector2.new(0, 0.5)
Title_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_7.BackgroundTransparency = 1.000
Title_7.BorderSizePixel = 0
Title_7.Position = UDim2.new(0, 62, 0.5, 0)
Title_7.Size = UDim2.new(0.639999986, 0, 1, -20)
Title_7.Font = Enum.Font.Gotham
Title_7.Text = "Hello!"
Title_7.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_7.TextSize = 14.000
Title_7.TextWrapped = true
Title_7.TextXAlignment = Enum.TextXAlignment.Left

Icon.Name = "Icon"
Icon.Parent = UsernamePlace
Icon.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon.BorderSizePixel = 0
Icon.Position = UDim2.new(0, 10, 0, 10)
Icon.Size = UDim2.new(0, 42, 0, 42)

UICorner_21.CornerRadius = UDim.new(0, 10)
UICorner_21.Parent = Icon

ProfileImage.Name = "ProfileImage"
ProfileImage.Parent = Icon
ProfileImage.AnchorPoint = Vector2.new(0.5, 0.5)
ProfileImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ProfileImage.BackgroundTransparency = 1.000
ProfileImage.BorderSizePixel = 0
ProfileImage.Position = UDim2.new(0.5, 0, 0.5, 0)
ProfileImage.Size = UDim2.new(1, 0, 1, 0)

UICorner_22.CornerRadius = UDim.new(0, 10)
UICorner_22.Parent = ProfileImage

Choice1.Name = "Choice1"
Choice1.Parent = ScrollingFrame_3
Choice1.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Choice1.BorderSizePixel = 0
Choice1.Size = UDim2.new(1, 0, 0, 100)

Title_8.Name = "Title"
Title_8.Parent = Choice1
Title_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_8.BackgroundTransparency = 1.000
Title_8.BorderSizePixel = 0
Title_8.Position = UDim2.new(0, 62, 0, 10)
Title_8.Size = UDim2.new(0.529999971, 0, 0.209999993, 20)
Title_8.Font = Enum.Font.Gotham
Title_8.Text = "Executor"
Title_8.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_8.TextSize = 14.000
Title_8.TextWrapped = true
Title_8.TextXAlignment = Enum.TextXAlignment.Left

C1EB.Name = "C1EB"
C1EB.Parent = Choice1
C1EB.AnchorPoint = Vector2.new(0.5, 1)
C1EB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
C1EB.BorderSizePixel = 0
C1EB.Position = UDim2.new(0.5, 0, 1, -10)
C1EB.Size = UDim2.new(1, -20, 0, 30)
C1EB.Font = Enum.Font.GothamBold
C1EB.Text = "Open"
C1EB.TextColor3 = Color3.fromRGB(255, 255, 255)
C1EB.TextSize = 14.000

UICorner_23.CornerRadius = UDim.new(0, 4)
UICorner_23.Parent = C1EB

Icon_2.Name = "Icon"
Icon_2.Parent = Choice1
Icon_2.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon_2.BorderSizePixel = 0
Icon_2.Position = UDim2.new(0, 10, 0, 10)
Icon_2.Size = UDim2.new(0, 42, 0, 42)

UICorner_24.CornerRadius = UDim.new(0, 10)
UICorner_24.Parent = Icon_2

ImageLabel_2.Parent = Icon_2
ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_2.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
ImageLabel_2.Image = "rbxassetid://3926307971"
ImageLabel_2.ImageRectOffset = Vector2.new(764, 244)
ImageLabel_2.ImageRectSize = Vector2.new(36, 36)

Choice2.Name = "Choice2"
Choice2.Parent = ScrollingFrame_3
Choice2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Choice2.BorderSizePixel = 0
Choice2.Size = UDim2.new(1, 0, 0, 100)

Title_9.Name = "Title"
Title_9.Parent = Choice2
Title_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_9.BackgroundTransparency = 1.000
Title_9.BorderSizePixel = 0
Title_9.Position = UDim2.new(0, 62, 0, 10)
Title_9.Size = UDim2.new(0.529999971, 0, 0.209999993, 20)
Title_9.Font = Enum.Font.Gotham
Title_9.Text = "Script Hub"
Title_9.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_9.TextSize = 14.000
Title_9.TextWrapped = true
Title_9.TextXAlignment = Enum.TextXAlignment.Left

C2EB.Name = "C2EB"
C2EB.Parent = Choice2
C2EB.AnchorPoint = Vector2.new(0.5, 1)
C2EB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
C2EB.BorderSizePixel = 0
C2EB.Position = UDim2.new(0.5, 0, 1, -10)
C2EB.Size = UDim2.new(1, -20, 0, 30)
C2EB.Font = Enum.Font.GothamBold
C2EB.Text = "Open"
C2EB.TextColor3 = Color3.fromRGB(255, 255, 255)
C2EB.TextSize = 14.000

UICorner_25.CornerRadius = UDim.new(0, 4)
UICorner_25.Parent = C2EB

Icon_3.Name = "Icon"
Icon_3.Parent = Choice2
Icon_3.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon_3.BorderSizePixel = 0
Icon_3.Position = UDim2.new(0, 10, 0, 10)
Icon_3.Size = UDim2.new(0, 42, 0, 42)

UICorner_26.CornerRadius = UDim.new(0, 10)
UICorner_26.Parent = Icon_3

ImageLabel_3.Parent = Icon_3
ImageLabel_3.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_3.BackgroundTransparency = 1.000
ImageLabel_3.BorderSizePixel = 0
ImageLabel_3.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_3.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
ImageLabel_3.Image = "rbxassetid://3926307971"
ImageLabel_3.ImageRectOffset = Vector2.new(804, 404)
ImageLabel_3.ImageRectSize = Vector2.new(36, 36)

Choice3.Name = "Choice3"
Choice3.Parent = ScrollingFrame_3
Choice3.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Choice3.BorderSizePixel = 0
Choice3.Size = UDim2.new(1, 0, 0, 100)

Title_10.Name = "Title"
Title_10.Parent = Choice3
Title_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_10.BackgroundTransparency = 1.000
Title_10.BorderSizePixel = 0
Title_10.Position = UDim2.new(0, 62, 0, 10)
Title_10.Size = UDim2.new(0.529999971, 0, 0.209999993, 20)
Title_10.Font = Enum.Font.Gotham
Title_10.Text = "Settings"
Title_10.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_10.TextSize = 14.000
Title_10.TextWrapped = true
Title_10.TextXAlignment = Enum.TextXAlignment.Left

C3EB.Name = "C3EB"
C3EB.Parent = Choice3
C3EB.AnchorPoint = Vector2.new(0.5, 1)
C3EB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
C3EB.BorderSizePixel = 0
C3EB.Position = UDim2.new(0.5, 0, 1, -10)
C3EB.Size = UDim2.new(1, -20, 0, 30)
C3EB.Font = Enum.Font.GothamBold
C3EB.Text = "Open"
C3EB.TextColor3 = Color3.fromRGB(255, 255, 255)
C3EB.TextSize = 14.000

UICorner_27.CornerRadius = UDim.new(0, 4)
UICorner_27.Parent = C3EB

Icon_4.Name = "Icon"
Icon_4.Parent = Choice3
Icon_4.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon_4.BorderSizePixel = 0
Icon_4.Position = UDim2.new(0, 10, 0, 10)
Icon_4.Size = UDim2.new(0, 42, 0, 42)

UICorner_28.CornerRadius = UDim.new(0, 10)
UICorner_28.Parent = Icon_4

ImageLabel_4.Parent = Icon_4
ImageLabel_4.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_4.BackgroundTransparency = 1.000
ImageLabel_4.BorderSizePixel = 0
ImageLabel_4.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_4.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
ImageLabel_4.Image = "rbxassetid://3926307971"
ImageLabel_4.ImageRectOffset = Vector2.new(324, 124)
ImageLabel_4.ImageRectSize = Vector2.new(36, 36)

VegaXMenuToggleFrame.Name = "VegaXMenuToggleFrame"
VegaXMenuToggleFrame.Parent = VegaXAndroidUI
VegaXMenuToggleFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VegaXMenuToggleFrame.BackgroundTransparency = 0.500
VegaXMenuToggleFrame.BorderSizePixel = 0
VegaXMenuToggleFrame.ClipsDescendants = true
VegaXMenuToggleFrame.Position = UDim2.new(0, 104, 0, -32)
VegaXMenuToggleFrame.Size = UDim2.new(0, 64, 0, 32)
VegaXMenuToggleFrame.Visible = false
VegaXMenuToggleFrame.ZIndex = 10

UICorner_29.CornerRadius = UDim.new(0, 10)
UICorner_29.Parent = VegaXMenuToggleFrame

VegaXMenuToggle.Name = "VegaXMenuToggle"
VegaXMenuToggle.Parent = VegaXMenuToggleFrame
VegaXMenuToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VegaXMenuToggle.BackgroundTransparency = 1.000
VegaXMenuToggle.BorderSizePixel = 0
VegaXMenuToggle.Size = UDim2.new(0, 32, 0, 32)
VegaXMenuToggle.ZIndex = 11
VegaXMenuToggle.Font = Enum.Font.SourceSans
VegaXMenuToggle.Text = ""
VegaXMenuToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
VegaXMenuToggle.TextSize = 14.000

UICorner_30.CornerRadius = UDim.new(0, 10)
UICorner_30.Parent = VegaXMenuToggle

ImageLabel_5.Parent = VegaXMenuToggle
ImageLabel_5.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_5.BackgroundTransparency = 1.000
ImageLabel_5.BorderSizePixel = 0
ImageLabel_5.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_5.Size = UDim2.new(0.699999988, 0, 0.699999988, 0)
ImageLabel_5.ZIndex = 11
ImageLabel_5.Image = "http://www.roblox.com/asset/?id=15861930865"

DragTouch.Name = "DragTouch"
DragTouch.Parent = VegaXMenuToggleFrame
DragTouch.AnchorPoint = Vector2.new(1, 0)
DragTouch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DragTouch.BackgroundTransparency = 1.000
DragTouch.BorderSizePixel = 0
DragTouch.Position = UDim2.new(1, 0, 0, 0)
DragTouch.Size = UDim2.new(0, 32, 0, 32)
DragTouch.ZIndex = 11
DragTouch.Image = "rbxassetid://3926307971"
DragTouch.ImageRectOffset = Vector2.new(564, 364)
DragTouch.ImageRectSize = Vector2.new(36, 36)

KeySystem.Name = "KeySystem"
KeySystem.Parent = VegaXAndroidUI
KeySystem.AnchorPoint = Vector2.new(0, 0.5)
KeySystem.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KeySystem.BackgroundTransparency = 0.200
KeySystem.BorderColor3 = Color3.fromRGB(30, 30, 30)
KeySystem.BorderSizePixel = 0
KeySystem.Position = UDim2.new(0, 0, 2, -20)
KeySystem.Size = UDim2.new(1, 0, 1, 40)

MainTitle.Name = "MainTitle"
MainTitle.Parent = KeySystem
MainTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainTitle.BackgroundTransparency = 1.000
MainTitle.BorderSizePixel = 0
MainTitle.Position = UDim2.new(0, 7, 0, 88)
MainTitle.Size = UDim2.new(1, -14, 0, 21)
MainTitle.Font = Enum.Font.GothamBold
MainTitle.Text = "[Vega X] Key System"
MainTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
MainTitle.TextSize = 18.000
MainTitle.TextYAlignment = Enum.TextYAlignment.Top

CloseB_3.Name = "CloseB"
CloseB_3.Parent = KeySystem
CloseB_3.AnchorPoint = Vector2.new(1, 0)
CloseB_3.BackgroundTransparency = 1.000
CloseB_3.BorderSizePixel = 0
CloseB_3.LayoutOrder = 6
CloseB_3.Position = UDim2.new(1, -5, 0, 45)
CloseB_3.Size = UDim2.new(0, 25, 0, 25)
CloseB_3.ZIndex = 2
CloseB_3.Image = "rbxassetid://3926307971"
CloseB_3.ImageRectOffset = Vector2.new(884, 284)
CloseB_3.ImageRectSize = Vector2.new(36, 36)

TextBox.Parent = KeySystem
TextBox.AnchorPoint = Vector2.new(0, 1)
TextBox.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
TextBox.BackgroundTransparency = 0.200
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0, 25, 1, -137)
TextBox.Size = UDim2.new(1, -50, 0, 50)
TextBox.ClearTextOnFocus = false
TextBox.Font = Enum.Font.Code
TextBox.MultiLine = true
TextBox.PlaceholderText = "Insert the Key Here!"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(220, 220, 220)
TextBox.TextSize = 16.000

UICorner_31.CornerRadius = UDim.new(0, 5)
UICorner_31.Parent = TextBox

ApproveKeyB.Name = "ApproveKeyB"
ApproveKeyB.Parent = KeySystem
ApproveKeyB.Active = false
ApproveKeyB.AnchorPoint = Vector2.new(0.5, 1)
ApproveKeyB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
ApproveKeyB.BorderSizePixel = 0
ApproveKeyB.Position = UDim2.new(0.5, 0, 1, -76)
ApproveKeyB.Size = UDim2.new(0, 120, 0, 40)
ApproveKeyB.Font = Enum.Font.GothamBold
ApproveKeyB.Text = "Check Key"
ApproveKeyB.TextColor3 = Color3.fromRGB(255, 255, 255)
ApproveKeyB.TextSize = 16.000

UICorner_32.CornerRadius = UDim.new(0, 4)
UICorner_32.Parent = ApproveKeyB

EULALabel.Name = "EULALabel"
EULALabel.Parent = KeySystem
EULALabel.AnchorPoint = Vector2.new(0, 1)
EULALabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EULALabel.BackgroundTransparency = 1.000
EULALabel.BorderSizePixel = 0
EULALabel.Position = UDim2.new(0, 7, 1, -35)
EULALabel.Size = UDim2.new(1, -14, 0, 21)
EULALabel.Font = Enum.Font.GothamBold
EULALabel.Text = "By pressing \"Get Key\", you accept to the terms of the Pelican Key System EULA."
EULALabel.TextColor3 = Color3.fromRGB(255, 255, 255)
EULALabel.TextSize = 12.000

GetKeyB.Name = "GetKeyB"
GetKeyB.Parent = KeySystem
GetKeyB.Active = false
GetKeyB.AnchorPoint = Vector2.new(0.5, 1)
GetKeyB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
GetKeyB.BackgroundTransparency = 0.500
GetKeyB.BorderSizePixel = 0
GetKeyB.Position = UDim2.new(0.5, -125, 1, -76)
GetKeyB.Size = UDim2.new(0, 120, 0, 40)
GetKeyB.Font = Enum.Font.GothamBold
GetKeyB.Text = "Get Key"
GetKeyB.TextColor3 = Color3.fromRGB(255, 255, 255)
GetKeyB.TextSize = 16.000

UICorner_33.CornerRadius = UDim.new(0, 4)
UICorner_33.Parent = GetKeyB

JoinDiscordB.Name = "JoinDiscordB"
JoinDiscordB.Parent = KeySystem
JoinDiscordB.Active = false
JoinDiscordB.AnchorPoint = Vector2.new(0.5, 1)
JoinDiscordB.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
JoinDiscordB.BorderSizePixel = 0
JoinDiscordB.Position = UDim2.new(0.5, 125, 1, -76)
JoinDiscordB.Size = UDim2.new(0, 120, 0, 40)
JoinDiscordB.Font = Enum.Font.GothamBold
JoinDiscordB.Text = "Join Discord"
JoinDiscordB.TextColor3 = Color3.fromRGB(255, 255, 255)
JoinDiscordB.TextSize = 16.000

UICorner_34.CornerRadius = UDim.new(0, 4)
UICorner_34.Parent = JoinDiscordB

Banner_2.Name = "Banner"
Banner_2.Parent = KeySystem
Banner_2.AnchorPoint = Vector2.new(0.5, 0)
Banner_2.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Banner_2.BorderSizePixel = 0
Banner_2.ClipsDescendants = true
Banner_2.Position = UDim2.new(0.5, 0, 0, 150)
Banner_2.Size = UDim2.new(1, -50, 1, -345)

VegaXLogo_3.Name = "VegaXLogo"
VegaXLogo_3.Parent = Banner_2
VegaXLogo_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo_3.BackgroundTransparency = 1.000
VegaXLogo_3.BorderSizePixel = 0
VegaXLogo_3.Position = UDim2.new(0, 10, 0, 10)
VegaXLogo_3.Size = UDim2.new(0, 25, 0, 25)
VegaXLogo_3.Image = "http://www.roblox.com/asset/?id=15861930865"

UICorner_35.Parent = Banner_2

HappyGuy_2.Name = "HappyGuy"
HappyGuy_2.Parent = Banner_2
HappyGuy_2.AnchorPoint = Vector2.new(0.5, 1)
HappyGuy_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HappyGuy_2.BackgroundTransparency = 1.000
HappyGuy_2.BorderSizePixel = 0
HappyGuy_2.Position = UDim2.new(0.5, 0, 1, 0)
HappyGuy_2.Size = UDim2.new(1, 0, 0.800000012, 0)
HappyGuy_2.Image = "http://www.roblox.com/asset/?id=13329667664"
HappyGuy_2.ImageTransparency = 0.500
HappyGuy_2.ScaleType = Enum.ScaleType.Fit

TitleLabel_2.Name = "TitleLabel"
TitleLabel_2.Parent = Banner_2
TitleLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel_2.BackgroundTransparency = 1.000
TitleLabel_2.BorderSizePixel = 0
TitleLabel_2.Position = UDim2.new(0, 40, 0, 10)
TitleLabel_2.Size = UDim2.new(0, 150, 0, 25)
TitleLabel_2.Font = Enum.Font.GothamBold
TitleLabel_2.Text = "Happy Guy"
TitleLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel_2.TextSize = 12.000
TitleLabel_2.TextXAlignment = Enum.TextXAlignment.Left

ScrollingBox.Name = "ScrollingBox"
ScrollingBox.Parent = Banner_2
ScrollingBox.Active = true
ScrollingBox.AnchorPoint = Vector2.new(0.5, 1)
ScrollingBox.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
ScrollingBox.BackgroundTransparency = 1.000
ScrollingBox.BorderSizePixel = 0
ScrollingBox.Position = UDim2.new(0.5, 0, 1, -10)
ScrollingBox.Size = UDim2.new(1, -20, 1, -55)
ScrollingBox.Visible = false
ScrollingBox.CanvasSize = UDim2.new(0, 0, 1.5, 0)
ScrollingBox.ScrollBarThickness = 2

TextBox_2.Parent = ScrollingBox
TextBox_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox_2.BackgroundTransparency = 1.000
TextBox_2.Selectable = false
TextBox_2.Size = UDim2.new(1, 0, 1, 0)
TextBox_2.ZIndex = 4
TextBox_2.ClearTextOnFocus = false
TextBox_2.Font = Enum.Font.Gotham
TextBox_2.MultiLine = true
TextBox_2.ShowNativeInput = false
TextBox_2.Text = ""
TextBox_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_2.TextSize = 16.000
TextBox_2.TextWrapped = true
TextBox_2.TextXAlignment = Enum.TextXAlignment.Left
TextBox_2.TextYAlignment = Enum.TextYAlignment.Top

UICorner_36.CornerRadius = UDim.new(0, 5)
UICorner_36.Parent = ScrollingBox

SubTitle_7.Name = "SubTitle"
SubTitle_7.Parent = KeySystem
SubTitle_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_7.BackgroundTransparency = 1.000
SubTitle_7.BorderSizePixel = 0
SubTitle_7.Position = UDim2.new(0, 7, 0, 109)
SubTitle_7.Size = UDim2.new(1, -14, 0, 40)
SubTitle_7.Font = Enum.Font.Gotham
SubTitle_7.Text = "Press \"Get Key\" to get started!"
SubTitle_7.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_7.TextSize = 14.000
SubTitle_7.TextWrapped = true
SubTitle_7.TextYAlignment = Enum.TextYAlignment.Top

KSMenuToggleFrame.Name = "KSMenuToggleFrame"
KSMenuToggleFrame.Parent = VegaXAndroidUI
KSMenuToggleFrame.AnchorPoint = Vector2.new(1, 1)
KSMenuToggleFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KSMenuToggleFrame.BackgroundTransparency = 0.500
KSMenuToggleFrame.BorderSizePixel = 0
KSMenuToggleFrame.ClipsDescendants = true
KSMenuToggleFrame.Position = UDim2.new(1, -10, 1, -10)
KSMenuToggleFrame.Visible = false
KSMenuToggleFrame.ZIndex = 10

UICorner_37.CornerRadius = UDim.new(0, 10)
UICorner_37.Parent = KSMenuToggleFrame

VegaXKSToggle.Name = "VegaXKSToggle"
VegaXKSToggle.Parent = KSMenuToggleFrame
VegaXKSToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VegaXKSToggle.BackgroundTransparency = 1.000
VegaXKSToggle.BorderSizePixel = 0
VegaXKSToggle.Size = UDim2.new(0, 32, 0, 32)
VegaXKSToggle.ZIndex = 11
VegaXKSToggle.Font = Enum.Font.SourceSans
VegaXKSToggle.Text = ""
VegaXKSToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
VegaXKSToggle.TextSize = 14.000

UICorner_38.CornerRadius = UDim.new(0, 10)
UICorner_38.Parent = VegaXKSToggle

ImageLabel_6.Parent = VegaXKSToggle
ImageLabel_6.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_6.BackgroundTransparency = 1.000
ImageLabel_6.BorderSizePixel = 0
ImageLabel_6.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_6.Size = UDim2.new(0.699999988, 0, 0.699999988, 0)
ImageLabel_6.ZIndex = 11
ImageLabel_6.Image = "http://www.roblox.com/asset/?id=15861930865"

IntroFrame.Name = "IntroFrame"
IntroFrame.Parent = VegaXAndroidUI
IntroFrame.AnchorPoint = Vector2.new(0.5, 0.5)
IntroFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
IntroFrame.BackgroundTransparency = 1.000
IntroFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
IntroFrame.BorderSizePixel = 0
IntroFrame.ClipsDescendants = true
IntroFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
IntroFrame.Size = UDim2.new(1, 0, 1, 0)

BackgroundFrame.Name = "BackgroundFrame"
BackgroundFrame.Parent = IntroFrame
BackgroundFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackgroundFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BackgroundFrame.BackgroundTransparency = 1.000
BackgroundFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
BackgroundFrame.BorderSizePixel = 0
BackgroundFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackgroundFrame.Rotation = 45.000
BackgroundFrame.Size = UDim2.new(1.29999995, 0, 3, 0)

R1.Name = "R1"
R1.Parent = BackgroundFrame
R1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
R1.BackgroundTransparency = 1.000
R1.BorderColor3 = Color3.fromRGB(0, 0, 0)
R1.BorderSizePixel = 0
R1.Size = UDim2.new(0.075000003, 0, 0, 0)

R2.Name = "R2"
R2.Parent = BackgroundFrame
R2.BackgroundColor3 = Color3.fromRGB(19, 6, 6)
R2.BackgroundTransparency = 1.000
R2.BorderColor3 = Color3.fromRGB(0, 0, 0)
R2.BorderSizePixel = 0
R2.Position = UDim2.new(0.0500000007, 0, 0, 0)
R2.Size = UDim2.new(0.075000003, 0, 0, 0)
R2.ZIndex = 2

R3.Name = "R3"
R3.Parent = BackgroundFrame
R3.BackgroundColor3 = Color3.fromRGB(39, 11, 11)
R3.BackgroundTransparency = 1.000
R3.BorderColor3 = Color3.fromRGB(0, 0, 0)
R3.BorderSizePixel = 0
R3.Position = UDim2.new(0.100000001, 0, 0, 0)
R3.Size = UDim2.new(0.075000003, 0, 0, 0)
R3.ZIndex = 3

R4.Name = "R4"
R4.Parent = BackgroundFrame
R4.BackgroundColor3 = Color3.fromRGB(58, 17, 17)
R4.BackgroundTransparency = 1.000
R4.BorderColor3 = Color3.fromRGB(0, 0, 0)
R4.BorderSizePixel = 0
R4.Position = UDim2.new(0.150000006, 0, 0, 0)
R4.Size = UDim2.new(0.075000003, 0, 0, 0)
R4.ZIndex = 4

R5.Name = "R5"
R5.Parent = BackgroundFrame
R5.BackgroundColor3 = Color3.fromRGB(78, 23, 23)
R5.BackgroundTransparency = 1.000
R5.BorderColor3 = Color3.fromRGB(0, 0, 0)
R5.BorderSizePixel = 0
R5.Position = UDim2.new(0.200000003, 0, 0, 0)
R5.Size = UDim2.new(0.075000003, 0, 0, 0)
R5.ZIndex = 5

R6.Name = "R6"
R6.Parent = BackgroundFrame
R6.BackgroundColor3 = Color3.fromRGB(117, 34, 34)
R6.BackgroundTransparency = 1.000
R6.BorderColor3 = Color3.fromRGB(0, 0, 0)
R6.BorderSizePixel = 0
R6.Position = UDim2.new(0.25, 0, 0, 0)
R6.Size = UDim2.new(0.075000003, 0, 0, 0)
R6.ZIndex = 6

R7.Name = "R7"
R7.Parent = BackgroundFrame
R7.BackgroundColor3 = Color3.fromRGB(137, 40, 40)
R7.BackgroundTransparency = 1.000
R7.BorderColor3 = Color3.fromRGB(0, 0, 0)
R7.BorderSizePixel = 0
R7.Position = UDim2.new(0.300000012, 0, 0, 0)
R7.Size = UDim2.new(0.075000003, 0, 0, 0)
R7.ZIndex = 7

R8.Name = "R8"
R8.Parent = BackgroundFrame
R8.BackgroundColor3 = Color3.fromRGB(156, 46, 46)
R8.BackgroundTransparency = 1.000
R8.BorderColor3 = Color3.fromRGB(0, 0, 0)
R8.BorderSizePixel = 0
R8.Position = UDim2.new(0.349999994, 0, 0, 0)
R8.Size = UDim2.new(0.075000003, 0, 0, 0)
R8.ZIndex = 8

R9.Name = "R9"
R9.Parent = BackgroundFrame
R9.BackgroundColor3 = Color3.fromRGB(176, 51, 51)
R9.BackgroundTransparency = 1.000
R9.BorderColor3 = Color3.fromRGB(0, 0, 0)
R9.BorderSizePixel = 0
R9.Position = UDim2.new(0.400000006, 0, 0, 0)
R9.Size = UDim2.new(0.075000003, 0, 0, 0)
R9.ZIndex = 9

R10.Name = "R10"
R10.Parent = BackgroundFrame
R10.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
R10.BackgroundTransparency = 1.000
R10.BorderColor3 = Color3.fromRGB(0, 0, 0)
R10.BorderSizePixel = 0
R10.Position = UDim2.new(0.449999988, 0, 0, 0)
R10.Size = UDim2.new(0.075000003, 0, 0, 0)
R10.ZIndex = 10

R11.Name = "R11"
R11.Parent = BackgroundFrame
R11.BackgroundColor3 = Color3.fromRGB(176, 51, 51)
R11.BackgroundTransparency = 1.000
R11.BorderColor3 = Color3.fromRGB(0, 0, 0)
R11.BorderSizePixel = 0
R11.Position = UDim2.new(0.5, 0, 0, 0)
R11.Size = UDim2.new(0.075000003, 0, 0, 0)
R11.ZIndex = 11

R12.Name = "R12"
R12.Parent = BackgroundFrame
R12.BackgroundColor3 = Color3.fromRGB(156, 46, 46)
R12.BackgroundTransparency = 1.000
R12.BorderColor3 = Color3.fromRGB(0, 0, 0)
R12.BorderSizePixel = 0
R12.Position = UDim2.new(0.550000012, 0, 0, 0)
R12.Size = UDim2.new(0.075000003, 0, 0, 0)
R12.ZIndex = 12

R13.Name = "R13"
R13.Parent = BackgroundFrame
R13.BackgroundColor3 = Color3.fromRGB(137, 40, 40)
R13.BackgroundTransparency = 1.000
R13.BorderColor3 = Color3.fromRGB(0, 0, 0)
R13.BorderSizePixel = 0
R13.Position = UDim2.new(0.600000024, 0, 0, 0)
R13.Size = UDim2.new(0.075000003, 0, 0, 0)
R13.ZIndex = 13

R14.Name = "R14"
R14.Parent = BackgroundFrame
R14.BackgroundColor3 = Color3.fromRGB(117, 34, 34)
R14.BackgroundTransparency = 1.000
R14.BorderColor3 = Color3.fromRGB(0, 0, 0)
R14.BorderSizePixel = 0
R14.Position = UDim2.new(0.649999976, 0, 0, 0)
R14.Size = UDim2.new(0.075000003, 0, 0, 0)
R14.ZIndex = 14

R15.Name = "R15"
R15.Parent = BackgroundFrame
R15.BackgroundColor3 = Color3.fromRGB(98, 29, 29)
R15.BackgroundTransparency = 1.000
R15.BorderColor3 = Color3.fromRGB(0, 0, 0)
R15.BorderSizePixel = 0
R15.Position = UDim2.new(0.699999988, 0, 0, 0)
R15.Size = UDim2.new(0.075000003, 0, 0, 0)
R15.ZIndex = 15

R16.Name = "R16"
R16.Parent = BackgroundFrame
R16.BackgroundColor3 = Color3.fromRGB(78, 23, 23)
R16.BackgroundTransparency = 1.000
R16.BorderColor3 = Color3.fromRGB(0, 0, 0)
R16.BorderSizePixel = 0
R16.Position = UDim2.new(0.75, 0, 0, 0)
R16.Size = UDim2.new(0.075000003, 0, 0, 0)
R16.ZIndex = 16

R17.Name = "R17"
R17.Parent = BackgroundFrame
R17.BackgroundColor3 = Color3.fromRGB(58, 17, 17)
R17.BackgroundTransparency = 1.000
R17.BorderColor3 = Color3.fromRGB(0, 0, 0)
R17.BorderSizePixel = 0
R17.Position = UDim2.new(0.800000012, 0, 0, 0)
R17.Size = UDim2.new(0.075000003, 0, 0, 0)
R17.ZIndex = 17

R18.Name = "R18"
R18.Parent = BackgroundFrame
R18.BackgroundColor3 = Color3.fromRGB(39, 11, 11)
R18.BackgroundTransparency = 1.000
R18.BorderColor3 = Color3.fromRGB(0, 0, 0)
R18.BorderSizePixel = 0
R18.Position = UDim2.new(0.850000024, 0, 0, 0)
R18.Size = UDim2.new(0.075000003, 0, 0, 0)
R18.ZIndex = 18

R19.Name = "R19"
R19.Parent = BackgroundFrame
R19.BackgroundColor3 = Color3.fromRGB(19, 6, 6)
R19.BackgroundTransparency = 1.000
R19.BorderColor3 = Color3.fromRGB(0, 0, 0)
R19.BorderSizePixel = 0
R19.Position = UDim2.new(0.899999976, 0, 0, 0)
R19.Size = UDim2.new(0.075000003, 0, 0, 0)
R19.ZIndex = 19

R20.Name = "R20"
R20.Parent = BackgroundFrame
R20.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
R20.BackgroundTransparency = 1.000
R20.BorderColor3 = Color3.fromRGB(0, 0, 0)
R20.BorderSizePixel = 0
R20.Position = UDim2.new(0.949999988, 0, 0, 0)
R20.Size = UDim2.new(0.075000003, 0, 0, 0)
R20.ZIndex = 20

VegaXLogo_4.Name = "VegaXLogo"
VegaXLogo_4.Parent = IntroFrame
VegaXLogo_4.AnchorPoint = Vector2.new(0.5, 0.5)
VegaXLogo_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo_4.BackgroundTransparency = 1.000
VegaXLogo_4.BorderSizePixel = 0
VegaXLogo_4.Position = UDim2.new(0.5, 0, 0.699999988, 0)
VegaXLogo_4.Size = UDim2.new(0, 100, 0, 100)
VegaXLogo_4.ZIndex = 21
VegaXLogo_4.Image = "http://www.roblox.com/asset/?id=15861930865"
VegaXLogo_4.ImageTransparency = 1.000

ScriptListWindow.Name = "ScriptListWindow"
ScriptListWindow.Parent = VegaXAndroidUI
ScriptListWindow.AnchorPoint = Vector2.new(0, 0.5)
ScriptListWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ScriptListWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptListWindow.BorderSizePixel = 0
ScriptListWindow.Position = UDim2.new(0, 200, 0.5, -20)
ScriptListWindow.Size = UDim2.new(1, -200, 1, 40)
ScriptListWindow.Visible = false

WindowMainTitle_3.Name = "WindowMainTitle"
WindowMainTitle_3.Parent = ScriptListWindow
WindowMainTitle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_3.BackgroundTransparency = 1.000
WindowMainTitle_3.BorderSizePixel = 0
WindowMainTitle_3.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle_3.Size = UDim2.new(0, 309, 0, 21)
WindowMainTitle_3.Font = Enum.Font.GothamBold
WindowMainTitle_3.Text = "Script List"
WindowMainTitle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_3.TextSize = 18.000
WindowMainTitle_3.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle_3.TextYAlignment = Enum.TextYAlignment.Top

CloseB_4.Name = "CloseB"
CloseB_4.Parent = ScriptListWindow
CloseB_4.AnchorPoint = Vector2.new(1, 0)
CloseB_4.BackgroundTransparency = 1.000
CloseB_4.BorderSizePixel = 0
CloseB_4.LayoutOrder = 6
CloseB_4.Position = UDim2.new(1, -5, 0, 45)
CloseB_4.Size = UDim2.new(0, 25, 0, 25)
CloseB_4.ZIndex = 2
CloseB_4.Image = "rbxassetid://3926307971"
CloseB_4.ImageRectOffset = Vector2.new(884, 284)
CloseB_4.ImageRectSize = Vector2.new(36, 36)

ScriptListFrame.Name = "ScriptListFrame"
ScriptListFrame.Parent = ScriptListWindow
ScriptListFrame.Active = true
ScriptListFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptListFrame.BackgroundTransparency = 1.000
ScriptListFrame.BorderSizePixel = 0
ScriptListFrame.Position = UDim2.new(0, 0, 0, 91)
ScriptListFrame.Size = UDim2.new(1, 0, 1, -91)
ScriptListFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
ScriptListFrame.ScrollBarThickness = 0

S1_3.Name = "S1"
S1_3.Parent = ScriptListFrame
S1_3.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S1_3.BorderSizePixel = 0
S1_3.Size = UDim2.new(1, -10, 0, 60)

Trash.Name = "Trash"
Trash.Parent = S1_3
Trash.AnchorPoint = Vector2.new(1, 0.5)
Trash.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
Trash.BackgroundTransparency = 0.400
Trash.BorderSizePixel = 0
Trash.LayoutOrder = 10
Trash.Position = UDim2.new(1, -23, 0.5, 0)
Trash.Size = UDim2.new(0, 34, 0, 34)
Trash.ZIndex = 2
Trash.Image = "rbxassetid://3926305904"
Trash.ImageRectOffset = Vector2.new(644, 724)
Trash.ImageRectSize = Vector2.new(36, 36)

UICorner_39.CornerRadius = UDim.new(0, 10)
UICorner_39.Parent = Trash

UICorner_40.CornerRadius = UDim.new(0, 10)
UICorner_40.Parent = S1_3

Title_11.Name = "Title"
Title_11.Parent = S1_3
Title_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_11.BackgroundTransparency = 1.000
Title_11.BorderSizePixel = 0
Title_11.Position = UDim2.new(0, 25, 0, 0)
Title_11.Size = UDim2.new(1, -93, 1, 0)
Title_11.Font = Enum.Font.GothamBold
Title_11.Text = "somethingnice.txt"
Title_11.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_11.TextSize = 19.000
Title_11.TextXAlignment = Enum.TextXAlignment.Left

Execute_2.Name = "Execute"
Execute_2.Parent = S1_3
Execute_2.AnchorPoint = Vector2.new(1, 0.5)
Execute_2.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
Execute_2.BackgroundTransparency = 0.400
Execute_2.BorderSizePixel = 0
Execute_2.LayoutOrder = 10
Execute_2.Position = UDim2.new(1, -62, 0.5, 0)
Execute_2.Size = UDim2.new(0, 34, 0, 34)
Execute_2.ZIndex = 2
Execute_2.Image = "rbxassetid://3926307971"
Execute_2.ImageRectOffset = Vector2.new(764, 244)
Execute_2.ImageRectSize = Vector2.new(36, 36)

UICorner_41.CornerRadius = UDim.new(0, 10)
UICorner_41.Parent = Execute_2

UIListLayout_4.Parent = ScriptListFrame
UIListLayout_4.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_4.Padding = UDim.new(0, 5)

WindowSubTitle_2.Name = "WindowSubTitle"
WindowSubTitle_2.Parent = ScriptListWindow
WindowSubTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle_2.BackgroundTransparency = 1.000
WindowSubTitle_2.BorderSizePixel = 0
WindowSubTitle_2.Position = UDim2.new(0, 7, 0, 72)
WindowSubTitle_2.Size = UDim2.new(0, 309, 0, 14)
WindowSubTitle_2.Font = Enum.Font.Gotham
WindowSubTitle_2.Text = "I cum making this. - Rudy"
WindowSubTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle_2.TextSize = 12.000
WindowSubTitle_2.TextXAlignment = Enum.TextXAlignment.Left
WindowSubTitle_2.TextYAlignment = Enum.TextYAlignment.Top

ExecutorWindow.Name = "ExecutorWindow"
ExecutorWindow.Parent = VegaXAndroidUI
ExecutorWindow.AnchorPoint = Vector2.new(0, 0.5)
ExecutorWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ExecutorWindow.BackgroundTransparency = 0.400
ExecutorWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
ExecutorWindow.BorderSizePixel = 0
ExecutorWindow.Position = UDim2.new(1, 200, 0.5, -20)
ExecutorWindow.Size = UDim2.new(1, -200, 1, 40)

ExecuteB.Name = "ExecuteB"
ExecuteB.Parent = ExecutorWindow
ExecuteB.Active = false
ExecuteB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
ExecuteB.BorderSizePixel = 0
ExecuteB.Position = UDim2.new(0, 5, 0, 78)
ExecuteB.Size = UDim2.new(0, 80, 0, 30)
ExecuteB.Font = Enum.Font.GothamBold
ExecuteB.Text = "Execute"
ExecuteB.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteB.TextSize = 14.000

UICorner_42.CornerRadius = UDim.new(0, 4)
UICorner_42.Parent = ExecuteB

PasteandExecuteB.Name = "PasteandExecuteB"
PasteandExecuteB.Parent = ExecutorWindow
PasteandExecuteB.Active = false
PasteandExecuteB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
PasteandExecuteB.BackgroundTransparency = 0.300
PasteandExecuteB.BorderSizePixel = 0
PasteandExecuteB.Position = UDim2.new(0, 90, 0, 78)
PasteandExecuteB.Size = UDim2.new(0, 140, 0, 30)
PasteandExecuteB.Font = Enum.Font.GothamBold
PasteandExecuteB.Text = "Paste and Execute"
PasteandExecuteB.TextColor3 = Color3.fromRGB(255, 255, 255)
PasteandExecuteB.TextSize = 14.000

UICorner_43.CornerRadius = UDim.new(0, 4)
UICorner_43.Parent = PasteandExecuteB

CloseB_5.Name = "CloseB"
CloseB_5.Parent = ExecutorWindow
CloseB_5.AnchorPoint = Vector2.new(1, 0)
CloseB_5.BackgroundTransparency = 1.000
CloseB_5.BorderSizePixel = 0
CloseB_5.LayoutOrder = 6
CloseB_5.Position = UDim2.new(1, -5, 0, 45)
CloseB_5.Size = UDim2.new(0, 25, 0, 25)
CloseB_5.ZIndex = 2
CloseB_5.Image = "rbxassetid://3926307971"
CloseB_5.ImageRectOffset = Vector2.new(884, 284)
CloseB_5.ImageRectSize = Vector2.new(36, 36)

ScrollingBox_2.Name = "ScrollingBox"
ScrollingBox_2.Parent = ExecutorWindow
ScrollingBox_2.Active = true
ScrollingBox_2.AnchorPoint = Vector2.new(0.5, 1)
ScrollingBox_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
ScrollingBox_2.BackgroundTransparency = 0.200
ScrollingBox_2.BorderSizePixel = 0
ScrollingBox_2.Position = UDim2.new(0.5, 0, 1, -5)
ScrollingBox_2.Size = UDim2.new(1, -10, 1, -153)
ScrollingBox_2.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingBox_2.ScrollBarThickness = 2

TextBox_3.Parent = ScrollingBox_2
TextBox_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox_3.BackgroundTransparency = 1.000
TextBox_3.Position = UDim2.new(0, 30, 0, 0)
TextBox_3.Size = UDim2.new(1, -30, 1, 0)
TextBox_3.ZIndex = 4
TextBox_3.ClearTextOnFocus = false
TextBox_3.Font = Enum.Font.Code
TextBox_3.MultiLine = true
TextBox_3.Text = ""
TextBox_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_3.TextSize = 16.000
TextBox_3.TextWrapped = true
TextBox_3.TextXAlignment = Enum.TextXAlignment.Left
TextBox_3.TextYAlignment = Enum.TextYAlignment.Top

Line.Name = "Line"
Line.Parent = ScrollingBox_2
Line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Line.BackgroundTransparency = 1.000
Line.BorderColor3 = Color3.fromRGB(27, 42, 53)
Line.BorderSizePixel = 0
Line.Size = UDim2.new(0, 27, 1, 0)
Line.ZIndex = 4
Line.Font = Enum.Font.Code
Line.Text = "1  "
Line.TextColor3 = Color3.fromRGB(203, 203, 203)
Line.TextSize = 16.000
Line.TextWrapped = true
Line.TextYAlignment = Enum.TextYAlignment.Top

UICorner_44.CornerRadius = UDim.new(0, 5)
UICorner_44.Parent = ScrollingBox_2

TabbingSystem.Name = "TabbingSystem"
TabbingSystem.Parent = ExecutorWindow
TabbingSystem.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
TabbingSystem.Position = UDim2.new(0, 5, 0, 113)
TabbingSystem.Size = UDim2.new(0, 224, 0, 30)

ScriptPage.Name = "ScriptPage"
ScriptPage.Parent = TabbingSystem
ScriptPage.BackgroundColor3 = Color3.fromRGB(24, 144, 255)
ScriptPage.BackgroundTransparency = 1.000
ScriptPage.BorderSizePixel = 0
ScriptPage.Position = UDim2.new(0, 5, 0, 0)
ScriptPage.Size = UDim2.new(1, -70, 1, 0)
ScriptPage.Font = Enum.Font.Gotham
ScriptPage.Text = "Script 1"
ScriptPage.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptPage.TextSize = 14.000
ScriptPage.TextWrapped = true
ScriptPage.TextXAlignment = Enum.TextXAlignment.Left

NextPage.Name = "NextPage"
NextPage.Parent = TabbingSystem
NextPage.Active = false
NextPage.AnchorPoint = Vector2.new(1, 0)
NextPage.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
NextPage.BackgroundTransparency = 1.000
NextPage.BorderSizePixel = 0
NextPage.Position = UDim2.new(1, 0, 0, 0)
NextPage.Size = UDim2.new(0, 20, 0, 30)
NextPage.Font = Enum.Font.GothamBold
NextPage.Text = ">"
NextPage.TextColor3 = Color3.fromRGB(255, 255, 255)
NextPage.TextSize = 14.000

LastPage.Name = "LastPage"
LastPage.Parent = TabbingSystem
LastPage.Active = false
LastPage.AnchorPoint = Vector2.new(1, 0)
LastPage.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
LastPage.BackgroundTransparency = 1.000
LastPage.BorderSizePixel = 0
LastPage.Position = UDim2.new(1, -20, 0, 0)
LastPage.Size = UDim2.new(0, 20, 0, 30)
LastPage.Font = Enum.Font.GothamBold
LastPage.Text = "<"
LastPage.TextColor3 = Color3.fromRGB(255, 255, 255)
LastPage.TextSize = 14.000

UICorner_45.CornerRadius = UDim.new(0, 4)
UICorner_45.Parent = TabbingSystem

EditTabName.Name = "EditTabName"
EditTabName.Parent = TabbingSystem
EditTabName.AnchorPoint = Vector2.new(1, 0)
EditTabName.BackgroundTransparency = 1.000
EditTabName.Position = UDim2.new(1, -40, 0, 0)
EditTabName.Size = UDim2.new(0, 20, 0, 30)
EditTabName.ZIndex = 2
EditTabName.Image = "rbxassetid://3926305904"
EditTabName.ImageRectOffset = Vector2.new(924, 364)
EditTabName.ImageRectSize = Vector2.new(36, 36)
EditTabName.ScaleType = Enum.ScaleType.Fit

EditTabBox.Name = "EditTabBox"
EditTabBox.Parent = TabbingSystem
EditTabBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EditTabBox.BackgroundTransparency = 1.000
EditTabBox.BorderSizePixel = 0
EditTabBox.Position = UDim2.new(0, 5, 0, 0)
EditTabBox.Size = UDim2.new(1, -70, 1, 0)
EditTabBox.Visible = false
EditTabBox.Font = Enum.Font.Gotham
EditTabBox.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
EditTabBox.PlaceholderText = "Place New Name Here"
EditTabBox.Text = ""
EditTabBox.TextColor3 = Color3.fromRGB(255, 255, 255)
EditTabBox.TextSize = 14.000
EditTabBox.TextWrapped = true
EditTabBox.TextXAlignment = Enum.TextXAlignment.Left

WindowMainTitle_4.Name = "WindowMainTitle"
WindowMainTitle_4.Parent = ExecutorWindow
WindowMainTitle_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_4.BackgroundTransparency = 1.000
WindowMainTitle_4.BorderSizePixel = 0
WindowMainTitle_4.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle_4.Size = UDim2.new(0, 200, 0, 21)
WindowMainTitle_4.Font = Enum.Font.GothamBold
WindowMainTitle_4.Text = "Executor"
WindowMainTitle_4.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_4.TextSize = 18.000
WindowMainTitle_4.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle_4.TextYAlignment = Enum.TextYAlignment.Top

ClearB.Name = "ClearB"
ClearB.Parent = ExecutorWindow
ClearB.Active = false
ClearB.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
ClearB.BorderSizePixel = 0
ClearB.Position = UDim2.new(0, 325, 0, 78)
ClearB.Size = UDim2.new(0, 50, 0, 30)
ClearB.Font = Enum.Font.GothamBold
ClearB.Text = "Clear"
ClearB.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearB.TextSize = 14.000

UICorner_46.CornerRadius = UDim.new(0, 4)
UICorner_46.Parent = ClearB

DevModeB.Name = "DevModeB"
DevModeB.Parent = ExecutorWindow
DevModeB.Active = false
DevModeB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
DevModeB.BackgroundTransparency = 0.300
DevModeB.BorderSizePixel = 0
DevModeB.Position = UDim2.new(0, 235, 0, 78)
DevModeB.Size = UDim2.new(0, 85, 0, 30)
DevModeB.Font = Enum.Font.GothamBold
DevModeB.Text = "Dev Mode"
DevModeB.TextColor3 = Color3.fromRGB(255, 255, 255)
DevModeB.TextSize = 14.000

UICorner_47.CornerRadius = UDim.new(0, 4)
UICorner_47.Parent = DevModeB

-- Scripts:

local function SNQJ_fake_script() -- VegaXAndroidUI.EverythingElse 
	local script = Instance.new('LocalScript', VegaXAndroidUI)

	--local WriteToMocorFolder = clonefunction(arceus.writearceusfile)
	
	-- Dev Connect
	
	getgenv().DevConnect = function(devcode)
		warn("(Panda-Pelican Development | HTTP Protocol [ Beta ])")
		local No_Execute = "No_Data_Set_Here"
		local IPv4 = base64.decode(devcode)
		if IPv4 == "" or IPv4 == nil then
			warn("[Unable to Start HTTP-Protocol] - Missing IP Address / Port")
			return
		end
		task.spawn(function() 
			script.Parent.ExecutorWindow.DevModeB.BackgroundColor3 = Color3.fromRGB(57, 195, 57)
			while true do
				wait(0.1)
				local content = game:HttpGet("http://"..IPv4..":2023".."/readcontent")     
				if content ~= No_Execute then
					local success, result = pcall(function()
						runcode(content)
						local a = tostring(game:HttpGet("http://"..IPv4..":2023".."/clear"))
					end)
	
					if not success then
						-- Handle the exception here
						warn("Error executing loaded code:", result)
						local b = tostring(game:HttpGet("http://"..IPv4..":2023".."/clear"))
					end        
				end
			end
		end) 
	end
	
	-- Dragging Menu
	
	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent.VegaXMenuToggleFrame
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.DragTouch.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
	
	local TweenService = game:GetService("TweenService")
	local ExecutorWindowOpen = false
	local ScriptHubWindowOpen = false
	local SettingsWindowOpen = false
	
	_G.MenuOpen = false
	
	script.Parent.VegaXMenuToggleFrame.VegaXMenuToggle.MouseButton1Click:connect(function()	
		if _G.MenuOpen == false then
			_G.MenuOpen = true
			script.Parent.SidebarFrame:TweenPosition(UDim2.new(0,0,0.5,0), "Out", "Quint", 1, true)
			
			if ExecutorWindowOpen == true then
				script.Parent.ExecutorWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			end
			if ScriptHubWindowOpen == true then
				script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			end
			if SettingsWindowOpen == true then
				script.Parent.SettingsWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			end
		else
			_G.MenuOpen = false
			script.Parent.SidebarFrame:TweenPosition(UDim2.new(0,-200,0.5,0), "Out", "Quint", 1, true)
			
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	-- Menu Switching
	
	script.Parent.SidebarFrame.ScrollingFrame.Choice1.C1EB.MouseButton1Click:connect(function()
		if ExecutorWindowOpen == false then
			ExecutorWindowOpen = true
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			
			ScriptHubWindowOpen = false
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			SettingsWindowOpen = false
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			
		else
			ExecutorWindowOpen = false
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	script.Parent.SidebarFrame.ScrollingFrame.Choice2.C2EB.MouseButton1Click:connect(function()
		if ScriptHubWindowOpen == false then
			ScriptHubWindowOpen = true
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			
			ExecutorWindowOpen = false
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			SettingsWindowOpen = false
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		else
			ScriptHubWindowOpen = false
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	script.Parent.SidebarFrame.ScrollingFrame.Choice3.C3EB.MouseButton1Click:connect(function()
		if SettingsWindowOpen == false then
			SettingsWindowOpen = true
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			
			ExecutorWindowOpen = false
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			ScriptHubWindowOpen = false
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		else
			SettingsWindowOpen = false
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	-- Executor Window
	
	script.Parent.ExecutorWindow.CloseB.MouseButton1Click:connect(function()
		ExecutorWindowOpen = false
		script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	script.Parent.ExecutorWindow.ExecuteB.MouseButton1Click:connect(function()
		--print(script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text)
		executecode(script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text)
	end)
	
	script.Parent.ExecutorWindow.PasteandExecuteB.MouseButton1Click:connect(function()
		executeclipboard()
	end)
	
	script.Parent.ExecutorWindow.DevModeB.MouseButton1Click:connect(function()
		if isfile("injectcode.txt") == false then
			script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = "The inject code for Dev Mode is not found, please open the Vega X Windows Client, get your inject code, and paste it in settings."
		else
			DevConnect(readfile("injectcode.txt"))
		end
		
	end)
	
	-- Executor Window Tabbing System
	
	local scriptamt = 1
	local listamt = 1
	local scripts = {""}
	local scriptsname = {"Script 1"}
	
	script.Parent.ExecutorWindow.TabbingSystem.LastPage.MouseButton1Click:connect(function()
		if scriptamt > 1 then
			scripts[scriptamt] = script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text
			scriptamt = scriptamt - 1
			script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = scripts[scriptamt]
			script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Text = scriptsname[scriptamt]
		end
	end)
	
	script.Parent.ExecutorWindow.TabbingSystem.NextPage.MouseButton1Click:connect(function()
	
		-- Save Current Script Tab
		scripts[scriptamt] = script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text
		scriptamt = scriptamt + 1
	
		if scriptamt ~= listamt then
			table.insert(scripts, "")
			table.insert(scriptsname, "Script "..scriptamt)
			listamt = listamt + 1
		end
	
		script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = scripts[scriptamt]
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Text = scriptsname[scriptamt]
	end)
	
	script.Parent.ExecutorWindow.TabbingSystem.EditTabName.MouseButton1Click:connect(function()
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Visible = false
		script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Visible = true
	end)
	
	script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.FocusLost:connect(function()
		scriptsname[scriptamt] = script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Text
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Text = scriptsname[scriptamt]
	
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Visible = true
		script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Visible = false
	
		script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Text = ""
	end)
	
	
	script.Parent.ExecutorWindow.ClearB.MouseButton1Click:connect(function()
		script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = ""
	end)
	
	-- Script Hub Window
	
	script.Parent.ScriptHubWindow.CloseB.MouseButton1Click:connect(function()
		ScriptHubWindowOpen = false
		script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	-- Settings Window
	
	script.Parent.SettingsWindow.CloseB.MouseButton1Click:connect(function()
		SettingsWindowOpen = false
		script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	-- Scrolling Frame Canvas Adjuster
	-- Credits: https://devforum.roblox.com/t/have-uilistlayout-set-the-canvassize-property-of-scrollingframes-automatically/76287
	
	script.Parent.ScriptHubWindow.ScrollingFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.ScriptHubWindow.ScrollingFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.ScriptHubWindow.ScrollingFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	script.Parent.ScriptListWindow.ScriptListFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.ScriptListWindow.ScriptListFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.ScriptListWindow.ScriptListFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.SettingsWindow.ScrollingFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.SettingsWindow.ScrollingFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	script.Parent.SidebarFrame.ScrollingFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.SidebarFrame.ScrollingFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.SidebarFrame.ScrollingFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	-- Username Setting
	-- From: https://www.youtube.com/watch?v=e4nBaHjr5Hw
	-- dunno how to make one myself l0l
	
	local plrAvatar, isReady = game:GetService("Players"):GetUserThumbnailAsync(game:GetService("Players").LocalPlayer.UserId, Enum.ThumbnailType.AvatarBust, Enum.ThumbnailSize.Size48x48)
	
	script.Parent.SidebarFrame.ScrollingFrame.UsernamePlace.Title.Text = "Hello!\n"..game:GetService("Players").LocalPlayer.Name
	script.Parent.SidebarFrame.ScrollingFrame.UsernamePlace.Icon.ProfileImage.Image = plrAvatar
	
	
end
coroutine.wrap(SNQJ_fake_script)()
local function SQWDENM_fake_script() -- ScriptHubWindow.ScriptBloxCode 
	local script = Instance.new('LocalScript', ScriptHubWindow)

	ChosenColor = "#1890ff"
	local page = 1
	local searchstring = "a"
	
	if isfile("theme_vegax_color.txt") == true then
		ChosenColor = readfile("theme_vegax_color.txt")
	end
	
	local httpService = game:GetService("HttpService");
	local content = {};
	
	local scriptBlox = {
		host = "https://scriptblox.com"
	}
	--[[
	
	function scriptBlox:loadImage(path, id)
		if not isfolder("ScriptBlox") then
			makefolder("ScriptBlox");
		end
	
		local fileName = "ScriptBlox/" .. id .. ".webp";
		local data = http_request({
			Url = scriptBlox.host .. path,
			Method = "GET"
		});
	
		if data.Success then
			writefile(fileName, data.Body);
	        return getcustomasset(fileName);
	    else
	        return "";
		end
	end
	
	function scriptBlox:loadImage(gameId)
		local thumbnailUrl = "https://www.roblox.com/asset-thumbnail/image?assetId=" .. tostring(gameId) .. "&width=420&height=420&format=png"
	
		local success, imageData = pcall(function()
			return http_request({
				Url = thumbnailUrl,
				Method = "GET"
			})
		end)
	
		if success and imageData.Success then
			local thumbnailId = game:GetService("ContentProvider"):PreloadAsync({ imageData.Body })
			return thumbnailId
		else
			warn("Failed to load image for game ID:", gameId)
			return ""
		end
	end
	
	]]
	
	--[[
	function scriptBlox:GET(path)
		local result = http_request({
			Url = scriptBlox.host .. path,
			Method = "GET"
		})
	
		if result.Success then
			local status, data = pcall(function()
				return httpService:JSONDecode(result.Body)
			end)
	
			if status then
				return data.result.scripts
			else
				warn("Error decoding JSON:", data)
				return {
					result = {
						totalPages = 1,
						scripts = {}
					}
				}
			end
		else
			warn("HTTP request failed:", result.StatusCode, result.Body)
			return {
				result = {
					totalPages = 1,
					scripts = {}
				}
			}
		end
	end
	
	]]
	
	function scriptBlox:GET(path)
		local result = http_request({
			Url = scriptBlox.host .. path,
			Method = "GET"
		})
	
		if result.Success then
			local status, data = pcall(function()
				return httpService:JSONDecode(result.Body)
			end)
	
			if status and data and data.result and data.result.scripts then
				return data.result.scripts
			else
				warn("Error decoding JSON:", data)
			end
		else
			warn("HTTP request failed:", result.StatusCode, result.Body)
		end
	
		-- Return a default value in case of error or missing data
		return {
			result = {
				totalPages = 1,
				scripts = {}
			}
		}
	end
	
	
	function scriptBlox:getScripts(searchQuery, page, maxResults)
		local path = "/api/script/search?q=" .. searchQuery .. "&mode=free&max=" .. tostring(maxResults) .. "&page=" .. tostring(page);
		local data = scriptBlox:GET(path);
		
		return data;
	end
	
	function Create_Script_Rectangle(title, subtitle, gamingid, scripttext)
		local S1 = Instance.new("Frame")
		local Execute = Instance.new("ImageButton")
		local UICorner = Instance.new("UICorner")
		local UICorner_2 = Instance.new("UICorner")
		local ImageLabel = Instance.new("ImageLabel")
		local UICorner_3 = Instance.new("UICorner")
		local SubTitle = Instance.new("TextLabel")
		local Title = Instance.new("TextLabel")
	
		--Properties:
	
		S1.Name = "S1"
		S1.Parent = ScrollingFrame_2
		S1.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
		S1.BorderSizePixel = 0
		S1.Size = UDim2.new(1, -10, 0, 80)
	
		Execute.Name = "Execute"
		Execute.Parent = S1
		Execute.AnchorPoint = Vector2.new(1, 0.5)
		Execute.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
		Execute.BackgroundTransparency = 0.400
		Execute.BorderSizePixel = 0
		Execute.LayoutOrder = 10
		Execute.Position = UDim2.new(1, -23, 0.5, 0)
		Execute.Size = UDim2.new(0, 34, 0, 34)
		Execute.ZIndex = 2
		Execute.Image = "rbxassetid://3926307971"
		Execute.ImageRectOffset = Vector2.new(764, 244)
		Execute.ImageRectSize = Vector2.new(36, 36)
		Execute.MouseButton1Click:Connect(function()
			executecode(scripttext)
		end)
	
		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = Execute
	
		UICorner_2.CornerRadius = UDim.new(0, 10)
		UICorner_2.Parent = S1
	
		ImageLabel.Parent = S1
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.BackgroundTransparency = 1.000
		ImageLabel.BorderSizePixel = 0
		ImageLabel.Size = UDim2.new(1, 0, 1, 0)
		ImageLabel.Image = "https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid="..gamingid.."&fmt=png&wd=420&ht=420"
		ImageLabel.ScaleType = Enum.ScaleType.Crop
	
		UICorner_3.CornerRadius = UDim.new(0, 10)
		UICorner_3.Parent = ImageLabel
	
		SubTitle.Name = "SubTitle"
		SubTitle.Parent = S1
		SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SubTitle.BackgroundTransparency = 1.000
		SubTitle.BorderSizePixel = 0
		SubTitle.Position = UDim2.new(0, 25, 0.5, 0)
		SubTitle.Size = UDim2.new(1, -93, 0.5, 0)
		SubTitle.Font = Enum.Font.Gotham
		SubTitle.Text = subtitle
		SubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		SubTitle.TextSize = 14.000
		SubTitle.TextXAlignment = Enum.TextXAlignment.Left
		SubTitle.TextYAlignment = Enum.TextYAlignment.Top
	
		Title.Name = "Title"
		Title.Parent = S1
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderSizePixel = 0
		Title.Position = UDim2.new(0, 25, 0, 0)
		Title.Size = UDim2.new(1, -93, 0.5, 0)
		Title.Font = Enum.Font.GothamBold
		Title.Text = title
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextSize = 19.000
		Title.TextXAlignment = Enum.TextXAlignment.Left
		Title.TextYAlignment = Enum.TextYAlignment.Bottom
	
		table.insert(content, S1);
	end
	
	function Clear() -- Clears the script list
		for _, element in pairs(content) do
			element:Destroy();
		end
	
		content = {};
		--delfolder("ScriptBlox"); -- clearing cache
	end
	
	--[[
	function Handle_Results(results) 
		if results.error then
			print("Error: "..results.error);
			--table.foreach(results.error, print)
			return
		end
	
		Clear();
	
		for _, scriptData in pairs(results) do
			local gameData = scriptData.game;
			--local image = scriptBlox:loadImage(gameData.imageUrl, scriptData._id);
	
			Create_Script_Rectangle(scriptData.title, gameData.name, gameData.gameId, scriptData.script);
		end
	end
	
	]]
	
	function Handle_Results(results)
		if results then
			Clear()
	
			for _, scriptData in pairs(results) do
				local gameData = scriptData.game
				Create_Script_Rectangle(scriptData.title, gameData.name, gameData.gameId, scriptData.script)
			end
		else
			error("Invalid JSON structure. Unable to process results.")
		end
	end
	
	
	function Search(query) -- Searches using a query and parses the result into a script list
		page = 1
		script.Parent.PaginationFrame.PageLabel.Text = page
		if query == "" then
			searchstring = "a"
		else
			searchstring = httpService:UrlEncode(query)
		end
		
		local searchResults = scriptBlox:getScripts(searchstring, 1, 20);
		Handle_Results(searchResults);
	end
	
	-- Front page
	
	local frontPage = scriptBlox:getScripts("a", 1, 20);
	
	Handle_Results(frontPage);
	
	script.Parent.SearchBox.FocusLost:connect(function()
		script.Parent.PaginationFrame.PageLabel.Text = page
		Search(script.Parent.SearchBox.Text)
	end)
	
	script.Parent.PaginationFrame.LeftPage.MouseButton1Click:connect(function()	
		if page ~= 1 then
			page -= 1
			Handle_Results(scriptBlox:getScripts(searchstring, page, 20));
		end
		script.Parent.PaginationFrame.PageLabel.Text = page
	end)
	
	script.Parent.PaginationFrame.RightPage.MouseButton1Click:connect(function()
		page += 1	
		Handle_Results(scriptBlox:getScripts(searchstring, page, 20));
		script.Parent.PaginationFrame.PageLabel.Text = page
	end)
end
coroutine.wrap(SQWDENM_fake_script)()
local function PBQMVRH_fake_script() -- VegaXAndroidUI.SettingsSystem 
	local script = Instance.new('LocalScript', VegaXAndroidUI)

	ChosenColor = "#C33939"
	
	function LoadColors()
		script.Parent.SidebarFrame.Banner.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.UsernamePlace.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SidebarFrame.ScrollingFrame.Choice1.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.Choice1.C1EB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SidebarFrame.ScrollingFrame.Choice2.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.Choice2.C2EB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SidebarFrame.ScrollingFrame.Choice3.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.Choice3.C3EB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.KeySystem.Banner.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.KeySystem.GetKeyB.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.KeySystem.ApproveKeyB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.ExecutorWindow.TabbingSystem.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.ExecutorWindow.ExecuteB.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.ExecutorWindow.PasteandExecuteB.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.ExecutorWindow.DevModeB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SettingsWindow.ScrollingFrame.S1.AccentColorPreview.BackgroundColor3 = Color3.fromHex(ChosenColor)
	end
	
	-- Set Color
	
	if not isfile("theme_vegax_color.txt") then
		writefile("theme_vegax_color.txt", "#C33939")
	else
		local success, ChosenColor = pcall(readfile, "theme_vegax_color.txt")
	
		if success then
			LoadColors()
		else
			warn("无法读取文件: " .. ChosenColor)
		end
	end
	
	
	--if not isfile("theme_vegax_color.txt") then
		--writefile("theme_vegax_color.txt", "#C33939")
	--else
		--ChosenColor = readfile("theme_vegax_color.txt")
		--script.Parent.IntroFrame.ImageColor3 = Color3.fromHex(ChosenColor)
		--LoadColors()
	--end
	
	
	-- Set FPS
	local success, result = pcall(function()
		if isfile("settings_fps.txt") == true then
			setfpscap(tonumber(readfile("settings_fps.txt")))
		end
	end)
	
	if not success then
		-- Handle the error, you can print a message or take other appropriate actions
		print("无法读取文件:", result)
	end
	
	
	--if isfile("settings_fps.txt") == true then
		--setfpscap(tonumber(readfile("settings_fps.txt")))
	--end
	
	-- Set Inject Code
	local success, result = pcall(function()
		if isfile("injectcode.txt") then
			script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text = readfile("injectcode.txt")
		end
	end)
	
	if not success then
		print("无法读取文件:", result)
	end
	
	--if isfile("injectcode.txt") == true then
		--script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text = readfile("injectcode.txt")
	--end
	
	
	script.Parent.SettingsWindow.ScrollingFrame.S1.SubmitAccent.MouseButton1Click:Connect(function()
		writefile("theme_vegax_color.txt", script.Parent.SettingsWindow.ScrollingFrame.S1.AccentTextBox.Text)
		ChosenColor = script.Parent.SettingsWindow.ScrollingFrame.S1.AccentTextBox.Text
		LoadColors()
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S2.SubmitFPS.MouseButton1Click:Connect(function()
		writefile("settings_fps.txt", script.Parent.SettingsWindow.ScrollingFrame.S2.FPSTextBox.Text)
		setfpscap(tonumber(script.Parent.SettingsWindow.ScrollingFrame.S2.FPSTextBox.Text))
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S2.ResetFPS.MouseButton1Click:Connect(function()
		writefile("settings_fps.txt", "60")
		setfpscap(60)
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S3.SubmitCode.MouseButton1Click:Connect(function()
		writefile("injectcode.txt", script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text)
		DevConnect(script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text)
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S3.ResetCode.MouseButton1Click:Connect(function()
		script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text = ""
		delfile("injectcode.txt")
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S4.ToggleBTN.MouseButton1Click:Connect(function()
	
	end)
end
coroutine.wrap(PBQMVRH_fake_script)()
local function OYDDQ_fake_script() -- VegaXAndroidUI.Loading 
	local script = Instance.new('LocalScript', VegaXAndroidUI)

	ATime = 2
	zidongjiaobenyunxinglujingzifuchuan = "自动脚本运行"
	
	-- Key System Pre-Requisities
	
	PandaAuth = loadstring(game:HttpGet('https://raw.githubusercontent.com/Panda-Repositories/PandaKS_Libraries/main/library/LuaLib/ROBLOX/PandaBetaLib.lua'))()
	KSCanUse = true
	BKKeySystem = "vegax_90453sda175chd3826f1a4e7fd78qwdnd0d6e6a532f518e716qwfd3014997"
	
	
	function Generate_Key()
		return PandaAuth:GetKey("vegax");
	end
	
	function ValidateKey(Key)
		return PandaAuth:ValidateKey("vegax", tostring(Key))
	end
	
	function CheckIfAutoexecExists()
		local success, err = pcall(function()
			if not arceus.isarceusfolder(zidongjiaobenyunxinglujingzifuchuan) then
				arceus.makearceusfolder("自动脚本运行")
			end
		end)
	
		if not success then
			print("自动执行错误：", err)
		end
	end
	
	
	
	function LoadAutoexec()
		local success, err = pcall(function()
			if arceus.isarceusfolder(zidongjiaobenyunxinglujingzifuchuan) then
				for _, scriptfile in pairs(arceus.listarceusfiles(zidongjiaobenyunxinglujingzifuchuan)) do
					local code, readErr = arceus.readarceusfile(scriptfile)
					if code then
						executecode(arceus.readarceusfile(scriptfile))
					else
						print("脚本读取错误:", readErr)
					end
				end
			end
		end)
	
		if not success then
			print("自动执行错误：", err)
		end
	end
	
	
	function LoadVegaXSystem()
		LoadAutoexec()
		script.Parent.KeySystem.Visible = false
		script.Parent.VegaXMenuToggleFrame.Visible = true
		_G.MenuOpen = true
		script.Parent.SidebarFrame:TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quint", 1, true)
		getgenv().arceus = nil
	end
	
	-- Multi-Language Key System Variables
	KSSubTitleNotif1 = "The Key System Link has been pasted into your Clipboard, insert it into your Browser (Desktop Recommended)."
	KSSubTitleNotif2 = "This key is not valid, go to our Discord Server if this is not correct."
	KSSubTitleNotif3 = "The Discord Link has been pasted into your Clipboard, insert it into the Discord app."
	KSSubTitleNotif4 = "This key is valid, enjoy Vega X!"
	
	-- Loading
	
	CheckIfAutoexecExists()
	
	if not isfile("vegax_key.txt") then
		writefile("vegax_key.txt", "")
	end
	
	script.Parent.VegaXMenuToggleFrame.Visible = false
	
	
	repeat until game:IsLoaded()
	for _,Key in pairs(script.Parent.IntroFrame.BackgroundFrame:GetChildren()) do
		game:GetService("TweenService"):Create(Key, TweenInfo.new(ATime), {BackgroundTransparency = 0}):Play()
		Key:TweenSize(UDim2.new(0.075,0,1,0), "Out", "Quad", ATime, true)
		wait(0.05)
	end
	
	wait(0.25)
	
	game:GetService("TweenService"):Create(script.Parent.IntroFrame.VegaXLogo, TweenInfo.new(1), {ImageTransparency = 0}):Play()
	script.Parent.IntroFrame.VegaXLogo:TweenPosition(UDim2.new(0.5,0,0.5,0), "Out", "Quad", 1, true)
	
	wait(1.5)
	
	game:GetService("TweenService"):Create(script.Parent.IntroFrame.VegaXLogo, TweenInfo.new(1), {ImageTransparency = 1}):Play()
	script.Parent.IntroFrame.VegaXLogo:TweenPosition(UDim2.new(0.5,0,0.3,0), "Out", "Quad", 1, true)
	
	for _,Key in pairs(script.Parent.IntroFrame.BackgroundFrame:GetChildren()) do
		game:GetService("TweenService"):Create(Key, TweenInfo.new(ATime), {BackgroundTransparency = 1}):Play()
		Key:TweenSize(UDim2.new(0.075,0,0,0), "Out", "Quad", ATime, true)
		wait(0.05)
	end
	
	wait(1)
	
	script.Parent.IntroFrame:Destroy()
	
	if tostring(arceus.getversion()) ~= "4.0.8" then
		print("you have a car")
		loadstring(game:HttpGet("https://gitlab.com/marsqq/vegax4/-/raw/main/ForceUpdater"))()
	end
	
	local success, result = pcall(function()
		if KSCanUse == true then
			return ValidateKey(readfile("vegax_key.txt"))
		else
			return readfile("vegax_key.txt") == BKKeySystem
		end
	end)
	
	if success and result then
		LoadVegaXSystem()
	else
		script.Parent.KeySystem:TweenPosition(UDim2.new(0, 0, 0.5, -20), "Out", "Quad", 1, true)
	end
	
	
	-- Key System Stuff --
	script.Parent.KeySystem.CloseB.MouseButton1Click:connect(function()
		script.Parent.KeySystem:TweenPosition(UDim2.new(0,0,2,-20), "Out", "Quint", 1, true)
		wait(1)
		script.Parent.KSMenuToggleFrame.Visible = true
		script.Parent.KSMenuToggleFrame:TweenSize(UDim2.new(0,32,0,32), "Out", "Quint", 1, true)
	end)
	
	script.Parent.KSMenuToggleFrame.VegaXKSToggle.MouseButton1Click:connect(function()
		script.Parent.KSMenuToggleFrame:TweenSize(UDim2.new(0,0,0,0), "Out", "Quint", 1, true)
		wait(1)
		script.Parent.KSMenuToggleFrame.Visible = false
		script.Parent.KeySystem:TweenPosition(UDim2.new(0,0,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	script.Parent.KeySystem.GetKeyB.MouseButton1Click:connect(function()
		script.Parent.KeySystem.SubTitle.FontFace.Weight = Enum.FontWeight.Bold
		script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif1
		if KSCanUse == true then
			setclipboard(Generate_Key())
		else
			setclipboard("https://direct-link.net/82375/vega-x-key-1")
		end
	end)
	
	local KeyIsValid = false
	
	script.Parent.KeySystem.ApproveKeyB.MouseButton1Click:connect(function()
		script.Parent.KeySystem.SubTitle.FontFace.Weight = Enum.FontWeight.Regular
		
		if KSCanUse == false then
			if script.Parent.KeySystem.TextBox.Text == BKKeySystem then
				KeyIsValid = true
			end
		elseif KSCanUse == true then
			if ValidateKey(script.Parent.KeySystem.TextBox.Text) then
				KeyIsValid = true
			end
		end
		
		if KeyIsValid == true then
			writefile("vegax_key.txt", script.Parent.KeySystem.TextBox.Text)
			script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif4
	
			script.Parent.KeySystem:TweenPosition(UDim2.new(0, 0, 2, -20), "Out", "Quad", 1, true)
	
			wait(1)
	
			LoadVegaXSystem()
		else
			script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif2
		end
	end)
	
	script.Parent.KeySystem.JoinDiscordB.MouseButton1Click:connect(function()
		script.Parent.KeySystem.SubTitle.FontFace.Weight = Enum.FontWeight.Regular
		script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif3
		setclipboard("https://vegax.gg/discord.html")
	end)
	
end
coroutine.wrap(OYDDQ_fake_script)()
local function QAIZVTI_fake_script() -- ScrollingBox_2.TextBoxCode 
	local script = Instance.new('LocalScript', ScrollingBox_2)

	local TextBox = script.Parent.TextBox
	local LineWatcher = script.Parent.Line
	local FontSize = TextBox.TextSize
	local TopCount
	-----
	local function resize(iter, subtract, maxsize)
	    for i = 1,iter do
			maxsize.CanvasSize = UDim2.new(0,maxsize.CanvasSize.X.Offset,0,(iter * FontSize))
			maxsize.CanvasPosition = Vector2.new(maxsize.CanvasPosition.X, (iter * FontSize))
	    end
	end
	-----
	TextBox:GetPropertyChangedSignal("Text"):Connect(function()
		local str = TextBox.Text
	    local offset = 32
		local textsize = TextBox.TextBounds.X + offset
		script.Parent.CanvasSize = UDim2.new(0,textsize,0,script.Parent.CanvasSize.Y.Offset)
		script.Parent.CanvasPosition = Vector2.new(textsize, script.Parent.CanvasPosition.Y)
	    local _,count = str:gsub('\n','\n')
	    local NewCount = count + 1
		if not LineWatcher.Text:find(NewCount) then
			TopCount = NewCount
			for i = 1,TopCount do
				local PreviousText = LineWatcher.Text
				if not LineWatcher.Text:find(i) then
					LineWatcher.Text = tostring(PreviousText..i..'\n')
	            end
	        end
			resize(TopCount,false,script.Parent)
		else if TopCount ~= NewCount and TopCount ~= nil then
				LineWatcher.Text = ""
				TopCount = NewCount
				for i = 1,TopCount do
					LineWatcher.Text = tostring(LineWatcher.Text..i..'\n')
	            end
				resize(TopCount,true,script.Parent)
	        end
	    end
	end)
end
coroutine.wrap(QAIZVTI_fake_script)()
  	end
})
Tab:AddButton({
	Name = "xhh",
	Callback = function()
-- | SPDM | Global definitions

local arceus = arceus or nil
local unavailable = function(fake)
	return function(...)
		internalUtils:Notify("This feature cannot be used on the current apk version")
		return fake
	end
end

local getgenv = getgenv or function()
	if rconsolwarn then
		rconsolewarn("Fake getgenv called")
	end

	return {}
end

local cloneref = cloneref or function(...)
	if rconsolwarn then
		rconsolewarn("Fake cloneref called")
	end

	return ...
end

local clonefunction = function(funct: funct)
	if not funct then
		return nil
	end

	if clonefunction then
		return clonefunction(funct)
	end

	return function(...)
		return typeof(funct) == "function" and funct(...) or funct
	end
end

local executecode = executecode and clonefunction(executecode) or function(scr)
	task.spawn(loadstring(scr));
end

local setfpscap = setfpscap or unavailable(nil)
local getfpscap = getfpscap or unavailable(60)
local getfpsmax = getfpsmax or unavailable(60)

local makearceusfolder = arceus and clonefunction(arceus.makearceusfolder);
local writearceusfile = arceus and clonefunction(arceus.writearceusfile);
local listarceusfiles = arceus and clonefunction(arceus.listarceusfiles);
local isarceusfolder = arceus and clonefunction(arceus.isarceusfolder);
local readarceusfile = arceus and clonefunction(arceus.readarceusfile);
local isarceusfile = arceus and clonefunction(arceus.isarceusfile);
local isiosdevice = (arceus and clonefunction(arceus.is_ios)) or function()
	return false 
end

getgenv().arceus = nil

arceus_libs = {
	data = {
		handled_page_dragging = {},
	},
	
	renderer = {
		data = {
			removedFromRendering = Instance.new("BindableEvent"),
			connection = nil,
			id_counter = 0,
			to_remove = {},
			functions = {},
			paused = {}
		},

		pauseFromRendering = function(id: number)
			arceus_libs.renderer.data.paused[id] = true
		end,

		resumeFromRendering = function(id: number)
			arceus_libs.renderer.data.paused[id] = nil
		end,

		removeFromRendering = function(id: number)		
			if arceus_libs.renderer.data.functions[id] then			
				arceus_libs.renderer.data.to_remove[id] = true
			end
		end,

		pushToRendering = function(funct)
			arceus_libs.renderer.data.id_counter += 1
			local new_id = "r" .. arceus_libs.renderer.data.id_counter

			arceus_libs.renderer.data.functions[new_id] = funct

			return new_id
		end,

		startRendering = function()
			if arceus_libs.renderer.data.connection then
				return
			end

			local RUN_SERVICE = cloneref(game:GetService("RunService"))
			arceus_libs.renderer.data.connection = RUN_SERVICE.RenderStepped:Connect(function(delta)
				pcall(function()
					for id, v in pairs(arceus_libs.renderer.data.functions) do
						if not arceus_libs.renderer.data.paused[id] then
							v(delta, id)
						end
					end

					local removed = false
					for id, v in pairs(arceus_libs.renderer.data.to_remove) do
						arceus_libs.renderer.data.functions[id] = nil
						arceus_libs.renderer.data.to_remove[id] = nil
						removed = true
					end

					if removed then
						arceus_libs.renderer.data.removedFromRendering:Fire()
					end
				end)
			end)
		end,

		stopRenddering = function()
			if arceus_libs.renderer.data.connection then
				arceus_libs.renderer.data.connection:Disconnect()
				arceus_libs.renderer.data.connection = nil
			end
		end,
	},
	
	
	input = {
		handleCustomDrag = function(object: GuiObject)
			local lastMousePos, dragging, startPos, viewportSize
			local USER_INPUT_SERVICE = cloneref(game:GetService("UserInputService"))
			
			arceus_libs.data.handled_page_dragging[object] = true
			object.Draggable = false
			object.Active = true

			local function Update(dt, renderId)
				if not object.Active or not object.Visible then
					return
				end

				if not object then
					arceus_libs.renderer.removeFromRendering(renderId)
				end

				local camera = game.Workspace.CurrentCamera
				viewportSize = camera.ViewportSize

				if not dragging or not startPos or not lastMousePos then
					return
				end

				local delta = (lastMousePos - USER_INPUT_SERVICE:GetMouseLocation())
				local xGoal = startPos.X.Offset - delta.X
				local yGoal = startPos.Y.Offset - delta.Y
				local anchor = object.AnchorPoint
				local size = object.AbsoluteSize
				local pos = object.Position

				-- Clamp the position within the screen boundaries
				local xOffsize = size.X - (size.X * anchor.X) - viewportSize.Y * 0.1
				local yOffsize = size.Y - (size.Y * anchor.Y) - viewportSize.Y * 0.1

				xGoal = math.clamp(xGoal, -xOffsize, viewportSize.X + xOffsize)
				yGoal = math.clamp(yGoal, -yOffsize, viewportSize.Y + yOffsize)

				lastMousePos = USER_INPUT_SERVICE:GetMouseLocation()
				startPos = UDim2.new(pos.X.Scale, xGoal, pos.Y.Scale, yGoal)

				object.Position = startPos
			end

			object.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					local pos = object.Position
					dragging = true

					startPos = UDim2.fromOffset(pos.X.Scale * viewportSize.X + pos.X.Offset, pos.Y.Scale * viewportSize.Y + pos.Y.Offset) --object.Position
					object.Position = startPos

					lastMousePos = USER_INPUT_SERVICE:GetMouseLocation()

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)

			return arceus_libs.renderer.pushToRendering(Update)
		end,

		isDraggable = function(object: GuiObject)
			return arceus_libs.data.handled_page_dragging[object] or object.Draggable
		end
	},
	
	buttons = {
		data = {
			drag_min = 15,
			long_click_time = 0.5,

			has_been_dragged = function(lastPos: UDim2, newPos: UDim2)
				if not lastPos or not newPos then
					return false
				end

				return math.abs((lastPos - newPos).Magnitude) > arceus_libs.buttons.data.drag_min
			end,
		},

		holdable = function(button: GuiButton, waitForRelease: boolean)
			local clickFetch = Instance.new("BindableEvent")
			local shortClick = Instance.new("BindableEvent")
			local longClick = Instance.new("BindableEvent")
			local lastPress = nil
			local lastPos = nil

			button.MouseButton1Down:Connect(function()
				lastPos = button.AbsolutePosition
				lastPress = os.clock()

				if not waitForRelease then
					task.spawn(function()
						local exit = false

						local callback
						callback = clickFetch.Event:Connect(function()
							if not exit then
								shortClick:Fire(button, os.clock() - lastPress)
								exit = true
							end
						end)

						task.wait(arceus_libs.buttons.data.long_click_time + 0.05)

						if not exit then
							exit = true
							if arceus_libs.input.isDraggable(button) and arceus_libs.buttons.data.has_been_dragged(lastPos, button.AbsolutePosition) then
								return
							end

							longClick:Fire(button, os.clock() - lastPress)
						end
					end)
				end
			end)

			button.MouseButton1Up:Connect(function()
				if arceus_libs.input.isDraggable(button) and arceus_libs.buttons.data.has_been_dragged(lastPos, button.AbsolutePosition) then
					return
				end

				if not waitForRelease then
					clickFetch:Fire()
					return
				end

				local clickTime = os.clock() - lastPress
				if lastPress and clickTime >= arceus_libs.buttons.data.long_click_time then
					longClick:Fire(button, clickTime)
				else
					shortClick:Fire(button, clickTime)
				end
			end)

			return {
				ShortClick = shortClick, 
				LongClick = longClick,
				Button = button
			}
		end
	}
}

-- |

local framework = setmetatable({
	dependencies = {
		utils = {}
	},
	data = {},
	components = {
		base = {}
	},
	popups = {},
	pages = {
		localScripts = {},
		console = {},
		exploitSettings = {
			optionTypes = {}
		},
		startup = {},
		navbar = {},
		globalScripts = {},
		editor = {}
	}
}, {
	__index = function(t, k)
		local res, split = t, string.split(k, ".");
		for i, v in split do
			res = rawget(res, v);
		end
		return res;
	end
});

do
	--[[ Enum ]]--

	local codexEnum = {};

	function codexEnum.__index(t, k)
		return t._map[k] or codexEnum[k];
	end

	function codexEnum.new(items: {any}): {any}
		local map = {};

		for i, v in items do
			map[v] = i;
		end

		return setmetatable({
			_map = map,
			_items = items
		}, codexEnum);
	end

	function codexEnum:GetEnumItems()
		return self._items;
	end

	--[[ Module ]]--

	framework.dependencies.codexEnum = {
		NavbarState = codexEnum.new({ "Hidden", "Partial", "Full" })
	};
end

do
	--[[ Connection ]]--

	local connection = {};
	connection.__index = connection;

	function connection.new(signal: {any}, fn: (any))
		return setmetatable({
			_signal = signal,
			_fn = fn
		}, connection);
	end

	function connection:Disconnect()
		self._signal[self] = nil;
	end

	--[[ Signal ]]--

	local signal = {};
	signal.__index = signal;

	function signal.new()
		return setmetatable({}, signal);
	end

	function signal:Connect(fn: (any))
		local conn = connection.new(self, fn);
		self[conn] = true;
		return conn;
	end

	function signal:Once(fn: (any))
		local conn; conn = self:Connect(function(...)
			conn:Disconnect();
			fn(...);
		end);
		return conn;
	end

	function signal:Fire(...)
		for conn, _ in self do
			task.spawn(conn._fn, ...);
		end
	end

	function signal:Wait()
		local thread = coroutine.running();
		local conn; conn = self:Connect(function(...)
			conn:Disconnect();
			task.spawn(thread, ...);
		end);
		return coroutine.yield();
	end

	function signal:DisconnectAll()
		table.clear(self);
	end

	framework.dependencies.signal = signal;
end

do
	--[[ Variables ]]--

	local runService = cloneref(game:GetService("RunService"));
	local tweenService = cloneref(game:GetService("TweenService"));

	local isRunning, isStudio = runService:IsRunning(), runService:IsStudio();
	local dynamicParent;

	--[[ Setup ]]--

	if gethui then
		dynamicParent = gethui();
	elseif isRunning then
		dynamicParent = isStudio and game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui") or cloneref(game:GetService("CoreGui"));
	else
		dynamicParent = cloneref(game:GetService("StarterGui"));
	end

	--[[ Module ]]--

	local utils = {};

	function utils:RandomString(len: number) -- SPDM
		local chars = {}
		for i = 1, len or math.random(16, 32) do
			chars[i] = string.char(math.random(33, 230))
		end

		return table.concat(chars)
	end

	function utils:Create(className: string, properties: {any}, children: {any}?): Instance
		local instance = Instance.new(className);
		for i, v in properties do
			if typeof(instance[i]) == "RBXScriptSignal" then
				instance[i]:Connect(v);
			elseif i ~= "Parent" then
				instance[i] = v;
			end
		end
		if children ~= nil then
			for i, v in children do
				v.Parent = instance;
			end
		end

		--[[ SPDM | Random name protection, this system is not compatible as it access the instances by the name.
		
			if isRunning and not isStudio then
				instance.Name = utils:RandomString(nil)
			end
		]]

		instance.Parent = properties.Parent;
		return instance;
	end

	function utils:Tween(instance: Instance, duration: number, properties: {any}, ...): Tween
		local tween = tweenService:Create(instance, TweenInfo.new(duration, ...), properties);
		tween:Play();
		return tween;
	end

	function utils:DynamicParent(instance: Instance): Instance
		instance.Parent = dynamicParent;
		return instance;
	end

	framework.dependencies.utils.instance = utils;
end

do
	--[[ Module ]]--

	local utils = {};

	function utils:CapitaliseFirst(str: string): string
		return string.upper(string.sub(str, 1, 1)) .. string.lower(string.sub(str, 2));
	end

	function utils:ConvertToCamelCase(str: string): string
		local res = "";
		for i, v in string.split(str, " ") do
			res ..= i == 1 and string.lower(v) or self:CapitaliseFirst(v);
		end
		return res;
	end

	framework.dependencies.utils.string = utils;
end

do
	--[[ Module ]]--

	local utils = {};

	function utils:DeepCopy(x: {any})
		local y = {};
		for i, v in x do
			y[i] = type(v) == "table" and self:DeepCopy(v) or v;
		end
		return y;
	end

	function utils:Concatenate(x: {any}, y: {any})
		if y ~= nil then
			for i, v in y do
				table.insert(x, v);
			end
		end
		return x;
	end

	function utils:DeepOverwrite(x: {any}, y: {any}, inclusive: boolean?)
		if y == nil then
			return x;
		end
		for i, v in y do
			if x[i] == nil then
				if inclusive then
					x[i] = v;
				end
			else
				local _type = typeof(x[i]);
				if _type == typeof(v) then
					if _type == "table" then
						self:DeepOverwrite(x[i], v);
					else
						x[i] = v;
					end
				end
			end
		end
		return x;
	end

	framework.dependencies.utils.table = utils;
end

do
	--[[ Variables ]]--

	local denominations = {
		"K", "M", "B", "T", "q", "Q", "s", "S", "O", "N", "d", "U", "D"
	};

	--[[ Module ]]--

	local utils = {};

	function utils:Round(input: number, float: number): number
		local bracket = 1 / float;
		return math.round(input * bracket) / bracket;
	end

	function utils:FormatAsCount(input: number, float: number): string
		if input < 1000 then
			return tostring(input);
		end
		local denominationIndex = math.floor(math.log10(input) / 3);
		return tostring(self:Round(input / (10 ^ (denominationIndex * 3)), float)) .. tostring(denominations[denominationIndex]);
	end

	function utils:FormatAsLiteralCount(input: number): string
		local x = string.gsub(string.reverse(tostring(input)), "(%d%d%d)", "%1,");
		return string.gsub(string.reverse(x), "^,", "");
	end

	function utils:IsWithin2DBounds(position: Vector2, topLeft: Vector2, bottomRight: Vector2): boolean
		return position.X >= topLeft.X and position.X <= bottomRight.X and position.Y >= topLeft.Y and position.Y <= bottomRight.Y;
	end

	framework.dependencies.utils.maths = utils;
end

do
	--[[ Variables ]]--

	local httpService = cloneref(game:GetService("HttpService"));
	local httpRequest = request or http_request or (syn and syn.request);


	--[[ Module ]]--

	local utils = {};
	
	-- SPDM
	function utils:Notify(text: string)
		cloneref(game:GetService("StarterGui")):SetCore("SendNotification", {
			Title = "Codex " .. (isiosdevice() and "iOS" or "Android"),
			Text = text
		});
	end

	function utils:Request(url: string, method: string?, headers: {any}?, body: any?): string
		local s, r = pcall(httpRequest, {
			Url = url,
			Method = method or "GET",
			Headers = headers,
			Body = type(body) == "table" and httpService:JSONEncode(body) or body
		});
		
		if s == false or r.Success == false or r.StatusCode ~= 200 then
			if not r.StatusCode then
				return false
			end
			
			if r.StatusCode >= 500 then
				utils:Notify("The remote server is experiencing issues, try again later.")
				
			elseif r.StatusCode >= 400 and s and r and r.Body then
				local success, data = pcall(function()
					return httpService:JSONDecode(r.Body)
				end)
				
				if success and data and data.userFacingMessage then
					utils:Notify(data.userFacingMessage)
				end
			end
			
			return false;
		end
		
		return r.Body;
	end

	function utils:Execute(scr: string, ...)
		executecode(scr);
	end

	function utils:AreVersionsAlike(currentVersion: string, newestVersion: string)
		local currentSplit, newestSplit = string.split(currentVersion, "."), string.split(newestVersion, ".");
		if #currentSplit ~= #newestSplit then
			return false;
		end
		for i = 1, #currentSplit do
			if currentSplit[i] ~= newestSplit[i] then
				return false;
			end
		end
		return true;
	end

	framework.dependencies.utils.internal = utils;
end

do
	--[[ Variables ]]--

	local httpService = cloneref(game:GetService("HttpService"));

	local internalUtils = framework.dependencies.utils.internal;

	local backup = {
		androidVersion = "1",
		iosVersion = "1",
		
		changelog = {
			{
				stamp = "2023-01-01T00:00:00Z",
				data = {
					"Changelog Data Failed To Download"
				}
			}
		}
	};

	--[[ Module ]]--

	local internalSettings = {};

	function internalSettings:Initialize()
		local data = backup;
		if identifyexecutor then
			local hostData = internalUtils:Request(isiosdevice() and "https://rblxexploits.com/codexiosUI.json" or "https://rblxexploits.com/codexUI.json");
			if not hostData then
				internalUtils:Notify("An error occured. Code: 001")
				return;
			end
			
			pcall(function() -- SPDM
				data = httpService:JSONDecode(hostData)
			end)
		end
		self.data = data;
	end

	framework.data.internalSettings = internalSettings;
end

do
	framework.data.builtInScripts = {
		{
			title = "Dark Dex V4",
			description = "A powerful game explorer GUI. Shows every instance of the game and all their properties. Useful for developers.",
			icon = "rbxassetid://14806198159",
			content = "local file = \"dexV4.lua\"; local raw = isfile and isfile(file) and readfile(file); raw = raw or game:HttpGetAsync(\"https://raw.githubusercontent.com/loglizzy/dexV4/main/source.lua\"); if isfile then task.spawn(writefile, file, game:HttpGet(url)); end loadstring(raw)();"
		},
		{
			title = "Unnamed ESP",
			description = "Player ESP for Roblox, fully undetectable, uses built in drawing API.",
			icon = "rbxassetid://14806221310",
			content = "pcall(function() loadstring(game:HttpGet(\"https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua\"))(); end);"
		},
		{
			title = "Hydroxide",
			description = "General purpose pen-testing tool for games on the Roblox engine",
			icon = "rbxassetid://14806229032",
			content = "loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/init.lua\"))(); loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ui/main.lua\"))();"
		},
		{
			title = "Infinite Yield",
			description = "Admin command line script with 300+ commands and 6 years of development",
			icon = "rbxassetid://14806239733",
			content = "loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\"))();"
		},
		{
			title = "Owl Hub",
			description = "Owl Hub is a free Roblox script hub developed by Google Chrome and CriShoux. It currently has 30+ games.",
			icon = "rbxassetid://14806252030",
			content = "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt\"))();"
		},
		{
			title = "Reaper Hub",
			description = "Reaper Hub is a free Roblox script hub developed by Reaper. It currently supports 35+ games using a single loadstring.",
			icon = "rbxassetid://17219371471",
			content = "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/AyoReaper/Reaper-Hub/main/loader.lua\"))();"
		}
	};
end

do
	--[[ Variables ]]--

	local signal = framework.dependencies.signal;
	local internalUtils = framework.dependencies.utils.internal;
	local tableUtils = framework.dependencies.utils.table;

	local httpService = cloneref(game:GetService("HttpService"));

	local savedScripts = {
		accumulator = 0,
		cache = {},
		onScriptAdded = signal.new(),
		onScriptRemoved = signal.new()
	};

	--[[ Functions ]]--

	local function reassignIndexes(cache: {any})
		for i, v in cache do
			v.index = i;
		end
		return cache;
	end

	local function loadScriptCache()
		if isarceusfile and isarceusfile("data/codexScriptCache.json") then
			local s, r = pcall(httpService.JSONDecode, httpService, readarceusfile("data/codexScriptCache.json"));
			if s and type(r) == "table" then
				local accumulation = 0;
				local cache = {};
				local hasFoundDuplicateIndex = false;
				for i, v in r do
					if not (type(v) == "table" and v.title and v.description and v.content and v.index and v.autoExecute ~= nil) then
						continue;
					end

					if v.index > accumulation then
						accumulation = v.index;
					end

					if hasFoundDuplicateIndex == false then -- backwards fix from an old broken update and/or someone trying to fuck with the system
						for i2, v2 in cache do
							if v2.index == v.index then
								hasFoundDuplicateIndex = true;
							end
						end
					end

					v.onAutoExecuteToggled = signal.new();
					cache[#cache + 1] = hasFoundDuplicateIndex and reassignIndexes(v) or v;
				end
				savedScripts.accumulator = accumulation;
				savedScripts.cache = cache;
			end
		end
	end

	local function saveScriptCache()
		if writearceusfile then
			local cache = tableUtils:DeepCopy(savedScripts.cache);
			for i, v in cache do
				v.onAutoExecuteToggled = nil;
			end
			writearceusfile("data/codexScriptCache.json", httpService:JSONEncode(cache));
		end
	end

	--[[ Module ]]--

	function savedScripts:Initialize()
		loadScriptCache();
		for i, v in savedScripts.cache do
			if v.autoExecute then
				task.spawn(function()
					internalUtils:Execute(v.content);
				end);
			end
		end
	end

	function savedScripts:Get(index: number)
		for i, v in self.cache do
			if v.index == index then
				return i, v;
			end
		end
	end

	function savedScripts:Add(title: string, description: string, content: string)
		self.accumulator += 1;
		local index = self.accumulator;

		local newScript = {
			title = title,
			description = description,
			content = content,
			index = index,
			autoExecute = false,
			onAutoExecuteToggled = signal.new()
		};

		self.cache[#self.cache + 1] = newScript;
		self.onScriptAdded:Fire(newScript);
		saveScriptCache();
	end

	function savedScripts:Remove(index: number)
		local i, save = self:Get(index);
		if save then
			table.remove(self.cache, i);
			self.onScriptRemoved:Fire(save);
			saveScriptCache();
		end
	end

	function savedScripts:ToggleAutomaticExecution(index: number, state: boolean)
		local _, save = self:Get(index);
		if save then
			save.autoExecute = state;
			save.onAutoExecuteToggled:Fire(state);
			saveScriptCache();
		end
	end

	framework.data.savedScripts = savedScripts;
end

do
	--[[ Variables ]]--

	local httpService = cloneref(game:GetService("HttpService"));

	local signal = framework.dependencies.signal;
	local tableUtils = framework.dependencies.utils.table;

	local signalCache = {};
	local settingsCache = {
		executor = {
			openingMode = "Floating Icon", -- SPDM Team | Floating Icon
			showParticles = true, -- SPDM Team | Show Particles Setting
			autoExecute = true,
			autoSaveTabs = false,
			fps = {
				unlocked = false,
				vSync = false,
				value = 60
			}
		},
		player = {
			walkSpeed = {
				enabled = false,
				value = 16
			},
			jumpPower = {
				enabled = false,
				value = 50
			},
			antiAfk = false
		},
		serverHop = {
			priority = "Most Players",
			delayedHop = false,
			delay = 10
		}
	};

	local userSettings = {};

	--[[ Functions ]]--

	local function saveUserSettings()
		if writearceusfile then
			writearceusfile("data/codexSettings.json", httpService:JSONEncode(tableUtils:DeepCopy(settingsCache)));
		end
	end

	local function createAutosaveMetatable(options: {any}, hierarchy: string)
		for i, v in options do
			if type(v) == "table" then
				options[i] = createAutosaveMetatable(v, hierarchy == "" and i or string.format("%s.%s", hierarchy, i));
			end
		end

		return setmetatable({}, {
			__index = function(_, k)
				return options[k];
			end,
			__newindex = function(_, k, v)
				options[k] = v;
				saveUserSettings();
				userSettings:FirePropertyChangedSignal(hierarchy == "" and k or string.format("%s.%s", hierarchy, k), v);
			end,
			__iter = function()
				return next, options;
			end
		});
	end

	--[[ Module ]]--

	function userSettings:Initialize()
		if isarceusfolder and not isarceusfolder("data") then
			makearceusfolder("data");
		end

		if isarceusfile and isarceusfile("data/codexSettings.json") then
			local succ, res = pcall(httpService.JSONDecode, httpService, readarceusfile("data/codexSettings.json"));
			if succ then
				tableUtils:DeepOverwrite(settingsCache, res);
			else
				task.defer(error, "settings file is corrupted");
			end
		end

		self.cache = createAutosaveMetatable(settingsCache, "");
	end

	function userSettings:GetPropertyChangedSignal(path: string)
		if signalCache[path] == nil then
			signalCache[path] = signal.new();
		end
		return signalCache[path];
	end

	function userSettings:FirePropertyChangedSignal(path: string, value: any)
		local sig = signalCache[path];
		if sig then
			sig:Fire(value);
		end
	end

	framework.data.userSettings = userSettings;
end

do
	--[[ Variables ]]--

	local signal = framework.dependencies.signal;
	local tableUtils = framework.dependencies.utils.table;

	local httpService = cloneref(game:GetService("HttpService"));

	local tabSystem = {
		accumulator = 1,
		selected = nil,
		cache = {
			{
				title = "Script 1",
				content = "print('Hello World!');",
				index = 1
			}
		},
		onTabCreated = signal.new(),
		onTabRemoved = signal.new(),
		onTabSelected = signal.new()
	};

	--[[ Functions ]]--

	local function reassignIndexes(cache: {any})
		for i, v in cache do
			v.index = i;
		end
		return cache;
	end

	local function loadTabCache()
		if isarceusfile and isarceusfile("data/codexTabs.json") then
			local s, r = pcall(httpService.JSONDecode, httpService, readarceusfile("data/codexTabs.json"));
			if s and type(r) == "table" then
				local accumulation = 0;
				local cache = {};
				local hasFoundDuplicateIndex = false;
				for i, v in r do
					if not (type(v) == "table" and v.title and v.content and v.index) then
						continue;
					end

					if v.index > accumulation then
						accumulation = v.index;
					end

					if hasFoundDuplicateIndex == false then -- backwards fix from an old broken update and/or someone trying to fuck with the system
						for i2, v2 in cache do
							if v2.index == v.index then
								hasFoundDuplicateIndex = true;
							end
						end
					end

					cache[#cache + 1] = hasFoundDuplicateIndex and reassignIndexes(v) or v;
				end
				tabSystem.accumulator = accumulation;
				tabSystem.cache = cache;
			end
		end
	end

	--[[ Module ]]--

	function tabSystem:Initialize()
		loadTabCache();
	end

	function tabSystem:Get(index: number)
		for i, v in self.cache do
			if v.index == index then
				return i, v;
			end
		end
	end

	function tabSystem:Add(title: string, content: string?)
		self.accumulator += 1;
		local index = self.accumulator;

		local newTab = {
			title = title,
			content = content or "print('Hello World!');",
			index = index
		};

		self.cache[#self.cache + 1] = newTab;
		self.onTabCreated:Fire(newTab);
		self:Select(index);
	end

	function tabSystem:Remove(index: number)
		if #self.cache > 1 then
			local i, tab = self:Get(index);
			if tab then
				if self.selected == tab then
					self:Select(self.cache[i == 1 and 2 or 1].index);
				end
				table.remove(self.cache, i);
				self.onTabRemoved:Fire(tab);
			end
		end
	end

	function tabSystem:Select(index: number)
		local _, tab = self:Get(index);
		if tab and (self.selected == nil or tab.index ~= self.selected.index) then
			self.selected = tab;
			self.onTabSelected:Fire(tab);
		end
	end

	function tabSystem:UpdateContent(index: number, content: string)
		local _, tab = self:Get(index);
		if tab then
			tab.content = content;
		end
	end

	function tabSystem:Save()
		if writearceusfile then
			writearceusfile("data/codexTabs.json", httpService:JSONEncode(tableUtils:DeepCopy(self.cache)));
		end
	end

	framework.data.tabSystem = tabSystem;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.editorButton = (function(title: string, icon: string, overwriteProps: {any}?, foreground: Color3?): Instance
		return instanceUtils:Create("TextButton", tableUtils:DeepOverwrite({ 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Size = UDim2.new(0, 50, 0, 50), 
			Text = "", 
			TextColor3 = Color3.fromHex("1b2a35"),
			ZIndex = 2
		}, overwriteProps, true), {
			instanceUtils:Create("UICorner", { 
				Name = "corner"
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = icon, 
				ImageColor3 = foreground or Color3.fromHex("9fa4ba"), 
				Name = "icon", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(0, 28, 0, 28),
				ZIndex = 2
			})
		});
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local tabSystem;

	local textService = cloneref(game:GetService("TextService"));

	--[[ Functions ]]--

	local function createButton(title: string): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Position = UDim2.new(1, -75, 1, -75), 
			Size = UDim2.new(0, textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
				Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				Text = title,
				Size = 14,
				Width = math.huge
			})).X + 42, 0, 32), 
			Text = ""
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 6), 
				Name = "corner"
			}),
			instanceUtils:Create("ImageButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutoButtonColor = false,
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = "rbxassetid://14808246706", 
				Name = "close", 
				Position = UDim2.new(1, -6, 0.5, 0), 
				Size = UDim2.new(0, 20, 0, 20)
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(1, -18, 1, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextXAlignment = Enum.TextXAlignment.Left
			})
		});
	end

	--[[ Module ]]--

	local tabButton = {};
	tabButton.__index = tabButton;

	function tabButton.new(tab: {any})
		if tabSystem == nil then
			tabSystem = framework.data.tabSystem;
		end

		local btn = createButton(tab.title);

		btn.MouseButton1Click:Connect(function()
			tabSystem:Select(tab.index);
		end);

		btn.close.MouseButton1Click:Connect(function()
			tabSystem:Remove(tab.index);
		end);

		return setmetatable({
			instance = btn
		}, tabButton);
	end

	function tabButton:Highlight(selected: boolean)
		instanceUtils:Tween(self.instance, 0.2, {
			BackgroundColor3 = Color3.fromHex(selected and "eb4545" or "3a3a4a");
		});
		instanceUtils:Tween(self.instance.title, 0.2, {
			TextColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba");
		});
		instanceUtils:Tween(self.instance.close, 0.2, {
			ImageColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba");
		});
	end

	function tabButton:Destroy()
		self.instance:Destroy();
	end

	framework.components.tabButton = tabButton;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Functions ]]--

	local function createButton(title: string, icon: string): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Size = UDim2.new(1, 0, 0, 50), 
			Text = "",
			ZIndex = 2
		}, {
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = icon, 
				ImageColor3 = Color3.fromHex("979ebd"), 
				ImageTransparency = 0.6, 
				Name = "icon", 
				Position = UDim2.new(0, 38, 0.5, 0), 
				Size = UDim2.new(0, 24, 0, 24),
				ZIndex = 2
			}, {
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11559270573", 
					ImageTransparency = 1, 
					Name = "glow", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 85, 0, 102),
					ZIndex = 2
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				AutomaticSize = Enum.AutomaticSize.XY, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size12, 
				Name = "text", 
				Position = UDim2.new(0, 70, 0.5, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 12, 
				TextTransparency = 0.2, 
				TextXAlignment = Enum.TextXAlignment.Left,
				ZIndex = 2
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = "rbxassetid://11558444554", 
				Name = "arrow", 
				Position = UDim2.new(0, 224, 0.5, 0), 
				Size = UDim2.new(0, 16, 0, 16),
				ZIndex = 2
			})
		});
	end

	--[[ Module ]]--

	local navbarButton = {};
	navbarButton.__index = navbarButton;

	function navbarButton.new(title: string, icon: string)
		return setmetatable({
			instance = createButton(title, icon);
		}, navbarButton);
	end

	function navbarButton:Highlight(selected: boolean)
		instanceUtils:Tween(self.instance.icon, 0.2, {
			ImageColor3 = selected and Color3.fromHex("eb4545") or Color3.fromHex("979ebd"),
			ImageTransparency = selected and 0 or 0.6
		});
		instanceUtils:Tween(self.instance.icon.glow, 0.2, {
			ImageTransparency = selected and 0 or 1
		});
	end

	framework.components.navbarButton = navbarButton;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.textBox = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextBox", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.X,
			BackgroundColor3 = Color3.fromRGB(58, 58, 74),
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
			PlaceholderText = "Value...",
			Size = UDim2.new(0, 0, 0, 32),
			Text = "",
			TextColor3 = Color3.fromRGB(159, 164, 186),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), tableUtils:Concatenate({
			instanceUtils:Create("UIPadding", {
				Name = "padding",
				PaddingLeft = UDim.new(0, 10),
				PaddingRight = UDim.new(0, 10)
			}),
			instanceUtils:Create("UICorner", {
				Name = "corner",
				CornerRadius = UDim.new(0, 6)
			})
		}, children));
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.textButton = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextButton", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.X,
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold),
			Size = UDim2.new(0, 0, 0, 32),
			TextColor3 = Color3.new(1, 1, 1),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), tableUtils:Concatenate({
			instanceUtils:Create("UIPadding", {
				Name = "padding",
				PaddingLeft = UDim.new(0, 10),
				PaddingRight = UDim.new(0, 10)
			}),
			instanceUtils:Create("UICorner", {
				Name = "corner",
				CornerRadius = UDim.new(0, 6)
			})
		}, children));
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.background = (function(overwriteProps: {any}?, children: {any}?): Instance
		return instanceUtils:Create("Frame", tableUtils:DeepOverwrite({
			AnchorPoint = Vector2.new(0.5, 0.5),
			BackgroundColor3 = Color3.fromRGB(21, 21, 29),
			BackgroundTransparency = 0.1,
			BorderSizePixel = 0,
			Name = "background",
			Position = UDim2.new(0.5, 0, 0.5, 0),
			Size = UDim2.new(1, 0, 1, 0),
			ZIndex = 0
		}, overwriteProps, true), children);
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.textLabel = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextLabel", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.XY,
			BackgroundTransparency = 1,
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold),
			Size = UDim2.new(),
			TextColor3 = Color3.new(1, 1, 1),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), children);
	end);
end

do
	--[[ Variables ]]--

	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local mathsUtils = framework.dependencies.utils.maths;
	local tabSystem;

	local globalScriptSelection = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		local base = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "globalScriptSelection", 
			Parent = directory, 
			Position = UDim2.new(0.5, 0, 0.5, 20), 
			Size = UDim2.new(0.6, 0, 0.4, 100), 
			Visible = false
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("202028"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "selectedScript", 
				Position = UDim2.new(0, 30, 0, 20), 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "Selected Script:", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(0.5, 0, 1, -30), 
				Size = UDim2.new(1, -60, 0, 0)
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 18, 0, 16), 
					CellSize = UDim2.new(0.5, -9, 0, 36), 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder, 
					VerticalAlignment = Enum.VerticalAlignment.Bottom
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "execute", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Execute", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "loadToEditor", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Load to Editor", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "saveScript", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Save Script", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "cancel", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Cancel", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(1, 0), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Image = "", 
				Name = "icon", 
				Position = UDim2.new(1, -30, 0, 20), 
				Size = UDim2.new(0, 100, 1, -158)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIAspectRatioConstraint", { 
					AspectRatio = 16 / 9, 
					AspectType = Enum.AspectType.ScaleWithParentSize, 
					DominantAxis = Enum.DominantAxis.Height, 
					Name = "aspectRatio"
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "text", 
				Position = UDim2.new(0, 30, 0, 40), 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "views", 
				Position = UDim2.new(0, 30, 0, 70), 
				RichText = true, 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "<font weight=\"bold\">Views:</font>", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "updatedAt", 
				Position = UDim2.new(0, 30, 0, 90), 
				RichText = true, 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "<font weight=\"bold\">Updated:</font>", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("UIAspectRatioConstraint", { 
				AspectRatio = 480 / 244, 
				Name = "aspectRatio"
			})
		});

		base.buttons.execute.MouseButton1Click:Connect(function()
			globalScriptSelection:Hide();
			internalUtils:Execute(globalScriptSelection.selectedScript.script);
		end);

		base.buttons.loadToEditor.MouseButton1Click:Connect(function()
			if tabSystem == nil then
				tabSystem = framework.data.tabSystem;
			end
			tabSystem:Add(globalScriptSelection.selectedScript.title, globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);

		base.buttons.saveScript.MouseButton1Click:Connect(function()
			savedScripts:Add(globalScriptSelection.selectedScript.title, "", globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);

		base.buttons.cancel.MouseButton1Click:Connect(function()
			globalScriptSelection:Hide();
		end);

		return base;
	end

	--[[ Module ]]--

	function globalScriptSelection:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end

	function globalScriptSelection:Show(scriptResult: {any})
		self.selectedScript = scriptResult;
		self.frame.icon.Image = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId);
		self.frame.text.Text = scriptResult.title;
		self.frame.views.Text = "<font weight=\"bold\">Views:</font> " .. mathsUtils:FormatAsLiteralCount(scriptResult.views);
		self.frame.updatedAt.Text = "<font weight=\"bold\">Updated:</font> " .. DateTime.fromIsoDate(scriptResult.updatedAt or scriptResult.createdAt):FormatLocalTime("ll", "en-us");
		self.frame.Visible = true;
	end

	function globalScriptSelection:Hide()
		self.frame.Visible = false;
	end

	framework.popups.globalScriptSelection = globalScriptSelection;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local signal = framework.dependencies.signal;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	local textService = cloneref(game:GetService("TextService"));

	local dropdown = {
		selectedDropdown = nil,
		selectedItem = nil,
		onDropdownChanged = signal.new(),
		onSelectionChanged = signal.new()
	};

	--[[ Functions ]]--

	local function createItem(title: string)
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = stringUtils:ConvertToCamelCase(title),  
			Parent = dropdown.frame.container, 
			Position = UDim2.new(1, -75, 1, -75), 
			Size = UDim2.new(1, -4, 0, 28), 
			Text = title, 
			TextColor3 = Color3.fromHex("9fa4ba"), 
			TextSize = 14
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 4), 
				Name = "corner"
			}),
			instanceUtils:Create("UIPadding", { 
				Name = "padding", 
				PaddingLeft = UDim.new(0, 10), 
				PaddingRight = UDim.new(0, 10)
			})
		});
	end

	local function toggleItemSelection(item: TextButton, selected: boolean)
		instanceUtils:Tween(item, 0.25, {
			BackgroundTransparency = selected and 0 or 1,
			TextColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba")
		});
	end

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(1, 0), 
			BackgroundColor3 = Color3.fromHex("202028"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "dropdown", 
			Parent = directory, 
			Position = UDim2.new(1, -22, 0, 128), 
			Size = UDim2.new(0, 180, 0, 142)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 6), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("3a3a4a"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutomaticCanvasSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "container", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				ScrollBarImageColor3 = Color3.fromHex("53536b"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.Y, 
				Size = UDim2.new(1, -8, 1, -12), 
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("UIListLayout", { 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	end

	local function clearDropdown()
		for i, v in dropdown.frame.container:GetChildren() do
			if v:IsA("TextButton") then
				v:Destroy();
			end
		end
	end

	--[[ Module ]]--

	function dropdown:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end

	function dropdown:Show(item: {any}, adornee: GuiBase2d)
		clearDropdown();
		self.selectedDropdown = item.title;
		self.onDropdownChanged:Fire(item.title);

		if self.adornConnection then
			self.adornConnection:Disconnect();
		end

		do
			local bottomRight = adornee.AbsolutePosition + adornee.AbsoluteSize;
			self.frame.Position = UDim2.new(0, bottomRight.X, 0, bottomRight.Y + 44);

			self.adornConnection = adornee:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
				bottomRight = adornee.AbsolutePosition + adornee.AbsoluteSize;
				self.frame.Position = UDim2.new(0, bottomRight.X, 0, bottomRight.Y + 44);
			end);
		end

		for i, v in item.items do
			local currentItem = createItem(v);
			if v == item.value then
				toggleItemSelection(currentItem, true);
				self.selectedItem = currentItem;
			end

			currentItem.MouseButton1Click:Connect(function()
				toggleItemSelection(self.selectedItem, false);
				toggleItemSelection(currentItem, true);
				self.selectedItem = currentItem;
				self.onSelectionChanged:Fire(v);
			end);
		end

		self.frame.Visible = true;
	end

	function dropdown:Hide()
		clearDropdown();
		self.selectedDropdown = nil;
		self.selectedItem = nil;
		self.onDropdownChanged:Fire();
		self.frame.Visible = false;
	end

	framework.popups.dropdown = dropdown;
end

do
	--[[ Variables ]]--

	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;

	local saveCurrentTab = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		local base = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "saveCurrentTab", 
			Parent = directory, 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			Size = UDim2.new(0.6, 0, 0.4, 100), 
			Visible = false
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("202028"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(0.5, 0, 1, -30), 
				Size = UDim2.new(1, -60, 0, 0)
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 18, 0, 16), 
					CellSize = UDim2.new(0.5, -9, 0, 36), 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder, 
					VerticalAlignment = Enum.VerticalAlignment.Bottom
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "saveScript", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Save Script", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "cancel", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Cancel", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "text", 
				Position = UDim2.new(0.5, 0, 0, 40), 
				Size = UDim2.new(1, -60, 0, 0), 
				Text = "Script 1", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "currentTab", 
				Position = UDim2.new(0.5, 0, 0, 20), 
				Size = UDim2.new(1, -60, 0, 0), 
				Text = "Current Tab:", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("202028"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "title", 
				PlaceholderText = "Title...", 
				Position = UDim2.new(0.5, 0, 1, -125), 
				Size = UDim2.new(1, -62, 0, 32), 
				Text = "", 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke"
				})
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("202028"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				PlaceholderText = "Description...", 
				Position = UDim2.new(0.5, 0, 1, -79), 
				Size = UDim2.new(1, -62, 0, 32), 
				Text = "", 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke"
				})
			}),
			instanceUtils:Create("UISizeConstraint", { 
				MaxSize = Vector2.new(600, math.huge), 
				Name = "sizeConstraint"
			}),
			instanceUtils:Create("UIAspectRatioConstraint", { 
				AspectRatio = 480 / 244, 
				Name = "aspectRatio"
			})
		});

		base.buttons.saveScript.MouseButton1Click:Connect(function()
			local title = base.title.Text;
			if #title > 0 then
				savedScripts:Add(title, base.description.Text, saveCurrentTab.selectedTab.content);
				saveCurrentTab:Hide();
			end
		end);

		base.buttons.cancel.MouseButton1Click:Connect(function()
			saveCurrentTab:Hide();
		end);

		return base;
	end

	--[[ Module ]]--

	function saveCurrentTab:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end

	function saveCurrentTab:Show(selectedTab: {any})
		self.selectedTab = selectedTab;
		self.frame.text.Text = selectedTab.title;
		self.frame.title.Text = selectedTab.title;
		self.frame.Visible = true;
	end

	function saveCurrentTab:Hide()
		self.frame.Visible = false;
	end

	framework.popups.saveCurrentTab = saveCurrentTab;
end

do
	--[[ Module ]]--

	local popups = {
		cache = {}
	};

	function popups:RegisterGUI(gui: ScreenGui)
		self.gui = gui;
	end

	function popups:Show(name: string, ...)
		local module = self.cache[name];
		if module == nil then
			module = framework["popups." .. name];
			module:CreateUI(self.gui);
			self.cache[name] = module;
		end
		module:Show(...);
	end

	function popups:Hide(name: string,  ...)
		local module = self.cache[name];
		if module then
			module:Hide(...);
		end
	end

	framework.popups.popups = popups;
end

do
	--[[ Variables ]]--

	local textButton = framework.components.base.textButton;
	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local stringUtils = framework.dependencies.utils.string;
	local tabSystem;

	--[[ Functions ]]--

	local function createSavedScript(scriptData: {any}): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("202028"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(scriptData.title), 
			Size = UDim2.new(1, -4, 0, 82)
		}, {
			instanceUtils:Create("UICorner", { 
				Name = "corner"
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Position = UDim2.new(0.5, 0, 0.5, -2), 
				Size = UDim2.new(1, -32, 0, 0), 
				Text = scriptData.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -8, 1, -8), 
				Size = UDim2.new(0, 0, 0, 30)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "execute",
					Text = "Execute"
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "loadToEditor",
					Text = "Load to Editor"
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "delete",
					Text = "Delete"
				})
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "autoExecute", 
				Position = UDim2.new(1, -8, 0, 8), 
				Size = UDim2.new(0, 160, 0, 28), 
				Text = "", 
				TextColor3 = Color3.fromHex("000000"), 
				TextSize = 14
			}, {
				instanceUtils:Create("TextLabel", { 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "text", 
					Size = UDim2.new(1, 0, 1, 0), 
					Text = "Auto Execute", 
					TextColor3 = Color3.fromHex("9fa4ba"), 
					TextSize = 16, 
					TextWrap = true, 
					TextWrapped = true, 
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(1, 0.5), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "indicator", 
					Position = UDim2.new(1, -2, 0.5, 0), 
					Size = UDim2.new(0, 42, 0, 24)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					}),
					instanceUtils:Create("UIStroke", { 
						ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
						Color = scriptData.autoExecute and Color3.fromRGB(235, 69, 69) or Color3.fromRGB(58, 58, 74), 
						Name = "stroke", 
						Thickness = 2
					}),
					instanceUtils:Create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = scriptData.autoExecute and Color3.fromRGB(235, 69, 69) or Color3.fromRGB(58, 58, 74), 
						BorderColor3 = Color3.fromHex("000000"), 
						BorderSizePixel = 0, 
						Name = "dot", 
						Position = UDim2.new(0.5, scriptData.autoExecute and 9 or -9, 0.5, 0), 
						Size = UDim2.new(0, 18, 0, 18)
					}, {
						instanceUtils:Create("UICorner", { 
							CornerRadius = UDim.new(1, 0), 
							Name = "corner"
						})
					})
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0.5, 0, 0.5, 2), 
				Size = UDim2.new(1, -32, 0, 0), 
				Text = scriptData.description, 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			})
		});
	end

	--[[ Module ]]--

	local savedScript = {};
	savedScript.__index = savedScript;

	function savedScript.new(scriptData: {any})
		local newSavedScript = setmetatable({
			scriptData = scriptData,
			instance = createSavedScript(scriptData)
		}, savedScript);

		newSavedScript.instance.buttons.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(scriptData.content);
		end);

		newSavedScript.instance.buttons.loadToEditor.MouseButton1Click:Connect(function()
			if tabSystem == nil then
				tabSystem = framework.data.tabSystem;
			end
			tabSystem:Add(scriptData.title, scriptData.content);
		end);

		newSavedScript.instance.buttons.delete.MouseButton1Click:Connect(function()
			savedScripts:Remove(scriptData.index);
		end);

		if scriptData.autoExecute then
			newSavedScript:ToggleAutomaticExecution(true);
		end

		scriptData.onAutoExecuteToggled:Connect(function(state: boolean)
			newSavedScript:ToggleAutomaticExecution(state);
		end);

		newSavedScript.instance.autoExecute.MouseButton1Click:Connect(function()
			savedScripts:ToggleAutomaticExecution(scriptData.index, not scriptData.autoExecute);
		end);

		return newSavedScript;	
	end

	function savedScript:ToggleAutomaticExecution(state: boolean)
		instanceUtils:Tween(self.instance.autoExecute.indicator.dot, 0.2, {
			BackgroundColor3 = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a"),
			Position = UDim2.new(0.5, state and 9 or -9, 0.5, 0)
		});
		instanceUtils:Tween(self.instance.autoExecute.indicator.stroke, 0.2, {
			Color = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a")
		});
	end

	framework.pages.localScripts.savedScript = savedScript;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Module ]]--

	framework.pages.localScripts.builtInScript = (function(builtInScript: {any})
		local base = instanceUtils:Create("ImageLabel", { 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Image = builtInScript.icon, 
			ImageTransparency = 0.5, 
			Name = stringUtils:ConvertToCamelCase(builtInScript.title), 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("eb4545"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				Name = "execute", 
				Position = UDim2.new(1, -10, 1, -10), 
				Size = UDim2.new(0, 40, 0, 40), 
				Text = ""
			}, {
				instanceUtils:Create("UICorner", { 
					Name = "corner"
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://13075469149", 
					Name = "icon", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 18, 0, 18)
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0, 14), 
				Size = UDim2.new(1, -28, 0, 0), 
				Text = builtInScript.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0, 1), 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0, 14, 1, -14), 
				Size = UDim2.new(1, -70, 1, -52), 
				Text = builtInScript.description, 
				TextColor3 = Color3.fromHex("c8c8c8"), 
				TextSize = 13, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			})
		});

		base.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(builtInScript.content);
		end);

		return base;
	end);
end

do
	--[[ Variables ]]--

	local savedScripts = framework.data.savedScripts;
	local textButton = framework.components.base.textButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local builtInScript = framework.pages.localScripts.builtInScript;
	local savedScript = framework.pages.localScripts.savedScript;

	local map = {};
	local savedScriptMap = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "localScripts", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				textButton({
					BackgroundColor3 = Color3.fromRGB(58, 58, 74), 
					Name = "builtInLibrary", 
					Text = "Built-in Library",
					TextColor3 = Color3.fromRGB(159, 164, 186)
				}),
				textButton({
					BackgroundColor3 = Color3.fromRGB(58, 58, 74), 
					Name = "savedScripts", 
					Text = "Saved Scripts",
					TextColor3 = Color3.fromRGB(159, 164, 186)
				})
			}),
			instanceUtils:Create("Folder", { 
				Name = "tabs"
			}, {
				instanceUtils:Create("ScrollingFrame", { 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticCanvasSize = Enum.AutomaticSize.Y, 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 0), 
					Name = "builtInLibrary", 
					Position = UDim2.new(0.5, 0, 1, 0), 
					ScrollBarImageColor3 = Color3.fromHex("191923"), 
					ScrollBarThickness = 4, 
					Size = UDim2.new(1, -28, 1, -60), 
					VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
				}, {
					instanceUtils:Create("UIGridLayout", { 
						CellPadding = UDim2.new(0, 12, 0, 12), 
						CellSize = UDim2.new(0.333, -12, 0.3, 50), 
						HorizontalAlignment = Enum.HorizontalAlignment.Center, 
						Name = "grid", 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				}),
				instanceUtils:Create("ScrollingFrame", { 
					AnchorPoint = Vector2.new(0, 1), 
					AutomaticCanvasSize = Enum.AutomaticSize.Y, 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 0), 
					Name = "savedScripts", 
					Position = UDim2.new(0, 14, 1, 0), 
					ScrollBarImageColor3 = Color3.fromHex("191923"), 
					ScrollBarThickness = 4, 
					Size = UDim2.new(1, -24, 1, -60), 
					VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar, 
					Visible = false
				}, {
					instanceUtils:Create("UIListLayout", { 
						Name = "list", 
						Padding = UDim.new(0, 12), 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				})
			})
		});
	end

	--[[ Module ]]--

	local localScripts = {
		title = "Local Scripts",
		icon = "rbxassetid://11558196718",
		selected = nil
	};

	function localScripts:Initialize(directory: Instance)
		self.base = createUI(directory);

		map[self.base.tabButtons.builtInLibrary] = self.base.tabs.builtInLibrary;
		map[self.base.tabButtons.savedScripts] =self. base.tabs.savedScripts;

		for i, v in framework.data.builtInScripts do
			builtInScript(v).Parent = self.base.tabs.builtInLibrary;
		end

		for i, v in savedScripts.cache do
			self:AddSavedScript(v);
		end

		savedScripts.onScriptAdded:Connect(function(newScript)
			self:AddSavedScript(newScript);
		end);

		savedScripts.onScriptRemoved:Connect(function(oldScript)
			local oldSavedScript = savedScriptMap[oldScript];
			if oldSavedScript then
				oldSavedScript.instance:Destroy();
			end
		end);

		for i, v in map do
			i.MouseButton1Click:Connect(function()
				self:Select(i);
			end);
		end

		self:Select(self.base.tabButtons.builtInLibrary);
		return self.base;
	end

	function localScripts:AddSavedScript(newScript: {any})
		local newSavedScript = savedScript.new(newScript);
		savedScriptMap[newScript] = newSavedScript;
		newSavedScript.instance.Parent = self.base.tabs.savedScripts;
	end

	function localScripts:Select(button: TextButton)
		if self.selected then
			if self.selected == button then
				return;
			end
			map[self.selected].Visible = false;
			instanceUtils:Tween(self.selected, 0.2, {
				BackgroundColor3 = Color3.fromRGB(58, 58, 74),
				TextColor3 = Color3.fromRGB(159, 164, 186)
			});
		end
		self.selected = button;
		map[button].Visible = true;
		instanceUtils:Tween(self.selected, 0.2, {
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			TextColor3 = Color3.fromRGB(255, 255, 255)
		});
	end

	framework.pages.localScripts.localScripts = localScripts;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;

	local colourCodes = {
		[Enum.MessageType.MessageOutput] = "69b397",
		[Enum.MessageType.MessageInfo] = "81a6da",
		[Enum.MessageType.MessageWarning] = "e0ba91",
		[Enum.MessageType.MessageError] = "eb4545"
	};

	local base;

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "console", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.XY, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "content", 
				Position = UDim2.new(0.5, 0, 0, 0), 
				ScrollBarImageColor3 = Color3.fromHex("191923"), 
				ScrollBarThickness = 4, 
				Size = UDim2.new(1, -28, 1, -14)
			}, {
				instanceUtils:Create("UIListLayout", { 
					Name = "list", 
					Padding = UDim.new(0, 4), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -25, 1, -25), 
				Size = UDim2.new(1, -50, 0, 50)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					HorizontalAlignment = Enum.HorizontalAlignment.Right, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					Name = "clear", 
					Size = UDim2.new(0, 50, 0, 50), 
					Text = "", 
					TextColor3 = Color3.fromHex("1b2a35"),
					MouseButton1Click = function()
						for i, v in base.content:GetChildren() do
							if not v:IsA("UIListLayout") then
								v:Destroy();
							end
						end
					end
				}, {
					instanceUtils:Create("UICorner", { 
						Name = "corner"
					}),
					instanceUtils:Create("ImageLabel", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundTransparency = 1, 
						BorderSizePixel = 0, 
						Image = "rbxassetid://14808219001", 
						ImageColor3 = Color3.fromHex("9fa4ba"), 
						Name = "icon", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						Size = UDim2.new(0, 28, 0, 28)
					})
				})
			})
		});
	end

	local function insertItem(message: string, messageType: Enum.MessageType)
		local timestamp = tick();

		instanceUtils:Create("TextLabel", { 
			AutomaticSize = Enum.AutomaticSize.XY, 
			BackgroundTransparency = 1, 
			FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size18, 
			Name = timestamp, 
			Parent = base.content,
			Position = UDim2.new(0, 48, 0, 0), 
			RichText = true, 
			Text = string.format("<font color=\"#%s\">[%d]</font> %s", colourCodes[messageType], timestamp, message), 
			TextColor3 = Color3.fromHex("9fa4ba"), 
			TextSize = 16, 
			TextXAlignment = Enum.TextXAlignment.Left, 
			TextYAlignment = Enum.TextYAlignment.Top
		});
	end

	--[[ Module ]]--

	local console = {
		title = "Console",
		icon = "rbxassetid://15761117362"
	};

	function console:Initialize(directory: Instance)
		base = createUI();

		cloneref(game:GetService("LogService")).MessageOut:Connect(insertItem);

		return base;
	end

	framework.pages.console.console = console;
end

do
	--[[ Variables ]]--

	local internalUtils = framework.dependencies.utils.internal;
	local userSettings = framework.data.userSettings;
	local cache;

	local httpService = cloneref(game:GetService("HttpService"));
	local teleportService = cloneref(game:GetService("TeleportService"));
	local userInputService = cloneref(game:GetService("UserInputService"));

	local player = cloneref(game:GetService("Players")).LocalPlayer;
	local char, hum, root;

	local connections = {};
	local threads = {};

	--[[ Functions ]]--

	local function getFlagFromLink(link: string)
		local value = cache;
		for i, v in string.split(link, ".") do
			value = value[v];
		end
		return value;
	end

	local function registerCharacter(character: Instance)
		-- SPDM | Error prevention checks
		if not cache then
			cache = {}
		end
		
		if not cache.player then
			cache.player = {}
		end

		if not cache.player.walkSpeed then
			cache.player.walkSpeed = {}
		end

		if not cache.player.jumpPower then
			cache.player.jumpPower = {}
		end

		char, hum, root = character, character:WaitForChild("Humanoid", 5), character:WaitForChild("HumanoidRootPart", 5);
		if hum and root then
			if cache.player.walkSpeed.enabled and cache.player.walkSpeed.value then
				hum.WalkSpeed = cache.player.walkSpeed.value;
			end
			if cache.player.jumpPower.enabled and cache.player.jumpPower.value then
				hum.WalkSpeed = cache.player.jumpPower.value;
			end

			hum.Died:Connect(function()
				char, hum, root = nil, nil, nil;
			end);
		end
	end

	local function joinServer(searchPriority: string?, id: number?)
		local jobId = id;
		if jobId == nil then
			if searchPriority == "Best Ping" or searchPriority == "Random" then
				local servers = {};
				local res, cursor, count = nil, "", 0;
				repeat
					res = internalUtils:Request(string.format("https://games.roblox.com/v1/games/%d/servers/0?&excludeFullGames=true&cursor=%s", game.PlaceId, cursor));
					if res then
						for i, v in httpService:JSONDecode(res).data do
							if v.id ~= game.JobId then
								servers[#servers + 1] = v;
							end
						end
						cursor = res.nextPageCursor;
						count = count + 1;
					end
				until res == false or cursor == nil or count >= 10;
				if searchPriority == "Ping" then
					table.sort(servers, function(a, b)
						return a.ping < b.ping;
					end);
					jobId = servers[1] and servers[1].id;
				else
					jobId = servers[1] and servers[math.random(1, #servers)].id;
				end
			else
				local res = internalUtils:Request(string.format("https://games.roblox.com/v1/games/%d/servers/0?sortOrder=%d&excludeFullGames=true&limit=10", game.PlaceId, searchPriority == "Most Players" and 2 or 1));
				if res then
					for i, v in httpService:JSONDecode(res).data do
						if v.id ~= game.JobId then
							jobId = v.id;
							break;
						end
					end
				end
			end
		end
		if jobId then
			teleportService:TeleportToPlaceInstance(game.PlaceId, jobId);
		else
			internalUtils:Notify("No suitable servers found")
		end
	end

	--[[ Setup ]]--

	player.CharacterAdded:Connect(registerCharacter);

	--[[ Module ]]--

	local map = {
		{
			title = "Executor",
			items = { -- SPDM Team | Opening Mode Setting
				{
					title = "Opening Mode",
					linkedSetting = "executor.openingMode",
					optionType = "dropdown",
					items = { "Floating Icon", "Edge Swipe", "Invisible Edge Swipe" },
					value = "Floating Icon"
				},
				{ -- SPDM Team | Show Particles Setting
					title = "Show Floating Icon Particles",
					linkedSetting = "executor.showParticles",
					optionType = "toggle",
					state = true
				},
				{
					optionType = "separator"
				},
				{
					title = "Auto Execute",
					linkedSetting = "executor.autoExecute",
					optionType = "toggle",
					state = true
				},
				{
					title = "Auto Save Tabs",
					linkedSetting = "executor.autoSaveTabs",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if state == false and isfile and isfile("codexTabs.json") then
							delfile("codexTabs.json");
						end
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Unlock FPS",
					linkedSetting = "executor.fps.unlocked",
					optionType = "toggle",
					state = false,
					callback = function(state)
						setfpscap(state and (cache.executor.fps.vSync and getfpscap() or cache.executor.fps.value) or 60);
					end
				},
				{
					title = "V-Sync",
					linkedSetting = "executor.fps.vSync",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if cache.executor.fps.unlocked then
							setfpscap(state and getfpsmax() or cache.executor.fps.value);
						end
					end
				},
				{
					title = "FPS Value",
					linkedSetting = "executor.fps.value",
					optionType = "slider",
					min = 1,
					max = 999,
					float = 1,
					callback = function(value)
						if cache.executor.fps.unlocked and not cache.executor.fps.vSync then
							setfpscap(value);
						end
					end
				}
			}
		},
		{
			title = "Player",
			items = {
				{
					title = "WalkSpeed Enabled",
					linkedSetting = "player.walkSpeed.enabled",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if hum then
							hum.WalkSpeed = state and cache.player.walkSpeed.value or 16;
						end
					end
				},
				{
					title = "WalkSpeed Value",
					linkedSetting = "player.walkSpeed.value",
					optionType = "slider",
					min = 16,
					max = 500,
					float = 1,
					callback = function(value)
						if hum and cache.player.walkSpeed.enabled then
							hum.WalkSpeed = value;
						end
					end
				},
				{
					title = "JumpPower Enabled",
					linkedSetting = "player.jumpPower.enabled",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if hum then
							hum.JumpPower = state and cache.player.jumpPower.value or 16;
						end
					end
				},
				{
					title = "JumpPower Value",
					linkedSetting = "player.jumpPower.value",
					optionType = "slider",
					min = 50,
					max = 500,
					float = 1,
					callback = function(value)
						if hum and cache.player.jumpPower.enabled then
							hum.JumpPower = value;
						end
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Anti AFK",
					linkedSetting = "player.antiAfk",
					optionType = "toggle",
					state = false,
					callback = function(state)
						for i, v in getconnections(player.Idled) do
							if state then
								v:Disable();
							else
								v:Enable();
							end
						end
					end
				}
			}
		},
		{
			title = "Server Hopper",
			items = {
				{
					title = "Server Priority",
					linkedSetting = "serverHop.priority",
					optionType = "dropdown",
					items = { "Most Players", "Least Players", "Best Ping", "Random" }
				},
				{
					title = "Server Hop",
					optionType = "button",
					callback = function()
						joinServer(cache.serverHop.priority);
					end
				},
				{
					title = "Rejoin Current Server",
					optionType = "button",
					callback = function()
						joinServer(nil, game.JobId);
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Delayed Hop",
					linkedSetting = "serverHop.delayedHop",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if threads.delayedHop then
							task.cancel(threads.delayedHop);
							threads.delayedHop = nil;
						end
						if state then
							local init = tick();
							threads.delayedHop = task.spawn(function()
								local interval = 0;
								repeat task.wait(1)
									interval = tick() - init;
								until interval > cache.serverHop.delay * 60;
								joinServer(cache.serverHop.priority);
							end);
						end
					end
				},
				{
					title = "Delay (Minutes)",
					linkedSetting = "serverHop.delay",
					optionType = "slider",
					min = 1,
					max = 1440,
					float = 1
				}
			}
		}
	};

	--[[ Module ]]--

	local layoutMap = {
		map = map
	};

	function layoutMap:Initialize()
		cache = userSettings.cache;

		for i, v in self.map do
			for i2, v2 in v.items do
				if v2.optionType == "toggle" then
					v2.state = getFlagFromLink(v2.linkedSetting);
				elseif v2.optionType == "slider" then
					v2.value = getFlagFromLink(v2.linkedSetting);
				end
			end
		end

		if player.Character then
			task.spawn(registerCharacter, player.Character);
		end
	end

	framework.pages.exploitSettings.layoutMap = layoutMap;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;

	--[[ Functions ]]--

	local function createSeparator(parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "separator", 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 14)
		}, {
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "line", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(1, 0, 0, 2)
			}, {
				instanceUtils:Create("UIGradient", { 
					Name = "gradient", 
					Transparency = NumberSequence.new({ 
						NumberSequenceKeypoint.new(0, 1), 
						NumberSequenceKeypoint.new(0.175, 0), 
						NumberSequenceKeypoint.new(0.825, 0), 
						NumberSequenceKeypoint.new(1, 1)
					})
				})
			})
		});
	end

	--[[ Module ]]--

	local separator = {};
	separator.__index = separator;

	function separator.new(separatorData: {any}, parent: Instance)
		return setmetatable({
			instance = createSeparator(parent)
		}, separator);
	end

	framework.pages.exploitSettings.optionTypes.separator = separator;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Functions ]]--

	local function createToggle(title: string, parent: Instance): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent,
			Size = UDim2.new(1, 0, 0, 36), 
			Text = "", 
			TextColor3 = Color3.fromHex("000000"), 
			TextSize = 14
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "indicator", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				Size = UDim2.new(0, 42, 0, 24)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(1, 0), 
					Name = "corner"
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke", 
					Thickness = 2
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "dot", 
					Position = UDim2.new(0.5, -9, 0.5, 0), 
					Size = UDim2.new(0, 18, 0, 18)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					})
				})
			})
		});
	end

	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end

	--[[ Module ]]--

	local toggle = {};
	toggle.__index = toggle;

	function toggle.new(toggleData: {any}, parent: Instance)
		local newToggle = setmetatable({
			instance = createToggle(toggleData.title or "Unnamed Toggle", parent),
			state = toggleData.state or false,
			linkedSetting = toggleData.linkedSetting,
			callback = toggleData.callback
		}, toggle);

		local determiningDict, determiningKey = getDeterminingFactors(newToggle.linkedSetting);

		userSettings:GetPropertyChangedSignal(newToggle.linkedSetting):Connect(function(state: boolean)
			newToggle:Set(state);
		end);

		newToggle.instance.MouseButton1Click:Connect(function()
			determiningDict[determiningKey] = not determiningDict[determiningKey];
		end);

		if newToggle.state then
			newToggle:Set(true);
		end

		return newToggle;
	end

	function toggle:Set(state: boolean)
		instanceUtils:Tween(self.instance.indicator.dot, 0.2, {
			BackgroundColor3 = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a"),
			Position = UDim2.new(0.5, state and 9 or -9, 0.5, 0)
		});
		instanceUtils:Tween(self.instance.indicator.stroke, 0.2, {
			Color = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a")
		});
		if self.callback then
			self.callback(state);
		end
	end

	framework.pages.exploitSettings.optionTypes.toggle = toggle;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Functions ]]--

	local function createButton(title: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 36)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 1, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("eb4545"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "click", 
				Position = UDim2.new(1, 0, 0.5, 0), 
				Size = UDim2.new(0, 0, 0, 32), 
				Text = "Click Here!", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			})
		});
	end

	--[[ Module ]]--

	local button = {};
	button.__index = button;

	function button.new(buttonData: {any}, parent: Instance)
		local newButton = setmetatable({
			instance = createButton(buttonData.title or "Unnamed Button", parent),
			callback = buttonData.callback
		}, button);

		newButton.instance.click.MouseButton1Click:Connect(function()
			if newButton.callback then
				newButton.callback();
			end
		end);

		return newButton;
	end

	framework.pages.exploitSettings.optionTypes.button = button;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	local userInputService = cloneref(game:GetService("UserInputService"));

	--[[ Functions ]]--

	local function createSlider(title: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 60)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "input", 
				PlaceholderColor3 = Color3.fromHex("b2b2b2"), 
				PlaceholderText = "...", 
				Position = UDim2.new(1, 0, 0, 0), 
				Size = UDim2.new(0, 0, 0, 36), 
				Text = "", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "bar", 
				Position = UDim2.new(0.5, 0, 1, -8), 
				Size = UDim2.new(1, -12, 0, 4)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(1, 0), 
					Name = "corner"
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(0, 0.5), 
					BackgroundColor3 = Color3.fromHex("eb4545"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "indicator", 
					Position = UDim2.new(0, 0, 0.5, 0), 
					Size = UDim2.new(0, 0, 1, 0)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					}),
					instanceUtils:Create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("eb4545"), 
						BorderColor3 = Color3.fromHex("000000"), 
						BorderSizePixel = 0, 
						Name = "dot", 
						Position = UDim2.new(1, 0, 0.5, 0), 
						Size = UDim2.new(0, 12, 0, 12)
					}, {
						instanceUtils:Create("UICorner", { 
							CornerRadius = UDim.new(1, 0), 
							Name = "corner"
						})
					})
				})
			})
		});
	end

	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end

	local function getRoundedValue(input: number, float: number): number
		local bracket = 1 / float;
		return math.round(input * bracket) / bracket;
	end

	--[[ Module ]]--

	local slider = {
		isDragging = false
	};
	slider.__index = slider;

	function slider.new(sliderData: {any}, parent: Instance)
		local newSlider = setmetatable({
			instance = createSlider(sliderData.title or "Unnamed Slider", parent),
			value = sliderData.value or sliderData.min,
			min = sliderData.min,
			max = sliderData.max,
			float = sliderData.float,
			linkedSetting = sliderData.linkedSetting,
			callback = sliderData.callback
		}, slider);

		local determiningDict, determiningKey = getDeterminingFactors(newSlider.linkedSetting);
		local isDragging = false;

		userSettings:GetPropertyChangedSignal(newSlider.linkedSetting):Connect(function(value: number)
			newSlider:Set(value);
		end);

		newSlider.instance.InputBegan:Connect(function(input)
			if slider.isDragging == false and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
				slider.isDragging, isDragging = true, true;
				local endedConn; endedConn = input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						endedConn:Disconnect();
						slider.isDragging, isDragging = false, false;
					end
				end);
			end
		end)

		userInputService.InputChanged:Connect(function(input)
			if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local value = newSlider.min + ((newSlider.max - newSlider.min) * ((input.Position.X - newSlider.instance.bar.AbsolutePosition.X) / newSlider.instance.bar.AbsoluteSize.X));
				determiningDict[determiningKey] = math.clamp(getRoundedValue(value, newSlider.float), newSlider.min, newSlider.max);
			end
		end);

		newSlider.instance.input.FocusLost:Connect(function()
			local value = tonumber(newSlider.instance.input.Text);
			if value then
				determiningDict[determiningKey] = math.clamp(getRoundedValue(value, newSlider.float), newSlider.min, newSlider.max);
			end
		end);

		newSlider:Set(newSlider.value);

		return newSlider;
	end

	function slider:Set(value: number)
		instanceUtils:Tween(self.instance.bar.indicator, 0.2, {
			Size = UDim2.new((value - self.min) / (self.max - self.min), 0, 0.5, 0)
		});
		self.instance.input.Text = tostring(value);
		if self.callback then
			self.callback(value);
		end
	end

	framework.pages.exploitSettings.optionTypes.slider = slider;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local dropdownPopup = framework.popups.dropdown;
	local popups = framework.popups.popups;

	local textService = cloneref(game:GetService("TextService"));

	--[[ Functions ]]--

	local function createDropdown(title: string, default: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			Active = true, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Selectable = true, 
			Size = UDim2.new(1, 0, 0, 36)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextButton", { 
				Active = false, 
				AnchorPoint = Vector2.new(1, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "indicator", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				Selectable = false, 
				Size = UDim2.new(0, 52 + textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
					Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
					Text = default,
					Size = 14,
					Width = math.huge
				})).X, 0, 32), 
				Text = ""
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke", 
					Thickness = 2
				}),
				instanceUtils:Create("TextLabel", { 
					AnchorPoint = Vector2.new(0, 0.5), 
					AutomaticSize = Enum.AutomaticSize.X, 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "selected", 
					Position = UDim2.new(0, 8, 0.5, 0), 
					Size = UDim2.new(0, 0, 1, 0), 
					Text = default, 
					TextColor3 = Color3.fromHex("9fa4ba"), 
					TextSize = 14,  
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(1, 0.5), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Image = "rbxassetid://14967733915", 
					ImageColor3 = Color3.fromHex("9fa4ba"), 
					Name = "icon", 
					Position = UDim2.new(1, -8, 0.5, 0), 
					Size = UDim2.new(0, 24, 0, 24)
				})
			})
		});
	end

	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end

	--[[ Module ]]--

	local dropdown = {};
	dropdown.__index = dropdown;

	function dropdown.new(dropData: {any}, parent: Instance)
		local newDropdown = setmetatable({
			instance = createDropdown(dropData.title or "Unnamed Dropdown", dropData.value, parent),
			title = dropData.title or "Unnamed Dropdown",
			items = dropData.items,
			value = dropData.value or dropData.items[1],
			linkedSetting = dropData.linkedSetting,
			callback = dropData.callback
		}, dropdown);

		local determiningDict, determiningKey = getDeterminingFactors(newDropdown.linkedSetting);

		userSettings:GetPropertyChangedSignal(newDropdown.linkedSetting):Connect(function(value: number)
			newDropdown:Set(value);
		end);

		newDropdown.instance.indicator.MouseButton1Click:Connect(function()
			if dropdownPopup.selectedDropdown == dropData.title then
				popups:Hide("dropdown");
			else
				popups:Show("dropdown", newDropdown, newDropdown.instance.indicator);
				newDropdown.selectionChangedConnection = dropdownPopup.onSelectionChanged:Connect(function(value: string)
					determiningDict[determiningKey] = value;
					task.delay(0.3, function () popups:Hide("dropdown"); end); -- SPDM Team | Auto-close contextmenu
				end);
			end
		end);

		dropdownPopup.onDropdownChanged:Connect(function(value: string?)
			if value and value ~= dropData.title and newDropdown.selectionChangedConnection then
				newDropdown.selectionChangedConnection:Disconnect();
			end
		end);

		newDropdown:Set(newDropdown.value);

		return newDropdown;
	end

	function dropdown:Set(value: string)
		self.value = value;
		self.instance.indicator.selected.Text = value;
		self.instance.indicator.Size = UDim2.new(0, 52 + textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
			Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
			Text = value,
			Size = 14,
			Width = math.huge
		})).X, 0, 32);
		if self.callback then
			self.callback(value);
		end
	end

	framework.pages.exploitSettings.optionTypes.dropdown = dropdown;
end

do
	--[[ Variables ]]--

	local textButton = framework.components.base.textButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local layoutMap = framework.pages.exploitSettings.layoutMap;

	local map = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "exploitSettings", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("Folder", { 
				Name = "tabs"
			})
		});
	end

	local function createFrame(title: string, directory: Instance)
		return instanceUtils:Create("ScrollingFrame", { 
			AnchorPoint = Vector2.new(0.5, 1), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			CanvasSize = UDim2.new(0, 0, 0, 130), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = directory,
			Position = UDim2.new(0.5, 0, 1, 0), 
			ScrollBarThickness = 2, 
			Size = UDim2.new(1, -40, 1, -50),
			Visible = false
		}, {
			instanceUtils:Create("UIListLayout", { 
				Name = "list", 
				Padding = UDim.new(0, 5), 
				SortOrder = Enum.SortOrder.LayoutOrder
			})
		});
	end

	--[[ Module ]]--

	local exploitSettings = {
		title = "Settings",
		icon = "rbxassetid://11558196447",
		overwritePosition = UDim2.new(0, 0, 1, -66),
		selected = nil
	};

	function exploitSettings:Initialize(directory: Instance)
		self.base = createUI(directory);

		layoutMap:Initialize();
		for i, v in layoutMap.map do
			self:Add(v);
		end

		return self.base;
	end

	function exploitSettings:Add(tab: {any})
		local btn = textButton({
			BackgroundColor3 = Color3.fromRGB(58, 58, 74),
			Name = stringUtils:ConvertToCamelCase(tab.title),
			Text = tab.title,
			TextColor3 = Color3.fromRGB(159, 164, 186),
			Parent = self.base.tabButtons
		});

		local frame = createFrame(tab.title, self.base.tabs);

		btn.MouseButton1Click:Connect(function()
			self:Select(tab);
		end)

		map[tab] = {
			btn = btn,
			frame = frame
		};

		for i, v in tab.items do
			framework["pages.exploitSettings.optionTypes." .. v.optionType].new(v, frame);
		end

		if self.selected == nil then
			self:Select(tab);
		end
	end

	function exploitSettings:Select(tab: {any})
		if self.selected then
			if self.selected == tab then
				return;
			end
			local oldMap = map[self.selected];
			oldMap.frame.Visible = false;
			instanceUtils:Tween(oldMap.btn, 0.2, {
				BackgroundColor3 = Color3.fromRGB(58, 58, 74),
				TextColor3 = Color3.fromRGB(159, 164, 186)
			});
		end
		self.selected = tab;
		local newMap = map[tab];
		newMap.frame.Visible = true;
		instanceUtils:Tween(newMap.btn, 0.2, {
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			TextColor3 = Color3.fromRGB(255, 255, 255)
		});
	end

	framework.pages.exploitSettings.exploitSettings = exploitSettings;
end

do
	--[[ Variables ]]--

	local textLabel = framework.components.base.textLabel;
	local internalSettings = framework.data.internalSettings;
	local instanceUtils = framework.dependencies.utils.instance;

	--[[ Functions ]]--

	local function formatChangelog()
		local str = "";
		for i, v in internalSettings.data.changelog do
			str ..= string.format("%s<font color=\"#eb4545\">[%s]</font>\n\n", str == "" and "" or "\n\n", DateTime.fromIsoDate(v.stamp):FormatLocalTime("ll", "en-us"));
			for i2, v2 in v.data do
				str ..= "- " .. v2; -- "â€¢ " ..
				if i2 < #v.data then
					str ..= "\n";
				end
			end
		end
		return str;
	end

	--[[ Module ]]--

	framework.pages.startup.changelog = (function()
		return instanceUtils:Create("Frame", {
			BackgroundTransparency = 1,
			Name = "changelog",
			Position = UDim2.new(0.5, 12, 0.2, 46),
			Size = UDim2.new(0.2, 120, 0.5, 0)
		}, {
			textLabel({
				Text = "Changelog",
				TextColor3 = Color3.fromRGB(159, 164, 186),
				TextSize = 20
			}),
			instanceUtils:Create("ScrollingFrame", {
				AnchorPoint = Vector2.new(0.5, 1),
				AutomaticCanvasSize = Enum.AutomaticSize.XY,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				CanvasSize = UDim2.new(),
				HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
				Name = "container",
				Position = UDim2.new(0.5, 0, 1, 0),
				ScrollBarImageColor3 = Color3.fromRGB(15, 15, 21),
				ScrollBarThickness = 4,
				Size = UDim2.new(1, -16, 1, -36),
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				textLabel({
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
					LineHeight = 1.1,
					RichText = true,
					Text = formatChangelog(),
					TextColor3 = Color3.fromRGB(159, 164, 186),
					TextTruncate = Enum.TextTruncate.None,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Top
				})
			})
		});
	end);
end

do
	--[[ Variables ]]--

	local textLabel = framework.components.base.textLabel;
	local instanceUtils = framework.dependencies.utils.instance;

	local stepCount = 0;

	--[[ Module ]]--

	local startupStep = {};
	startupStep.__index = startupStep;

	function startupStep.new(startText: string, finishText: string, parent: Instance): {any}
		stepCount += 1;

		local frame = instanceUtils:Create("Frame", {
			AnchorPoint = Vector2.new(0.5, 0),
			BackgroundTransparency = 1,
			Name = stepCount,
			Parent = parent,
			Size = UDim2.new(1, 0, 0, 22)
		}, {
			instanceUtils:Create("ImageLabel", {
				BackgroundTransparency = 1,
				Image = "rbxassetid://14840862230",
				ImageColor3 = Color3.fromRGB(235, 69, 69),
				ImageTransparency = 1,
				Name = "icon",
				Size = UDim2.new(0, 22, 0, 22)
			}),
			textLabel({
				AnchorPoint = Vector2.new(0, 0.5),
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
				Name = "note",
				Position = UDim2.new(0, 34, 0.5, 0),
				Text = startText,
				TextColor3 = Color3.fromRGB(159, 164, 186),
				TextTransparency = 1
			})
		});

		return setmetatable({
			frame = frame,
			finishText = finishText,
			isFinished = false
		}, startupStep);
	end

	function startupStep:Start(): {any}
		self.tween = instanceUtils:Tween(self.frame.icon, 1, {
			Rotation = 360
		}, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, math.huge);

		instanceUtils:Tween(self.frame.icon, 0.4, {
			ImageTransparency = 0
		});

		instanceUtils:Tween(self.frame.note, 0.4, {
			TextTransparency = 0
		}).Completed:Wait();
		return self;
	end

	function startupStep:Complete(overrideText: string?)
		if self.isFinished then
			return;
		end	
		self.isFinished = true;

		local icon = self.frame.icon;
		local note = self.frame.note;

		instanceUtils:Tween(note, 0.4, {
			TextTransparency = 1
		}).Completed:Connect(function()
			note.Text = overrideText or self.finishText;
			instanceUtils:Tween(note, 0.4, {
				TextTransparency = 0
			});
		end);

		instanceUtils:Tween(icon, 0.4, {
			ImageTransparency = 1
		}).Completed:Wait();
		self.tween:Cancel();
		icon.Image = "rbxassetid://14840859703";
		icon.Rotation = 0;
		instanceUtils:Tween(icon, 0.4, {
			ImageTransparency = 0
		});
	end

	framework.pages.startup.startupStep = startupStep;
end

do
	--[[ Variables ]]--

	local background = framework.components.base.background;
	local textBox = framework.components.base.textBox;
	local textButton = framework.components.base.textButton;
	local textLabel = framework.components.base.textLabel;
	local internalSettings = framework.data.internalSettings;
	local userSettings = framework.data.userSettings;
	local savedScripts = framework.data.savedScripts;
	local tabSystem = framework.data.tabSystem;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local changelog = framework.pages.startup.changelog;
	local startupStep = framework.pages.startup.startupStep;

	local httpService = cloneref(game:GetService("HttpService"));

	local completionSignal;
	local ui;

	--[[ Functions ]]--

	local function checkWhitelist()
		if getgenv then
			return internalUtils:Request("https://api.codex.lol/v1/auth/authenticate", "POST") ~= false;
		end
		return false;
	end

	local function createBasis(directory: Instance)
		local gui = instanceUtils:Create("ScreenGui", {
			Enabled = false,
			IgnoreGuiInset = true,
			Name = "gui",
			ResetOnSpawn = false,
			ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets, -- SPDM Team | Notch-aware UI
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		}, {
			instanceUtils:Create("Frame", {
				AnchorPoint = Vector2.new(0.5, 0.5),
				BackgroundColor3 = Color3.fromRGB(21, 21, 29),
				BackgroundTransparency = 1,
				Name = "background",
				Position = UDim2.new(0.5, 0, 0.5, 0),
				Size = UDim2.new(1, 0, 1, 0),
				ZIndex = 0
			}),
			instanceUtils:Create("Folder", {
				Name = "tabs"
			})
		});

		local popups = instanceUtils:Create("ScreenGui", {
			Enabled = false,
			IgnoreGuiInset = true,
			Name = "popups",
			ResetOnSpawn = false,
			ScreenInsets = Enum.ScreenInsets.None,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		});

		gui.Parent = directory;
		popups.Parent = directory;

		return {
			gui = gui,
			popups = popups
		};
	end

	local function doSetup()
		userSettings:Initialize();
		tabSystem:Initialize();
		savedScripts:Initialize();

		if userSettings.cache.executor.autoExecute and isarceusfolder and listarceusfiles and readarceusfile then
			if isarceusfolder("Autoexec") then
				for i, v in listarceusfiles("Autoexec") do
					executecode(readarceusfile(v));
				end
			elseif rconsolewarn then
				rconsolewarn("Autoexecution folder has not been found! Make sure to garant storage permissions.")
			end
		end
	end

	local function changeTab(isMainTab: boolean)
		ui.whitelist.Visible = isMainTab;
		ui.changelog.Visible = isMainTab;
		ui.specialUserInput.Visible = not isMainTab;
		ui.note.Text = isMainTab and "Please complete the whitelist to gain access to Codex" or "Please enter your key to activate your Premium License";
	end

	local function createUI(directory: Instance): ScreenGui
		local closed = false
		
		ui = instanceUtils:Create("ScreenGui", {
			IgnoreGuiInset = true,
			Name = "startup",
			Parent = directory,
			ResetOnSpawn = false,
			ScreenInsets = Enum.ScreenInsets.None,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		}, {
			background(),
			instanceUtils:Create("ImageButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Image = "rbxassetid://14899492196", 
				Name = "close", 
				Position = UDim2.new(1, -24, 0.2, -20), 
				Size = UDim2.new(0, 28, 0, 28),
				MouseButton1Click = function()
					closed = true
					completionSignal:Fire(false);
				end
			}),
			textLabel({
				AnchorPoint = Vector2.new(0.5, 0.5),
				Name = "title",
				Position = UDim2.new(0.5, 0, 0.2, -20),
				Text = "Codex " .. (isiosdevice() and "iOS" or "Android"),
				TextSize = 24
			}),
			textLabel({
				AnchorPoint = Vector2.new(0.5, 0.5),
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
				Name = "note",
				Position = UDim2.new(0.5, 0, 0.2, 2),
				Text = "Please complete the whitelist to gain access to Codex",
				TextColor3 = Color3.fromRGB(159, 164, 186)
			}),
			instanceUtils:Create("Frame", {
				AnchorPoint = Vector2.new(1, 0),
				BackgroundTransparency = 1,
				Name = "whitelist",
				Position = UDim2.new(0.5, -12, 0.2, 46),
				Size = UDim2.new(0.2, 120, 0.5, 0)
			}, {
				instanceUtils:Create("Frame", {
					AnchorPoint = Vector2.new(0.5, 0),
					BackgroundTransparency = 1,
					Name = "process",
					Position = UDim2.new(0.5, 0, 0, 0),
					Size = UDim2.new(1, 0, 1, -36)
				}, {
					instanceUtils:Create("UIListLayout", {
						Name = "list",
						Padding = UDim.new(0, 6),
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				}),
				textButton({
					AnchorPoint = Vector2.new(0.5, 1),
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						if setclipboard then
							local data = internalUtils:Request("https://api.codex.lol/v1/auth/session", "POST");
							if data then
								setclipboard("https://mobile.codex.lol?token=" .. httpService:JSONDecode(data).token);
								internalUtils:Notify("Whitelist link has been set to your clipboard.")
								return
							end
						end
						internalUtils:Notify("Unable to retrieve whitelist key, please try again later.")
					end,
					Name = "copyWhitelistLink",
					Position = UDim2.new(0.5, 0, 1, -28),
					Size = UDim2.new(1, 0, 0, 32),
					Text = "Copy Whitelist Link"
				}),
				textButton({ 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					MouseButton1Click = function()
						changeTab(false);
					end,
					Name = "premiumUser", 
					Position = UDim2.new(0.5, 0, 1, 0), 
					RichText = true, 
					Size = UDim2.new(1, 0, 0, 20), 
					Text = "Premium User?  <font color=\"#eb4545\">Click Here!</font>", 
					TextColor3 = Color3.fromHex("9fa4ba")
				}),
				textButton({ -- SPDM Team | Buy Premium Button
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						if setclipboard then
							setclipboard("https://codexseller.mysellix.io/");
						end
						internalUtils:Notify("Premium License purchase link has been set to your clipboard.")
					end,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					Name = "premiumUser", 
					Position = UDim2.new(0.5, 0, 1, 28), 
					RichText = true, 
					Size = UDim2.new(1, 0, 0, 20), 
					Text = "Or <font color=\"#eb4545\">Buy Premium!</font>", 
					TextColor3 = Color3.fromHex("9fa4ba")
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "specialUserInput", 
				Position = UDim2.new(0.5, 0, 0.2, 46), 
				Size = UDim2.new(0.4, 264, 0.5, 0), 
				Visible = false
			}, {
				textButton({
					AnchorPoint = Vector2.new(1, 0), 
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						changeTab(true);
					end,
					Name = "cancel", 
					Position = UDim2.new(0.5, -6, 0.5, 6), 
					Size = UDim2.new(0, 160, 0, 32), 
					Text = "Cancel"
				}),
				textButton({
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						local key = ui.specialUserInput.key.Text;
						if #key > 0 then
							local res = internalUtils:Request("https://api.codex.lol/v1/auth/claim", "POST", {
								["Content-Type"] = "application/json"
							}, {
								key = key
							});
							if res then
								changeTab(true);
								return;
							end
						end
						internalUtils:Notify("Invalid key.")
					end,
					Name = "register", 
					Position = UDim2.new(0.5, 6, 0.5, 6), 
					Size = UDim2.new(0, 160, 0, 32), 
					Text = "Register", 
				}),
				textBox({
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					Name = "key", 
					PlaceholderText = "Key...", 
					Position = UDim2.new(0.5, 0, 0.5, -6),
					Size = UDim2.new(1, -62, 0, 32)
				})
			})
		});

		task.spawn(function()
			local dataStep = startupStep.new("Fetching Codex Data...", "Data Fetched!", ui.whitelist.process):Start();
			internalSettings:Initialize();

			changelog().Parent = ui;
			local currentVersion = identifyexecutor and select(2, identifyexecutor()) or "Invalid Version";
			if not (cloneref(game:GetService("RunService")):IsStudio() or internalUtils:AreVersionsAlike(currentVersion, isiosdevice() and internalSettings.data.iosVersion or internalSettings.data.androidVersion)) then
				dataStep:Complete("Please update Codex.");
				return;
			end
			dataStep:Complete();

			local whitelistStep = startupStep.new("Waiting for you to Whitelist...", "Whitelisted!", ui.whitelist.process):Start();
			local isStudio = cloneref(game:GetService("RunService")):IsStudio()
			local checked = false
			
			repeat
				if checked then
					task.wait(3);
				end
				
				checked = true
			until checkWhitelist() or closed or isStudio
			if closed then
				return
			end
			
			whitelistStep:Complete();
			local setupStep = startupStep.new("Setting Up...", "Setup Completed!", ui.whitelist.process):Start();
			doSetup();
			setupStep:Complete();

			local loadUIStep = startupStep.new("Loading UI...", "Loaded!", ui.whitelist.process):Start();
			local basis = createBasis(directory);
			loadUIStep:Complete();
			task.wait(1);
			completionSignal:Fire(true, basis);
		end);

		return ui;
	end

	--[[ Module ]]--

	framework.pages.startup.startup = (function(directory: Instance, signal: {any}): ScreenGui
		completionSignal = signal;

		if checkWhitelist() then
			doSetup();
			signal:Fire(true, createBasis(directory));
			return;
		end

		return createUI(directory);
	end);
end

do
	--[[ Variables ]]--

	local navbarButton = framework.components.navbarButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local mathsUtils = framework.dependencies.utils.maths;
	local codexEnum = framework.dependencies.codexEnum;
	local internalUtils = framework.dependencies.utils.internal;
	local userSettings = framework.data.userSettings;

	local userInputService = cloneref(game:GetService("UserInputService"));
	local tweenService = cloneref(game:GetService("TweenService"));
	local httpService = cloneref(game:GetService("HttpService"));

	local navbar = {
		state = "hidden"
	};

	local map = {};
	local selected;

	--[[ Functions ]]--

	local function setupDragBar(dragBar: TextButton, indent: NumberValue)
		local isDragging = false;
		local startPosition, startOffset;

		userInputService.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and mathsUtils:IsWithin2DBounds(input.Position, dragBar.AbsolutePosition, dragBar.AbsolutePosition + dragBar.AbsoluteSize) then
				isDragging = true;
				startPosition, startOffset = input.Position.X, input.Position.X - dragBar.AbsolutePosition.X;
				local endedConn; endedConn = input.Changed:Connect(function(property)
					if input.UserInputState == Enum.UserInputState.End then
						isDragging = false;
						endedConn:Disconnect();
						navbar:SetState(codexEnum.NavbarState[input.Position.X > 140 and "Full" or input.Position.X > 40 and "Partial" or "Hidden"]);
					end
				end);
			end
		end);

		userInputService.InputChanged:Connect(function(input)
			if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local offset = math.clamp(input.Position.X - startOffset, 0, 260)

				instanceUtils:Tween(indent, 0.06, {
					Value = offset
				});

				-- Indent pages
				if selected and map[selected] then
					instanceUtils:Tween(map[selected], 0.25, {
						Position = UDim2.new(0, offset, 1, 0);
						Size = UDim2.new(1, -offset, 1, 0);
					});
				end
			end
		end);
	end

	local function createNavbar(gui: ScreenGui): Instance


		local bar = instanceUtils:Create("Frame", {
			BackgroundTransparency = 1,
			Name = "navbar",
			Parent = gui,
			Size = UDim2.new(0, 0, 1, 0),
			ZIndex = 2
		}, {
			instanceUtils:Create("TextButton", { -- SPDM Team | Floating Icon
				AnchorPoint = Vector2.new(0.5, 0.5),
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BackgroundTransparency = .25,
				BorderSizePixel = 0,
				Draggable = true,
				Name = "floatingIcon",
				Position =  UDim2.new(0, game.Workspace.CurrentCamera.ViewportSize.X*0.8, 0.7, 0),
				Size = UDim2.new(0, 50, 0, 50),
				Text = "",
				Visible = false,
				ZIndex = 2
			},
			{
				instanceUtils:Create("UICorner", {
					CornerRadius = UDim.new(1, 0),
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", {
					PaddingBottom = UDim.new(.15, 0),
					PaddingTop = UDim.new(.15, 0),
					PaddingLeft = UDim.new(.15, 0),
					PaddingRight = UDim.new(.15, 0),
					Name = "UIPadding"
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11558559086", 
					Name = "codexIcon2", 
					Position = UDim2.new(0.5, 0 ,0.5, 0), 
					Size = UDim2.new(1,0,1,0),
					ZIndex = 2
				})
			}),
			instanceUtils:Create("NumberValue", {
				Name = "indent",
				Value = 0
			}),
			instanceUtils:Create("TextButton", {
				BackgroundTransparency = 1,
				Name = "dragBar",
				Position = UDim2.new(1, 0, 0, 0),
				Size = UDim2.new(0, 20, 1, 0),
				Text = "",
				ZIndex = 2
			},
			{
				instanceUtils:Create("Frame", {
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 0.8,
					BorderSizePixel = 0,
					Name = "indicator",
					Position = UDim2.new(0.5, 0, 0.5, 0),
					Size = UDim2.new(0, 2, 0, 80),
					ZIndex = 2
				}, {
					instanceUtils:Create("UICorner", {
						CornerRadius = UDim.new(1, 0),
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("Frame", { 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderSizePixel = 0, 
				ClipsDescendants = true, 
				Name = "main", 
				Size = UDim2.new(1, 0, 1, 0),
				ZIndex = 2
			}, {
				instanceUtils:Create("ImageLabel", { 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11558559086", 
					Name = "codexIcon", 
					Position = UDim2.new(0, 20, 0, 30), 
					Size = UDim2.new(0, 36, 0, 36),
					ZIndex = 2
				}),
				instanceUtils:Create("TextLabel", { 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "title", 
					Position = UDim2.new(0, 78, 0, 38), 
					Text = "Codex " .. (isiosdevice() and "iOS" or "Android"),
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 1,
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top,
					ZIndex = 2
				}),
				instanceUtils:Create("TextLabel", { 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size12, 
					Name = "poweredBy", 
					Position = UDim2.new(0, 78, 0, 59), 
					Text = "Powered By SPDM Team", 
					TextColor3 = Color3.fromHex("717176"), 
					TextSize = 12, 
					TextTransparency = 1, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top,
					ZIndex = 2
				}),
				instanceUtils:Create("Frame", { 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Name = "container", 
					Size = UDim2.new(1, 0, 1, 0),
					ZIndex = 2
				}, {
					instanceUtils:Create("UIListLayout", { 
						HorizontalAlignment = Enum.HorizontalAlignment.Center, 
						Name = "list", 
						SortOrder = Enum.SortOrder.LayoutOrder, 
						VerticalAlignment = Enum.VerticalAlignment.Center
					})
				})
			})
		});
		
		-- SPDM Team | Streak & Expiring Timer
		local function fetchData()
			local data = {
				expiry = 0,
				streak = 0
			}
			
			local response = internalUtils:Request("https://api.codex.lol/v1/auth/authenticate", "POST")
			if response then
				local success, err = pcall(function()
					data = httpService:JSONDecode(response)
				end)
			elseif cloneref(game:GetService("RunService")):IsStudio() then
				data = {
					expiry = os.time()*1000+1200000,
					streak = 24
				}
			end

			return data.expiry / 1000, data.streak;
		end

		local function updateText()
			local expiryTime, streak = fetchData()
			local keyless = false
			
			local function getTimeLeft()
				return expiryTime - os.time()
			end

			local timeLeft = getTimeLeft()
			if timeLeft <= 0 then
				keyless = true
			end

			local function updateFrequency()
				if timeLeft > 86400 then
					return 3600
				elseif timeLeft > 3600 then
					return 60  
				else return 1
				end
			end

			local function formatTimeLeft()
				if timeLeft <= 0 then
					return keyless and "∞" or "Expired"
				elseif timeLeft < 60 then
					return string.format("%ds", timeLeft)
				else
					local days = math.floor(timeLeft / 86400)
					local hours = math.floor((timeLeft % 86400) / 3600)
					local minutes = math.floor((timeLeft % 3600) / 60)
					local seconds = timeLeft % 60

					local timeStr = ""
					if days > 0 then
						timeStr = string.format("%dd ", days)
					end
					if hours > 0 then
						timeStr ..= string.format("%dh ", hours)
					end
					if minutes > 0 or hours > 0 or days > 0 then
						timeStr ..= string.format("%dmin", minutes)
					end
					if days == 0 and hours == 0 then
						timeStr ..= string.format(" %ds", seconds)
					end
					return timeStr
				end
			end

			-- SPDM Team | Credits
			local textLabel = bar.main.poweredBy;
			local isAnimating = false;

			local function createFadeTween(object, goal, duration, easingStyle, easingDirection)
				local tweenInfo = TweenInfo.new(duration, easingStyle, easingDirection)
				local tween = tweenService:Create(object, tweenInfo, goal)
				return tween
			end

			local function updateFunction()
				if not isAnimating then
					timeLeft = getTimeLeft()
					local formattedTimeLeft = formatTimeLeft()
					local streakText = string.format("🔥 %d\t•\t🕓 %s", streak, formattedTimeLeft)
					textLabel.Text = streakText
				end
			end
			
			local function displayPoweredBySPDM()
				if timeLeft >= 0 and timeLeft <20 then return end; 
				isAnimating = true
				local originalText = textLabel.Text

				local fadeIn = createFadeTween(textLabel, {TextTransparency = 0}, 0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
				local fadeOut = createFadeTween(textLabel, {TextTransparency = 1}, 0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

				fadeOut:Play()
				fadeOut.Completed:Wait()
				textLabel.Text = "Powered By SPDM Team"
				fadeIn:Play()
				fadeIn.Completed:Wait()

				wait(2)

				fadeOut:Play()
				fadeOut.Completed:Wait()


				isAnimating = false
				updateFunction()
				fadeIn:Play()
				fadeIn.Completed:Wait()

			end
			


			updateFunction()

			local freq = updateFrequency()
			if freq then
				task.spawn(function()
					while getTimeLeft() > 0 do
						wait(freq)
						updateFunction()
					end
				end)
			end
			
			task.spawn(function()
				while true do
					wait(math.random(10, 20))
					displayPoweredBySPDM()
				end
			end)
		end

		updateText()
		

		-- SPDM Team | Floating Icon
		arceus_libs.input.handleCustomDrag(bar.floatingIcon)
		arceus_libs.buttons.holdable(bar.floatingIcon).ShortClick.Event:Connect(function()
			if userSettings.cache.executor.showParticles then
				local ScreenGui = bar.Parent
				local particleCount = 30
				
				local mainColors = {
					Color3.fromRGB(219, 0, 0),    -- #DB0000
					Color3.fromRGB(219, 27, 27),  -- #DB1B1B
					Color3.fromRGB(221, 71, 71),  -- #DD4747
					Color3.fromRGB(226, 111, 111),-- #E26F6F 
					Color3.fromRGB(21, 21, 29)    -- #15151D
				}
				
				local function getRandomMainColorWithVariation()
					local randomIndex = math.random(1, #mainColors)
					return mainColors[randomIndex]
				end

				local function createAndAnimateParticle()
					local particle = Instance.new("Frame")
					local size = math.random(5, 15)
					particle.Size = UDim2.new(0, size, 0, size)
					particle.BackgroundColor3 = getRandomMainColorWithVariation()
					particle.Parent = ScreenGui

					local uiCorner = Instance.new("UICorner")
					uiCorner.CornerRadius = UDim.new(0.5, 0)
					uiCorner.Parent = particle

					local radius = bar.floatingIcon.Size.X.Offset / 2
					local theta = math.random() * 2 * math.pi
					local r = radius * math.sqrt(math.random())
					local offsetX = r * math.cos(theta)
					local offsetY = r * math.sin(theta)

					local iconCenter = bar.floatingIcon.AbsolutePosition + bar.floatingIcon.AbsoluteSize / 2
					local newPositionX = iconCenter.X + offsetX - (particle.Size.X.Offset / 2) - ScreenGui.AbsolutePosition.X
					local newPositionY = iconCenter.Y + offsetY - (particle.Size.Y.Offset / 2) - ScreenGui.AbsolutePosition.Y

					particle.Position = UDim2.new(0, newPositionX, 0, newPositionY)
					particle.AnchorPoint = Vector2.new(0.5, 0.5)


					local tween = tweenService:Create(particle, TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {BackgroundTransparency = 0})
					tween:Play()

					local moveTween = tweenService:Create(particle, TweenInfo.new(math.random(), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, false), {Position = UDim2.new(0, -size, 0, math.random(0, ScreenGui.AbsoluteSize.Y - size))})
					moveTween:Play()

					moveTween.Completed:Connect(function()
						particle:Destroy()
					end)
				end

				for i = 1, particleCount do
					createAndAnimateParticle()
				end

				wait(.15)
			end
			
			navbar:SetState(codexEnum.NavbarState["Partial"])
		end)

		bar.indent:GetPropertyChangedSignal("Value"):Connect(function()
			local value = bar.indent.Value;
			local percentage = (math.clamp(value, 76, 260) - 76) / 184;

			navbar.bar.Size = UDim2.new(0, value, 1, 0);
			navbar.bar.main.codexIcon.Size = UDim2.new(0, 36 + percentage * 12, 0, 36 + percentage * 12);
			navbar.bar.main.title.TextTransparency = 1 - percentage;
			navbar.bar.main.poweredBy.TextTransparency = 0.2 + (1 - percentage) * 0.8;
			for i, v in map do
				i.instance.text.TextTransparency = 0.2 + (1 - percentage) * 0.8;
			end
			navbar.fade.BackgroundTransparency = 1 - percentage;
		end);

		setupDragBar(bar.dragBar, bar.indent);

		return bar;
	end

	local function createFade(gui: ScreenGui): Instance
		return instanceUtils:Create("Frame", {
			BackgroundColor3 = Color3.new(),
			BackgroundTransparency = 1,
			Name = "fade",
			Parent = gui,
			Size = UDim2.new(1, 0, 1, 0),
			ZIndex = 0
		}, {
			instanceUtils:Create("UIGradient", {
				Name = "gradient",
				Transparency = NumberSequence.new({
					NumberSequenceKeypoint.new(0, 0.3),
					NumberSequenceKeypoint.new(0.2, 0.3),
					NumberSequenceKeypoint.new(1, 1)
				})
			})
		});
	end

	--[[ Module ]]--

	function navbar:Initialize(directory: Instance)
		self.bar = createNavbar(directory.gui);
		self.fade = createFade(directory.gui);
		self.background = directory.gui.background;

		for i, v in { "editor", "localScripts", "globalScripts", "exploitSettings", "console" } do
			local module = framework[string.format("pages.%s.%s", v, v)];
			self:Add(module.title, module.icon, module:Initialize(), module.overwritePosition);
		end

		self:SetState(codexEnum.NavbarState.Full, true);
	end

	function navbar:Add(text: string, icon: string, designatedFrame: Frame, overwritePosition: UDim2?)
		local button = navbarButton.new(text, icon);
		map[button] = designatedFrame;

		button.instance.MouseButton1Click:Connect(function()
			self:Select(button);
		end);

		if self.state ~= "full" then
			button.instance.text.TextTransparency = 1;
		end

		if overwritePosition then
			button.instance.Position = overwritePosition;
			button.instance.Parent = self.bar.main;
		else
			button.instance.Parent = self.bar.main.container;
		end
		designatedFrame.Parent = self.bar.Parent.tabs;
	end

	function navbar:SetState(navbarState: number, ignoreTimeouts: boolean?)
		local indent, state = 0, "hidden";
		if navbarState == codexEnum.NavbarState.Partial or (navbarState == codexEnum.NavbarState.Hidden and selected) then
			indent, state = 76, "partial";
		elseif navbarState == codexEnum.NavbarState.Full then
			indent, state = 260, "full";
		end

		if self.tween then
			self.tween:Cancel();
		end
		if self.nextInputCheck then
			self.nextInputCheck:Disconnect();
			pcall(task.cancel, self.timeoutDelay); -- if this is called from self.timeoutDelay itself, it will error. Cba to do a proper check. It'll be dead immediately after anyways
		end

		self.state = state;
		self.tween = instanceUtils:Tween(self.bar.indent, 0.25, {
			Value = indent;
		});

		-- SPDM | Indent pages
		if selected and map[selected] then
			instanceUtils:Tween(map[selected], 0.25, {
				Position = UDim2.new(0, indent, 1, 0);
				Size = UDim2.new(1, -indent, 1, 0);
			});
		end

		if state ~= "hidden" and not ignoreTimeouts then
			self.timeoutDelay = task.delay(10, function()
				if self.state == state then
					self:SetState(codexEnum.NavbarState.Hidden);
				end
			end);

			self.nextInputCheck = userInputService.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					if self.state ~= "hidden" and input.Position.X > self.bar.indent.Value then
						self:SetState(codexEnum.NavbarState.Hidden);
					end
				end
			end);
		end

		-- SPDM Team | Opening modes handler
		local function createTween(target, properties)
			return game:GetService("TweenService"):Create(target, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), properties)
		end

		local openingModes = {
			["Edge Swipe"] = 
				function() 
					if self.bar.dragBar.indicator.BackgroundTransparency ~= 0.8 then
					createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 0.8}):Play()
				end
				end,
			["Floating Icon"] = 
				function() 
					if self.state == "hidden" then
						if self.bar.dragBar.indicator.BackgroundTransparency ~= 1 then
							createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 1}):Play()
						end 
						if userSettings.cache.executor.showParticles then
							local ScreenGui = self.bar.Parent
							local particleCount = 30

							local mainColors = {
								Color3.fromRGB(219, 0, 0),    -- #DB0000
								Color3.fromRGB(219, 27, 27),  -- #DB1B1B
								Color3.fromRGB(221, 71, 71),  -- #DD4747
								Color3.fromRGB(226, 111, 111),-- #E26F6F 
								Color3.fromRGB(21, 21, 29)    -- #15151D
							}

							local function getRandomMainColorWithVariation()
								local randomIndex = math.random(1, #mainColors)
								return mainColors[randomIndex]
							end

							local function createAndAnimateParticle()
								local particle = Instance.new("Frame")
								local size = math.random(5, 15)
								particle.Size = UDim2.new(0, size, 0, size)
								particle.BackgroundColor3 = getRandomMainColorWithVariation()
								particle.Parent = ScreenGui

								local uiCorner = Instance.new("UICorner")
								uiCorner.CornerRadius = UDim.new(0.5, 0)
								uiCorner.Parent = particle

								local startPositionX = math.random(0, ScreenGui.AbsoluteSize.X * 0.1)
								local startPositionY = math.random(0, ScreenGui.AbsoluteSize.Y - size)
								particle.Position = UDim2.new(0, startPositionX, 0, startPositionY)
								particle.AnchorPoint = Vector2.new(0.5, 0.5)

								local iconCenter = self.bar.floatingIcon.AbsolutePosition + self.bar.floatingIcon.AbsoluteSize / 2
								local endPositionX = iconCenter.X - (particle.Size.X.Offset / 2) - ScreenGui.AbsolutePosition.X
								local endPositionY = iconCenter.Y - (particle.Size.Y.Offset / 2) - ScreenGui.AbsolutePosition.Y

								local tweenService = game:GetService("TweenService")
								local moveTween = tweenService:Create(particle, TweenInfo.new(.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = UDim2.new(0, endPositionX, 0, endPositionY)})
								moveTween:Play()

								moveTween.Completed:Connect(function()
									particle:Destroy()
								end)
							end

							for i = 1, particleCount do
								createAndAnimateParticle()
							end

							wait(.35);
						end
					else
						createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 0.8}):Play()
					end


					local targetTransparency = self.state == "hidden" and 0.5 or 1
					if self.bar.floatingIcon.BackgroundTransparency ~= targetTransparency then
					local targetSize = self.state == "hidden" and UDim2.new(0, 70, 0, 70) or UDim2.new(0, 0, 0, 0)
					local delayTime = self.bar.floatingIcon.BackgroundTransparency == 0.5 and 0.25 or 0

					task.delay(delayTime, function() self.bar.floatingIcon.Visible = self.state == "hidden" end)

					createTween(self.bar.floatingIcon, {BackgroundTransparency = targetTransparency, Size = targetSize}):Play()
					createTween(self.bar.floatingIcon.codexIcon2, {ImageTransparency = targetTransparency == 0.5 and 0 or 1}):Play()
				end
				end,
			["Invisible Edge Swipe"] = 
				function() 
					if self.bar.dragBar.indicator.BackgroundTransparency ~= 1 then
						createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 1}):Play()
					end
				end
		}

		openingModes[userSettings.cache.executor.openingMode]()


	end

	function navbar:Select(button: TextButton)
		if selected ~= nil then
			selected:Highlight(false);
			instanceUtils:Tween(map[selected], 0.2, {
				Position = UDim2.new(1, 0, 1, 0)
			});
			if selected == button then
				selected = nil;
				instanceUtils:Tween(self.background, 0.2, {
					BackgroundTransparency = 1
				});
				return;
			end
		end
		selected = button;
		selected:Highlight(true);
		self:SetState(codexEnum.NavbarState.Partial);
		instanceUtils:Tween(self.background, 0.2, {
			BackgroundTransparency = 0.1
		});
		--[[
		instanceUtils:Tween(map[button], 0.2, {
			Position = UDim2.new(0, 0, 1, 0)
		});
		]]
	end

	framework.pages.navbar.navbar = navbar;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local mathsUtils = framework.dependencies.utils.maths;
	local popups = framework.popups.popups;

	local textService = cloneref(game:GetService("TextService"));

	local tagOrder = { "verified", "isPatched", "isUniversal", "key" };
	local tags = {
		key = {
			title = "Key",
			colour = "#eab515"
		},
		isPatched = {
			title = "Patched",
			colour = "#eb4545"
		},
		isUniversal = {
			title = "Universal",
			colour = "#459beb"
		},
		verified = {
			title = "Verified",
			colour = "#15151d"
		}
	};

	--[[ Functions ]]--

	local function generateTag(data: {any}): Instance
		return instanceUtils:Create("TextLabel", { 
			AutomaticSize = Enum.AutomaticSize.X, 
			BackgroundColor3 = Color3.fromHex(data.colour), 
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = data.title, 
			Size = UDim2.new(0, 0, 0, 30), 
			Text = data.title, 
			TextColor3 = Color3.fromHex("ffffff"), 
			TextSize = 14
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIPadding", { 
				Name = "padding", 
				PaddingLeft = UDim.new(0, 10), 
				PaddingRight = UDim.new(0, 10)
			})
		});
	end

	--[[ Module ]]--

	framework.pages.globalScripts.scriptResult = (function(scriptResult: {any}): Instance
		local viewCount = mathsUtils:FormatAsCount(scriptResult.views, 0.1);

		local base = instanceUtils:Create("ImageButton", { 
			Active = false, 
			AutoButtonColor = false, 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Image = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId), 
			ImageTransparency = 0.5, 
			Name = scriptResult.title, 
			Selectable = false, 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0, 48), 
				Size = UDim2.new(1, -28, 0, 0), 
				Text = scriptResult.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0.5, 0, 1, -14), 
				Size = UDim2.new(1, -28, 1, -86), 
				Text = scriptResult.description or "", 
				TextColor3 = Color3.fromHex("c8c8c8"), 
				TextSize = 13, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "views", 
				Position = UDim2.new(1, -10, 0, 10), 
				Size = UDim2.new(0, 0, 0, 30), 
				Text = viewCount, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			}),
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tags", 
				Position = UDim2.new(0, 10, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("000000"), 
				ScrollBarThickness = 0, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -(textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
					Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
					Text = viewCount,
					Size = 14,
					Width = math.huge
				})).X + 46), 0, 30)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});

		for i, v in tagOrder do
			if scriptResult[v] then
				generateTag(tags[v]).Parent = base.tags;
			end
		end

		base.MouseButton1Click:Connect(function()
			popups:Show("globalScriptSelection", scriptResult);
		end);

		return base;
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local scriptResult = framework.pages.globalScripts.scriptResult;

	local httpService = cloneref(game:GetService("HttpService"));

	local basis;

	--[[ Module ]]--

	local globalScripts = {
		title = "Global Scripts",
		icon = "rbxassetid://13449277995",
		isSearching = false
	};

	function globalScripts:Initialize(directory: Instance)
		basis = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "globalScripts", 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticCanvasSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "container", 
				Position = UDim2.new(0.5, 0, 1, 0), 
				ScrollBarImageColor3 = Color3.fromHex("050507"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.Y, 
				Size = UDim2.new(1, -28, 1, -60), 
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 12, 0, 12), 
					CellSize = UDim2.new(0.333, -12, 0.3, 50), 
					HorizontalAlignment = Enum.HorizontalAlignment.Center, 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("TextButton", {
				AutoButtonColor = false,
				BackgroundColor3 = Color3.fromRGB(21, 21, 29),
				MouseButton1Click = function()
					basis.searchBox.input:CaptureFocus();
				end,
				Name = "searchBox",
				Position = UDim2.new(0, 14, 0, 14),
				Size = UDim2.new(1, -74, 0, 36),
				Text = ""
			}, {
				instanceUtils:Create("TextBox", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "input", 
					PlaceholderColor3 = Color3.fromHex("b2b2b2"), 
					PlaceholderText = "Search...", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(1, 0, 1, 0), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14, 
					TextTruncate = Enum.TextTruncate.AtEnd, 
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 12), 
					PaddingRight = UDim.new(0, 12)
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "credit",
				Position = UDim2.new(0.5, 0, 0, -28), 
				Size = UDim2.new(0, 0, 0, 34), 
				Text = "Powered by scriptblox.com", 
				TextColor3 = Color3.fromHex("b2b2b2"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 12), 
					PaddingRight = UDim.new(0, 12)
				})
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "openFilters", 
				Position = UDim2.new(1, -14, 0, 14), 
				Size = UDim2.new(0, 36, 0, 36), 
				Text = "", 
				TextColor3 = Color3.fromHex("000000"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				})
			})
		});

		basis.searchBox.input.FocusLost:Connect(function()
			local contents = basis.searchBox.input.Text;
			if #contents > 0 then
				self:Search(contents);
			end
		end);

		do
			local res = internalUtils:Request("https://scriptblox.com/api/script/search?filters=free&q=Hub", "GET", {
				["Content-Type"] = "application/json"
			});

			if res then
				self:ParseResults(httpService:JSONDecode(res).result.scripts);
			end
		end

		return basis;
	end

	function globalScripts:Search(query: string)
		if self.isSearching or getgenv == nil then
			return;
		end
		self.isSearching = true;
		local res = internalUtils:Request("https://scriptblox.com/api/script/search?filters=free&q=" .. httpService:UrlEncode(query), "GET", {
			["Content-Type"] = "application/json"
		});
		if res then
			self:ParseResults(httpService:JSONDecode(res).result.scripts);
		end
		self.isSearching = false;
	end

	function globalScripts:ParseResults(res: {any})
		for i, v in basis.container:GetChildren() do
			if v:IsA("ImageButton") then
				v:Destroy();
			end
		end
		for i, v in res do
			scriptResult(v).Parent = basis.container;
		end
	end

	framework.pages.globalScripts.globalScripts = globalScripts;
end

do
	--[[ Variables ]]--

	local sets = {
		keywords = {
			"local",
			"function",
			"if",
			"and",
			"or",
			"not",
			"then",
			"else",
			"elseif",
			"repeat",
			"until",
			"while",
			"do",
			"end",
			"for",
			"in",
			"break",
			"continue",
			"return"
		},
		constants = {
			"true",
			"false",
			"nil"
		},
		operators = {
			"and",
			"or",
			"not",
			"<",
			">",
			"<=",
			">=",
			"==",
			"~=",
			"+",
			"-",
			"*",
			"/",
			"%",
			"^",
			"#",
			".."
		},
		assignments = {
			"=",
			"+=",
			"-=",
			"*=",
			"/=",
			"%=",
			"^=",
			"..="
		},
		globals = getfenv()
	};

	--[[ Functions ]]--

	local function isDigit(character: string, index: number): boolean
		return (character >= "0" and character <= "9") or (index > 0 and (character == "e" or character == "_"));
	end

	local function isHexadecimalDigit(character: string): boolean
		return (character >= "0" and character <= "9") or (character >= "a" and character <= "f") or (character >= "A" and character <= "F");
	end

	local function isWord(character: string, isFirstCharacter: boolean): boolean
		return character == "_" or (character >= "a" and character <= "z") or (character >= "A" and character <= "Z") or (not isFirstCharacter and isDigit(character, 0));
	end

	local function isWhitespace(character: string): boolean
		return character == " " or character == "\t" or character == "\n";
	end

	--[[ Module ]]--

	local lexer = {};

	function lexer:_consume(): string
		self.position += 1;
		return string.sub(self.string, self.position, self.position);
	end

	function lexer:_peek(amount: number | nil): string
		local index = self.position + (amount or 1);
		return string.sub(self.string, index, index);
	end

	function lexer:_pushToken(tokenName: string, value: string)
		self.result[#self.result + 1] = {
			token = tokenName,
			value = value
		};
	end

	function lexer:_pushSymbol(text: string)
		local token = "symbol";
		if table.find(sets.operators, text) then
			token = "operator";
		elseif table.find(sets.assignments, text) then
			token = "assignment";
		end
		self:_pushToken(token, text);
	end

	function lexer:_readString(): string
		local delimiter, value = self:_peek(), self:_consume();
		while self.position <= self.length do
			local character = self:_consume();
			if character == "\\" then
				value ..= character .. self:_consume();
			else
				value ..= character;
				if character == delimiter then
					break;
				end
			end
		end
		return value;
	end

	function lexer:_readMultilineString(): string | nil
		local delimiter = self:_peek();
		if delimiter ~= "[" then
			return nil;
		end	
		local start = self.position;
		local value = self:_consume();
		local nestedEquals = 0;
		while self.position <= self.length and self:_peek() == "=" do
			value ..= self:_consume();
			nestedEquals += 1;
		end
		if self:_peek() ~= "[" then
			self.position = start;
			return nil;
		end
		value ..= self:_consume();
		while self.position <= self.length do
			local character = self:_consume();
			value ..= character;
			if character == "]" then
				local equalsCount = 0;
				while self.position <= self.length and self:_peek() == "=" do
					value ..= self:_consume();
					equalsCount += 1;
				end
				if self:_peek() == "]" and nestedEquals == equalsCount then
					value ..= self:_consume();
					break;
				end
			end
		end
		return value;
	end

	function lexer:_readComment(): string
		local value = self:_consume() .. self:_consume();
		if self:_peek() == "[" then
			local multilineString = self:_readMultilineString();
			if multilineString ~= nil then
				return value .. multilineString;
			end
		end
		while self.position <= self.length do
			local character = self:_peek();
			if character == "\n" then
				break;
			end
			value ..= self:_consume();
		end
		return value;
	end

	function lexer:_readWord(): string | nil
		local value = "";
		local isFirstCharacter = true;
		while self.position <= self.length do
			local character = self:_peek();
			if not isWord(character, isFirstCharacter) then
				break;
			end
			value ..= self:_consume();
			isFirstCharacter = false;
		end
		return value ~= "" and value or nil;
	end

	function lexer:_readWhitespace(): string | nil
		local value = "";
		while self.position <= self.length do
			local character = self:_peek();
			if not isWhitespace(character) then
				break;
			end
			value ..= self:_consume();
		end
		return value ~= "" and value or nil
	end

	function lexer:_readNumber(): string | nil
		local value = "";
		local isHexadecimal = false;
		local index = 0;
		while self.position <= self.length do
			local character = self:_peek();
			if character == "0" or character == "x" then
				isHexadecimal = true;
				value ..= self:_consume();
				index += 1;
				continue;
			elseif (isHexadecimal and not isHexadecimalDigit(character)) or not isDigit(character, index) then
				break;
			end
			value ..= self:_consume();
			index += 1;
		end
		return value ~= "" and value or nil;
	end

	function lexer:_getAssociatedToken(word: string): string
		if table.find(sets.keywords, word) then
			return "keyword";
		elseif table.find(sets.constants, word) then
			return "constant";
		elseif table.find(sets.operators, word) then
			return "operator";
		elseif sets.globals[word] then
			return "global";
		elseif self:_peek() == "(" then
			return "callback";
		end
		return "identifier";
	end

	function lexer:Parse(text: string): {any}
		self.string = text;
		self.position = 0;
		self.length = #text;
		self.result = {};

		local symbol = "";

		while self.position <= self.length do
			local character = self:_peek();
			if character == "[" then
				local multilineString = self:_readMultilineString();
				if multilineString ~= nil then
					self:_pushToken("string", multilineString);
					continue;
				end
			elseif character == "'" or character == "\"" then
				self:_pushToken("string", self:_readString());
				continue;
			elseif isDigit(character, 0) then
				local value = self:_readNumber();
				if value ~= nil then
					self:_pushToken("number", value);
					continue;
				end
			elseif isWord(character, true) then
				local value = self:_readWord();
				if value ~= nil then
					self:_pushToken(self:_getAssociatedToken(value), value);
					continue;
				end
			elseif character == "-" and self:_peek(2) == "-" then
				self:_pushToken("comment", self:_readComment());
				continue;
			elseif isWhitespace(character) then
				local value = self:_readWhitespace();
				if value ~= nil then
					self:_pushToken("whitespace", value);
					continue;
				end
			end

			symbol ..= self:_consume();
			if symbol ~= "" then
				self:_pushSymbol(symbol);
				symbol = "";
			else
				break;
			end
		end

		local result = {};
		for i, v in self.result do
			if string.match(v.value, "\n") then
				local lines = string.split(v.value, "\n");
				for i2, v2 in lines do
					if v2 ~= "" then
						result[#result + 1] = {
							token = v.token,
							value = v2
						};
					end
					if i2 < #lines then
						result[#result + 1] = {
							token = "whitespace",
							value = "\n"
						};
					end
				end
			else
				result[#result + 1] = v;
			end
		end

		return result;
	end

	framework.pages.editor.lexer = lexer;
end

do
	--[[ Variables ]]--

	local editorButton = framework.components.editorButton;
	local tabButton = framework.components.tabButton;
	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local lexer = framework.pages.editor.lexer;
	local tabSystem = framework.data.tabSystem;
	local popups = framework.popups.popups;

	local userInputService = cloneref(game:GetService("UserInputService"));
	local textService = cloneref(game:GetService("TextService"));

	local highlightAssociations = {
		string = "#69B397",
		number = "#91C087",
		constant = "#E0BA91",
		callback = "#81a6da",
		keyword = "#E18DB9",
		comment = "#606060",
		global = "#bd93db",
		operator = "#AAAAAA",
		assignment = "#AAAAAA",
		identifier = "#DCDCCC",
		symbol = "#DCDCCC"
	};
	local map = {};

	local base;

	--[[ Functions ]]--

	-- | SPDM | Riky47#3355

	local debounceTime = 0.1
	local lastUpdateTime = 0
	local lastLexResult = {}
	local currentCursor = nil
	local textBoundsCache = {}

	local function lexResultsAreEqual(a, b)
		if #a ~= #b then return false end
		for i = 1, #a do
			if a[i].token ~= b[i].token or a[i].value ~= b[i].value then
				return false
			end
		end
		return true
	end

	local function calculateTextBounds(text: string, dontStore: boolean)
		local result = textBoundsCache[text]

		if not result then
			result = textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
				Font = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal),
				Size = 16,
				Text = text,
				Width = math.huge
			})).X
		end

		if not dontStore then
			textBoundsCache[text] = result
		end

		return result
	end

	local function needsUpdate(container, lexResult)
		local isSame = lexResultsAreEqual(lexResult, lastLexResult)

		lastLexResult = {}
		for i, v in ipairs(lexResult) do
			lastLexResult[i] = { token = v.token, value = v.value }
		end

		return not isSame
	end

	local function insertHighlight(position: Vector2, size: number, text: string, colour: string)
		return instanceUtils:Create("TextLabel", {
			BackgroundTransparency = 1,
			FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal),
			Name = text,
			Parent = base.contentContainer.inputBox,
			Position = position,
			Size = UDim2.new(0, size, 0, 16),
			Text = text,
			TextColor3 = Color3.fromHex(colour),
			TextSize = 16,
			ZIndex = 2
		});
	end

	local function updateCustomCursor(cursor: number)
		local input: TextBox = base.contentContainer.inputBox

		if cursor < 1 then
			if currentCursor then
				currentCursor.Visible = false
			end

			return
		end

		local cursorSize = calculateTextBounds("|")
		local before = input.Text:sub(0, cursor -1)
		local lines = string.split(before, "\n")		
		local line = lines[#lines]

		local actualCursor = cursor -(before:len() -line:len()) -1 
		local lastBefore = line:sub(0, actualCursor)

		local position = UDim2.new(0, calculateTextBounds(lastBefore, true) -cursorSize/2, 0, (#lines -1) * 16)

		if currentCursor and not currentCursor.Parent then
			currentCursor:Destroy()
			currentCursor = nil
		end

		if not currentCursor then
			currentCursor = insertHighlight(position, cursorSize, "|", "#FFFFFF")
		end

		currentCursor.ZIndex = 3
		currentCursor.Position = position
		currentCursor.Visible = true
	end

	local function handleLexResult(lexResult: {any}, addTruncateEllipsis: boolean)
		--[[ SPDM | You can eventually enable this
		
		local currentTime = os.clock()
		if currentTime - lastUpdateTime < debounceTime then
			return
		end
		
		lastUpdateTime = currentTime
		]]

		local input = base.contentContainer.inputBox
		if needsUpdate(input, lexResult) then
			input:ClearAllChildren()
			updateCustomCursor(input.CursorPosition)

			local x, y = 0, 0
			for i, v in ipairs(lexResult) do
				local lastX = calculateTextBounds(v.value)
				if v.value == "\n" then
					y += 16
					x = 0
				else
					local associatedColour = highlightAssociations[v.token]
					if associatedColour then
						insertHighlight(UDim2.new(0, x, 0, y), lastX, v.value, associatedColour)
					end
				end

				x += lastX

				if i == #lexResult and addTruncateEllipsis then
					insertHighlight(UDim2.new(0, x, 0, y), 24, "...", highlightAssociations.identifier)
				end
			end
		end
	end

	-- |

	local function generateLineNumberString(text: string)
		local str = "";
		for i = 1, #string.split(text, "\n") do
			str ..= tostring(i) .. "\n";
		end
		return string.sub(str, 1, #str - 1);
	end

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "editor", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("ScrollingFrame", { 
				AutomaticCanvasSize = Enum.AutomaticSize.XY,
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(),
				HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
				Name = "contentContainer", 
				Position = UDim2.new(0, 0, 0, 50), 
				ScrollBarThickness = 4,
				Size = UDim2.new(1, 0, 1, -50),
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("TextLabel", { 
					AutomaticSize = Enum.AutomaticSize.Y,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "lineNumbers", 
					Size = UDim2.new(0, 30, 0, 0), 
					Text = "1", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 0.7, 
					TextXAlignment = Enum.TextXAlignment.Right, 
					TextYAlignment = Enum.TextYAlignment.Top
				}),
				instanceUtils:Create("TextBox", { 
					AutomaticSize = Enum.AutomaticSize.XY,
					BackgroundTransparency = 1, 
					ClearTextOnFocus = false, 
					CursorPosition = -1, 
					FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					MultiLine = true, 
					Name = "inputBox", 
					Position = UDim2.new(0, 40, 0, 0), 
					Size = UDim2.new(1, -40, 1, 0), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 1, 
					TextTruncate = Enum.TextTruncate.AtEnd, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -25, 1, -25), 
				Size = UDim2.new(1, -50, 0, 50)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					HorizontalAlignment = Enum.HorizontalAlignment.Right, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	end

	--[[ Module ]]--

	local editor = {
		title = "Editor",
		icon = "rbxassetid://11558196842",
		selected = nil,
		cursorPos = 0,
		text = ""
	};

	function editor:Initialize(directory: Instance)
		base = createUI();

		do
			local inputBox = base.contentContainer.inputBox;
			inputBox:GetPropertyChangedSignal("Text"):Connect(function()
				local text = inputBox.Text
				if userInputService:GetFocusedTextBox() == inputBox and self.text ~= text then
					self:UpdateText(text);
				end
			end);

			inputBox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				local cursorPos = inputBox.CursorPosition
				if userInputService:GetFocusedTextBox() == inputBox and self.cursorPos ~= cursorPos then
					self.cursorPos = cursorPos
					updateCustomCursor(cursorPos)
				end
			end);

			inputBox.FocusLost:Connect(function()
				if userSettings.cache.executor.autoSaveTabs then
					tabSystem:Save();
				end
			end);
		end

		do
			editorButton("New Tab", "rbxassetid://14808232261", {
				MouseButton1Click = function()
					tabSystem:Add("Script " .. tostring(tabSystem.accumulator + 1));
				end,
				Parent = base.buttons
			});

			editorButton("Save Current Tab", "rbxassetid://14883119324", {
				MouseButton1Click = function()
					popups:Show("saveCurrentTab", select(-1, tabSystem:Get(self.selected)));
				end,
				Parent = base.buttons
			});

			editorButton("Execute Clipboard", "rbxassetid://14808228630", {
				MouseButton1Click = function()
					if getclipboard then
						internalUtils:Notify("Clipboard Executed!")
						internalUtils:Execute(getclipboard());
					end
				end,
				Parent = base.buttons
			});

			editorButton("Clear", "rbxassetid://14808219001", {
				MouseButton1Click = function()
					self:SetText("");
				end,
				Parent = base.buttons
			});

			editorButton("Execute", "rbxassetid://14808225296", {
				BackgroundColor3 = Color3.fromRGB(235, 69, 69),
				MouseButton1Click = function()
					internalUtils:Notify("Editor Executed!")
					internalUtils:Execute(self.text);
				end,
				Parent = base.buttons
			}, Color3.new(1, 1, 1));
		end

		tabSystem.onTabCreated:Connect(function(tab)
			local btn = tabButton.new(tab);
			btn.instance.Parent = base.tabButtons;
			map[tab.index] = btn;
			if userSettings.cache.executor.autoSaveTabs then
				tabSystem:Save();
			end
		end);

		tabSystem.onTabRemoved:Connect(function(tab)
			map[tab.index]:Destroy();
			map[tab.index] = nil;
			if userSettings.cache.executor.autoSaveTabs then
				tabSystem:Save();
			end
		end);

		tabSystem.onTabSelected:Connect(function(tab)
			if self.selected then
				map[self.selected]:Highlight(false);
			end
			map[tab.index]:Highlight(true);

			self.selected = tab.index;
			self:SetText(tab.content);
		end);

		if #tabSystem.cache > 0 then
			for i, v in tabSystem.cache do
				tabSystem.onTabCreated:Fire(v);
			end
			tabSystem:Select(tabSystem.cache[1].index);
		else
			tabSystem:Add("Script 1");
		end

		return base;
	end

	function editor:UpdateText(text: string, truncated: string)
		local truncatedText = truncated or string.sub(text, 1, 16384);
		self.text = text;

		tabSystem:UpdateContent(self.selected, text);
		base.contentContainer.lineNumbers.Text = generateLineNumberString(truncatedText);
		handleLexResult(lexer:Parse(truncatedText), #truncatedText < #text);
	end

	function editor:SetText(text: string)
		local truncatedText = string.sub(text, 1, 16384);
		base.contentContainer.inputBox.Text = truncatedText;
		editor:UpdateText(text, truncatedText)
	end

	framework.pages.editor.editor = editor;
end

do
	local signal = framework.dependencies.signal;
	local instanceUtils = framework.dependencies.utils.instance;

	framework.init = (function()
		local sig = signal.new();
		local directory = instanceUtils:DynamicParent(instanceUtils:Create("Folder", {
			Name = "Codex"
		}));
		local login;

		sig:Connect(function(shouldContinue, basis)
			if login then
				login:Destroy();
			end

			if shouldContinue then
				basis.gui.Enabled = true;
				basis.popups.Enabled = true;

				framework.popups.popups:RegisterGUI(basis.popups);
				framework.pages.navbar.navbar:Initialize(directory);
			end
		end);

		login = framework.pages.startup.startup(directory, sig);
	end);
end

arceus_libs.renderer.startRendering()
framework.init(); -- SPDM Team
  	end
})
Tab:AddButton({
	Name = "Arceus X V3.0.txt",
	Callback = function()
--[=[

    ___      _  _     __     _         _         ____   
  ,"___".   FJ  L]    FJ    FJ        FJ        [__  '. 
  FJ---L]  J |__| L  J  L  J |       J |        `--7 .' 
 J |   LJ  |  __  |  |  |  | |       | |         .'.'.' 
 | \___--. F L__J J  F  J  F L_____  F L_____  .' (_(__ 
 J\_____/FJ__L  J__LJ____LJ________LJ________LJ________L
  J_____F |__L  J__||____||________||________||________|
                                                        
 
]=]

--Huge thanks for Bread for good textbox and remake the sliders :D
--GuiToLua By Creator of Backdoor.exe

-- Arceus X v3 Remake
local AZY = {};

-- StarterGui.ArceusXV3
AZY["1"] = Instance.new("ScreenGui", game.CoreGui);
AZY["1"]["Name"] = [[ArceusXV3]];
AZY["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
AZY["1"]["ResetOnSpawn"] = false;

-- StarterGui.ArceusXV3.Welcome
AZY["2"] = Instance.new("Folder", AZY["1"]);
AZY["2"]["Name"] = [[Welcome]];

-- StarterGui.ArceusXV3.Welcome.Frame
AZY["3"] = Instance.new("Frame", AZY["2"]);
AZY["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3"]["BackgroundTransparency"] = 0.699999988079071;
AZY["3"]["Size"] = UDim2.new(100.58300018310547, 0, 10.576000213623047, 0);
AZY["3"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
AZY["3"]["Position"] = UDim2.new(-0.012608751654624939, 0, -1.0678343772888184, 0);

-- StarterGui.ArceusXV3.Welcome.Frame.UIAspectRatioConstraint
AZY["4"] = Instance.new("UIAspectRatioConstraint", AZY["3"]);
AZY["4"]["AspectRatio"] = 2.0052521228790283;

-- StarterGui.ArceusXV3.Welcome.Welcome
AZY["5"] = Instance.new("Frame", AZY["2"]);
AZY["5"]["BackgroundColor3"] = Color3.fromRGB(52, 52, 52);
AZY["5"]["Size"] = UDim2.new(0.666020393371582, 0, 0.8211921453475952, 0);
AZY["5"]["Position"] = UDim2.new(0.17622511088848114, 0, 0.0894039198756218, 0);
AZY["5"]["Name"] = [[Welcome]];

-- StarterGui.ArceusXV3.Welcome.Welcome.UIAspectRatioConstraint
AZY["6"] = Instance.new("UIAspectRatioConstraint", AZY["5"]);
AZY["6"]["AspectRatio"] = 1.6193960905075073;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame
AZY["7"] = Instance.new("ScrollingFrame", AZY["5"]);
AZY["7"]["Active"] = true;
AZY["7"]["CanvasSize"] = UDim2.new(0, 0, 1.2000000476837158, 0);
AZY["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7"]["BackgroundTransparency"] = 1;
AZY["7"]["Size"] = UDim2.new(1.0180450677871704, 0, 1, 0);
AZY["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
AZY["7"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7"]["ScrollBarThickness"] = 7;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text
AZY["8"] = Instance.new("TextLabel", AZY["7"]);
AZY["8"]["TextWrapped"] = true;
AZY["8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["8"]["TextScaled"] = true;
AZY["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["8"]["TextSize"] = 29;
AZY["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8"]["Size"] = UDim2.new(0.8902860283851624, 0, 0.6482642889022827, 0);
AZY["8"]["Text"] = [[Dear User,

We are writing to welcome you as one of you first bete testers of Arceus X!
We are thrilled to have your collaboration and to offer you the oppoturnity
to try out the new features we are developing.

We are confident that your experience and creativity will help us make
Arceus X an even more effective and user-friendly application.
Please feel free to share any feedback and suggestion that can help us further
improve our platform.

Thank you so much your support, and we look forward to working with
you in this exciting journey!

Best regards,
SPDM Team]];
AZY["8"]["Name"] = [[Text]];
AZY["8"]["BackgroundTransparency"] = 1;
AZY["8"]["Position"] = UDim2.new(0.04280221089720726, 0, 0.14032021164894104, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text.LocalScript
AZY["9"] = Instance.new("LocalScript", AZY["8"]);


-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton
AZY["a"] = Instance.new("TextButton", AZY["7"]);
AZY["a"]["TextWrapped"] = true;
AZY["a"]["TextScaled"] = true;
AZY["a"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["a"]["TextSize"] = 24;
AZY["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a"]["Size"] = UDim2.new(0.2372465580701828, 0, 0.10296772420406342, 0);
AZY["a"]["Text"] = [[Get started]];
AZY["a"]["Position"] = UDim2.new(0.3705448806285858, 0, 0.8786289095878601, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.UICorner
AZY["b"] = Instance.new("UICorner", AZY["a"]);
AZY["b"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.UITextSizeConstraint
AZY["c"] = Instance.new("UITextSizeConstraint", AZY["a"]);
AZY["c"]["MaxTextSize"] = 24;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.LocalScriptNew
AZY["d"] = Instance.new("LocalScript", AZY["a"]);
AZY["d"]["Name"] = [[LocalScriptNew]];

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Title
AZY["e"] = Instance.new("TextLabel", AZY["7"]);
AZY["e"]["TextWrapped"] = true;
AZY["e"]["TextScaled"] = true;
AZY["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["e"]["TextSize"] = 45;
AZY["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e"]["Size"] = UDim2.new(0.624912440776825, 0, 0.12905988097190857, 0);
AZY["e"]["Text"] = [[Welcome to Arceus X 3.0!]];
AZY["e"]["Name"] = [[Title]];
AZY["e"]["BackgroundTransparency"] = 1;
AZY["e"]["Position"] = UDim2.new(0.1773233860731125, 0, 0.011320043355226517, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Title.UITextSizeConstraint
AZY["f"] = Instance.new("UITextSizeConstraint", AZY["e"]);
AZY["f"]["MaxTextSize"] = 45;

-- StarterGui.ArceusXV3.Welcome.Welcome.UICorner
AZY["10"] = Instance.new("UICorner", AZY["5"]);
AZY["10"]["CornerRadius"] = UDim.new(0, 40);

-- StarterGui.ArceusXV3.AnimationIntro
AZY["11"] = Instance.new("Folder", AZY["1"]);
AZY["11"]["Name"] = [[AnimationIntro]];

-- StarterGui.ArceusXV3.AnimationIntro.Background
AZY["12"] = Instance.new("Frame", AZY["11"]);
AZY["12"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
AZY["12"]["Size"] = UDim2.new(0, 1806, 0, 1604);
AZY["12"]["Position"] = UDim2.new(-0.11024535447359085, 0, -0.16887417435646057, 0);
AZY["12"]["Visible"] = false;
AZY["12"]["Name"] = [[Background]];

-- StarterGui.ArceusXV3.AnimationIntro.Frame
AZY["13"] = Instance.new("Frame", AZY["11"]);
AZY["13"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["13"]["Size"] = UDim2.new(0.03313452750444412, 0, 0.06622516363859177, 0);
AZY["13"]["Position"] = UDim2.new(0.48293575644493103, 0, 0.4668874144554138, 0);
AZY["13"]["Visible"] = false;

-- StarterGui.ArceusXV3.AnimationIntro.Frame.UICorner
AZY["14"] = Instance.new("UICorner", AZY["13"]);
AZY["14"]["CornerRadius"] = UDim.new(1, 100);

-- StarterGui.ArceusXV3.AnimationIntro.ImageLabel
AZY["15"] = Instance.new("ImageLabel", AZY["11"]);
AZY["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["15"]["ImageTransparency"] = 1;
AZY["15"]["Visible"] = false;
AZY["15"]["Image"] = [[rbxassetid://12564267060]];
AZY["15"]["Size"] = UDim2.new(0.09526176750659943, 0, 0.27649006247520447, 0);
AZY["15"]["BackgroundTransparency"] = 1;
AZY["15"]["Position"] = UDim2.new(0.4423459470272064, 0, 0.36092716455459595, 0);

-- StarterGui.ArceusXV3.AnimationIntro.NameLogo
AZY["16"] = Instance.new("TextLabel", AZY["11"]);
AZY["16"]["TextWrapped"] = true;
AZY["16"]["TextScaled"] = true;
AZY["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["16"]["TextTransparency"] = 1;
AZY["16"]["TextSize"] = 50;
AZY["16"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["16"]["Size"] = UDim2.new(0.13893571496009827, 0, 0.09271523356437683, 0);
AZY["16"]["Text"] = [[Arceus X]];
AZY["16"]["Name"] = [[NameLogo]];
AZY["16"]["Visible"] = false;
AZY["16"]["BackgroundTransparency"] = 1;
AZY["16"]["Position"] = UDim2.new(0.3928734362125397, 0, 0.4523245096206665, 0);

-- StarterGui.ArceusXV3.AnimationIntro.NameLogo.UITextSizeConstraint
AZY["17"] = Instance.new("UITextSizeConstraint", AZY["16"]);
AZY["17"]["MaxTextSize"] = 50;

-- StarterGui.ArceusXV3.MainUI
AZY["18"] = Instance.new("Folder", AZY["1"]);
AZY["18"]["Name"] = [[MainUI]];

-- StarterGui.ArceusXV3.MainUI.MainFrame
AZY["19"] = Instance.new("Frame", AZY["18"]);
AZY["19"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["19"]["BackgroundTransparency"] = 0.44999998807907104;
AZY["19"]["Size"] = UDim2.new(0, 459, 0, 276);
AZY["19"]["Position"] = UDim2.new(0.1498919129371643, 0, 0.12086091935634613, 0);
AZY["19"]["Visible"] = false;
AZY["19"]["Name"] = [[MainFrame]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.UICorner
AZY["1a"] = Instance.new("UICorner", AZY["19"]);
AZY["1a"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel
AZY["1b"] = Instance.new("Frame", AZY["19"]);
AZY["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["1b"]["BackgroundTransparency"] = 0.550000011920929;
AZY["1b"]["Size"] = UDim2.new(0.9417322874069214, 0, 0.11706378310918808, 0);
AZY["1b"]["Position"] = UDim2.new(0.03099355846643448, 0, 0.0474083386361599, 0);
AZY["1b"]["Name"] = [[Panel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.UICorner
AZY["1c"] = Instance.new("UICorner", AZY["1b"]);
AZY["1c"]["CornerRadius"] = UDim.new(0, 14);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Logo
AZY["1d"] = Instance.new("ImageLabel", AZY["1b"]);
AZY["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1d"]["Image"] = [[rbxassetid://12564267060]];
AZY["1d"]["Size"] = UDim2.new(0.05029655620455742, 0, 0.9125484824180603, 0);
AZY["1d"]["Name"] = [[Logo]];
AZY["1d"]["BackgroundTransparency"] = 1;
AZY["1d"]["Position"] = UDim2.new(0.4099465012550354, 0, 0.03155198320746422, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TextLogo
AZY["1e"] = Instance.new("TextLabel", AZY["1b"]);
AZY["1e"]["TextWrapped"] = true;
AZY["1e"]["TextScaled"] = true;
AZY["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["1e"]["TextSize"] = 85;
AZY["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1e"]["Size"] = UDim2.new(0.1371736377477646, 0, 0.6307170391082764, 0);
AZY["1e"]["Text"] = [[Arceus X]];
AZY["1e"]["Name"] = [[TextLogo]];
AZY["1e"]["BackgroundTransparency"] = 1;
AZY["1e"]["Position"] = UDim2.new(0.4679349362850189, 0, 0.16660596430301666, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TextLogo.UITextSizeConstraint
AZY["1f"] = Instance.new("UITextSizeConstraint", AZY["1e"]);
AZY["1f"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close
AZY["20"] = Instance.new("ImageButton", AZY["1b"]);
AZY["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["20"]["Image"] = [[rbxassetid://12566509152]];
AZY["20"]["Size"] = UDim2.new(0.06670181453227997, 0, 1, 0);
AZY["20"]["Name"] = [[Close]];
AZY["20"]["Position"] = UDim2.new(0.9171510338783264, 0, 0, 0);
AZY["20"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close.LocalScript
AZY["21"] = Instance.new("LocalScript", AZY["20"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand
AZY["22"] = Instance.new("ImageButton", AZY["1b"]);
AZY["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["22"]["Image"] = [[rbxassetid://12566545357]];
AZY["22"]["Size"] = UDim2.new(0.06901533156633377, 0, 1, 0);
AZY["22"]["Name"] = [[Expand]];
AZY["22"]["Position"] = UDim2.new(0.8481356501579285, 0, -0.024522678926587105, 0);
AZY["22"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand.LocalScript
AZY["23"] = Instance.new("LocalScript", AZY["22"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft
AZY["24"] = Instance.new("TextLabel", AZY["1b"]);
AZY["24"]["TextWrapped"] = true;
AZY["24"]["TextScaled"] = true;
AZY["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["24"]["TextSize"] = 35;
AZY["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["24"]["Size"] = UDim2.new(0.13600000739097595, 0, 0.38600000739097595, 0);
AZY["24"]["Text"] = [[24h 00m left]];
AZY["24"]["Name"] = [[TimeLeft]];
AZY["24"]["BackgroundTransparency"] = 1;
AZY["24"]["Position"] = UDim2.new(0.07365596294403076, 0, 0.28405851125717163, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft.LocalScript
AZY["25"] = Instance.new("LocalScript", AZY["24"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore
AZY["26"] = Instance.new("TextButton", AZY["1b"]);
AZY["26"]["TextWrapped"] = true;
AZY["26"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["26"]["TextSize"] = 12;
AZY["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["26"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["26"]["Size"] = UDim2.new(0.10400000214576721, 0, 0.503000020980835, 0);
AZY["26"]["Name"] = [[Restore]];
AZY["26"]["Text"] = [[Restore]];
AZY["26"]["Position"] = UDim2.new(0.21463949978351593, 0, 0.22850705683231354, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.UICorner
AZY["27"] = Instance.new("UICorner", AZY["26"]);
AZY["27"]["CornerRadius"] = UDim.new(0, 6);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.LocalScript
AZY["28"] = Instance.new("LocalScript", AZY["26"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon
AZY["29"] = Instance.new("ImageButton", AZY["1b"]);
AZY["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["29"]["Image"] = [[rbxassetid://12584810787]];
AZY["29"]["Size"] = UDim2.new(0.05783621221780777, 0, 0.7737637162208557, 0);
AZY["29"]["Name"] = [[Icon]];
AZY["29"]["Position"] = UDim2.new(0.01600000075995922, 0, 0.09300000220537186, 0);
AZY["29"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon.LocalScript
AZY["2a"] = Instance.new("LocalScript", AZY["29"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs
AZY["2b"] = Instance.new("Folder", AZY["19"]);
AZY["2b"]["Name"] = [[Tabs]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home
AZY["2c"] = Instance.new("Frame", AZY["2b"]);
AZY["2c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["2c"]["BackgroundTransparency"] = 1;
AZY["2c"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7336452603340149, 0);
AZY["2c"]["Position"] = UDim2.new(0.1409204602241516, 0, 0.18711426854133606, 0);
AZY["2c"]["Name"] = [[Home]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage
AZY["2d"] = Instance.new("Frame", AZY["2c"]);
AZY["2d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["2d"]["BackgroundTransparency"] = 0.550000011920929;
AZY["2d"]["Size"] = UDim2.new(0.37270405888557434, 0, 0.2492256611585617, 0);
AZY["2d"]["Position"] = UDim2.new(-0.0007835610886104405, 0, 0.025084324181079865, 0);
AZY["2d"]["Name"] = [[UserPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.UICorner
AZY["2e"] = Instance.new("UICorner", AZY["2d"]);
AZY["2e"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.ImageLabel
AZY["2f"] = Instance.new("ImageLabel", AZY["2d"]);
AZY["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["2f"]["Image"] = [[rbxassetid://12566434374]];
AZY["2f"]["Size"] = UDim2.new(0.3031076192855835, 0, 0.8659517168998718, 0);
AZY["2f"]["BackgroundTransparency"] = 1;
AZY["2f"]["Position"] = UDim2.new(0.22370131313800812, 0, 0.0670241266489029, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel
AZY["30"] = Instance.new("TextLabel", AZY["2d"]);
AZY["30"]["TextWrapped"] = true;
AZY["30"]["TextScaled"] = true;
AZY["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["30"]["TextSize"] = 25;
AZY["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["30"]["Size"] = UDim2.new(0.20524734258651733, 0, 0.3535553812980652, 0);
AZY["30"]["Text"] = [[Hi,]];
AZY["30"]["BackgroundTransparency"] = 1;
AZY["30"]["Position"] = UDim2.new(0.5262826681137085, 0, 0.14745301008224487, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel
AZY["31"] = Instance.new("TextLabel", AZY["2d"]);
AZY["31"]["TextWrapped"] = true;
AZY["31"]["TextScaled"] = true;
AZY["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["31"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["31"]["TextSize"] = 25;
AZY["31"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["31"]["Size"] = UDim2.new(0.3468869626522064, 0, 0.3007456660270691, 0);
AZY["31"]["Text"] = [[User]];
AZY["31"]["BackgroundTransparency"] = 1;
AZY["31"]["Position"] = UDim2.new(0.5669999122619629, 0, 0.5350000262260437, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.UITextSizeConstraint
AZY["32"] = Instance.new("UITextSizeConstraint", AZY["31"]);
AZY["32"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.LocalScript
AZY["33"] = Instance.new("LocalScript", AZY["31"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage
AZY["34"] = Instance.new("Frame", AZY["2c"]);
AZY["34"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["34"]["BackgroundTransparency"] = 0.550000011920929;
AZY["34"]["Size"] = UDim2.new(0.374349445104599, 0, 0.7526744604110718, 0);
AZY["34"]["Position"] = UDim2.new(-0.002428855048492551, 0, 0.3016669452190399, 0);
AZY["34"]["Name"] = [[KeySystemPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.UICorner
AZY["35"] = Instance.new("UICorner", AZY["34"]);
AZY["35"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["36"] = Instance.new("TextLabel", AZY["34"]);
AZY["36"]["TextWrapped"] = true;
AZY["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["36"]["TextSize"] = 16;
AZY["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["36"]["Size"] = UDim2.new(0.8114322423934937, 0, 0.15531843900680542, 0);
AZY["36"]["Text"] = [[Key System Status]];
AZY["36"]["BackgroundTransparency"] = 1;
AZY["36"]["Position"] = UDim2.new(0.05482717230916023, 0, 0.06104206293821335, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["37"] = Instance.new("TextLabel", AZY["34"]);
AZY["37"]["TextWrapped"] = true;
AZY["37"]["TextScaled"] = true;
AZY["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["37"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["37"]["TextSize"] = 35;
AZY["37"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
AZY["37"]["Size"] = UDim2.new(0.30206844210624695, 0, 0.09149397909641266, 0);
AZY["37"]["Text"] = [[Online]];
AZY["37"]["BackgroundTransparency"] = 1;
AZY["37"]["Position"] = UDim2.new(0.08498311042785645, 0, 0.1731228232383728, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["38"] = Instance.new("TextLabel", AZY["34"]);
AZY["38"]["TextWrapped"] = true;
AZY["38"]["TextScaled"] = true;
AZY["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["38"]["TextSize"] = 35;
AZY["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["38"]["Size"] = UDim2.new(0.423105388879776, 0, 0.0994054526090622, 0);
AZY["38"]["Text"] = [[Expires In:]];
AZY["38"]["BackgroundTransparency"] = 1;
AZY["38"]["Position"] = UDim2.new(0.054827168583869934, 0, 0.31500908732414246, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft
AZY["39"] = Instance.new("TextLabel", AZY["34"]);
AZY["39"]["TextWrapped"] = true;
AZY["39"]["TextScaled"] = true;
AZY["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["39"]["TextSize"] = 35;
AZY["39"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
AZY["39"]["Size"] = UDim2.new(0.30206844210624695, 0, 0.0994054526090622, 0);
AZY["39"]["Text"] = [[24h 00m]];
AZY["39"]["Name"] = [[TimeLeft]];
AZY["39"]["BackgroundTransparency"] = 1;
AZY["39"]["Position"] = UDim2.new(0.49440309405326843, 0, 0.31500908732414246, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft.LocalScript
AZY["3a"] = Instance.new("LocalScript", AZY["39"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar
AZY["3b"] = Instance.new("Frame", AZY["34"]);
AZY["3b"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 0);
AZY["3b"]["Size"] = UDim2.new(0.8291789293289185, 0, 0.07132068276405334, 0);
AZY["3b"]["Position"] = UDim2.new(0.05709991604089737, 0, 0.44679027795791626, 0);
AZY["3b"]["Name"] = [[Bar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar.UICorner
AZY["3c"] = Instance.new("UICorner", AZY["3b"]);
AZY["3c"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar.TextLabel
AZY["3d"] = Instance.new("TextLabel", AZY["3b"]);
AZY["3d"]["TextWrapped"] = true;
AZY["3d"]["TextScaled"] = true;
AZY["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3d"]["TextTransparency"] = 0.6000000238418579;
AZY["3d"]["TextSize"] = 35;
AZY["3d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["3d"]["Size"] = UDim2.new(0.2189580649137497, 0, 0.9389510154724121, 0);
AZY["3d"]["Text"] = [[100%]];
AZY["3d"]["BackgroundTransparency"] = 1;
AZY["3d"]["Position"] = UDim2.new(0.7810419201850891, 0, 0.061042893677949905, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["3e"] = Instance.new("TextLabel", AZY["34"]);
AZY["3e"]["TextWrapped"] = true;
AZY["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3e"]["TextSize"] = 12;
AZY["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3e"]["Size"] = UDim2.new(0.5709924697875977, 0, 0.11561357975006104, 0);
AZY["3e"]["Text"] = [[Last activation:]];
AZY["3e"]["BackgroundTransparency"] = 1;
AZY["3e"]["Position"] = UDim2.new(0.05010330677032471, 0, 0.5460530519485474, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time
AZY["3f"] = Instance.new("TextLabel", AZY["34"]);
AZY["3f"]["TextWrapped"] = true;
AZY["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3f"]["TextSize"] = 12;
AZY["3f"]["TextColor3"] = Color3.fromRGB(178, 178, 178);
AZY["3f"]["Size"] = UDim2.new(0.6227233409881592, 0, 0.09644854068756104, 0);
AZY["3f"]["Text"] = [[Today, HH:MM AM]];
AZY["3f"]["Name"] = [[Time]];
AZY["3f"]["BackgroundTransparency"] = 1;
AZY["3f"]["Position"] = UDim2.new(0.08199998736381531, 0, 0.6469999551773071, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time.LocalScript
AZY["40"] = Instance.new("LocalScript", AZY["3f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore
AZY["41"] = Instance.new("TextButton", AZY["34"]);
AZY["41"]["TextWrapped"] = true;
AZY["41"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["41"]["TextSize"] = 15;
AZY["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["41"]["Size"] = UDim2.new(0.7855679988861084, 0, 0.17807699739933014, 0);
AZY["41"]["Name"] = [[Restore]];
AZY["41"]["Text"] = [[Restore]];
AZY["41"]["Position"] = UDim2.new(0.10590747743844986, 0, 0.7775270342826843, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.UICorner
AZY["42"] = Instance.new("UICorner", AZY["41"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.LocalScript
AZY["43"] = Instance.new("LocalScript", AZY["41"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage
AZY["44"] = Instance.new("Frame", AZY["2c"]);
AZY["44"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["44"]["BackgroundTransparency"] = 0.550000011920929;
AZY["44"]["Size"] = UDim2.new(0.6116291880607605, 0, 1.0292569398880005, 0);
AZY["44"]["Position"] = UDim2.new(0.3883708119392395, 0, 0.025084195658564568, 0);
AZY["44"]["Name"] = [[HaxPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.UICorner
AZY["45"] = Instance.new("UICorner", AZY["44"]);
AZY["45"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextLabel
AZY["46"] = Instance.new("TextLabel", AZY["44"]);
AZY["46"]["TextWrapped"] = true;
AZY["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["46"]["TextSize"] = 18;
AZY["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["46"]["Size"] = UDim2.new(0.3717169165611267, 0, 0.10439325869083405, 0);
AZY["46"]["Text"] = [[Quick Hacks]];
AZY["46"]["BackgroundTransparency"] = 1;
AZY["46"]["Position"] = UDim2.new(0.01899999938905239, 0, 0.03400000184774399, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Grav
AZY["47"] = Instance.new("BoolValue", AZY["44"]);
AZY["47"]["Name"] = [[Grav]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts
AZY["48"] = Instance.new("Folder", AZY["44"]);
AZY["48"]["Name"] = [[Scripts]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot
AZY["49"] = Instance.new("TextButton", AZY["48"]);
AZY["49"]["TextWrapped"] = true;
AZY["49"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["49"]["TextSize"] = 11;
AZY["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["49"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["49"]["Name"] = [[Aimbot]];
AZY["49"]["Text"] = [[AimBot]];
AZY["49"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.5989999771118164, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.UICorner
AZY["4a"] = Instance.new("UICorner", AZY["49"]);
AZY["4a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.LocalScript
AZY["4b"] = Instance.new("LocalScript", AZY["49"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools
AZY["4c"] = Instance.new("TextButton", AZY["48"]);
AZY["4c"]["TextWrapped"] = true;
AZY["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["4c"]["TextSize"] = 11;
AZY["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["4c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["4c"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["4c"]["Name"] = [[Btools]];
AZY["4c"]["Text"] = [[Btools]];
AZY["4c"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.4830000102519989, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.UICorner
AZY["4d"] = Instance.new("UICorner", AZY["4c"]);
AZY["4d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.LocalScript
AZY["4e"] = Instance.new("LocalScript", AZY["4c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex
AZY["4f"] = Instance.new("TextButton", AZY["48"]);
AZY["4f"]["TextWrapped"] = true;
AZY["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["4f"]["TextSize"] = 11;
AZY["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["4f"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["4f"]["Name"] = [[Dex]];
AZY["4f"]["Text"] = [[DEX Explorer]];
AZY["4f"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.2564218044281006, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.UICorner
AZY["50"] = Instance.new("UICorner", AZY["4f"]);
AZY["50"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.LocalScript
AZY["51"] = Instance.new("LocalScript", AZY["4f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP
AZY["52"] = Instance.new("TextButton", AZY["48"]);
AZY["52"]["TextWrapped"] = true;
AZY["52"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["52"]["TextSize"] = 11;
AZY["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["52"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["52"]["Name"] = [[FatesESP]];
AZY["52"]["Text"] = [[Fates ESP]];
AZY["52"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.3709999918937683, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.UICorner
AZY["53"] = Instance.new("UICorner", AZY["52"]);
AZY["53"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.LocalScript
AZY["54"] = Instance.new("LocalScript", AZY["52"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly
AZY["55"] = Instance.new("TextButton", AZY["48"]);
AZY["55"]["TextWrapped"] = true;
AZY["55"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["55"]["TextSize"] = 11;
AZY["55"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["55"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["55"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["55"]["Name"] = [[Fly]];
AZY["55"]["Text"] = [[Fly]];
AZY["55"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.7070000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.UICorner
AZY["56"] = Instance.new("UICorner", AZY["55"]);
AZY["56"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.LocalScript
AZY["57"] = Instance.new("LocalScript", AZY["55"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY
AZY["58"] = Instance.new("TextButton", AZY["48"]);
AZY["58"]["TextWrapped"] = true;
AZY["58"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["58"]["TextSize"] = 11;
AZY["58"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["58"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["58"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["58"]["Name"] = [[IY]];
AZY["58"]["Text"] = [[Infinite Yield]];
AZY["58"]["Position"] = UDim2.new(0.04595530033111572, 0, 0.13954126834869385, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.UICorner
AZY["59"] = Instance.new("UICorner", AZY["58"]);
AZY["59"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.LocalScript
AZY["5a"] = Instance.new("LocalScript", AZY["58"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub
AZY["5b"] = Instance.new("TextButton", AZY["48"]);
AZY["5b"]["TextWrapped"] = true;
AZY["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["5b"]["TextSize"] = 11;
AZY["5b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5b"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["5b"]["Name"] = [[PwnHub]];
AZY["5b"]["Text"] = [[Pwner Hub]];
AZY["5b"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.8209999799728394, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.UICorner
AZY["5c"] = Instance.new("UICorner", AZY["5b"]);
AZY["5c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.LocalScript
AZY["5d"] = Instance.new("LocalScript", AZY["5b"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextGrav
AZY["5e"] = Instance.new("TextLabel", AZY["44"]);
AZY["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5e"]["TextSize"] = 12;
AZY["5e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5e"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["5e"]["Text"] = [[Gravity]];
AZY["5e"]["Name"] = [[TextGrav]];
AZY["5e"]["BackgroundTransparency"] = 1;
AZY["5e"]["Position"] = UDim2.new(0.3269999921321869, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextWs
AZY["5f"] = Instance.new("TextLabel", AZY["44"]);
AZY["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5f"]["TextSize"] = 12;
AZY["5f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5f"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["5f"]["Text"] = [[Speed]];
AZY["5f"]["Name"] = [[TextWs]];
AZY["5f"]["BackgroundTransparency"] = 1;
AZY["5f"]["Position"] = UDim2.new(0.5411151647567749, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextJp
AZY["60"] = Instance.new("TextLabel", AZY["44"]);
AZY["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["60"]["TextSize"] = 12;
AZY["60"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["60"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["60"]["Text"] = [[Jump]];
AZY["60"]["Name"] = [[TextJp]];
AZY["60"]["BackgroundTransparency"] = 1;
AZY["60"]["Position"] = UDim2.new(0.7466657161712646, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Ws
AZY["61"] = Instance.new("BoolValue", AZY["44"]);
AZY["61"]["Name"] = [[Ws]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Jp
AZY["62"] = Instance.new("BoolValue", AZY["44"]);
AZY["62"]["Name"] = [[Jp]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav
AZY["63"] = Instance.new("TextButton", AZY["44"]);
AZY["63"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["63"]["TextSize"] = 14;
AZY["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["63"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["63"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["63"]["Name"] = [[ToggleGrav]];
AZY["63"]["Text"] = [[]];
AZY["63"]["Position"] = UDim2.new(0.40253645181655884, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.UICorner
AZY["64"] = Instance.new("UICorner", AZY["63"]);
AZY["64"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.LocalScript
AZY["65"] = Instance.new("LocalScript", AZY["63"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs
AZY["66"] = Instance.new("TextButton", AZY["44"]);
AZY["66"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["66"]["TextSize"] = 14;
AZY["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["66"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["66"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["66"]["Name"] = [[ToggleWs]];
AZY["66"]["Text"] = [[]];
AZY["66"]["Position"] = UDim2.new(0.6166515946388245, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.UICorner
AZY["67"] = Instance.new("UICorner", AZY["66"]);
AZY["67"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.LocalScript
AZY["68"] = Instance.new("LocalScript", AZY["66"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp
AZY["69"] = Instance.new("TextButton", AZY["44"]);
AZY["69"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["69"]["TextSize"] = 14;
AZY["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["69"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["69"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["69"]["Name"] = [[ToggleJp]];
AZY["69"]["Text"] = [[]];
AZY["69"]["Position"] = UDim2.new(0.8222021460533142, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.UICorner
AZY["6a"] = Instance.new("UICorner", AZY["69"]);
AZY["6a"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.LocalScript
AZY["6b"] = Instance.new("LocalScript", AZY["69"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS
AZY["6c"] = Instance.new("ImageButton", AZY["44"]);
AZY["6c"]["Active"] = false;
AZY["6c"]["BorderSizePixel"] = 0;
AZY["6c"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6c"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6c"]["SliceScale"] = 0.11999999731779099;
AZY["6c"]["ImageTransparency"] = 1;
AZY["6c"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["6c"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["6c"]["Selectable"] = false;
AZY["6c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["6c"]["Image"] = [[rbxassetid://3570695787]];
AZY["6c"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["6c"]["Name"] = [[JpS]];
AZY["6c"]["Rotation"] = -90;
AZY["6c"]["Position"] = UDim2.new(0.8600000143051147, 0, 0.4399999976158142, 0);
AZY["6c"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton
AZY["6d"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["6d"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6d"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6d"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["6d"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["6d"]["SliceScale"] = 0.11999999731779099;
AZY["6d"]["Selectable"] = true;
AZY["6d"]["Image"] = [[rbxassetid://3570695787]];
AZY["6d"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["6d"]["Active"] = true;
AZY["6d"]["Name"] = [[SliderButton]];
AZY["6d"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton.LocalScript
AZY["6e"] = Instance.new("LocalScript", AZY["6d"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.Border
AZY["6f"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["6f"]["ZIndex"] = -1;
AZY["6f"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6f"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6f"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["6f"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["6f"]["SliceScale"] = 0.23999999463558197;
AZY["6f"]["ImageTransparency"] = 1;
AZY["6f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["6f"]["Image"] = [[rbxassetid://3570695787]];
AZY["6f"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["6f"]["Name"] = [[Border]];
AZY["6f"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["6f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.Border.UICorner
AZY["70"] = Instance.new("UICorner", AZY["6f"]);
AZY["70"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.StripedPattern
AZY["71"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["71"]["BorderSizePixel"] = 0;
AZY["71"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["71"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["71"]["ImageTransparency"] = 1;
AZY["71"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["71"]["Image"] = [[rbxassetid://4925116997]];
AZY["71"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["71"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["71"]["Name"] = [[StripedPattern]];
AZY["71"]["BackgroundTransparency"] = 1;
AZY["71"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.StripedPattern.UIGradient
AZY["72"] = Instance.new("UIGradient", AZY["71"]);
AZY["72"]["Rotation"] = 90;
AZY["72"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.ImageLabel
AZY["73"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["73"]["Image"] = [[rbxassetid://12582573514]];
AZY["73"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["73"]["Rotation"] = 90;
AZY["73"]["BackgroundTransparency"] = 1;
AZY["73"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.TextLabel
AZY["74"] = Instance.new("TextBox", AZY["6c"]);
AZY["74"]["ZIndex"] = 2;
AZY["74"]["TextSize"] = 13;
AZY["74"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["74"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["74"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["74"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["74"]["BackgroundTransparency"] = 1;
AZY["74"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["74"]["Text"] = [[0%]];
AZY["74"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["74"]["Rotation"] = 90;
AZY["74"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS
AZY["75"] = Instance.new("ImageButton", AZY["44"]);
AZY["75"]["Active"] = false;
AZY["75"]["BorderSizePixel"] = 0;
AZY["75"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["75"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["75"]["SliceScale"] = 0.11999999731779099;
AZY["75"]["ImageTransparency"] = 1;
AZY["75"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["75"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["75"]["Selectable"] = false;
AZY["75"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["75"]["Image"] = [[rbxassetid://3570695787]];
AZY["75"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["75"]["Name"] = [[WsS]];
AZY["75"]["Rotation"] = -90;
AZY["75"]["Position"] = UDim2.new(0.6499999761581421, 0, 0.4399999976158142, 0);
AZY["75"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton
AZY["76"] = Instance.new("ImageLabel", AZY["75"]);
AZY["76"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["76"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["76"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["76"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["76"]["SliceScale"] = 0.11999999731779099;
AZY["76"]["Selectable"] = true;
AZY["76"]["Image"] = [[rbxassetid://3570695787]];
AZY["76"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["76"]["Active"] = true;
AZY["76"]["Name"] = [[SliderButton]];
AZY["76"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton.LocalScript
AZY["77"] = Instance.new("LocalScript", AZY["76"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.Border
AZY["78"] = Instance.new("ImageLabel", AZY["75"]);
AZY["78"]["ZIndex"] = -1;
AZY["78"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["78"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["78"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["78"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["78"]["SliceScale"] = 0.23999999463558197;
AZY["78"]["ImageTransparency"] = 1;
AZY["78"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["78"]["Image"] = [[rbxassetid://3570695787]];
AZY["78"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["78"]["Name"] = [[Border]];
AZY["78"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["78"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.Border.UICorner
AZY["79"] = Instance.new("UICorner", AZY["78"]);
AZY["79"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.StripedPattern
AZY["7a"] = Instance.new("ImageLabel", AZY["75"]);
AZY["7a"]["BorderSizePixel"] = 0;
AZY["7a"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7a"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["7a"]["ImageTransparency"] = 1;
AZY["7a"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["7a"]["Image"] = [[rbxassetid://4925116997]];
AZY["7a"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["7a"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["7a"]["Name"] = [[StripedPattern]];
AZY["7a"]["BackgroundTransparency"] = 1;
AZY["7a"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.StripedPattern.UIGradient
AZY["7b"] = Instance.new("UIGradient", AZY["7a"]);
AZY["7b"]["Rotation"] = 90;
AZY["7b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.ImageLabel
AZY["7c"] = Instance.new("ImageLabel", AZY["75"]);
AZY["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7c"]["Image"] = [[rbxassetid://12572149271]];
AZY["7c"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["7c"]["Rotation"] = 90;
AZY["7c"]["BackgroundTransparency"] = 1;
AZY["7c"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.TextLabel
AZY["7d"] = Instance.new("TextBox", AZY["75"]);
AZY["7d"]["ZIndex"] = 2;
AZY["7d"]["TextSize"] = 13;
AZY["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["7d"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["7d"]["BackgroundTransparency"] = 1;
AZY["7d"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["7d"]["Text"] = [[0%]];
AZY["7d"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["7d"]["Rotation"] = 90;
AZY["7d"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS
AZY["7e"] = Instance.new("ImageButton", AZY["44"]);
AZY["7e"]["Active"] = false;
AZY["7e"]["BorderSizePixel"] = 0;
AZY["7e"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["7e"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["7e"]["SliceScale"] = 0.11999999731779099;
AZY["7e"]["ImageTransparency"] = 1;
AZY["7e"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["7e"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["7e"]["Selectable"] = false;
AZY["7e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["7e"]["Image"] = [[rbxassetid://3570695787]];
AZY["7e"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["7e"]["Name"] = [[GravS]];
AZY["7e"]["Rotation"] = -90;
AZY["7e"]["Position"] = UDim2.new(0.4359999895095825, 0, 0.4399999976158142, 0);
AZY["7e"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton
AZY["7f"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["7f"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["7f"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["7f"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["7f"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["7f"]["SliceScale"] = 0.11999999731779099;
AZY["7f"]["Selectable"] = true;
AZY["7f"]["Image"] = [[rbxassetid://3570695787]];
AZY["7f"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["7f"]["Active"] = true;
AZY["7f"]["Name"] = [[SliderButton]];
AZY["7f"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton.LocalScript
AZY["80"] = Instance.new("LocalScript", AZY["7f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.Border
AZY["81"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["81"]["ZIndex"] = -1;
AZY["81"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["81"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["81"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["81"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["81"]["SliceScale"] = 0.23999999463558197;
AZY["81"]["ImageTransparency"] = 1;
AZY["81"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["81"]["Image"] = [[rbxassetid://3570695787]];
AZY["81"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["81"]["Name"] = [[Border]];
AZY["81"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["81"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.Border.UICorner
AZY["82"] = Instance.new("UICorner", AZY["81"]);
AZY["82"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.StripedPattern
AZY["83"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["83"]["BorderSizePixel"] = 0;
AZY["83"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["83"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["83"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["83"]["ImageTransparency"] = 1;
AZY["83"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["83"]["Image"] = [[rbxassetid://4925116997]];
AZY["83"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["83"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["83"]["Name"] = [[StripedPattern]];
AZY["83"]["BackgroundTransparency"] = 1;
AZY["83"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.StripedPattern.UIGradient
AZY["84"] = Instance.new("UIGradient", AZY["83"]);
AZY["84"]["Rotation"] = 90;
AZY["84"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.ImageLabel
AZY["85"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["85"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["85"]["Image"] = [[rbxassetid://12582575947]];
AZY["85"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["85"]["Rotation"] = 90;
AZY["85"]["BackgroundTransparency"] = 1;
AZY["85"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.TextLabel
AZY["86"] = Instance.new("TextBox", AZY["7e"]);
AZY["86"]["ZIndex"] = 2;
AZY["86"]["TextSize"] = 13;
AZY["86"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["86"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["86"]["BackgroundTransparency"] = 1;
AZY["86"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["86"]["Text"] = [[0%]];
AZY["86"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["86"]["Rotation"] = 90;
AZY["86"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs
AZY["87"] = Instance.new("Frame", AZY["2b"]);
AZY["87"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["87"]["BackgroundTransparency"] = 1;
AZY["87"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7735126614570618, 0);
AZY["87"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.18711429834365845, 0);
AZY["87"]["Visible"] = false;
AZY["87"]["Name"] = [[Changelogs]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage
AZY["88"] = Instance.new("Frame", AZY["87"]);
AZY["88"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["88"]["BackgroundTransparency"] = 0.550000011920929;
AZY["88"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.2235966920852661, 0);
AZY["88"]["Position"] = UDim2.new(0.0059703318402171135, 0, 0.020400146022439003, 0);
AZY["88"]["Name"] = [[TitlePage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.UICorner
AZY["89"] = Instance.new("UICorner", AZY["88"]);
AZY["89"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.ImageLabel
AZY["8a"] = Instance.new("ImageLabel", AZY["88"]);
AZY["8a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8a"]["Image"] = [[rbxassetid://12585006598]];
AZY["8a"]["Size"] = UDim2.new(0, 48, 0, 48);
AZY["8a"]["BackgroundTransparency"] = 1;
AZY["8a"]["Position"] = UDim2.new(0.16064772009849548, 0, -0.020948588848114014, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.TextLogo
AZY["8b"] = Instance.new("TextLabel", AZY["88"]);
AZY["8b"]["TextWrapped"] = true;
AZY["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["8b"]["TextSize"] = 17;
AZY["8b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8b"]["Size"] = UDim2.new(0.48227599263191223, 0, 0.442178338766098, 0);
AZY["8b"]["Text"] = [[SPDM Team]];
AZY["8b"]["Name"] = [[TextLogo]];
AZY["8b"]["BackgroundTransparency"] = 1;
AZY["8b"]["Position"] = UDim2.new(0.3840000033378601, 0, 0.2709999978542328, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.TextLogo.UITextSizeConstraint
AZY["8c"] = Instance.new("UITextSizeConstraint", AZY["8b"]);
AZY["8c"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits
AZY["8d"] = Instance.new("Frame", AZY["87"]);
AZY["8d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["8d"]["BackgroundTransparency"] = 0.550000011920929;
AZY["8d"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.7172916531562805, 0);
AZY["8d"]["Position"] = UDim2.new(0.0059703318402171135, 0, 0.28270816802978516, 0);
AZY["8d"]["Name"] = [[Credits]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.UICorner
AZY["8e"] = Instance.new("UICorner", AZY["8d"]);
AZY["8e"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.Title
AZY["8f"] = Instance.new("TextLabel", AZY["8d"]);
AZY["8f"]["TextWrapped"] = true;
AZY["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["8f"]["TextSize"] = 17;
AZY["8f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8f"]["Size"] = UDim2.new(0.32700005173683167, 0, 0.14513146877288818, 0);
AZY["8f"]["Text"] = [[About us]];
AZY["8f"]["Name"] = [[Title]];
AZY["8f"]["BackgroundTransparency"] = 1;
AZY["8f"]["Position"] = UDim2.new(0.056999966502189636, 0, 0.048999954015016556, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.Title.UITextSizeConstraint
AZY["90"] = Instance.new("UITextSizeConstraint", AZY["8f"]);
AZY["90"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame
AZY["91"] = Instance.new("ScrollingFrame", AZY["8d"]);
AZY["91"]["Active"] = true;
AZY["91"]["CanvasSize"] = UDim2.new(0, 0, 1.5, 0);
AZY["91"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["91"]["BackgroundTransparency"] = 1;
AZY["91"]["Size"] = UDim2.new(0, 175, 0, 110);
AZY["91"]["ScrollBarImageColor3"] = Color3.fromRGB(255, 0, 14);
AZY["91"]["BorderColor3"] = Color3.fromRGB(54, 0, 2);
AZY["91"]["ScrollBarThickness"] = 5;
AZY["91"]["Position"] = UDim2.new(-4.226361483006258e-08, 0, 0.20896700024604797, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["92"] = Instance.new("Frame", AZY["91"]);
AZY["92"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["92"]["BackgroundTransparency"] = 1;
AZY["92"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["92"]["Position"] = UDim2.new(0.11400000005960464, 0, 0, 0);
AZY["92"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["93"] = Instance.new("ImageLabel", AZY["92"]);
AZY["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["93"]["Image"] = [[rbxassetid://12585390334]];
AZY["93"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["93"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["94"] = Instance.new("TextLabel", AZY["92"]);
AZY["94"]["TextWrapped"] = true;
AZY["94"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["94"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["94"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["94"]["TextSize"] = 13;
AZY["94"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["94"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["94"]["Text"] = [[Chillz]];
AZY["94"]["Name"] = [[TextLogo]];
AZY["94"]["BackgroundTransparency"] = 1;
AZY["94"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["95"] = Instance.new("UITextSizeConstraint", AZY["94"]);
AZY["95"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["96"] = Instance.new("TextLabel", AZY["92"]);
AZY["96"]["TextWrapped"] = true;
AZY["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["96"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["96"]["TextSize"] = 11;
AZY["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["96"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["96"]["Text"] = [[UI Everything]];
AZY["96"]["Name"] = [[Desc]];
AZY["96"]["BackgroundTransparency"] = 1;
AZY["96"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["97"] = Instance.new("UITextSizeConstraint", AZY["96"]);
AZY["97"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["98"] = Instance.new("Frame", AZY["91"]);
AZY["98"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["98"]["BackgroundTransparency"] = 1;
AZY["98"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["98"]["Position"] = UDim2.new(0.11400000005960464, 0, 0.19155307114124298, 0);
AZY["98"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["99"] = Instance.new("ImageLabel", AZY["98"]);
AZY["99"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["99"]["Image"] = [[rbxassetid://12585434446]];
AZY["99"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["99"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["9a"] = Instance.new("TextLabel", AZY["98"]);
AZY["9a"]["TextWrapped"] = true;
AZY["9a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["9a"]["TextSize"] = 13;
AZY["9a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9a"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["9a"]["Text"] = [[Ash01#0947]];
AZY["9a"]["Name"] = [[TextLogo]];
AZY["9a"]["BackgroundTransparency"] = 1;
AZY["9a"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["9b"] = Instance.new("UITextSizeConstraint", AZY["9a"]);
AZY["9b"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["9c"] = Instance.new("TextLabel", AZY["98"]);
AZY["9c"]["TextWrapped"] = true;
AZY["9c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["9c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["9c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9c"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["9c"]["Text"] = [[Pwner Hub Owner / Creator]];
AZY["9c"]["Name"] = [[Desc]];
AZY["9c"]["BackgroundTransparency"] = 1;
AZY["9c"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["9d"] = Instance.new("UITextSizeConstraint", AZY["9c"]);
AZY["9d"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["9e"] = Instance.new("Frame", AZY["91"]);
AZY["9e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["9e"]["BackgroundTransparency"] = 1;
AZY["9e"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["9e"]["Position"] = UDim2.new(0.11400000005960464, 0, 0.38310614228248596, 0);
AZY["9e"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["9f"] = Instance.new("ImageLabel", AZY["9e"]);
AZY["9f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9f"]["Image"] = [[http://www.roblox.com/asset/?id=12642988505]];
AZY["9f"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["9f"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["a0"] = Instance.new("TextLabel", AZY["9e"]);
AZY["a0"]["TextWrapped"] = true;
AZY["a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a0"]["TextSize"] = 13;
AZY["a0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a0"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["a0"]["Text"] = [[Bread!]];
AZY["a0"]["Name"] = [[TextLogo]];
AZY["a0"]["BackgroundTransparency"] = 1;
AZY["a0"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["a1"] = Instance.new("UITextSizeConstraint", AZY["a0"]);
AZY["a1"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["a2"] = Instance.new("TextLabel", AZY["9e"]);
AZY["a2"]["TextWrapped"] = true;
AZY["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a2"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["a2"]["Text"] = [[UI Slider Fixes And Textbox]];
AZY["a2"]["Name"] = [[Desc]];
AZY["a2"]["BackgroundTransparency"] = 1;
AZY["a2"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["a3"] = Instance.new("UITextSizeConstraint", AZY["a2"]);
AZY["a3"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog
AZY["a4"] = Instance.new("Frame", AZY["87"]);
AZY["a4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["a4"]["BackgroundTransparency"] = 0.550000011920929;
AZY["a4"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.7172916531562805, 0);
AZY["a4"]["Position"] = UDim2.new(0.5088531970977783, 0, 0.020400196313858032, 0);
AZY["a4"]["Name"] = [[Changelog]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.UICorner
AZY["a5"] = Instance.new("UICorner", AZY["a4"]);
AZY["a5"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.TextLogo
AZY["a6"] = Instance.new("TextLabel", AZY["a4"]);
AZY["a6"]["TextWrapped"] = true;
AZY["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a6"]["TextSize"] = 19;
AZY["a6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a6"]["Size"] = UDim2.new(0.39918234944343567, 0, 0.14513146877288818, 0);
AZY["a6"]["Text"] = [[Changelog]];
AZY["a6"]["Name"] = [[TextLogo]];
AZY["a6"]["BackgroundTransparency"] = 1;
AZY["a6"]["Position"] = UDim2.new(0.05700000002980232, 0, 0.04899999871850014, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.TextLogo.UITextSizeConstraint
AZY["a7"] = Instance.new("UITextSizeConstraint", AZY["a6"]);
AZY["a7"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver
AZY["a8"] = Instance.new("TextLabel", AZY["a4"]);
AZY["a8"]["TextWrapped"] = true;
AZY["a8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a8"]["TextSize"] = 13;
AZY["a8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a8"]["Size"] = UDim2.new(0.240515798330307, 0, 0.14513146877288818, 0);
AZY["a8"]["Text"] = [[v3.0.1]];
AZY["a8"]["Name"] = [[Ver]];
AZY["a8"]["BackgroundTransparency"] = 1;
AZY["a8"]["Position"] = UDim2.new(0.6331158876419067, 0, 0.04900005832314491, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver.UITextSizeConstraint
AZY["a9"] = Instance.new("UITextSizeConstraint", AZY["a8"]);
AZY["a9"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver
AZY["aa"] = Instance.new("TextLabel", AZY["a4"]);
AZY["aa"]["TextWrapped"] = true;
AZY["aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["aa"]["TextSize"] = 9;
AZY["aa"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["aa"]["Size"] = UDim2.new(0.0997123271226883, 0, 0.08936085551977158, 0);
AZY["aa"]["Text"] = [[beta]];
AZY["aa"]["Name"] = [[Ver]];
AZY["aa"]["BackgroundTransparency"] = 1;
AZY["aa"]["Position"] = UDim2.new(0.8399999737739563, 0, 0.0820000022649765, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver.UITextSizeConstraint
AZY["ab"] = Instance.new("UITextSizeConstraint", AZY["aa"]);
AZY["ab"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame
AZY["ac"] = Instance.new("ScrollingFrame", AZY["a4"]);
AZY["ac"]["Active"] = true;
AZY["ac"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ac"]["BackgroundTransparency"] = 1;
AZY["ac"]["Size"] = UDim2.new(0, 165, 0, 113);
AZY["ac"]["ScrollBarImageColor3"] = Color3.fromRGB(255, 0, 14);
AZY["ac"]["BorderColor3"] = Color3.fromRGB(54, 0, 2);
AZY["ac"]["ScrollBarThickness"] = 5;
AZY["ac"]["Position"] = UDim2.new(0.05699992552399635, 0, 0.20896704494953156, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab
AZY["ad"] = Instance.new("Frame", AZY["ac"]);
AZY["ad"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["ad"]["BackgroundTransparency"] = 1;
AZY["ad"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["ad"]["Position"] = UDim2.new(-0.001135505735874176, 0, 0.008439034223556519, 0);
AZY["ad"]["Name"] = [[ChangelogTab]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.UICorner
AZY["ae"] = Instance.new("UICorner", AZY["ad"]);
AZY["ae"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["af"] = Instance.new("TextLabel", AZY["ad"]);
AZY["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["af"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["af"]["TextSize"] = 56;
AZY["af"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["af"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["af"]["Text"] = [[.]];
AZY["af"]["BackgroundTransparency"] = 1;
AZY["af"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["b0"] = Instance.new("TextLabel", AZY["ad"]);
AZY["b0"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["b0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["b0"]["TextSize"] = 14;
AZY["b0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b0"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["b0"]["Text"] = [[New]];
AZY["b0"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel.UICorner
AZY["b1"] = Instance.new("UICorner", AZY["b0"]);
AZY["b1"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["b2"] = Instance.new("TextLabel", AZY["ad"]);
AZY["b2"]["TextWrapped"] = true;
AZY["b2"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["b2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b2"]["TextSize"] = 11;
AZY["b2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b2"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["b2"]["Text"] = [[Floating icon now with addec functionality! In addition to opening the mod menu, holding it down will take you directly to your desired page]];
AZY["b2"]["BackgroundTransparency"] = 1;
AZY["b2"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1
AZY["b3"] = Instance.new("Frame", AZY["ac"]);
AZY["b3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["b3"]["BackgroundTransparency"] = 1;
AZY["b3"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["b3"]["Position"] = UDim2.new(-0.0071961116045713425, 0, 0.20108048617839813, 0);
AZY["b3"]["Name"] = [[ChangelogTab1]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.UICorner
AZY["b4"] = Instance.new("UICorner", AZY["b3"]);
AZY["b4"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b5"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b5"]["TextSize"] = 56;
AZY["b5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b5"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["b5"]["Text"] = [[.]];
AZY["b5"]["BackgroundTransparency"] = 1;
AZY["b5"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b6"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b6"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["b6"]["TextSize"] = 14;
AZY["b6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b6"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["b6"]["Text"] = [[New]];
AZY["b6"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel.UICorner
AZY["b7"] = Instance.new("UICorner", AZY["b6"]);
AZY["b7"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b8"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b8"]["TextWrapped"] = true;
AZY["b8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b8"]["TextSize"] = 11;
AZY["b8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b8"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["b8"]["Text"] = [[Stunning Design with breathtaking graphical elements, animations, colors and beautiful icons!]];
AZY["b8"]["BackgroundTransparency"] = 1;
AZY["b8"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2
AZY["b9"] = Instance.new("Frame", AZY["ac"]);
AZY["b9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["b9"]["BackgroundTransparency"] = 1;
AZY["b9"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["b9"]["Position"] = UDim2.new(-0.0010000000474974513, 0, 0.3869999945163727, 0);
AZY["b9"]["Name"] = [[ChangelogTab2]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.UICorner
AZY["ba"] = Instance.new("UICorner", AZY["b9"]);
AZY["ba"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["bb"] = Instance.new("TextLabel", AZY["b9"]);
AZY["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["bb"]["TextSize"] = 56;
AZY["bb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bb"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["bb"]["Text"] = [[.]];
AZY["bb"]["BackgroundTransparency"] = 1;
AZY["bb"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["bc"] = Instance.new("TextLabel", AZY["b9"]);
AZY["bc"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["bc"]["TextSize"] = 14;
AZY["bc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bc"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["bc"]["Text"] = [[New]];
AZY["bc"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel.UICorner
AZY["bd"] = Instance.new("UICorner", AZY["bc"]);
AZY["bd"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["be"] = Instance.new("TextLabel", AZY["b9"]);
AZY["be"]["TextWrapped"] = true;
AZY["be"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["be"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["be"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["be"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["be"]["TextSize"] = 11;
AZY["be"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["be"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["be"]["Text"] = [[Window design with comfortable UI movement and a semi-transparent mod menu for a less intrusive gaming experience!]];
AZY["be"]["BackgroundTransparency"] = 1;
AZY["be"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3
AZY["bf"] = Instance.new("Frame", AZY["ac"]);
AZY["bf"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["bf"]["BackgroundTransparency"] = 1;
AZY["bf"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["bf"]["Position"] = UDim2.new(0.005060605704784393, 0, 0.5927019119262695, 0);
AZY["bf"]["Name"] = [[ChangelogTab3]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.UICorner
AZY["c0"] = Instance.new("UICorner", AZY["bf"]);
AZY["c0"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c1"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["c1"]["TextSize"] = 56;
AZY["c1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c1"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["c1"]["Text"] = [[.]];
AZY["c1"]["BackgroundTransparency"] = 1;
AZY["c1"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c2"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c2"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["c2"]["TextSize"] = 14;
AZY["c2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c2"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["c2"]["Text"] = [[New]];
AZY["c2"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel.UICorner
AZY["c3"] = Instance.new("UICorner", AZY["c2"]);
AZY["c3"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c4"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c4"]["TextWrapped"] = true;
AZY["c4"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["c4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["c4"]["TextSize"] = 11;
AZY["c4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c4"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["c4"]["Text"] = [[Info page with all information about our team and our social media! Plus an intuitive and well-designed changelog.]];
AZY["c4"]["BackgroundTransparency"] = 1;
AZY["c4"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications
AZY["c5"] = Instance.new("Frame", AZY["87"]);
AZY["c5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["c5"]["BackgroundTransparency"] = 0.550000011920929;
AZY["c5"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.2235966920852661, 0);
AZY["c5"]["Position"] = UDim2.new(0.5088531970977783, 0, 0.774535596370697, 0);
AZY["c5"]["Name"] = [[Communications]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.UICorner
AZY["c6"] = Instance.new("UICorner", AZY["c5"]);
AZY["c6"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy
AZY["c7"] = Instance.new("TextButton", AZY["c5"]);
AZY["c7"]["TextWrapped"] = true;
AZY["c7"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["c7"]["TextSize"] = 12;
AZY["c7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["c7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c7"]["Size"] = UDim2.new(0.41421639919281006, 0, 0.503000020980835, 0);
AZY["c7"]["Name"] = [[Copy]];
AZY["c7"]["Text"] = [[Copy Link]];
AZY["c7"]["Position"] = UDim2.new(0.03737286850810051, 0, 0.22850681841373444, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.UICorner
AZY["c8"] = Instance.new("UICorner", AZY["c7"]);
AZY["c8"]["CornerRadius"] = UDim.new(0, 6);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.LocalScript
AZY["c9"] = Instance.new("LocalScript", AZY["c7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo
AZY["ca"] = Instance.new("TextLabel", AZY["c5"]);
AZY["ca"]["TextWrapped"] = true;
AZY["ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ca"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["ca"]["TextSize"] = 19;
AZY["ca"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ca"]["Size"] = UDim2.new(0.14990141987800598, 0, 0.2844810485839844, 0);
AZY["ca"]["Text"] = [[Or]];
AZY["ca"]["Name"] = [[TextLogo]];
AZY["ca"]["BackgroundTransparency"] = 1;
AZY["ca"]["Position"] = UDim2.new(0.45584943890571594, 0, 0.30038517713546753, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo.UITextSizeConstraint
AZY["cb"] = Instance.new("UITextSizeConstraint", AZY["ca"]);
AZY["cb"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo
AZY["cc"] = Instance.new("TextLabel", AZY["c5"]);
AZY["cc"]["TextWrapped"] = true;
AZY["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["cc"]["TextSize"] = 19;
AZY["cc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["cc"]["Size"] = UDim2.new(0.4056611955165863, 0, 0.2844810485839844, 0);
AZY["cc"]["Text"] = [[AZY#0348]];
AZY["cc"]["Name"] = [[TextLogo]];
AZY["cc"]["BackgroundTransparency"] = 1;
AZY["cc"]["Position"] = UDim2.new(0.5839999914169312, 0, 0.29899999499320984, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo.UITextSizeConstraint
AZY["cd"] = Instance.new("UITextSizeConstraint", AZY["cc"]);
AZY["cd"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax
AZY["ce"] = Instance.new("Frame", AZY["2b"]);
AZY["ce"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["ce"]["BackgroundTransparency"] = 0.550000011920929;
AZY["ce"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7551097869873047, 0);
AZY["ce"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.20551720261573792, 0);
AZY["ce"]["Visible"] = false;
AZY["ce"]["Name"] = [[BuiltInHax]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.UICorner
AZY["cf"] = Instance.new("UICorner", AZY["ce"]);
AZY["cf"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage
AZY["d0"] = Instance.new("Frame", AZY["ce"]);
AZY["d0"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d0"]["BackgroundTransparency"] = 1;
AZY["d0"]["Size"] = UDim2.new(0.6116291880607605, 0, 1.0292569398880005, 0);
AZY["d0"]["Position"] = UDim2.new(0.3700365424156189, 0, -0.03249453008174896, 0);
AZY["d0"]["Name"] = [[HaxPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextWs
AZY["d1"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d1"]["TextSize"] = 12;
AZY["d1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d1"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d1"]["Text"] = [[Speed]];
AZY["d1"]["Name"] = [[TextWs]];
AZY["d1"]["BackgroundTransparency"] = 1;
AZY["d1"]["Position"] = UDim2.new(0.5411151647567749, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextJp
AZY["d2"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d2"]["TextSize"] = 12;
AZY["d2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d2"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d2"]["Text"] = [[Jump]];
AZY["d2"]["Name"] = [[TextJp]];
AZY["d2"]["BackgroundTransparency"] = 1;
AZY["d2"]["Position"] = UDim2.new(0.7466657161712646, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextGrav
AZY["d3"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d3"]["TextSize"] = 12;
AZY["d3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d3"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d3"]["Text"] = [[Gravity]];
AZY["d3"]["Name"] = [[TextGrav]];
AZY["d3"]["BackgroundTransparency"] = 1;
AZY["d3"]["Position"] = UDim2.new(0.3269999921321869, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav
AZY["d4"] = Instance.new("TextButton", AZY["d0"]);
AZY["d4"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["d4"]["TextSize"] = 14;
AZY["d4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["d4"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d4"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["d4"]["Name"] = [[ToggleGrav]];
AZY["d4"]["Text"] = [[]];
AZY["d4"]["Position"] = UDim2.new(0.40253645181655884, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.UICorner
AZY["d5"] = Instance.new("UICorner", AZY["d4"]);
AZY["d5"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.LocalScript
AZY["d6"] = Instance.new("LocalScript", AZY["d4"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp
AZY["d7"] = Instance.new("TextButton", AZY["d0"]);
AZY["d7"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["d7"]["TextSize"] = 14;
AZY["d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["d7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d7"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["d7"]["Name"] = [[ToggleJp]];
AZY["d7"]["Text"] = [[]];
AZY["d7"]["Position"] = UDim2.new(0.8222021460533142, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.UICorner
AZY["d8"] = Instance.new("UICorner", AZY["d7"]);
AZY["d8"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.LocalScript
AZY["d9"] = Instance.new("LocalScript", AZY["d7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs
AZY["da"] = Instance.new("TextButton", AZY["d0"]);
AZY["da"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["da"]["TextSize"] = 14;
AZY["da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["da"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["da"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["da"]["Name"] = [[ToggleWs]];
AZY["da"]["Text"] = [[]];
AZY["da"]["Position"] = UDim2.new(0.6166515946388245, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.UICorner
AZY["db"] = Instance.new("UICorner", AZY["da"]);
AZY["db"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.LocalScript
AZY["dc"] = Instance.new("LocalScript", AZY["da"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS
AZY["dd"] = Instance.new("ImageButton", AZY["d0"]);
AZY["dd"]["Active"] = false;
AZY["dd"]["BorderSizePixel"] = 0;
AZY["dd"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["dd"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["dd"]["SliceScale"] = 0.11999999731779099;
AZY["dd"]["ImageTransparency"] = 1;
AZY["dd"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["dd"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["dd"]["Selectable"] = false;
AZY["dd"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["dd"]["Image"] = [[rbxassetid://3570695787]];
AZY["dd"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["dd"]["Name"] = [[WsS]];
AZY["dd"]["Rotation"] = -90;
AZY["dd"]["Position"] = UDim2.new(0.6499999761581421, 0, 0.4399999976158142, 0);
AZY["dd"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton
AZY["de"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["de"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["de"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["de"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["de"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["de"]["SliceScale"] = 0.11999999731779099;
AZY["de"]["Selectable"] = true;
AZY["de"]["Image"] = [[rbxassetid://3570695787]];
AZY["de"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["de"]["Active"] = true;
AZY["de"]["Name"] = [[SliderButton]];
AZY["de"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton.LocalScript
AZY["df"] = Instance.new("LocalScript", AZY["de"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.Border
AZY["e0"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e0"]["ZIndex"] = -1;
AZY["e0"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e0"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e0"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["e0"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e0"]["SliceScale"] = 0.23999999463558197;
AZY["e0"]["ImageTransparency"] = 1;
AZY["e0"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e0"]["Image"] = [[rbxassetid://3570695787]];
AZY["e0"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["e0"]["Name"] = [[Border]];
AZY["e0"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["e0"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.Border.UICorner
AZY["e1"] = Instance.new("UICorner", AZY["e0"]);
AZY["e1"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.StripedPattern
AZY["e2"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e2"]["BorderSizePixel"] = 0;
AZY["e2"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["e2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e2"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["e2"]["ImageTransparency"] = 1;
AZY["e2"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["e2"]["Image"] = [[rbxassetid://4925116997]];
AZY["e2"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["e2"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["e2"]["Name"] = [[StripedPattern]];
AZY["e2"]["BackgroundTransparency"] = 1;
AZY["e2"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.StripedPattern.UIGradient
AZY["e3"] = Instance.new("UIGradient", AZY["e2"]);
AZY["e3"]["Rotation"] = 90;
AZY["e3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.ImageLabel
AZY["e4"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e4"]["Image"] = [[rbxassetid://12572149271]];
AZY["e4"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["e4"]["Rotation"] = 90;
AZY["e4"]["BackgroundTransparency"] = 1;
AZY["e4"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.TextLabel
AZY["e5"] = Instance.new("TextBox", AZY["dd"]);
AZY["e5"]["CursorPosition"] = -1;
AZY["e5"]["ZIndex"] = 2;
AZY["e5"]["TextSize"] = 13;
AZY["e5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["e5"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["e5"]["BackgroundTransparency"] = 1;
AZY["e5"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["e5"]["Text"] = [[0%]];
AZY["e5"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["e5"]["Rotation"] = 90;
AZY["e5"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS
AZY["e6"] = Instance.new("ImageButton", AZY["d0"]);
AZY["e6"]["Active"] = false;
AZY["e6"]["BorderSizePixel"] = 0;
AZY["e6"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e6"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e6"]["SliceScale"] = 0.11999999731779099;
AZY["e6"]["ImageTransparency"] = 1;
AZY["e6"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["e6"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["e6"]["Selectable"] = false;
AZY["e6"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e6"]["Image"] = [[rbxassetid://3570695787]];
AZY["e6"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["e6"]["Name"] = [[JpS]];
AZY["e6"]["Rotation"] = -90;
AZY["e6"]["Position"] = UDim2.new(0.8600000143051147, 0, 0.4399999976158142, 0);
AZY["e6"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton
AZY["e7"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["e7"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e7"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e7"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e7"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["e7"]["SliceScale"] = 0.11999999731779099;
AZY["e7"]["Selectable"] = true;
AZY["e7"]["Image"] = [[rbxassetid://3570695787]];
AZY["e7"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["e7"]["Active"] = true;
AZY["e7"]["Name"] = [[SliderButton]];
AZY["e7"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton.LocalScript
AZY["e8"] = Instance.new("LocalScript", AZY["e7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.Border
AZY["e9"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["e9"]["ZIndex"] = -1;
AZY["e9"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e9"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e9"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["e9"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e9"]["SliceScale"] = 0.23999999463558197;
AZY["e9"]["ImageTransparency"] = 1;
AZY["e9"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e9"]["Image"] = [[rbxassetid://3570695787]];
AZY["e9"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["e9"]["Name"] = [[Border]];
AZY["e9"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["e9"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.Border.UICorner
AZY["ea"] = Instance.new("UICorner", AZY["e9"]);
AZY["ea"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.StripedPattern
AZY["eb"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["eb"]["BorderSizePixel"] = 0;
AZY["eb"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["eb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["eb"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["eb"]["ImageTransparency"] = 1;
AZY["eb"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["eb"]["Image"] = [[rbxassetid://4925116997]];
AZY["eb"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["eb"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["eb"]["Name"] = [[StripedPattern]];
AZY["eb"]["BackgroundTransparency"] = 1;
AZY["eb"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.StripedPattern.UIGradient
AZY["ec"] = Instance.new("UIGradient", AZY["eb"]);
AZY["ec"]["Rotation"] = 90;
AZY["ec"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.ImageLabel
AZY["ed"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ed"]["Image"] = [[rbxassetid://12582573514]];
AZY["ed"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["ed"]["Rotation"] = 90;
AZY["ed"]["BackgroundTransparency"] = 1;
AZY["ed"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.TextLabel
AZY["ee"] = Instance.new("TextBox", AZY["e6"]);
AZY["ee"]["ZIndex"] = 2;
AZY["ee"]["TextSize"] = 13;
AZY["ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ee"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["ee"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["ee"]["BackgroundTransparency"] = 1;
AZY["ee"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["ee"]["Text"] = [[0%]];
AZY["ee"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["ee"]["Rotation"] = 90;
AZY["ee"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS
AZY["ef"] = Instance.new("ImageButton", AZY["d0"]);
AZY["ef"]["Active"] = false;
AZY["ef"]["BorderSizePixel"] = 0;
AZY["ef"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["ef"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["ef"]["SliceScale"] = 0.11999999731779099;
AZY["ef"]["ImageTransparency"] = 1;
AZY["ef"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["ef"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["ef"]["Selectable"] = false;
AZY["ef"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["ef"]["Image"] = [[rbxassetid://3570695787]];
AZY["ef"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["ef"]["Name"] = [[GravS]];
AZY["ef"]["Rotation"] = -90;
AZY["ef"]["Position"] = UDim2.new(0.4359999895095825, 0, 0.4399999976158142, 0);
AZY["ef"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton
AZY["f0"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f0"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["f0"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["f0"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["f0"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["f0"]["SliceScale"] = 0.11999999731779099;
AZY["f0"]["Selectable"] = true;
AZY["f0"]["Image"] = [[rbxassetid://3570695787]];
AZY["f0"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["f0"]["Active"] = true;
AZY["f0"]["Name"] = [[SliderButton]];
AZY["f0"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton.LocalScript
AZY["f1"] = Instance.new("LocalScript", AZY["f0"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.Border
AZY["f2"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f2"]["ZIndex"] = -1;
AZY["f2"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["f2"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["f2"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["f2"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["f2"]["SliceScale"] = 0.23999999463558197;
AZY["f2"]["ImageTransparency"] = 1;
AZY["f2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["f2"]["Image"] = [[rbxassetid://3570695787]];
AZY["f2"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["f2"]["Name"] = [[Border]];
AZY["f2"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["f2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.Border.UICorner
AZY["f3"] = Instance.new("UICorner", AZY["f2"]);
AZY["f3"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.StripedPattern
AZY["f4"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f4"]["BorderSizePixel"] = 0;
AZY["f4"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["f4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f4"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["f4"]["ImageTransparency"] = 1;
AZY["f4"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["f4"]["Image"] = [[rbxassetid://4925116997]];
AZY["f4"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["f4"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["f4"]["Name"] = [[StripedPattern]];
AZY["f4"]["BackgroundTransparency"] = 1;
AZY["f4"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.StripedPattern.UIGradient
AZY["f5"] = Instance.new("UIGradient", AZY["f4"]);
AZY["f5"]["Rotation"] = 90;
AZY["f5"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.ImageLabel
AZY["f6"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f6"]["Image"] = [[rbxassetid://12582575947]];
AZY["f6"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["f6"]["Rotation"] = 90;
AZY["f6"]["BackgroundTransparency"] = 1;
AZY["f6"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.TextLabel
AZY["f7"] = Instance.new("TextBox", AZY["ef"]);
AZY["f7"]["ZIndex"] = 2;
AZY["f7"]["TextSize"] = 13;
AZY["f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["f7"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["f7"]["BackgroundTransparency"] = 1;
AZY["f7"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["f7"]["Text"] = [[0%]];
AZY["f7"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["f7"]["Rotation"] = 90;
AZY["f7"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Grav
AZY["f8"] = Instance.new("BoolValue", AZY["d0"]);
AZY["f8"]["Name"] = [[Grav]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Jp
AZY["f9"] = Instance.new("BoolValue", AZY["d0"]);
AZY["f9"]["Name"] = [[Jp]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Ws
AZY["fa"] = Instance.new("BoolValue", AZY["d0"]);
AZY["fa"]["Name"] = [[Ws]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts
AZY["fb"] = Instance.new("Folder", AZY["ce"]);
AZY["fb"]["Name"] = [[Scripts]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot
AZY["fc"] = Instance.new("TextButton", AZY["fb"]);
AZY["fc"]["TextWrapped"] = true;
AZY["fc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["fc"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["fc"]["TextSize"] = 13;
AZY["fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["fc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["fc"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["fc"]["Name"] = [[Aimbot]];
AZY["fc"]["Text"] = [[       AimBot]];
AZY["fc"]["Position"] = UDim2.new(0.030552715063095093, 0, 0.3302992284297943, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.UICorner
AZY["fd"] = Instance.new("UICorner", AZY["fc"]);
AZY["fd"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.LocalScript
AZY["fe"] = Instance.new("LocalScript", AZY["fc"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.Info
AZY["ff"] = Instance.new("ImageLabel", AZY["fc"]);
AZY["ff"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ff"]["Image"] = [[rbxassetid://12585776892]];
AZY["ff"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["ff"]["Name"] = [[Info]];
AZY["ff"]["BackgroundTransparency"] = 1;
AZY["ff"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools
AZY["100"] = Instance.new("TextButton", AZY["fb"]);
AZY["100"]["TextWrapped"] = true;
AZY["100"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["100"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["100"]["TextSize"] = 13;
AZY["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["100"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["100"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["100"]["Name"] = [[Btools]];
AZY["100"]["Text"] = [[         BTools]];
AZY["100"]["Position"] = UDim2.new(0.2924708425998688, 0, 0.18550994992256165, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.UICorner
AZY["101"] = Instance.new("UICorner", AZY["100"]);
AZY["101"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.LocalScript
AZY["102"] = Instance.new("LocalScript", AZY["100"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.Info
AZY["103"] = Instance.new("ImageLabel", AZY["100"]);
AZY["103"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["103"]["Image"] = [[rbxassetid://12585776892]];
AZY["103"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["103"]["Name"] = [[Info]];
AZY["103"]["BackgroundTransparency"] = 1;
AZY["103"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex
AZY["104"] = Instance.new("TextButton", AZY["fb"]);
AZY["104"]["TextWrapped"] = true;
AZY["104"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["104"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["104"]["TextSize"] = 13;
AZY["104"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["104"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["104"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["104"]["Name"] = [[Dex]];
AZY["104"]["Text"] = [[  DEX Explorer]];
AZY["104"]["Position"] = UDim2.new(0.2938356399536133, 0, 0.04143177345395088, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.UICorner
AZY["105"] = Instance.new("UICorner", AZY["104"]);
AZY["105"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.LocalScript
AZY["106"] = Instance.new("LocalScript", AZY["104"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.Info
AZY["107"] = Instance.new("ImageLabel", AZY["104"]);
AZY["107"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["107"]["Image"] = [[rbxassetid://12585776892]];
AZY["107"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["107"]["Name"] = [[Info]];
AZY["107"]["BackgroundTransparency"] = 1;
AZY["107"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP
AZY["108"] = Instance.new("TextButton", AZY["fb"]);
AZY["108"]["TextWrapped"] = true;
AZY["108"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["108"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["108"]["TextSize"] = 13;
AZY["108"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["108"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["108"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["108"]["Name"] = [[FatesESP]];
AZY["108"]["Text"] = [[      Fates ESP]];
AZY["108"]["Position"] = UDim2.new(0.0331718735396862, 0, 0.18866735696792603, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.UICorner
AZY["109"] = Instance.new("UICorner", AZY["108"]);
AZY["109"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.LocalScript
AZY["10a"] = Instance.new("LocalScript", AZY["108"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.Info
AZY["10b"] = Instance.new("ImageLabel", AZY["108"]);
AZY["10b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10b"]["Image"] = [[rbxassetid://12585776892]];
AZY["10b"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["10b"]["Name"] = [[Info]];
AZY["10b"]["BackgroundTransparency"] = 1;
AZY["10b"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly
AZY["10c"] = Instance.new("TextButton", AZY["fb"]);
AZY["10c"]["TextWrapped"] = true;
AZY["10c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["10c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["10c"]["TextSize"] = 13;
AZY["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["10c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10c"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["10c"]["Name"] = [[Fly]];
AZY["10c"]["Text"] = [[           Fly]];
AZY["10c"]["Position"] = UDim2.new(0.28985166549682617, 0, 0.3375365436077118, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.UICorner
AZY["10d"] = Instance.new("UICorner", AZY["10c"]);
AZY["10d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.LocalScript
AZY["10e"] = Instance.new("LocalScript", AZY["10c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.Info
AZY["10f"] = Instance.new("ImageLabel", AZY["10c"]);
AZY["10f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10f"]["Image"] = [[rbxassetid://12585776892]];
AZY["10f"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["10f"]["Name"] = [[Info]];
AZY["10f"]["BackgroundTransparency"] = 1;
AZY["10f"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY
AZY["110"] = Instance.new("TextButton", AZY["fb"]);
AZY["110"]["TextWrapped"] = true;
AZY["110"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["110"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["110"]["TextSize"] = 13;
AZY["110"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["110"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["110"]["Size"] = UDim2.new(0.22804169356822968, 0, 0.0958060473203659, 0);
AZY["110"]["Name"] = [[IY]];
AZY["110"]["Text"] = [[  Infinite Yield]];
AZY["110"]["Position"] = UDim2.new(0.03485134616494179, 0, 0.04589534550905228, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.UICorner
AZY["111"] = Instance.new("UICorner", AZY["110"]);
AZY["111"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.LocalScript
AZY["112"] = Instance.new("LocalScript", AZY["110"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.Info
AZY["113"] = Instance.new("ImageLabel", AZY["110"]);
AZY["113"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["113"]["Image"] = [[rbxassetid://12585776892]];
AZY["113"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["113"]["Name"] = [[Info]];
AZY["113"]["BackgroundTransparency"] = 1;
AZY["113"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub
AZY["114"] = Instance.new("TextButton", AZY["fb"]);
AZY["114"]["TextWrapped"] = true;
AZY["114"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["114"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["114"]["TextSize"] = 13;
AZY["114"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["114"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["114"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["114"]["Name"] = [[PwnHub]];
AZY["114"]["Text"] = [[    Pwner Hub]];
AZY["114"]["Position"] = UDim2.new(0.03055272251367569, 0, 0.4659311771392822, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.UICorner
AZY["115"] = Instance.new("UICorner", AZY["114"]);
AZY["115"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.LocalScript
AZY["116"] = Instance.new("LocalScript", AZY["114"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.Info
AZY["117"] = Instance.new("ImageLabel", AZY["114"]);
AZY["117"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["117"]["Image"] = [[rbxassetid://12585776892]];
AZY["117"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["117"]["Name"] = [[Info]];
AZY["117"]["BackgroundTransparency"] = 1;
AZY["117"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Title
AZY["118"] = Instance.new("TextLabel", AZY["ce"]);
AZY["118"]["TextWrapped"] = true;
AZY["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["118"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["118"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["118"]["TextSize"] = 12;
AZY["118"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["118"]["Size"] = UDim2.new(0.5070894360542297, 0, 0.10439325869083405, 0);
AZY["118"]["Text"] = [[Welcome in the Built-In Hacks section!]];
AZY["118"]["Name"] = [[Title]];
AZY["118"]["BackgroundTransparency"] = 1;
AZY["118"]["Position"] = UDim2.new(0.033080533146858215, 0, 0.7568540573120117, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Title
AZY["119"] = Instance.new("TextLabel", AZY["ce"]);
AZY["119"]["TextWrapped"] = true;
AZY["119"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["119"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["119"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["119"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["119"]["TextSize"] = 10;
AZY["119"]["TextColor3"] = Color3.fromRGB(171, 171, 171);
AZY["119"]["Size"] = UDim2.new(0.5410764813423157, 0, 0.10439325869083405, 0);
AZY["119"]["Text"] = [[Here you can easily change your player gravity, speed and jump power. You can execute our built-in scripts too!]];
AZY["119"]["Name"] = [[Title]];
AZY["119"]["BackgroundTransparency"] = 1;
AZY["119"]["Position"] = UDim2.new(0.030461372807621956, 0, 0.862415075302124, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor
AZY["11a"] = Instance.new("Frame", AZY["2b"]);
AZY["11a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["11a"]["BackgroundTransparency"] = 0.550000011920929;
AZY["11a"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7551097869873047, 0);
AZY["11a"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.20551720261573792, 0);
AZY["11a"]["Visible"] = false;
AZY["11a"]["Name"] = [[Executor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.UICorner
AZY["11b"] = Instance.new("UICorner", AZY["11a"]);
AZY["11b"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute
AZY["11c"] = Instance.new("TextButton", AZY["11a"]);
AZY["11c"]["TextWrapped"] = true;
AZY["11c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["11c"]["TextSize"] = 18;
AZY["11c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["11c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["11c"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["11c"]["Name"] = [[Execute]];
AZY["11c"]["Text"] = [[Execute]];
AZY["11c"]["Position"] = UDim2.new(0.026000000536441803, 0, 0.8319999575614929, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.UICorner
AZY["11d"] = Instance.new("UICorner", AZY["11c"]);
AZY["11d"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.LocalScript
AZY["11e"] = Instance.new("LocalScript", AZY["11c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear
AZY["11f"] = Instance.new("TextButton", AZY["11a"]);
AZY["11f"]["TextWrapped"] = true;
AZY["11f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["11f"]["TextSize"] = 18;
AZY["11f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["11f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["11f"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["11f"]["Name"] = [[Clear]];
AZY["11f"]["Text"] = [[Clear]];
AZY["11f"]["Position"] = UDim2.new(0.2630000114440918, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.UICorner
AZY["120"] = Instance.new("UICorner", AZY["11f"]);
AZY["120"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.LocalScript
AZY["121"] = Instance.new("LocalScript", AZY["11f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy
AZY["122"] = Instance.new("TextButton", AZY["11a"]);
AZY["122"]["TextWrapped"] = true;
AZY["122"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["122"]["TextSize"] = 18;
AZY["122"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["122"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["122"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["122"]["Name"] = [[Copy]];
AZY["122"]["Text"] = [[Copy]];
AZY["122"]["Position"] = UDim2.new(0.5009999871253967, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.UICorner
AZY["123"] = Instance.new("UICorner", AZY["122"]);
AZY["123"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.LocalScript
AZY["124"] = Instance.new("LocalScript", AZY["122"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste
AZY["125"] = Instance.new("TextButton", AZY["11a"]);
AZY["125"]["TextWrapped"] = true;
AZY["125"]["TextScaled"] = true;
AZY["125"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["125"]["TextSize"] = 18;
AZY["125"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["125"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["125"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["125"]["Name"] = [[Paste]];
AZY["125"]["Text"] = [[Paste]];
AZY["125"]["Position"] = UDim2.new(0.7360000014305115, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.UICorner
AZY["126"] = Instance.new("UICorner", AZY["125"]);
AZY["126"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.LocalScript
AZY["127"] = Instance.new("LocalScript", AZY["125"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.UITextSizeConstraint
AZY["128"] = Instance.new("UITextSizeConstraint", AZY["125"]);
AZY["128"]["MaxTextSize"] = 18;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar
AZY["129"] = Instance.new("Frame", AZY["11a"]);
AZY["129"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["129"]["BackgroundTransparency"] = 1;
AZY["129"]["Size"] = UDim2.new(0.9533820152282715, 0, 0.7485234141349792, 0);
AZY["129"]["Position"] = UDim2.new(0.026000019162893295, 0, 0.04687291383743286, 0);
AZY["129"]["Name"] = [[TextboxBar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript
AZY["12a"] = Instance.new("LocalScript", AZY["129"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor
AZY["12b"] = Instance.new("ModuleScript", AZY["12a"]);
AZY["12b"]["Name"] = [[ScriptEditor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Syntax
AZY["12c"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12c"]["Name"] = [[Syntax]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Theme
AZY["12d"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12d"]["Name"] = [[Theme]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetLines
AZY["12e"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12e"]["Name"] = [[GetLines]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.FakeEditor
AZY["12f"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12f"]["Name"] = [[FakeEditor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetLine
AZY["130"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["130"]["Name"] = [[GetLine]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.TweenLibrary
AZY["131"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["131"]["Name"] = [[TweenLibrary]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetWord
AZY["132"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["132"]["Name"] = [[GetWord]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Lexer
AZY["133"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["133"]["Name"] = [[Lexer]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Suggestions
AZY["134"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["134"]["Name"] = [[Suggestions]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Words
AZY["135"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["135"]["Name"] = [[Words]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor
AZY["136"] = Instance.new("Frame", AZY["12b"]);
AZY["136"]["BorderSizePixel"] = 0;
AZY["136"]["BackgroundColor3"] = Color3.fromRGB(23, 27, 23);
AZY["136"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["136"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["136"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
AZY["136"]["Name"] = [[Editor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll
AZY["137"] = Instance.new("ScrollingFrame", AZY["136"]);
AZY["137"]["Active"] = true;
AZY["137"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
AZY["137"]["ElasticBehavior"] = Enum.ElasticBehavior.Always;
AZY["137"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
AZY["137"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["137"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
AZY["137"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["137"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["137"]["ScrollBarImageColor3"] = Color3.fromRGB(64, 64, 64);
AZY["137"]["BorderColor3"] = Color3.fromRGB(53, 53, 53);
AZY["137"]["Name"] = [[Scroll]];
AZY["137"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source
AZY["138"] = Instance.new("TextBox", AZY["137"]);
AZY["138"]["TextSize"] = 17;
AZY["138"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["138"]["TextStrokeColor3"] = Color3.fromRGB(41, 41, 41);
AZY["138"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["138"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["138"]["TextColor3"] = Color3.fromRGB(239, 239, 239);
AZY["138"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["138"]["MultiLine"] = true;
AZY["138"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["138"]["Size"] = UDim2.new(1, -44, 1, -5);
AZY["138"]["Text"] = [[]];
AZY["138"]["Position"] = UDim2.new(0, 44, 0, 5);
AZY["138"]["AutomaticSize"] = Enum.AutomaticSize.XY;
AZY["138"]["Name"] = [[Source]];
AZY["138"]["ClearTextOnFocus"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.LineHighlight
AZY["139"] = Instance.new("Frame", AZY["138"]);
AZY["139"]["BorderSizePixel"] = 0;
AZY["139"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["139"]["AnchorPoint"] = Vector2.new(0, 0.5);
AZY["139"]["BackgroundTransparency"] = 0.9399999976158142;
AZY["139"]["Size"] = UDim2.new(1, 0, 0, 17);
AZY["139"]["Position"] = UDim2.new(0, -10, 0, 9);
AZY["139"]["Name"] = [[LineHighlight]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Hidden
AZY["13a"] = Instance.new("TextLabel", AZY["138"]);
AZY["13a"]["BorderSizePixel"] = 0;
AZY["13a"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["13a"]["BackgroundColor3"] = Color3.fromRGB(27, 32, 27);
AZY["13a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["13a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["13a"]["TextSize"] = 22;
AZY["13a"]["TextColor3"] = Color3.fromRGB(249, 66, 164);
AZY["13a"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["13a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
AZY["13a"]["Text"] = [[*script hidden*]];
AZY["13a"]["Name"] = [[Hidden]];
AZY["13a"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion
AZY["13b"] = Instance.new("TextButton", AZY["138"]);
AZY["13b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["13b"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
AZY["13b"]["TextSize"] = 17;
AZY["13b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["13b"]["TextColor3"] = Color3.fromRGB(244, 244, 244);
AZY["13b"]["Visible"] = false;
AZY["13b"]["Size"] = UDim2.new(0, 130, 0, 26);
AZY["13b"]["Name"] = [[Suggestion]];
AZY["13b"]["BorderColor3"] = Color3.fromRGB(60, 60, 60);
AZY["13b"]["Text"] = [[keyword]];
AZY["13b"]["AutomaticSize"] = Enum.AutomaticSize.X;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.TextPadding
AZY["13c"] = Instance.new("UIPadding", AZY["13b"]);
AZY["13c"]["Name"] = [[TextPadding]];
AZY["13c"]["PaddingLeft"] = UDim.new(0, 30);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon
AZY["13d"] = Instance.new("ImageLabel", AZY["13b"]);
AZY["13d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["13d"]["Image"] = [[rbxassetid://413365069]];
AZY["13d"]["Size"] = UDim2.new(0, 26, 0, 26);
AZY["13d"]["Name"] = [[Icon]];
AZY["13d"]["BackgroundTransparency"] = 1;
AZY["13d"]["Position"] = UDim2.new(0, -30, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon.UIAspectRatioConstraint
AZY["13e"] = Instance.new("UIAspectRatioConstraint", AZY["13d"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left
AZY["13f"] = Instance.new("Frame", AZY["137"]);
AZY["13f"]["BorderSizePixel"] = 0;
AZY["13f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
AZY["13f"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["13f"]["Size"] = UDim2.new(0, 27, 1, 0);
AZY["13f"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["13f"]["Name"] = [[Left]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right
AZY["140"] = Instance.new("Frame", AZY["13f"]);
AZY["140"]["BorderSizePixel"] = 0;
AZY["140"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
AZY["140"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["140"]["Size"] = UDim2.new(0, 8, 1, 0);
AZY["140"]["Position"] = UDim2.new(1, 0, 0, 0);
AZY["140"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["140"]["Name"] = [[Right]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.BottomFade
AZY["141"] = Instance.new("UIGradient", AZY["140"]);
AZY["141"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["141"]["Name"] = [[BottomFade]];
AZY["141"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.Shadow
AZY["142"] = Instance.new("Frame", AZY["140"]);
AZY["142"]["BorderSizePixel"] = 0;
AZY["142"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["142"]["BackgroundTransparency"] = 0.800000011920929;
AZY["142"]["Size"] = UDim2.new(0, 5, 1, 0);
AZY["142"]["Position"] = UDim2.new(1, 0, 0, 0);
AZY["142"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["142"]["Name"] = [[Shadow]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.Shadow.UIGradient
AZY["143"] = Instance.new("UIGradient", AZY["142"]);
AZY["143"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 1)};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines
AZY["144"] = Instance.new("TextLabel", AZY["13f"]);
AZY["144"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["144"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["144"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["144"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["144"]["TextSize"] = 17;
AZY["144"]["TextColor3"] = Color3.fromRGB(242, 242, 242);
AZY["144"]["AutomaticSize"] = Enum.AutomaticSize.X;
AZY["144"]["Size"] = UDim2.new(1, -5, 1, -7);
AZY["144"]["Text"] = [[1]];
AZY["144"]["Name"] = [[Lines]];
AZY["144"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["144"]["Position"] = UDim2.new(0, 5, 0, 7);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines.BottomFade
AZY["145"] = Instance.new("UIGradient", AZY["144"]);
AZY["145"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["145"]["Name"] = [[BottomFade]];
AZY["145"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
AZY["146"] = Instance.new("LocalScript", AZY["13f"]);
AZY["146"]["Name"] = [[AdaptSize]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.BottomFade
AZY["147"] = Instance.new("UIGradient", AZY["13f"]);
AZY["147"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["147"]["Name"] = [[BottomFade]];
AZY["147"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.TextFixer
AZY["148"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["148"]["Name"] = [[TextFixer]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox
AZY["149"] = Instance.new("TextButton", AZY["11a"]);
AZY["149"]["TextWrapped"] = true;
AZY["149"]["TextTransparency"] = 0.699999988079071;
AZY["149"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["149"]["TextSize"] = 18;
AZY["149"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["149"]["TextColor3"] = Color3.fromRGB(25, 25, 25);
AZY["149"]["Size"] = UDim2.new(0.04265729710459709, 0, 0.054356444627046585, 0);
AZY["149"]["Name"] = [[ResetTextBox]];
AZY["149"]["Text"] = [[*]];
AZY["149"]["Position"] = UDim2.new(0.005046568810939789, 0, -0.011172410100698471, 0);
AZY["149"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.UICorner
AZY["14a"] = Instance.new("UICorner", AZY["149"]);
AZY["14a"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.LocalScript
AZY["14b"] = Instance.new("LocalScript", AZY["149"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar
AZY["14c"] = Instance.new("Frame", AZY["19"]);
AZY["14c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["14c"]["BackgroundTransparency"] = 0.550000011920929;
AZY["14c"]["Size"] = UDim2.new(0.09215505421161652, 0, 0.7551097273826599, 0);
AZY["14c"]["Position"] = UDim2.new(0.02942327782511711, 0, 0.2055172324180603, 0);
AZY["14c"]["Name"] = [[TabBar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.UICorner
AZY["14d"] = Instance.new("UICorner", AZY["14c"]);
AZY["14d"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs
AZY["14e"] = Instance.new("ImageButton", AZY["14c"]);
AZY["14e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["14e"]["Image"] = [[rbxassetid://12582706243]];
AZY["14e"]["Size"] = UDim2.new(0.7092337608337402, 0, 0.1439468413591385, 0);
AZY["14e"]["Name"] = [[Changelogs]];
AZY["14e"]["Position"] = UDim2.new(0.14184674620628357, 0, 0.04798227921128273, 0);
AZY["14e"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.Frame
AZY["14f"] = Instance.new("Frame", AZY["14e"]);
AZY["14f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["14f"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["14f"]["Position"] = UDim2.new(-0.20000001788139343, 0, 0.06666667014360428, 0);
AZY["14f"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.Frame.UICorner
AZY["150"] = Instance.new("UICorner", AZY["14f"]);
AZY["150"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.LocalScript
AZY["151"] = Instance.new("LocalScript", AZY["14e"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home
AZY["152"] = Instance.new("ImageButton", AZY["14c"]);
AZY["152"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["152"]["Image"] = [[rbxassetid://12582723040]];
AZY["152"]["Size"] = UDim2.new(0.9692861437797546, 0, 0.19672733545303345, 0);
AZY["152"]["Name"] = [[Home]];
AZY["152"]["Position"] = UDim2.new(0, 0, 0.30228832364082336, 0);
AZY["152"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.Frame
AZY["153"] = Instance.new("Frame", AZY["152"]);
AZY["153"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["153"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["153"]["Position"] = UDim2.new(0.004999999888241291, 0, 0.1889999955892563, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.Frame.UICorner
AZY["154"] = Instance.new("UICorner", AZY["153"]);
AZY["154"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.LocalScript
AZY["155"] = Instance.new("LocalScript", AZY["152"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax
AZY["156"] = Instance.new("ImageButton", AZY["14c"]);
AZY["156"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["156"]["Image"] = [[rbxassetid://12582724778]];
AZY["156"]["Size"] = UDim2.new(0.9692861437797546, 0, 0.19672733545303345, 0);
AZY["156"]["Name"] = [[BuiltInHax]];
AZY["156"]["Position"] = UDim2.new(0, 0, 0.537401556968689, 0);
AZY["156"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.Frame
AZY["157"] = Instance.new("Frame", AZY["156"]);
AZY["157"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["157"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["157"]["Position"] = UDim2.new(0, 0, 0.18700000643730164, 0);
AZY["157"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.Frame.UICorner
AZY["158"] = Instance.new("UICorner", AZY["157"]);
AZY["158"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.LocalScript
AZY["159"] = Instance.new("LocalScript", AZY["156"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor
AZY["15a"] = Instance.new("ImageButton", AZY["14c"]);
AZY["15a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["15a"]["Image"] = [[rbxassetid://12582726730]];
AZY["15a"]["Size"] = UDim2.new(0.8274393677711487, 0, 0.1679379791021347, 0);
AZY["15a"]["Name"] = [[Executor]];
AZY["15a"]["Position"] = UDim2.new(0.07092338800430298, 0, 0.7821111679077148, 0);
AZY["15a"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.Frame
AZY["15b"] = Instance.new("Frame", AZY["15a"]);
AZY["15b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["15b"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["15b"]["Position"] = UDim2.new(-0.10000000149011612, 1, 0.06700000166893005, 0);
AZY["15b"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.Frame.UICorner
AZY["15c"] = Instance.new("UICorner", AZY["15b"]);
AZY["15c"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.LocalScript
AZY["15d"] = Instance.new("LocalScript", AZY["15a"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.UIAspectRatioConstraint
AZY["15e"] = Instance.new("UIAspectRatioConstraint", AZY["19"]);
AZY["15e"]["AspectRatio"] = 1.66304349899292;

-- StarterGui.ArceusXV3.MainUI.MainFrame.LocalScript
AZY["15f"] = Instance.new("LocalScript", AZY["19"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI
AZY["160"] = Instance.new("ImageButton", AZY["18"]);
AZY["160"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["160"]["Image"] = [[rbxassetid://12586647828]];
AZY["160"]["Size"] = UDim2.new(0, 65, 0, 65);
AZY["160"]["Name"] = [[FloatingUI]];
AZY["160"]["Visible"] = false;
AZY["160"]["Position"] = UDim2.new(0.47328877449035645, 0, 0.44602859020233154, 0);
AZY["160"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.FloatingUI.UICorner
AZY["161"] = Instance.new("UICorner", AZY["160"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI.LocalScript
AZY["162"] = Instance.new("LocalScript", AZY["160"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI.UIAspectRatioConstraint
AZY["163"] = Instance.new("UIAspectRatioConstraint", AZY["160"]);


-- Require AZY wrapper
local AZY_REQUIRE = require;
local AZY_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = AZY_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return AZY_REQUIRE(Module);
end

AZY_MODULES[AZY["12b"]] = {
	Closure = function()
		local script = AZY["12b"];
		-- Lexer by sleitnick
		-- Everything else by me, bread. lol.


		local module = {}

		local syntax 	   = require(script.Syntax)
		local getLines 	   = require(script.GetLines)
		local fakeEditor   = require(script.FakeEditor)
		local textFixer    = require(script.TextFixer)
		local getLine 	   = require(script.GetLine)
		local tween 	   = require(script.TweenLibrary)
		local suggestions  = require(script.Suggestions)

		function module.new(frame)
			local newEditor = script.Editor:Clone()
			newEditor.Parent = frame

			local editorObj  	= fakeEditor.new(newEditor)
			local textbox 	 	= newEditor.Scroll.Source
			local linesLabel 	= newEditor.Scroll.Left.Lines
			local lineHighlight = textbox.LineHighlight

			local highlightBox = Instance.new("TextLabel")
			highlightBox.Size = UDim2.new(1, 0,1, 0)
			highlightBox.Position = UDim2.new(0, 0,0, 0)
			highlightBox.TextColor3 = textbox.TextColor3
			highlightBox.BackgroundTransparency = 1
			highlightBox.Name = "Syntax"
			highlightBox.RichText = true
			highlightBox.TextSize = textbox.TextSize
			highlightBox.Font = textbox.Font
			highlightBox.TextXAlignment = Enum.TextXAlignment.Left
			highlightBox.TextYAlignment = Enum.TextYAlignment.Top
			highlightBox.TextStrokeColor3 = Color3.fromRGB(40, 40, 40)
			highlightBox.TextStrokeTransparency = 0.1
			highlightBox.Text = ""
			highlightBox.Parent = textbox

			editorObj:SetTheme("default")
			textFixer.Fix(highlightBox)
			suggestions:Start(newEditor)

			textbox:GetPropertyChangedSignal("Text"):Connect(function()
				syntax.Highlight(highlightBox, textbox.Text)

				-- Fix tabs
				textbox.Text = textbox.Text:gsub("\t", "    ")
				--textbox.CursorPosition += 4

				-- Update line count
				linesLabel.Text = getLines.GetLinesString(textbox.Text)
			end)

			textbox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				-- Position line highlight
				local lineYPos = ((getLine:GetCurrentLine(textbox) * textbox.TextSize) - math.ceil(lineHighlight.AbsoluteSize.Y / 2)) + 4

				if lineYPos ~= lineHighlight.Position.Y.Offset then
					tween.TweenPosition(lineHighlight, UDim2.new(0, -10,0, lineYPos), 0.1, Enum.EasingStyle.Quad)
				end
			end)

			return editorObj
		end

		return module

	end;
};
AZY_MODULES[AZY["12c"]] = {
	Closure = function()
		local script = AZY["12c"];
		local module = {}

		local lexer 	= require(script.Parent.Lexer)
		local theme 	= require(script.Parent.Theme)
		local textFixer = require(script.Parent.TextFixer)

		local function ColorToFont(text, color)
			return string.format(
				'<font color="rgb(%s,%s,%s)">%s</font>',
				tostring(math.floor(color.R * 255)),
				tostring(math.floor(color.G * 255)),
				tostring(math.floor(color.B * 255)),
				text
			)
		end

		function module.Highlight(textbox, source)
			textbox.Text = ""

			for tokenType, text in lexer.scan(source) do
				local currentTheme = theme.current
				local tokenCol = currentTheme[tokenType]

				if tokenCol then
					textbox.Text = textbox.Text .. ColorToFont(text, tokenCol)
				else
					textbox.Text = textbox.Text .. text
				end
			end

			textFixer.Fix(textbox)
		end

		return module

	end;
};
AZY_MODULES[AZY["12d"]] = {
	Closure = function()
		local script = AZY["12d"];
		local theme = {
			current = nil,
			themes = {
				["default"] = {
					["keyword"] = Color3.fromRGB(248, 109, 124),
					["builtin"] = Color3.fromRGB(84, 184, 247),
					["string"] = Color3.fromRGB(130, 241, 149),
					["number"] = Color3.fromRGB(255, 198, 0),
					["comment"] = Color3.fromRGB(106, 106, 100),
					["thingy"] = Color3.fromRGB(253, 251, 154)
				},
				["extra 2"] = {
					["keyword"] = Color3.fromRGB(249, 36, 114),
					["builtin"] = Color3.fromRGB(95, 209, 250),
					["string"] = Color3.fromRGB(217, 219, 88),
					["number"] = Color3.fromRGB(161, 118, 209),
					["comment"] = Color3.fromRGB(116, 122, 101),
					["thingy"] = Color3.fromRGB(248, 245, 139)
				}
			}
		}

		return theme

	end;
};
getgenv().ChillzAntiSkid123 = AZY["94"]["Text"]
getgenv().ChillzAntiSkid1234 = AZY["cc"]["Text"]
AZY_MODULES[AZY["12e"]] = {
	Closure = function()
		local script = AZY["12e"];
		local module = {}

		function module.GetLines(text)
			local amount = 1

			text:gsub("\n", function()
				amount += 1
			end)

			return amount
		end

		function module.GetLinesString(text)
			local lineAmt = module.GetLines(text)
			local result = ""

			for i = 1, lineAmt do
				result = result .. i .. "\n"
			end

			-- Remove last \n
			result = result:sub(1, #result - 1)

			return result
		end

		return module

	end;
};
AZY_MODULES[AZY["12f"]] = {
	Closure = function()
		local script = AZY["12f"];
		local fakeEditor = {} -- Main module

		local textFixer = require(script.Parent.TextFixer)
		local theme = require(script.Parent.Theme)
		local syntax = require(script.Parent.Syntax)

		local editorObj = {
			SetTextSize = function(self, textSize)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax
				local linesBox = self.Editor.Scroll.Left.Lines
				local lineHighlight = sourceBox.LineHighlight

				sourceBox.TextSize = textSize
				syntaxBox.TextSize = textSize
				linesBox.TextSize = textSize
				lineHighlight.Size = UDim2.new(1, 0,0, textSize + 5)


		--[[
			Might want to fix it manually because adding another \n
			might cause some instability
		]]
				textFixer.Fix(self.Editor.Scroll.Source.Syntax)

				return textSize
			end,
			Destroy = function(self)
				self.Editor:Destroy()
				setmetatable(self, {__index = nil})
				table.clear(self)
				self = nil

				return nil
			end,
			GetText = function(self)
				local sourceBox = self.Editor.Scroll.Source
				return sourceBox.Text
			end,
			SetText = function(self, text)
				local sourceBox = self.Editor.Scroll.Source
				sourceBox.Text = text

				return text
			end,
			ContentToBytes = function(self)
				local text = self.Editor.Scroll.Source.Text
				local bytes = {}

				for _, c in pairs(text:split("")) do
					table.insert(bytes, string.byte(c))
				end

				return "/" .. table.concat(bytes, "/")
			end,
			Hide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = true
			end,
			Unhide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = false
			end,
			SetTheme = function(self, themeName)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax

				assert(theme.themes[themeName], "'" .. themeName .. "' is not a valid theme.")

				theme.current = theme.themes[themeName]

				-- Update highlighting
				syntax.Highlight(syntaxBox, sourceBox.Text)
			end,
		}

		function fakeEditor.new(editor)
			return setmetatable({Editor = editor}, {__index = editorObj})
		end

		return fakeEditor

	end;
};
AZY_MODULES[AZY["130"]] = {
	Closure = function()
		local script = AZY["130"];
		local module = {}

		function module.peekBack(self)
			return self.text:sub(self.position - 1, self.position - 1)
		end

		function module.next(self)
			self.position += 1

			self.character = self.text:sub(self.position, self.position)

			if self.character == "\n" then
				self.lines += 1
			end

			if self.position < #self.text and self.position < self.cursorPosition then
				self:next()
			end
		end

		function module.GetCurrentLine(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			return self.lines
		end

		function module.GetCurrentLineWidth(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			-- self.lines is the current line

			return self.position
		end

		return module

	end;
};
AZY_MODULES[AZY["131"]] = {
	Closure = function()
		local script = AZY["131"];
		local module = {}

		local tweenService = game:GetService("TweenService")
		local debris = game:GetService("Debris")

		-- Custom functions
		local function default(arg, def)
			if arg == nil then
				arg = def
			end
			return arg
		end

		-- Guis --

		function module.TweenScale(frame, scale, timelen, easingstyle, easingdir)
			local uiscale
			if not frame:FindFirstChild("$ScaleAnim") then
				uiscale = Instance.new("UIScale")
				uiscale.Scale = 1
				uiscale.Name = "$ScaleAnim"
				uiscale.Parent = frame
			end

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Scale = scale
			}

			-- Finally, play tween
			tweenService:Create(uiscale, tinfo, goals):Play()
			--debris:AddItem(uiscale, timelen) -- Remove it when animation is done
		end

		function module.TweenPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Position = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Size = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderSizePixel(frame, bordersize, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(bordersize, "No border size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderSizePixel = bordersize
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageTransparency(frame, imagetransparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(imagetransparency, "No image transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageTransparency = imagetransparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectOffset(frame, offset, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(offset, "No offset provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectOffset = offset
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSliceScale(frame, scale, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(scale, "No scale provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				SliceScale = scale
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenMaxVisibleGraphemes(frame, graphemes, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(graphemes, "No graphemes provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				MaxVisibleGraphemes = graphemes
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasPosition = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarThickness(frame, thickness, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(thickness, "No thickness provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarThickness = thickness
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCFrame(thing, cframe, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(cframe, "No cframe provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CFrame = cframe
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenFOV(thing, fov, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(fov, "No FOV provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				FieldOfView = fov
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenValue(thing, value, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(value, "No value provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Value = value
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenVolume(thing, volume, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(volume, "No volume provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Volume = volume
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		return module

	end;
};
AZY_MODULES[AZY["132"]] = {
	Closure = function()
		local script = AZY["132"];
		local module = {}

		function module.next(self)
			self.position += 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position > #self.text then
				return self.position - 1
			else
				return self:next()
			end
		end

		function module.prev(self)
			self.position -= 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position < 1 then
				return self.position + 1
			else
				return self:prev()
			end
		end

		function module.GetCurrentWord(self, textbox)
			self.cursorPosition = textbox.CursorPosition
			self.position = self.cursorPosition
			self.text = textbox.Text

			local wordEnd = self:next()
			local wordStart = self:prev()
			local wordString = self.text:sub(wordStart, wordEnd)

			return wordString
		end

		return module

	end;
};
AZY_MODULES[AZY["133"]] = {
	Closure = function()
		local script = AZY["133"];
--[[

	Lexical scanner for creating a sequence of tokens from Lua source code.

	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight

	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------------- Original Penlight lexer author
		ryanjmulder  <https://github.com/ryanjmulder>  ----------------- Penlight lexer contributer
		mpeterv      <https://github.com/mpeterv>      ----------------- Penlight lexer contributer
		Tieske       <https://github.com/Tieske>       ----------------- Penlight lexer contributer
		boatbomber   <https://github.com/boatbomber>   ----------------- Roblox port, optimizations, and bug fixes
		Sleitnick    <https://github.com/Sleitnick>    ----------------- Roblox optimizations

	Usage:

		local source = "for i = 1,n do end"
		
		-- The 'scan' function returns a token iterator:
		for token,src in lexer.scan(source) do
			print(token, src)
		end

			> keyword for
			> iden    i
			> =       =
			> number  1
			> ,       ,
			> iden    n
			> keyword do
			> keyword end

	List of tokens:
		- keyword
		- builtin
		- iden
		- string
		- number
		- space
		- comment

	Other tokens that don't fall into the above categories
	will simply be returned as itself. For instance, operators
	like "+" will simply return "+" as the token.

--]]

		local lexer = {}

		local yield, wrap  = coroutine.yield, coroutine.wrap
		local strfind      = string.find
		local strsub       = string.sub
		local append       = table.insert
		local type         = type

		local NUMBER1	= "^[%+%-]?%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER2	= "^[%+%-]?%d+%.?%d*"
		local NUMBER3	= "^0x[%da-fA-F]+"
		local NUMBER4	= "^%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER5	= "^%d+%.?%d*"
		local IDEN		= "^[%a_][%w_]*"
		local WSPACE	= "^%s+"
		local STRING1	= "^(['\"])%1"							--Empty String
		local STRING2	= [[^(['"])(\*)%2%1]]
		local STRING3	= [[^(['"]).-[^\](\*)%2%1]]
		local STRING4	= "^(['\"]).-.*"						--Incompleted String
		local STRING5	= "^%[(=*)%[.-%]%1%]"					--Multiline-String
		local STRING6	= "^%[%[.-.*"							--Incompleted Multiline-String
		local CHAR1		= "^''"
		local CHAR2		= [[^'(\*)%1']]
		local CHAR3		= [[^'.-[^\](\*)%1']]
		local PREPRO	= "^#.-[^\\]\n"
		local MCOMMENT1	= "^%-%-%[(=*)%[.-%]%1%]"				--Completed Multiline-Comment
		local MCOMMENT2	= "^%-%-%[%[.-.*"						--Incompleted Multiline-Comment
		local SCOMMENT1	= "^%-%-.-\n"							--Completed Singleline-Comment
		local SCOMMENT2	= "^%-%-.-.*"							--Incompleted Singleline-Comment
		local THINGY 	= "^[%.:]%w-%s?%(.-%)"

		local lua_keyword = {
			["and"] = true,  ["break"] = true,  ["do"] = true,      ["else"] = true,      ["elseif"] = true,
			["end"] = true,  ["false"] = true,  ["for"] = true,     ["function"] = true,  ["if"] = true,
			["in"] = true,   ["local"] = true,  ["nil"] = true,     ["not"] = true,       ["while"] = true,
			["or"] = true,   ["repeat"] = true, ["return"] = true,  ["then"] = true,      ["true"] = true,
			["self"] = true, ["until"] = true
		}

		local lua_builtin = {
			["assert"] = true;["collectgarbage"] = true;["error"] = true;["_G"] = true;
			["gcinfo"] = true;["getfenv"] = true;["getmetatable"] = true;["ipairs"] = true;
			["loadstring"] = true;["newproxy"] = true;["next"] = true;["pairs"] = true;
			["pcall"] = true;["print"] = true;["rawequal"] = true;["rawget"] = true;["rawset"] = true;
			["select"] = true;["setfenv"] = true;["setmetatable"] = true;["tonumber"] = true;
			["tostring"] = true;["type"] = true;["unpack"] = true;["_VERSION"] = true;["xpcall"] = true;
			["delay"] = true;["elapsedTime"] = true;["require"] = true;["spawn"] = true;["tick"] = true;
			["time"] = true;["typeof"] = true;["UserSettings"] = true;["wait"] = true;["warn"] = true;
			["game"] = true;["Enum"] = true;["script"] = true;["shared"] = true;["workspace"] = true;
			["Axes"] = true;["BrickColor"] = true;["CFrame"] = true;["Color3"] = true;["ColorSequence"] = true;
			["ColorSequenceKeypoint"] = true;["Faces"] = true;["Instance"] = true;["NumberRange"] = true;
			["NumberSequence"] = true;["NumberSequenceKeypoint"] = true;["PhysicalProperties"] = true;
			["Random"] = true;["Ray"] = true;["Rect"] = true;["Region3"] = true;["Region3int16"] = true;
			["TweenInfo"] = true;["UDim"] = true;["UDim2"] = true;["Vector2"] = true;["Vector3"] = true;
			["Vector3int16"] = true;["next"] = true;["dofile"] = true;["writefile"] = true;["readfile"] = true;
			["isfile"] = true;["delfile"] = true;["isfolder"] = true;["makefolder"] = true;["delfolder"] = true;["listfiles"] = true;
			["descend"] = true;
			["os"] = true;
			--["os.time"] = true;["os.date"] = true;["os.difftime"] = true;
			["debug"] = true;
			--["debug.traceback"] = true;["debug.profilebegin"] = true;["debug.profileend"] = true;
			["math"] = true;
			--["math.abs"] = true;["math.acos"] = true;["math.asin"] = true;["math.atan"] = true;["math.atan2"] = true;["math.ceil"] = true;["math.clamp"] = true;["math.cos"] = true;["math.cosh"] = true;["math.deg"] = true;["math.exp"] = true;["math.floor"] = true;["math.fmod"] = true;["math.frexp"] = true;["math.ldexp"] = true;["math.log"] = true;["math.log10"] = true;["math.max"] = true;["math.min"] = true;["math.modf"] = true;["math.noise"] = true;["math.pow"] = true;["math.rad"] = true;["math.random"] = true;["math.randomseed"] = true;["math.sign"] = true;["math.sin"] = true;["math.sinh"] = true;["math.sqrt"] = true;["math.tan"] = true;["math.tanh"] = true;
			["coroutine"] = true;
			--["coroutine.create"] = true;["coroutine.resume"] = true;["coroutine.running"] = true;["coroutine.status"] = true;["coroutine.wrap"] = true;["coroutine.yield"] = true;
			["string"] = true;
			--["string.byte"] = true;["string.char"] = true;["string.dump"] = true;["string.find"] = true;["string.format"] = true;["string.len"] = true;["string.lower"] = true;["string.match"] = true;["string.rep"] = true;["string.reverse"] = true;["string.sub"] = true;["string.upper"] = true;["string.gmatch"] = true;["string.gsub"] = true;
			["table"] = true;
			--["table.concat"] = true;["table.insert"] = true;["table.remove"] = true;["table.sort"] = true;
		}

		local function tdump(tok)
			return yield(tok, tok)
		end

		local function ndump(tok)
			return yield("number", tok)
		end

		local function sdump(tok)
			return yield("string", tok)
		end

		local function cdump(tok)
			return yield("comment", tok)
		end

		local function wsdump(tok)
			return yield("space", tok)
		end

		local function lua_vdump(tok)
			if (lua_keyword[tok]) then
				return yield("keyword", tok)
			elseif (lua_builtin[tok]) then
				return yield("builtin", tok)
			else
				return yield("iden", tok)
			end
		end

		local function thingy_dump(tok)
			return yield("thingy", tok)
		end

		local lua_matches = {
			{THINGY, thingy_dump},

			{IDEN,      lua_vdump},        -- Indentifiers
			{WSPACE,    wsdump},           -- Whitespace
			{NUMBER3,   ndump},            -- Numbers
			{NUMBER4,   ndump},
			{NUMBER5,   ndump},
			{STRING1,   sdump},            -- Strings
			{STRING2,   sdump},
			{STRING3,   sdump},
			{STRING4,   sdump},
			{STRING5,   sdump},            -- Multiline-Strings
			{STRING6,   sdump},            -- Multiline-Strings

			{MCOMMENT1, cdump},            -- Multiline-Comments
			{MCOMMENT2, cdump},			
			{SCOMMENT1, cdump},            -- Singleline-Comments
			{SCOMMENT2, cdump},

			{"^==",     tdump},            -- Operators
			{"^~=",     tdump},
			{"^<=",     tdump},
			{"^>=",     tdump},
			{"^%.%.%.", tdump},
			{"^%.%.",   tdump},
			{"^.",      tdump},
		}

		local num_lua_matches = #lua_matches


		--- Create a plain token iterator from a string.
		-- @tparam string s a string.
		function lexer.scan(s)

			local function lex(first_arg)

				local line_nr = 0
				local sz = #s
				local idx = 1

				-- res is the value used to resume the coroutine.
				local function handle_requests(res)
					while (res) do
						local tp = type(res)
						-- Insert a token list:
						if (tp == "table") then
							res = yield("", "")
							for i = 1,#res do
								local t = res[i]
								res = yield(t[1], t[2])
							end
						elseif (tp == "string") then -- Or search up to some special pattern:
							local i1, i2 = strfind(s, res, idx)
							if (i1) then
								local tok = strsub(s, i1, i2)
								idx = (i2 + 1)
								res = yield("", tok)
							else
								res = yield("", "")
								idx = (sz + 1)
							end
						else
							res = yield(line_nr, idx)
						end
					end
				end

				handle_requests(first_arg)
				line_nr = 1

				while (true) do

					if (idx > sz) then
						while (true) do
							handle_requests(yield())
						end
					end

					for i = 1,num_lua_matches do
						local m = lua_matches[i]
						local pat = m[1]
						local fun = m[2]
						local findres = {strfind(s, pat, idx)}
						local i1, i2 = findres[1], findres[2]
						if (i1) then
							local tok = strsub(s, i1, i2)
							idx = (i2 + 1)
							lexer.finished = (idx > sz)
							local res = fun(tok, findres)
							if (tok:find("\n")) then
								-- Update line number:
								local _,newlines = tok:gsub("\n", {})
								line_nr = (line_nr + newlines)
							end
							handle_requests(res)
							break
						end
					end

				end

			end

			return wrap(lex)

		end

		return lexer
	end;
};
AZY_MODULES[AZY["134"]] = {
	Closure = function()
		local script = AZY["134"];
		local module = {}

		--// Vars
		local words   = require(script.Parent.Words)
		local GetWord = require(script.Parent.GetWord)
		local getLine = require(script.Parent.GetLine)

		--// Funcs
		function module.GetCurrentWord(self)
			return GetWord:GetCurrentWord(self.Textbox)
		end

		function module.Search(self)
			local currentWord = self:GetCurrentWord():lower()

			if currentWord == "" and #currentWord <= 1 then
				return nil
			end

			for word, wordType in pairs(words) do
				local matched = string.match(word:lower(), currentWord)

				if matched then
					local foundStart, foundEnd = string.find(word:lower(), currentWord)
					return word, (foundEnd - foundStart) + 1
				end
			end

			return nil
		end

		function module.Start(self, editor)
			self.Editor = editor
			self.Textbox = editor.Scroll.Source
			self.SuggestionButton = self.Textbox.Suggestion

			self.Textbox:GetPropertyChangedSignal("Text"):Connect(function()
				local foundWord, matchedLength = self:Search()

				if foundWord then
					local position = UDim2.new(0, 0,0, getLine:GetCurrentLine(self.Textbox) * self.Textbox.TextSize)

					self.SuggestionButton.Text = foundWord
					self.SuggestionButton.Position = position
					self.SuggestionButton.Visible = true
					self.MatchedLength = matchedLength
				else
					self.SuggestionButton.Visible = false
				end
			end)

			self.SuggestionButton.MouseButton1Click:Connect(function(input)
				-- Fill in the word
				local word = self.SuggestionButton.Text
				self.SuggestionButton.Visible = false
				self.Textbox.Text = self.Textbox.Text:sub(1, self.Textbox.CursorPosition - 1 - (self.MatchedLength or 0)) .. word .. self.Textbox.Text:sub(self.Textbox.CursorPosition + 1, #self.Textbox.Text)

				local newCursorPosition = self.Textbox.CursorPosition + #word - self.MatchedLength
				wait()
				self.Textbox:ReleaseFocus()
				self.Textbox:CaptureFocus()
				self.Textbox.CursorPosition = newCursorPosition
			end)
		end

		return module

	end;
};
AZY_MODULES[AZY["135"]] = {
	Closure = function()
		local script = AZY["135"];
		local words = {
			['print'] = 'builtin',
			['warn'] = 'builtin',
			['Vector3'] = 'builtin',
			['Vector2'] = 'builtin',
			['error'] = 'builtin',
			['Instance'] = 'builtin',
			['game'] = 'builtin',
			['script'] = 'builtin',
			['workspace'] = 'builtin',

			['while'] = 'keyword',
			['true'] = 'keyword',
			['false'] = 'keyword',
			['then'] = 'keyword',
			['do'] = 'keyword',
			['if'] = 'keyword',
		}

		return words

	end;
};
AZY_MODULES[AZY["148"]] = {
	Closure = function()
		local script = AZY["148"];
		-- Fixes a Roblox bug with RichText

		-- If the bug gets fixed, this will break the editor (visually).
		-- In this case, please remove any instances of this module being used.

		local module = {}

		function module.Fix(textbox)
			if textbox.Text:sub(1, 1) ~= "\n" then
				textbox.Text = "\n" .. textbox.Text
			end

			textbox.Position = UDim2.new(0, -3.5,0,-8.9)
			textbox.Size = UDim2.new(1, 4,1, textbox.TextSize)
		end

		return module

	end;
};
-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text.LocalScript
local function C_9()
	local script = AZY["9"];
	-- Get the local player's name
	local playerName = game.Players.LocalPlayer.DisplayName

	-- Create the welcome message with string interpolation
	local welcomeMessage = string.format([[
	Dear %s,
	
	We are writing to welcome you as one of your first beta testers of Arceus X!
	We are thrilled to have your collaboration and to offer you the opportunity
	to try out the new features we are developing.
	
	We are confident that your experience and creativity will help us make
	Arceus X an even more effective and user-friendly application.
	Please feel free to share any feedback and suggestions that can help us further
	improve our platform.
	
	Thank you so much for your support, and we look forward to working with
	you in this exciting journey!
	
	Best regards,
	SPDM Team
	]], playerName)

	-- Display the welcome message
	script.Parent.Text = welcomeMessage
end;
task.spawn(C_9);
-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.LocalScriptNew
local function C_d()
	local script = AZY["d"];
	local btn = script.Parent
	local welcome = script.Parent.Parent.Parent
	local bg = script.Parent.Parent.Parent.Parent.Frame
	local gui = script.Parent.Parent.Parent.Parent

	pcall(function()
		if isfile("arc.xloaded") then
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Active = true
			script.Parent.Parent.Parent.Parent.Frame.Visible = false
			script.Parent.Parent.Parent.Parent.Welcome.Visible = false
		end
	end)

	btn.MouseButton1Click:Connect(function()
		pcall(function()
			writefile("arc.xloaded", "Nothing to read here, this is just a file to check if you're already execute it at first time, you may remove or delete this file to get your welcome message again.")
		end)
		welcome.Visible = false
		bg.Visible=false
		gui.Parent.AnimationIntro.Background.Visible = true
		gui.Parent.AnimationIntro.ImageLabel.Visible = true

		gui.Parent.AnimationIntro.NameLogo.Visible = true
		--gui.Parent.AnimationIntro.Frame.Visible = true


		local function uninvislogo()
			local TextLabel = gui.Parent.AnimationIntro.ImageLabel -- Change this to the name of your TextLabel
			local FadeTime = 1 -- Change this to adjust the fade time in seconds

			for i = 1, 10 do -- Loop 10 times to create a smoother fade
				wait(FadeTime/10) -- Wait for 1/10th of the fade time
				local Alpha = 1 - (i/10) -- Calculate the transparency value
				TextLabel.ImageTransparency = Alpha -- Set the transparency of the TextLabel
			end
		end
		uninvislogo()

		wait(0.5)


		--0, 900,0, 900
		--100, -150, 100, -100
		local function movearc()

			local textn = gui.Parent.AnimationIntro.NameLogo
			local frame1 = textn

			-- Define the start and end positions for the tween
			local startPos1 = UDim2.new(0.442, 0,0.361, 0) --[[FOR LOGO OPENING]] --ACTUAL END
			local endPos1 = UDim2.new(0.482, 0,0.452, 0)

			-- Define the length of time for the tween
			local tweenTime1 = 0.3

			-- Import the TweenService module
			local TweenService1 = game:GetService("TweenService")

			-- Define the tweenInfo for the tween
			local tweenInfo1 = TweenInfo.new(tweenTime1, Enum.EasingStyle.Linear)

			-- Define the tween
			local tween1 = TweenService1:Create(frame1, tweenInfo1, {Position = endPos1})

			-- Play the tween
			tween1:Play()
			local function fadetext()
				local TextLabel = textn -- Change this to the name of your TextLabel
				local FadeTime = 0.3 -- Change this to adjust the fade time in seconds

				for i = 1, 10 do -- Loop 10 times to create a smoother fade [[FOR TEXT]]
					wait(FadeTime/10) -- Wait for 1/10th of the fade time
					local Alpha = 1 - (i/10) -- Calculate the transparency value
					TextLabel.TextTransparency = Alpha -- Set the transparency of the TextLabel
				end
			end


			-- Define the Frame we want to tween
			local frame = gui.Parent.AnimationIntro.ImageLabel

			-- Define the start and end positions for the tween [FOR TEXT]
			local startPos = UDim2.new(0.442, 0,0.361, 0) --ACTUAL END
			local endPos = UDim2.new(0.362, 0,0.361, 0)

			-- Define the length of time for the tween
			local tweenTime = 0.3

			-- Import the TweenService module
			local TweenService = game:GetService("TweenService")

			-- Define the tweenInfo for the tween
			local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)

			-- Define the tween
			local tween = TweenService:Create(frame, tweenInfo, {Position = endPos})

			-- Play the tween
			tween:Play()

			gui.Parent.AnimationIntro.Frame.Visible = true
			local TweenService4 = game:GetService("TweenService")

			-- The GUI frame that we want to animate
			local frame4 = gui.Parent.AnimationIntro.Frame

			-- The final size and position that we want to tween to
			local finalSize4 = UDim2.new(0, 2051,0, 1495)
			local finalPosition4 = UDim2.new(-0.353, 0,-0.738, 0)

			-- The duration of the tween in seconds
			local tweenDuration4 = 0.4

			-- Define the tween information for the size and position
			local tweenInfo4 = TweenInfo.new(tweenDuration4, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0, false, 0)

			-- Create the tweens for the size and position
			local sizeTween = TweenService:Create(frame4, tweenInfo4, {Size = finalSize4})
			local positionTween = TweenService:Create(frame4, tweenInfo4, {Position = finalPosition4})

			-- Play the tweens simultaneously
			sizeTween:Play()
			positionTween:Play()

			wait(0.2)
			fadetext()
			wait(0.4)
			gui.Parent.AnimationIntro.NameLogo.Visible = true
			wait(1.4)
			local FadeTime = 0.3
			for i = 0, 1.1, 0.1 do -- Loop 10 times to create a smoother far
				gui.Parent.AnimationIntro.Background.BackgroundTransparency = i
				gui.Parent.AnimationIntro.Frame.BackgroundTransparency = i
				gui.Parent.AnimationIntro.ImageLabel.ImageTransparency = i
				gui.Parent.AnimationIntro.NameLogo.TextTransparency = i
				if i == 1 then
					for _,v in pairs(gui.Parent.AnimationIntro:GetChildren()) do
						if v.Visible then
							v.Visible = false
						end
					end
				end
				wait(0.05)
			end
			wait(0.04)
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Active = true
			--print("completed.")


		end

		movearc()
	end)
end;
task.spawn(C_d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close.LocalScript
local function C_21()
	local script = AZY["21"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Visible = false
		script.Parent.Parent.Parent.Active = false
		script.Parent.Parent.Parent.Parent.FloatingUI.Visible = true
		script.Parent.Parent.Parent.Parent.FloatingUI.Active = true
	end)
end;
task.spawn(C_21);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand.LocalScript
local function C_23()
	local script = AZY["23"];
	big = false
	script.Parent.MouseButton1Click:Connect(function()
		if big == false then
			script.Parent.Parent.Parent.Parent.MainFrame.Size = UDim2.new(0, 569,0, 346)
			script.Parent.Image = "rbxassetid://12586472565"
			big = true

		else
			script.Parent.Parent.Parent.Parent.MainFrame.Size = UDim2.new(0, 459,0, 276)
			script.Parent.Image = "rbxassetid://12566545357"
			big = false
		end
	end)
end;
task.spawn(C_23);
loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/loader.lua"))()
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft.LocalScript
local function C_25()
	local script = AZY["25"];
	local Timer = script.Parent
	local TimeDisplay = Timer

	-- Set the initial time to 24 hours
	local TimeLeft = 86400

	-- Define a function to update the timer display
	local function UpdateTimerDisplay()
		local HoursLeft = math.floor(TimeLeft / 3600)
		local MinutesLeft = math.floor((TimeLeft % 3600) / 60)
		TimeDisplay.Text = string.format("%02dh %02dm", HoursLeft, MinutesLeft).." left"
	end

	-- Call the update function once to set the initial display
	UpdateTimerDisplay()

	-- Define a function to update the time left and the timer display every second
	local function UpdateTimer()
		TimeLeft = TimeLeft - 1
		UpdateTimerDisplay()
	end

	-- Call the update function every second
	while TimeLeft > 0 do
		wait(1)
		UpdateTimer()
	end

end;
task.spawn(C_25);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.LocalScript
local function C_28()
	local script = AZY["28"];
	-- Add a click event handler to the TextLabel to reset the timer
	script.Parent.MouseButton1Click:Connect(function()
		-- get the parent object and the TextLabel inside it
		local parent = script.Parent.Parent.Time
		local textLabel = parent
		local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
		local today = os.date("%A") -- get the current day of the week
		parent.Parent.Time.Text = "Today, " .. time -- concatenate the strings
		--TimeLeft = 86400
		--UpdateTimerDisplay()
	end)
end;
task.spawn(C_28);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon.LocalScript
local function C_2a()
	local script = AZY["2a"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Parent.Draggable == true then
			script.Parent.Parent.Parent.Draggable = false
		else
			script.Parent.Parent.Parent.Draggable = true
		end
	end)
end;
task.spawn(C_2a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.LocalScript
local function C_33()
	local script = AZY["33"];
	script.Parent.Text = game.Players.LocalPlayer.DisplayName
end;
task.spawn(C_33);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft.LocalScript
local function C_3a()
	local script = AZY["3a"];
	local Timer = script.Parent
	local TimeDisplay = Timer

	-- Set the initial time to 24 hours
	local TimeLeft = 86400

	-- Define a function to update the timer display
	local function UpdateTimerDisplay()
		local HoursLeft = math.floor(TimeLeft / 3600)
		local MinutesLeft = math.floor((TimeLeft % 3600) / 60)
		TimeDisplay.Text = string.format("%02dh %02dm", HoursLeft, MinutesLeft)
	end

	-- Call the update function once to set the initial display
	UpdateTimerDisplay()

	-- Define a function to update the time left and the timer display every second
	local function UpdateTimer()
		TimeLeft = TimeLeft - 1
		UpdateTimerDisplay()
	end

	-- Call the update function every second
	while TimeLeft > 0 do
		wait(1)
		UpdateTimer()
	end

end;
task.spawn(C_3a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time.LocalScript
local function C_40()
	local script = AZY["40"];
	local parent = script.Parent
	local textLabel = parent
	local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
	local today = os.date("%A") -- get the current day of the week
	parent.Text = "Today, " .. time -- concatenate the strings
end;
task.spawn(C_40);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.LocalScript
local function C_43()
	local script = AZY["43"];
	-- Add a click event handler to the TextLabel to reset the timer
	script.Parent.MouseButton1Click:Connect(function()
		-- get the parent object and the TextLabel inside it
		local parent = script.Parent.Parent.Time
		local textLabel = parent
		local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
		local today = os.date("%A") -- get the current day of the week
		parent.Parent.Time.Text = "Today, " .. time -- concatenate the strings
		--TimeLeft = 86400
		--UpdateTimerDisplay()
	end)
end;
task.spawn(C_43);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.LocalScript
local function C_4b()
	local script = AZY["4b"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Aimbot.lua"))()
	end)
end;
task.spawn(C_4b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.LocalScript
local function C_4e()
	local script = AZY["4e"];
	script.Parent.MouseButton1Click:Connect(function()
		local backpack = game:GetService("Players").LocalPlayer.Backpack

		local hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack

		local cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack

		local grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
	end)
end;
task.spawn(C_4e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.LocalScript
local function C_51()
	local script = AZY["51"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
	end)
end;
task.spawn(C_51);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.LocalScript
local function C_54()
	local script = AZY["54"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(request({ Url = "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua", Method = "GET"}).Body)()
	end)
end;
task.spawn(C_54);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.LocalScript
local function C_57()
	local script = AZY["57"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Fly.lua"))()
	end)
end;
task.spawn(C_57);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.LocalScript
local function C_5a()
	local script = AZY["5a"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end;
task.spawn(C_5a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.LocalScript
local function C_5d()
	local script = AZY["5d"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/PWNERHUB.lua"), true))()
	end)
end;
task.spawn(C_5d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.LocalScript
local function C_65()
	local script = AZY["65"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Grav.Value == false then
			script.Parent.Parent.Grav.Value = true
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Grav.Value = false
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
			workspace.Gravity = 196.2
		end
	end)
end;
task.spawn(C_65);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.LocalScript
local function C_68()
	local script = AZY["68"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Ws.Value == false then
			script.Parent.Parent.Ws.Value = true
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Ws.Value = false
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_68);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.LocalScript
local function C_6b()
	local script = AZY["6b"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Jp.Value == false then
			script.Parent.Parent.Jp.Value = true
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Jp.Value = false
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_6b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton.LocalScript
local function C_6e()
	local script = AZY["6e"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Jp.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setJumppower()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Jumppower = tonumber(textBox.Text)

		if Jumppower ~= nil then

			if script.Parent.Parent.Parent.Jp.Value == true then
				character.Humanoid.JumpPower = Jumppower * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setJumppower()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setJumppower)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setJumppower()
	end)

end;
task.spawn(C_6e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton.LocalScript
local function C_77()
	local script = AZY["77"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 4.1
		if script.Parent.Parent.Parent.Ws.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setWalkspeed()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local walkspeed = tonumber(textBox.Text)

		if walkspeed ~= nil then

			if script.Parent.Parent.Parent.Ws.Value == true then
				character.Humanoid.WalkSpeed = walkspeed * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setWalkspeed()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setWalkspeed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setWalkspeed()
	end)

end;
task.spawn(C_77);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton.LocalScript
local function C_80()
	local script = AZY["80"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Grav.Value == true then
			workspace.Gravity =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setGravity()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Gravity = tonumber(textBox.Text)

		if Gravity ~= nil then

			if script.Parent.Parent.Parent.Grav.Value == true then
				workspace.Gravity = Gravity * 5
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setGravity()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setGravity)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setGravity()
	end)

end;
task.spawn(C_80);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.LocalScript
local function C_c9()
	local script = AZY["c9"];
	script.Parent.MouseButton1Click:Connect(function()
		setclipboard("VPn54EcfNX")
	end)
end;
task.spawn(C_c9);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.LocalScript
local function C_d6()
	local script = AZY["d6"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Grav.Value == false then
			script.Parent.Parent.Grav.Value = true
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Grav.Value = false
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
			workspace.Gravity = 196.2
		end
	end)
end;
task.spawn(C_d6);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.LocalScript
local function C_d9()
	local script = AZY["d9"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Jp.Value == false then
			script.Parent.Parent.Jp.Value = true
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Jp.Value = false
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_d9);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.LocalScript
local function C_dc()
	local script = AZY["dc"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Ws.Value == false then
			script.Parent.Parent.Ws.Value = true
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Ws.Value = false
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_dc);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton.LocalScript
local function C_df()
	local script = AZY["df"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 4.1
		if script.Parent.Parent.Parent.Ws.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setWalkspeed()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local walkspeed = tonumber(textBox.Text)

		if walkspeed ~= nil then

			if script.Parent.Parent.Parent.Ws.Value == true then
				character.Humanoid.WalkSpeed = walkspeed * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setWalkspeed()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setWalkspeed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setWalkspeed()
	end)

end;
task.spawn(C_df);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton.LocalScript
local function C_e8()
	local script = AZY["e8"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Jp.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setJumppower()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Jumppower = tonumber(textBox.Text)

		if Jumppower ~= nil then

			if script.Parent.Parent.Parent.Jp.Value == true then
				character.Humanoid.JumpPower = Jumppower * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setJumppower()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setJumppower)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setJumppower()
	end)

end;
task.spawn(C_e8);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton.LocalScript
local function C_f1()
	local script = AZY["f1"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Grav.Value == true then
			workspace.Gravity =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setGravity()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Gravity = tonumber(textBox.Text)

		if Gravity ~= nil then

			if script.Parent.Parent.Parent.Grav.Value == true then
				workspace.Gravity = Gravity * 5
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setGravity()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setGravity)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setGravity()
	end)

end;
task.spawn(C_f1);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.LocalScript
local function C_fe()
	local script = AZY["fe"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Aimbot.lua"))()
	end)
end;
task.spawn(C_fe);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.LocalScript
local function C_102()
	local script = AZY["102"];
	script.Parent.MouseButton1Click:Connect(function()
		local backpack = game:GetService("Players").LocalPlayer.Backpack

		local hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack

		local cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack

		local grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
	end)
end;
task.spawn(C_102);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.LocalScript
local function C_106()
	local script = AZY["106"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
	end)
end;
task.spawn(C_106);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.LocalScript
local function C_10a()
	local script = AZY["10a"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(request({ Url = "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua", Method = "GET"}).Body)()
	end)
end;
task.spawn(C_10a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.LocalScript
local function C_10e()
	local script = AZY["10e"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Fly.lua"))()
	end)
end;
task.spawn(C_10e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.LocalScript
local function C_112()
	local script = AZY["112"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end;
task.spawn(C_112);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.LocalScript
local function C_116()
	local script = AZY["116"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/PWNERHUB.lua"), true))()
	end)
end;
task.spawn(C_116);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.LocalScript
local function C_11e()
	local script = AZY["11e"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)()
	end)
end;
task.spawn(C_11e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.LocalScript
local function C_121()
	local script = AZY["121"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text = ""
	end)
end;
task.spawn(C_121);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.LocalScript
local function C_124()
	local script = AZY["124"];
	script.Parent.MouseButton1Click:Connect(function()
		setclipboard(script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)
	end)
end;
task.spawn(C_124);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.LocalScript
local function C_127()
	local script = AZY["127"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Not Implemented"
		script.Disabled = true
		wait(1)
		script.Disabled = false
		script.Parent.Text = "Paste"
	end)
end;
task.spawn(C_127);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript
local function C_12a()
	local script = AZY["12a"];
	local ScriptEditor = require(script.ScriptEditor)
	local editor = ScriptEditor.new(script.Parent)
end;
task.spawn(C_12a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
local function C_146()
	local script = AZY["146"];
	local defaultSize = script.Parent.Size
	local textbox = script.Parent.Parent.Source

	textbox:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		local height = textbox.AbsoluteSize.Y

		script.Parent.Size = UDim2.new(
			defaultSize.X.Scale,
			defaultSize.X.Offset,
			0,
			height
		)
	end)
end;
task.spawn(C_146);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.LocalScript
local function C_14b()
	local script = AZY["14b"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.TextboxBar.Editor:Destroy()
		local ScriptEditor = require(script.Parent.Parent.TextboxBar.LocalScript.ScriptEditor)
		local editor = ScriptEditor.new(script.Parent.Parent.TextboxBar)
	end)
end;
task.spawn(C_14b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.LocalScript
local function C_151()
	local script = AZY["151"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_151);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.LocalScript
local function C_155()
	local script = AZY["155"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_155);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.LocalScript
local function C_159()
	local script = AZY["159"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_159);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.LocalScript
local function C_15d()
	local script = AZY["15d"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_15d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.LocalScript
local function C_15f()
	local script = AZY["15f"];
	script.Parent.Draggable = true
	script.Parent.Active = true
end;
task.spawn(C_15f);
-- StarterGui.ArceusXV3.MainUI.FloatingUI.LocalScript
local function C_162()
	local script = AZY["162"];
	script.Parent.Active = true
	script.Parent.Draggable = true
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
		script.Parent.Parent.MainFrame.Visible = true
		script.Parent.Active = false
		script.Parent.Parent.MainFrame.Active = true
	end)
end;
task.spawn(C_162);

return AZY["1"], require;
  	end
})
Tab:AddButton({
	Name = "Arceus AIMBOT",
	Callback = function()
--[[
		AIMBOT SCRIPT

		Remade and optimized by Riky47#3355 for Arceus X
		# spdmteam.com
		
		Edited and fixed by AZY#0348 for Fluxus / Hydrogen Compatibility
        # Chillz and Maik
]]

local Script_Title = "Arceus X <font color=\"rgb(255, 0, 0)\">|</font> Aimbot"

-- Instances:
local Arceus = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Intro = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Logo = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local Title = Instance.new("TextLabel")
local Menu = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local Toggle = Instance.new("ImageButton")
local UICorner_3 = Instance.new("UICorner")
local Enabled = Instance.new("Frame")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local UICorner_4 = Instance.new("UICorner")
local Check = Instance.new("Frame")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local UICorner_5 = Instance.new("UICorner")
local Name = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Button = Instance.new("ImageButton")
local UICorner_6 = Instance.new("UICorner")
local Name_2 = Instance.new("TextLabel")
local UIGradient_2 = Instance.new("UIGradient")
local tab = Instance.new("Frame")
local Close = Instance.new("TextButton")
local ComboElem = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local Name_3 = Instance.new("TextLabel")
local UIGradient_3 = Instance.new("UIGradient")
local Img = Instance.new("TextLabel")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local ComboBox = Instance.new("ImageButton")
local UICorner_8 = Instance.new("UICorner")
local Name_4 = Instance.new("TextLabel")
local UIGradient_4 = Instance.new("UIGradient")
local Img_2 = Instance.new("TextLabel")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")

--Properties:

Arceus.Name = "Arceus"
Arceus.Enabled = true
Arceus.ResetOnSpawn = true
Arceus.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Arceus.DisplayOrder = 999999999

Main.Name = "Main"
Main.Parent = Arceus
Main.Active = true
Main.Draggable = true
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.5, 0, -0.2, 0) --UDim2.new(0.5, 0, 0.5, 0)
Main.Size = UDim2.new(0.3, 0, 0.3, 0)

UICorner.CornerRadius = UDim.new(0.1, 0)
UICorner.Parent = Main

Intro.Name = "Intro"
Intro.Parent = Main
Intro.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Intro.ClipsDescendants = true
Intro.Size = UDim2.new(1, 0, 1, 0)
Intro.ZIndex = 2

UICorner_2.CornerRadius = UDim.new(0.1, 0)
UICorner_2.Parent = Intro

Logo.Parent = Intro
Logo.AnchorPoint = Vector2.new(0.5, 0.5)
Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Logo.BackgroundTransparency = 1
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0.5, 0, 0.5, 0)
Logo.Size = UDim2.new(0.75, 0, 0.75, 0)
Logo.ZIndex = 2
Logo.Image = "http://www.roblox.com/asset/?id=9178187770"
Logo.ScaleType = Enum.ScaleType.Fit
Logo.Active = false

UIAspectRatioConstraint.Parent = Logo

Title.Name = "Title"
Title.Parent = Main
Title.AnchorPoint = Vector2.new(1, 0)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.975, 0, 0.075, 0)
Title.Size = UDim2.new(0.85, 0, 0.155, 0)
Title.Font = Enum.Font.TitilliumWeb
Title.FontFace = Font.new("rbxasset://fonts/families/TitilliumWeb.json", Enum.FontWeight.Bold)
Title.RichText = true
Title.Text = Script_Title
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14
Title.TextWrapped = true
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Center

Menu.Name = "Menu"
Menu.Parent = Main
Menu.Active = true
Menu.AnchorPoint = Vector2.new(0.5, 1)
Menu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Menu.BackgroundTransparency = 1
Menu.AutomaticCanvasSize = Enum.AutomaticSize.Y
Menu.BorderSizePixel = 0
Menu.Position = UDim2.new(0.5, 0, 0.95, 0)
Menu.Size = UDim2.new(0.95, 0, 0.65, 0)
Menu.CanvasSize = UDim2.new(0, 0, 0, 0)
Menu.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
Menu.ScrollBarThickness = Menu.AbsoluteSize.X/25

UIListLayout.Parent = Menu
--UIListLayout.Padding = UDim.new(0.025, 0)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

Toggle.Name = "Toggle"
Toggle.Visible = false
--Toggle.Parent = Arceus
Toggle.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Toggle.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_3.CornerRadius = UDim.new(0.25, 0)
UICorner_3.Parent = Toggle

Enabled.Name = "Enabled"
Enabled.Parent = Toggle
Enabled.AnchorPoint = Vector2.new(1, 0.5)
Enabled.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Enabled.Position = UDim2.new(0.975, 0, 0.5, 0)
Enabled.Size = UDim2.new(0.75, 0, 0.75, 0)

UIAspectRatioConstraint_2.Parent = Enabled

UICorner_4.CornerRadius = UDim.new(0.3, 0)
UICorner_4.Parent = Enabled

Check.Name = "Check"
Check.Parent = Enabled
Check.AnchorPoint = Vector2.new(0.5, 0.5)
Check.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Check.Position = UDim2.new(0.5, 0, 0.5, 0)
Check.Size = UDim2.new(0.65, 0, 0.65, 0)

UIAspectRatioConstraint_3.Parent = Check

UICorner_5.CornerRadius = UDim.new(0.3, 0)
UICorner_5.Parent = Check

Name.Name = "Name"
Name.Parent = Toggle
Name.AnchorPoint = Vector2.new(0, 0.5)
Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name.BackgroundTransparency = 1
Name.BorderSizePixel = 0
Name.Position = UDim2.new(0.05, 0, 0.5, 0)
Name.Size = UDim2.new(0.75, 0, 0.8, 0)
Name.Font = Enum.Font.TitilliumWeb
Name.Text = "Script"
Name.TextColor3 = Color3.fromRGB(255, 255, 255)
Name.TextScaled = true
Name.TextSize = 14
Name.TextWrapped = true
Name.TextXAlignment = Enum.TextXAlignment.Left
Name.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient.Parent = Toggle

Button.Name = "Button"
--Button.Parent = Arceus
Button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Button.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_6.CornerRadius = UDim.new(0.25, 0)
UICorner_6.Parent = Button

Name_2.Name = "Name"
Name_2.Parent = Button
Name_2.AnchorPoint = Vector2.new(0, 0.5)
Name_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_2.BackgroundTransparency = 1
Name_2.BorderSizePixel = 0
Name_2.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_2.Size = UDim2.new(0.95, 0, 0.82, 0)
Name_2.Font = Enum.Font.TitilliumWeb
Name_2.Text = "Enabled"
Name_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Name_2.TextScaled = true
Name_2.TextSize = 14
Name_2.TextWrapped = true
Name_2.TextXAlignment = Enum.TextXAlignment.Left
Name_2.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_2.Parent = Button

tab.Name = "Tab"
tab.Visible = false
--tab.Parent = Arceus
tab.BackgroundTransparency = 1
tab.Size = UDim2.new(0.95, 0, 0.025, 0)

Close.Name = "Close"
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.8, 0, 0.1, 0)
Close.Size = UDim2.new(0.15, 0, 0.125, 0)
Close.Font = Enum.Font.FredokaOne
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 0, 0)
Close.TextScaled = true
Close.TextSize = 14
Close.TextWrapped = true
Close.TextXAlignment = Enum.TextXAlignment.Right
Close.Parent = Main

ComboElem.Name = "ComboElem"
ComboElem.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ComboElem.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_7.CornerRadius = UDim.new(0.25, 0)
UICorner_7.Parent = ComboElem

Name_3.Name = "Name"
Name_3.Parent = ComboElem
Name_3.AnchorPoint = Vector2.new(0, 0.5)
Name_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_3.BackgroundTransparency = 1
Name_3.BorderSizePixel = 0
Name_3.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_3.Size = UDim2.new(0.75, 0, 0.8, 0)
Name_3.Font = Enum.Font.TitilliumWeb
Name_3.Text = "Enabled"
Name_3.TextColor3 = Color3.fromRGB(255, 0, 0)
Name_3.TextScaled = true
Name_3.TextSize = 14
Name_3.TextWrapped = true
Name_3.TextXAlignment = Enum.TextXAlignment.Left
Name_3.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_3.Rotation = 180
UIGradient_3.Parent = ComboElem

Img.Name = "Img"
Img.Parent = ComboElem
Img.AnchorPoint = Vector2.new(1, 0.5)
Img.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Img.BackgroundTransparency = 1
Img.BorderSizePixel = 0
Img.Position = UDim2.new(0.975, 0, 0.5, 0)
Img.Rotation = 90
Img.Size = UDim2.new(0.75, 0, 0.75, 0)
Img.Font = Enum.Font.FredokaOne
Img.Text = "^"
Img.TextColor3 = Color3.fromRGB(255, 255, 255)
Img.TextScaled = true
Img.TextSize = 14
Img.TextWrapped = true

UIAspectRatioConstraint_4.Parent = Img

ComboBox.Name = "ComboBox"
ComboBox.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ComboBox.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_8.CornerRadius = UDim.new(0.25, 0)
UICorner_8.Parent = ComboBox

Name_4.Name = "Name"
Name_4.Parent = ComboBox
Name_4.AnchorPoint = Vector2.new(0, 0.5)
Name_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_4.BackgroundTransparency = 1.000
Name_4.BorderSizePixel = 0
Name_4.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_4.Size = UDim2.new(0.75, 0, 0.8, 0)
Name_4.Font = Enum.Font.TitilliumWeb
Name_4.Text = "Enabled"
Name_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Name_4.TextScaled = true
Name_4.TextSize = 14
Name_4.TextWrapped = true
Name_4.TextXAlignment = Enum.TextXAlignment.Left
Name_4.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_4.Parent = ComboBox

Img_2.Name = "Img"
Img_2.Parent = ComboBox
Img_2.AnchorPoint = Vector2.new(1, 0.5)
Img_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Img_2.BackgroundTransparency = 1
Img_2.BorderSizePixel = 0
Img_2.Rotation = 180
Img_2.Position = UDim2.new(0.975, 0, 0.5, 0)
Img_2.Size = UDim2.new(0.75, 0, 0.75, 0)
Img_2.Font = Enum.Font.FredokaOne
Img_2.Text = "^"
Img_2.TextColor3 = Color3.fromRGB(255, 0, 0)
Img_2.TextScaled = true
Img_2.TextSize = 14
Img_2.TextWrapped = true

UIAspectRatioConstraint_5.Parent = Img_2

-- SCRIPT

local TweenService = game:GetService("TweenService")
Close.MouseButton1Click:Connect(function()
	Logo.Active = true
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()

	task.wait(0.3)
	Logo:TweenSizeAndPosition(
		UDim2.fromScale(0.75, 0.75),
		UDim2.fromScale(0.5, 0.5),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	Main:TweenSize(
		UDim2.fromScale(0.1, 0.175),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	for _, obj in pairs(Main:GetChildren()) do
		if obj:IsA("GuiObject") and obj ~= Intro then
			obj.Visible = false
		end
	end

	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0.8}):Play()
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0.8}):Play()
end)

Logo.MouseButton1Click:Connect(function()
	Logo.Active = false
	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0}):Play()
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()

	task.wait(0.3)
	Main:TweenSize(
		UDim2.fromScale(0.3, 0.3),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	Logo:TweenSizeAndPosition(
		UDim2.fromScale(0.175, 0.175),
		UDim2.fromScale(0.075, 0.15),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	for _, obj in pairs(Main:GetChildren()) do
		if obj:IsA("GuiObject") and obj ~= Intro then
			obj.Visible = true
		end
	end

	task.wait(0.3)
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
end)

local function uiparent()
	local success, parent = pcall(function()
		return gethui()
	end)

	if not success then
		return game:GetService("CoreGui")
	end

	return parent
end

local success, err = pcall(function()
	Arceus.Parent = uiparent()
end)

if not success then
	Arceus.Parent = game:GetService("Players").LocalPlayer.PlayerGui
end

local element_height = 50*Menu.AbsoluteSize.Y/210
local elements = 0

local function addSpace(parent)
	local space = tab:Clone()
	space.Parent = parent
	space.LayoutOrder = elements
	space.Visible = true

	elements += 1
end

local function addToggle(name, funct, enabled, ...)
	local newTog = Toggle:Clone()
	local args = {...}

	newTog.MouseButton1Click:Connect(function()
		enabled = not enabled
		newTog:WaitForChild("Enabled"):WaitForChild("Check").Visible = enabled
		funct(enabled, unpack(args))
	end)

	newTog:WaitForChild("Enabled"):WaitForChild("Check").Visible = enabled
	newTog:WaitForChild("Name").Text = name

	newTog.Size = UDim2.new(0.95, 0, 0, element_height) -- Y1 = 50 : Y2 = X
	newTog.Name = name
	newTog.Parent = Menu
	newTog.LayoutOrder = elements
	newTog.Visible = true

	elements += 1
	addSpace(Menu)

	return newTog
end

local function addButton(name, funct, ...)
	local newBut = Button:Clone()
	local args = {...}

	newBut.MouseButton1Click:Connect(function()
		funct(unpack(args))
	end)

	newBut:WaitForChild("Name").Text = name
	newBut.Size = UDim2.new(0.95, 0, 0, element_height)
	newBut.Name = name
	newBut.Parent = Menu
	newBut.LayoutOrder = elements
	newBut.Visible = true

	elements += 1
	addSpace(Menu)

	return newBut
end

local function addComboBox(text, options, funct, ...) -- ADD CUSTOM ELEMENT INSTEAD
	local newCombo = ComboBox:Clone()
	local enabled = false
	local elems = {}
	local args = {...}

	local function setBoxState()
		newCombo:WaitForChild("Img").Rotation = enabled and 0 or 180
		for _, elem in ipairs(elems) do
			elem.Visible = enabled
		end
	end

	newCombo.MouseButton1Click:Connect(function()
		enabled = not enabled
		setBoxState()
	end)

	newCombo:WaitForChild("Name").Text = text .. ": " .. (#options > 0 and options[1] or "")
	newCombo.Size = UDim2.new(0.95, 0, 0, element_height)
	newCombo.Name = #options > 0 and options[1] or ""
	newCombo.Parent = Menu
	newCombo.LayoutOrder = elements
	newCombo.Parent = Menu
	newCombo.Visible = true

	elements += 1
	addSpace(Menu)

	for _, name in ipairs(options) do
		local newElem = ComboElem:Clone()
		table.insert(elems, newElem)

		newElem.MouseButton1Click:Connect(function()
			newCombo:WaitForChild("Name").Text = text .. ": " .. name
			enabled = false
			setBoxState()

			funct(name, unpack(args))
		end)

		newElem:WaitForChild("Name").Text = name
		newElem.Size = UDim2.new(0.95, 0, 0, element_height)
		newElem.Name = name
		newElem.Parent = Menu
		newElem.LayoutOrder = elements
		newElem.Visible = false

		elements += 1
		addSpace(Menu)
	end

	return newCombo
end

-- Actual Script

local runService = game:GetService("RunService")
local plrsService = game:GetService("Players")
local enabled = false
local teamcheck = false
local aimpart = "Head"

function lookAt(target, eye)
	workspace.CurrentCamera.CFrame = CFrame.new(target, eye)
end

function getClosestPlayerToCursor(trg_part)
	local nearest = nil
	local last = math.huge

	for i, v in ipairs(plrsService:GetPlayers()) do
		if v ~= plrsService.LocalPlayer and plrsService.LocalPlayer.Character and plrsService.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") and plrsService.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Health > 0
			and v.Character and v.Character:FindFirstChildWhichIsA("Humanoid") and v.Character:FindFirstChildWhichIsA("Humanoid").Health > 0
		then
			local allowed = not teamcheck
			if teamcheck and v.Team ~= plrsService.LocalPlayer.Team then
				allowed = true
			end
			
			if allowed then
				local aimobj = v.Character:FindFirstChild(trg_part) or v.Character:FindFirstChild("UpperTorso")
				if aimobj then
					if plrsService.LocalPlayer.Character:FindFirstChild("Head") then
						local ePos, vissss = workspace.CurrentCamera:WorldToViewportPoint(aimobj.Position)
						local AccPos = Vector2.new(ePos.x, ePos.y)
						local mousePos = Vector2.new(workspace.CurrentCamera.ViewportSize.x / 2, workspace.CurrentCamera.ViewportSize.y / 2)
						local distance = (AccPos - mousePos).magnitude
						if distance < last and vissss and distance < 400 then
							last = distance
							nearest = v
						end
					end
				end
			end
		end
	end
	return nearest
end

local toggleBtn
toggleBtn = addToggle("Toggle aimbot", function(state)
	enabled = state
end, false)

local toggleTeamCheckBtn
toggleTeamCheckBtn = addToggle("Team check", function(state)
	teamcheck = state
end)

local aimPartCombo
aimPartCombo = addComboBox("Aim part", {"Head", "Torso"}, function(selection)
	aimpart = selection
end)

runService.RenderStepped:Connect(function()
	local closest = getClosestPlayerToCursor(aimpart)
	if enabled and closest then
		local aimobj = closest.Character:FindFirstChild(aimpart) or closest.Character:FindFirstChild("UpperTorso") -- If not found then should be R15 Torso
		if aimobj then
			lookAt(workspace.CurrentCamera.CFrame.p, aimobj.Position)
		end
	end
end)

-- INIT

Main:TweenPosition(
	UDim2.fromScale(0.5, 0.5),
	Enum.EasingDirection.In,
	Enum.EasingStyle.Quad,
	1, true, nil
)

task.wait(1.5)
Logo:TweenSizeAndPosition(
	UDim2.fromScale(0.175, 0.175),
	UDim2.fromScale(0.075, 0.15),
	Enum.EasingDirection.In,
	Enum.EasingStyle.Quad,
	1, true, nil
)

task.wait(1.5)
TweenService:Create(Intro, TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
  	end
})
Tab:AddButton({
	Name = "Arceus fly v3",
	Callback = function()
--[[
		MOBILE FLYING SCRIPTS
		Original: me_ozoneYT & Lucifear
		
		Remade and optimized by Riky47#3355 for Arceus X
		# spdmteam.com
		
		Edited and fixed by AZY#0348 for Fluxus / Hydrogen Compatibility
        # Chillz and Maik
]]

local Script_Title = "Arceus X <font color=\"rgb(255, 0, 0)\">|</font> Mobile fly"


-- Instances:
local Arceus = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Intro = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Logo = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local Title = Instance.new("TextLabel")
local Menu = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local Toggle = Instance.new("ImageButton")
local UICorner_3 = Instance.new("UICorner")
local Enabled = Instance.new("Frame")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local UICorner_4 = Instance.new("UICorner")
local Check = Instance.new("Frame")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local UICorner_5 = Instance.new("UICorner")
local Name = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Button = Instance.new("ImageButton")
local UICorner_6 = Instance.new("UICorner")
local Name_2 = Instance.new("TextLabel")
local UIGradient_2 = Instance.new("UIGradient")
local tab = Instance.new("Frame")
local Close = Instance.new("TextButton")
local ComboElem = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local Name_3 = Instance.new("TextLabel")
local UIGradient_3 = Instance.new("UIGradient")
local Img = Instance.new("TextLabel")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local ComboBox = Instance.new("ImageButton")
local UICorner_8 = Instance.new("UICorner")
local Name_4 = Instance.new("TextLabel")
local UIGradient_4 = Instance.new("UIGradient")
local Img_2 = Instance.new("TextLabel")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")

--Properties:

Arceus.Name = "Arceus"
Arceus.Enabled = true
Arceus.ResetOnSpawn = true
Arceus.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Arceus.DisplayOrder = 999999999

Main.Name = "Main"
Main.Parent = Arceus
Main.Active = true
Main.Draggable = true
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.5, 0, -0.2, 0) --UDim2.new(0.5, 0, 0.5, 0)
Main.Size = UDim2.new(0.3, 0, 0.3, 0)

UICorner.CornerRadius = UDim.new(0.1, 0)
UICorner.Parent = Main

Intro.Name = "Intro"
Intro.Parent = Main
Intro.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Intro.ClipsDescendants = true
Intro.Size = UDim2.new(1, 0, 1, 0)
Intro.ZIndex = 2

UICorner_2.CornerRadius = UDim.new(0.1, 0)
UICorner_2.Parent = Intro

Logo.Parent = Intro
Logo.AnchorPoint = Vector2.new(0.5, 0.5)
Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Logo.BackgroundTransparency = 1
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0.5, 0, 0.5, 0)
Logo.Size = UDim2.new(0.75, 0, 0.75, 0)
Logo.ZIndex = 2
Logo.Image = "http://www.roblox.com/asset/?id=9178187770"
Logo.ScaleType = Enum.ScaleType.Fit
Logo.Active = false

UIAspectRatioConstraint.Parent = Logo

Title.Name = "Title"
Title.Parent = Main
Title.AnchorPoint = Vector2.new(1, 0)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.975, 0, 0.075, 0)
Title.Size = UDim2.new(0.85, 0, 0.155, 0)
Title.Font = Enum.Font.TitilliumWeb
Title.FontFace = Font.new("rbxasset://fonts/families/TitilliumWeb.json", Enum.FontWeight.Bold)
Title.RichText = true
Title.Text = Script_Title
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14
Title.TextWrapped = true
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Center

Menu.Name = "Menu"
Menu.Parent = Main
Menu.Active = true
Menu.AnchorPoint = Vector2.new(0.5, 1)
Menu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Menu.BackgroundTransparency = 1
Menu.AutomaticCanvasSize = Enum.AutomaticSize.Y
Menu.BorderSizePixel = 0
Menu.Position = UDim2.new(0.5, 0, 0.95, 0)
Menu.Size = UDim2.new(0.95, 0, 0.65, 0)
Menu.CanvasSize = UDim2.new(0, 0, 0, 0)
Menu.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
Menu.ScrollBarThickness = Menu.AbsoluteSize.X/25

UIListLayout.Parent = Menu
--UIListLayout.Padding = UDim.new(0.025, 0)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

Toggle.Name = "Toggle"
Toggle.Visible = false
--Toggle.Parent = Arceus
Toggle.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Toggle.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_3.CornerRadius = UDim.new(0.25, 0)
UICorner_3.Parent = Toggle

Enabled.Name = "Enabled"
Enabled.Parent = Toggle
Enabled.AnchorPoint = Vector2.new(1, 0.5)
Enabled.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Enabled.Position = UDim2.new(0.975, 0, 0.5, 0)
Enabled.Size = UDim2.new(0.75, 0, 0.75, 0)

UIAspectRatioConstraint_2.Parent = Enabled

UICorner_4.CornerRadius = UDim.new(0.3, 0)
UICorner_4.Parent = Enabled

Check.Name = "Check"
Check.Parent = Enabled
Check.AnchorPoint = Vector2.new(0.5, 0.5)
Check.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Check.Position = UDim2.new(0.5, 0, 0.5, 0)
Check.Size = UDim2.new(0.65, 0, 0.65, 0)

UIAspectRatioConstraint_3.Parent = Check

UICorner_5.CornerRadius = UDim.new(0.3, 0)
UICorner_5.Parent = Check

Name.Name = "Name"
Name.Parent = Toggle
Name.AnchorPoint = Vector2.new(0, 0.5)
Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name.BackgroundTransparency = 1
Name.BorderSizePixel = 0
Name.Position = UDim2.new(0.05, 0, 0.5, 0)
Name.Size = UDim2.new(0.75, 0, 0.8, 0)
Name.Font = Enum.Font.TitilliumWeb
Name.Text = "Script"
Name.TextColor3 = Color3.fromRGB(255, 255, 255)
Name.TextScaled = true
Name.TextSize = 14
Name.TextWrapped = true
Name.TextXAlignment = Enum.TextXAlignment.Left
Name.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient.Parent = Toggle

Button.Name = "Button"
--Button.Parent = Arceus
Button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Button.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_6.CornerRadius = UDim.new(0.25, 0)
UICorner_6.Parent = Button

Name_2.Name = "Name"
Name_2.Parent = Button
Name_2.AnchorPoint = Vector2.new(0, 0.5)
Name_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_2.BackgroundTransparency = 1
Name_2.BorderSizePixel = 0
Name_2.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_2.Size = UDim2.new(0.95, 0, 0.82, 0)
Name_2.Font = Enum.Font.TitilliumWeb
Name_2.Text = "Enabled"
Name_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Name_2.TextScaled = true
Name_2.TextSize = 14
Name_2.TextWrapped = true
Name_2.TextXAlignment = Enum.TextXAlignment.Left
Name_2.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_2.Parent = Button

tab.Name = "Tab"
tab.Visible = false
--tab.Parent = Arceus
tab.BackgroundTransparency = 1
tab.Size = UDim2.new(0.95, 0, 0.025, 0)

Close.Name = "Close"
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.8, 0, 0.1, 0)
Close.Size = UDim2.new(0.15, 0, 0.125, 0)
Close.Font = Enum.Font.FredokaOne
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 0, 0)
Close.TextScaled = true
Close.TextSize = 14
Close.TextWrapped = true
Close.TextXAlignment = Enum.TextXAlignment.Right
Close.Parent = Main

ComboElem.Name = "ComboElem"
ComboElem.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ComboElem.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_7.CornerRadius = UDim.new(0.25, 0)
UICorner_7.Parent = ComboElem

Name_3.Name = "Name"
Name_3.Parent = ComboElem
Name_3.AnchorPoint = Vector2.new(0, 0.5)
Name_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_3.BackgroundTransparency = 1
Name_3.BorderSizePixel = 0
Name_3.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_3.Size = UDim2.new(0.75, 0, 0.8, 0)
Name_3.Font = Enum.Font.TitilliumWeb
Name_3.Text = "Enabled"
Name_3.TextColor3 = Color3.fromRGB(255, 0, 0)
Name_3.TextScaled = true
Name_3.TextSize = 14
Name_3.TextWrapped = true
Name_3.TextXAlignment = Enum.TextXAlignment.Left
Name_3.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_3.Rotation = 180
UIGradient_3.Parent = ComboElem

Img.Name = "Img"
Img.Parent = ComboElem
Img.AnchorPoint = Vector2.new(1, 0.5)
Img.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Img.BackgroundTransparency = 1
Img.BorderSizePixel = 0
Img.Position = UDim2.new(0.975, 0, 0.5, 0)
Img.Rotation = 90
Img.Size = UDim2.new(0.75, 0, 0.75, 0)
Img.Font = Enum.Font.FredokaOne
Img.Text = "^"
Img.TextColor3 = Color3.fromRGB(255, 255, 255)
Img.TextScaled = true
Img.TextSize = 14
Img.TextWrapped = true

UIAspectRatioConstraint_4.Parent = Img

ComboBox.Name = "ComboBox"
ComboBox.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ComboBox.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_8.CornerRadius = UDim.new(0.25, 0)
UICorner_8.Parent = ComboBox

Name_4.Name = "Name"
Name_4.Parent = ComboBox
Name_4.AnchorPoint = Vector2.new(0, 0.5)
Name_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_4.BackgroundTransparency = 1.000
Name_4.BorderSizePixel = 0
Name_4.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_4.Size = UDim2.new(0.75, 0, 0.8, 0)
Name_4.Font = Enum.Font.TitilliumWeb
Name_4.Text = "Enabled"
Name_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Name_4.TextScaled = true
Name_4.TextSize = 14
Name_4.TextWrapped = true
Name_4.TextXAlignment = Enum.TextXAlignment.Left
Name_4.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_4.Parent = ComboBox

Img_2.Name = "Img"
Img_2.Parent = ComboBox
Img_2.AnchorPoint = Vector2.new(1, 0.5)
Img_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Img_2.BackgroundTransparency = 1
Img_2.BorderSizePixel = 0
Img_2.Rotation = 180
Img_2.Position = UDim2.new(0.975, 0, 0.5, 0)
Img_2.Size = UDim2.new(0.75, 0, 0.75, 0)
Img_2.Font = Enum.Font.FredokaOne
Img_2.Text = "^"
Img_2.TextColor3 = Color3.fromRGB(255, 0, 0)
Img_2.TextScaled = true
Img_2.TextSize = 14
Img_2.TextWrapped = true

UIAspectRatioConstraint_5.Parent = Img_2

-- SCRIPT

local TweenService = game:GetService("TweenService")
Close.MouseButton1Click:Connect(function()
	Logo.Active = true
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()

	task.wait(0.3)
	Logo:TweenSizeAndPosition(
		UDim2.fromScale(0.75, 0.75),
		UDim2.fromScale(0.5, 0.5),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	Main:TweenSize(
		UDim2.fromScale(0.1, 0.175),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	for _, obj in pairs(Main:GetChildren()) do
		if obj:IsA("GuiObject") and obj ~= Intro then
			obj.Visible = false
		end
	end

	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0.8}):Play()
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0.8}):Play()
end)

Logo.MouseButton1Click:Connect(function()
	Logo.Active = false
	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0}):Play()
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()

	task.wait(0.3)
	Main:TweenSize(
		UDim2.fromScale(0.3, 0.3),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	Logo:TweenSizeAndPosition(
		UDim2.fromScale(0.175, 0.175),
		UDim2.fromScale(0.075, 0.15),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	for _, obj in pairs(Main:GetChildren()) do
		if obj:IsA("GuiObject") and obj ~= Intro then
			obj.Visible = true
		end
	end

	task.wait(0.3)
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
end)

local function uiparent()
	local success, parent = pcall(function()
		return gethui()
	end)

	if not success then
		return game:GetService("CoreGui")
	end

	return parent
end

local success, err = pcall(function()
	Arceus.Parent = uiparent()
end)

if not success then
	Arceus.Parent = game:GetService("Players").LocalPlayer.PlayerGui
end

local element_height = 50*Menu.AbsoluteSize.Y/210
local elements = 0

local function addSpace(parent)
	local space = tab:Clone()
	space.Parent = parent
	space.LayoutOrder = elements
	space.Visible = true

	elements += 1
end

local function addToggle(name, funct, enabled, ...)
	local newTog = Toggle:Clone()
	local args = {...}

	newTog.MouseButton1Click:Connect(function()
		enabled = not enabled
		newTog:WaitForChild("Enabled"):WaitForChild("Check").Visible = enabled
		funct(enabled, unpack(args))
	end)

	newTog:WaitForChild("Enabled"):WaitForChild("Check").Visible = enabled
	newTog:WaitForChild("Name").Text = name

	newTog.Size = UDim2.new(0.95, 0, 0, element_height) -- Y1 = 50 : Y2 = X
	newTog.Name = name
	newTog.Parent = Menu
	newTog.LayoutOrder = elements
	newTog.Visible = true

	elements += 1
	addSpace(Menu)

	return newTog
end

local function addButton(name, funct, ...)
	local newBut = Button:Clone()
	local args = {...}

	newBut.MouseButton1Click:Connect(function()
		funct(unpack(args))
	end)

	newBut:WaitForChild("Name").Text = name
	newBut.Size = UDim2.new(0.95, 0, 0, element_height)
	newBut.Name = name
	newBut.Parent = Menu
	newBut.LayoutOrder = elements
	newBut.Visible = true

	elements += 1
	addSpace(Menu)

	return newBut
end

local function addComboBox(text, options, funct, ...) -- ADD CUSTOM ELEMENT INSTEAD
	local newCombo = ComboBox:Clone()
	local enabled = false
	local elems = {}
	local args = {...}

	local function setBoxState()
		newCombo:WaitForChild("Img").Rotation = enabled and 0 or 180
		for _, elem in ipairs(elems) do
			elem.Visible = enabled
		end
	end

	newCombo.MouseButton1Click:Connect(function()
		enabled = not enabled
		setBoxState()
	end)

	newCombo:WaitForChild("Name").Text = text .. ": " .. (#options > 0 and options[1] or "")
	newCombo.Size = UDim2.new(0.95, 0, 0, element_height)
	newCombo.Name = #options > 0 and options[1] or ""
	newCombo.Parent = Menu
	newCombo.LayoutOrder = elements
	newCombo.Parent = Menu
	newCombo.Visible = true

	elements += 1
	addSpace(Menu)

	for _, name in ipairs(options) do
		local newElem = ComboElem:Clone()
		table.insert(elems, newElem)

		newElem.MouseButton1Click:Connect(function()
			newCombo:WaitForChild("Name").Text = text .. ": " .. name
			enabled = false
			setBoxState()

			funct(name, unpack(args))
		end)

		newElem:WaitForChild("Name").Text = name
		newElem.Size = UDim2.new(0.95, 0, 0, element_height)
		newElem.Name = name
		newElem.Parent = Menu
		newElem.LayoutOrder = elements
		newElem.Visible = false

		elements += 1
		addSpace(Menu)
	end

	return newCombo
end

-- Actual Script

local speeds = 5
local nowe = false
local tpwalking = false
local speaker = game:GetService("Players").LocalPlayer
local heartbeat = game:GetService("RunService").Heartbeat

local function updatespeed(char, hum)
	if nowe == true then
		tpwalking = false
		heartbeat:Wait()
		task.wait(.1)
		heartbeat:Wait() -- Make sure old threads are terminated

		for i = 1, speeds do
			spawn(function()
				tpwalking = true

				while tpwalking and heartbeat:Wait() and char and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						char:TranslateBy(hum.MoveDirection)
					end
				end
			end)
		end
	end
end

speaker.CharacterAdded:Connect(function(char)
	local char = speaker.Character
	if char then
		task.wait(0.7)
		char.Humanoid.PlatformStand = false
		char.Animate.Disabled = false
	end
end)

local toggleBtn
toggleBtn = addToggle("Toggle fly: " .. speeds, function(enabled)
	local char = speaker.Character
	if not char or not char.Humanoid then
		return
	end

	local hum = char.Humanoid
	if nowe == true then
		nowe = false

		hum:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		hum:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		hum:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)	
	else
		nowe = true
		updatespeed(char, hum)

		char.Animate.Disabled = true
		for i,v in next, hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end

		hum:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		hum:ChangeState(Enum.HumanoidStateType.Swimming)
	end
    
    local function CheckRig()
        if speaker.Character and speaker.Character:FindFirstChild("Torso") then
                return speaker.Character.Torso
        elseif speaker.Character and speaker.Character:FindFirstChild("LowerTorso") then
                return speaker.Character.LowerTorso
        end
    end


	local UpperTorso = CheckRig()
	local flying = true
	local deb = true
	local ctrl = {f = 0, b = 0, l = 0, r = 0}
	local lastctrl = {f = 0, b = 0, l = 0, r = 0}
	local maxspeed = 50
	local speed = 0

	local bg = Instance.new("BodyGyro", UpperTorso)
	bg.P = 9e4
	bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
	bg.cframe = UpperTorso.CFrame

	local bv = Instance.new("BodyVelocity", UpperTorso)
	bv.velocity = Vector3.new(0,0.1,0)
	bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

	if nowe == true then
		hum.PlatformStand = true
	end

	while nowe == true or hum.Health == 0 do
		task.wait()

		if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
			speed = speed+.5+(speed/maxspeed)
			if speed > maxspeed then
				speed = maxspeed
			end
		elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
			speed = speed-1
			if speed < 0 then
				speed = 0
			end
		end
		if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
			bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
		elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
			bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
		else
			bv.velocity = Vector3.new(0,0,0)
		end

		bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
	end

	ctrl = {f = 0, b = 0, l = 0, r = 0}
	lastctrl = {f = 0, b = 0, l = 0, r = 0}
	speed = 0
	bg:Destroy()
	bv:Destroy()

	hum.PlatformStand = false
	char.Animate.Disabled = false
	tpwalking = false
end, false)

local incraseBtn
incraseBtn = addButton("Incrase speed", function()
	local char = speaker.Character
	if char and char.Humanoid then
		local hum = char.Humanoid

		speeds = speeds + 1
		updatespeed(char, hum)

		toggleBtn:WaitForChild("Name").Text = "Toggle fly: " .. speeds
	end
end)

local decraseBtn
decraseBtn = addButton("Decrase speed", function()
	local char = speaker.Character
	if char and char.Humanoid then
		local hum = char.Humanoid

		if speeds > 1 then
			speeds = speeds - 1
			updatespeed(char, hum)
		end

		toggleBtn:WaitForChild("Name").Text = "Toggle fly: " .. speeds
	end
end)

local goUp
goUp = addButton("Go up", function()
	local char = speaker.Character
	if char then
		char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame * CFrame.new(0,2,0)
	end
end)

local goDown
goDown = addButton("Go down", function()
	local char = speaker.Character
	if char then
		char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame * CFrame.new(0,-2,0)
	end
end)

-- INIT

Main:TweenPosition(
	UDim2.fromScale(0.5, 0.5),
	Enum.EasingDirection.In,
	Enum.EasingStyle.Quad,
	1, true, nil
)

task.wait(1.5)
Logo:TweenSizeAndPosition(
	UDim2.fromScale(0.175, 0.175),
	UDim2.fromScale(0.075, 0.15),
	Enum.EasingDirection.In,
	Enum.EasingStyle.Quad,
	1, true, nil
)

task.wait(1.5)
TweenService:Create(Intro, TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
  	end
})
Tab:AddButton({
	Name = "杯杯注入器",
	Callback = function()
        (["This file was protected with BeiqiuObfuscator by quxiaoming#0206"]):function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) { if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) { return !true } if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) { return !false } } var IllIllIllIllI = (7 * 3 - 9 / 9 + 3 * 2 / 1 + 3 * 3);var IIlllIIlllIIlllIIlllII = (3 * 4 - 7 / 7 + 6 * 4 / 3 + 9 * 9);var IllIIIllIIIIllI = Array.prototype.join;function IllIIIIllIIIIIl(IllIllIllIllI) { function IIllllIIllll(IllIllIllIllI) { function IIllllIIllll(IllIllIllIllI) { } } };IllIIIIllIIIIIl(900283);;function IllIlllIllIlllIlllIlllIllIlllIIIlll(IllIllIllIllI) { function IIllllIIllll(IllIllIllIllI) { var IllIllIllIllI = (9 * 0 - 7 / 5 + 3 * 1 / 3 + 8 * 2); } };IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);;var IllIIllIIllIII = eval;var IlIlIlIlIlIlIlIlII = ['2e','2d','21A','23A','2e','62','1A1A','21A','3A0','27A','27A','2c','5A','3A7A','2b','62','7Af','62','b','2c','3A1A','3A6','23A','2c','21A','27A','6c','2c','27A','3A5A','6a','60','1A1A','21A','3A0','27A','27A','2c','5A','3A7A','2b','60','6b','48','2e','2d','21A','23A','2e','62','f','23A','2b','2c','4','3A0','23A','2f','27A','62','7Af','62','b','2c','3A1A','3A6','23A','2c','21A','27A','6c','2c','27A','3A5A','6a','60','4','3A0','23A','2f','27A','60','6b','48','2e','2d','21A','23A','2e','62','1A6','2d','3A2','0','23A','3A0','62','7Af','62','b','2c','3A1A','3A6','23A','2c','21A','27A','6c','2c','27A','3A5A','6a','60','4','3A0','23A','2f','27A','60','6b','48','2e','2d','21A','23A','2e','62','1A6','27A','3Aa','3A6','0','2d','3Aa','62','7Af','62','b','2c','3A1A','3A6','23A','2c','21A','27A','6c','2c','27A','3A5A','6a','60','1A6','27A','3Aa','3A6','0','2d','3Aa','60','6b','48','2e','2d','21A','23A','2e','62','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','62','7Af','62','b','2c','3A1A','3A6','23A','2c','21A','27A','6c','2c','27A','3A5A','6a','60','1A6','27A','3Aa','3A6','0','3A7A','3A6','3A6','2d','2c','60','6b','48','2e','2d','21A','23A','2e','62','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','62','7Af','62','b','2c','3A1A','3A6','23A','2c','21A','27A','6c','2c','27A','3A5A','6a','60','1A6','27A','3Aa','3A6','0','3A7A','3A6','3A6','2d','2c','60','6b','48','2e','2d','21A','23A','2e','62','1A7A','b','1A1A','62','7Af','62','25A','23A','2f','27A','7A8','5A','27A','3A6','1A1A','27A','3A0','3A4','2b','21A','27A','6a','60','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A1A','27A','3A0','3A4','2b','21A','27A','60','6b','48','2e','2d','21A','23A','2e','62','6','3A0','23A','25A','25A','2b','2c','25A','6e','62','6','3A0','23A','25A','1A1A','3A6','23A','3A0','3A6','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','48','2e','2d','21A','23A','2e','62','1A1A','2a','2d','3A5A','0','3A7A','3A6','3A6','2d','2c','62','7Af','62','3A6','3A0','3A7A','27A','48','1A1A','21A','3A0','27A','27A','2c','5A','3A7A','2b','6c','1A2','23A','3A0','27A','2c','3A6','62','7Af','62','25A','23A','2f','27A','7A8','5A','27A','3A6','1A1A','27A','3A0','3A4','2b','21A','27A','6a','60','1A2','2e','23A','3Ab','27A','3A0','3A1A','60','6b','6c','e','2d','21A','23A','2e','1A2','2e','23A','3Ab','27A','3A0','7A8','1A5A','23A','2b','3A6','4','2d','3A0','1A','2a','2b','2e','26','6a','60','1A2','2e','23A','3Ab','27A','3A0','5A','3A7A','2b','60','6b','48','1A1A','21A','3A0','27A','27A','2c','5A','3A7A','2b','6c','1A8','b','2c','26','27A','3Aa','0','27A','2a','23A','3A4','2b','2d','3A0','62','7Af','62','7A','2c','3A7A','2f','6c','1A8','b','2c','26','27A','3Aa','0','27A','2a','23A','3A4','2b','2d','3A0','6c','1A1A','2b','20','2e','2b','2c','25A','48','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','c','23A','2f','27A','62','7Af','62','60','f','23A','2b','2c','4','3A0','23A','2f','27A','60','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A2','23A','3A0','27A','2c','3A6','62','7Af','62','1A1A','21A','3A0','27A','27A','2c','5A','3A7A','2b','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','3A','2c','21A','2a','2d','3A0','1A2','2d','2b','2c','3A6','62','7Af','62','1A4','27A','21A','3A6','2d','3A0','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6c','7A7A','6b','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6e','62','7A2','6c','7A7A','6e','62','7A2','6b','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A1A','2b','3A8','27A','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A1A','6e','62','7A2','6e','62','7A2','6c','7A0','6e','62','7A2','6b','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','0','23A','21A','29A','25A','3A0','2d','3A7A','2c','26','1A6','3A0','23A','2c','3A1A','3A2','23A','3A0','27A','2c','21A','3Ab','62','7Af','62','7A2','6c','7A7A','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','0','23A','21A','29A','25A','3A0','2d','3A7A','2c','26','1A','2d','2e','2d','3A0','7A1A','62','7Af','62','1A','2d','2e','2d','3A0','7A1A','6c','24','3A0','2d','2f','1A0','5A','0','6a','7A0','7A7A','7A7A','6e','62','7A0','7A7A','7A7A','6e','62','7A0','7A7A','7A7A','6b','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','0','2d','3A0','26','27A','3A0','1A1A','2b','3A8','27A','1A2','2b','3Aa','27A','2e','62','7Af','62','7A2','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','6','3A0','23A','25A','25A','23A','20','2e','27A','62','7Af','62','3A6','3A0','3A7A','27A','48','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A4','2b','3A1A','2b','20','2e','27A','62','7Af','62','3A6','3A0','3A7A','27A','48','48','1A6','2d','3A2','0','23A','3A0','6c','c','23A','2f','27A','62','7Af','62','60','1A6','2d','3A2','0','23A','3A0','60','48','1A6','2d','3A2','0','23A','3A0','6c','1A2','23A','3A0','27A','2c','3A6','62','7Af','62','f','23A','2b','2c','4','3A0','23A','2f','27A','48','1A6','2d','3A2','0','23A','3A0','6c','3A','2c','21A','2a','2d','3A0','1A2','2d','2b','2c','3A6','62','7Af','62','1A4','27A','21A','3A6','2d','3A0','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6b','48','1A6','2d','3A2','0','23A','3A0','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6e','62','7A2','6e','62','7A2','6b','48','1A6','2d','3A2','0','23A','3A0','6c','1A1A','2b','3A8','27A','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A3A','6e','62','7A2','6e','62','7A2','6c','7A3A','7A7A','6e','62','7A2','6b','48','1A6','2d','3A2','0','23A','3A0','6c','0','23A','21A','29A','25A','3A0','2d','3A7A','2c','26','1A','2d','2e','2d','3A0','7A1A','62','7Af','62','1A','2d','2e','2d','3A0','7A1A','6c','24','3A0','2d','2f','1A0','5A','0','6a','7A7A','7A2','6e','62','7A7A','7A2','6e','62','7A7A','7A2','6b','48','1A6','2d','3A2','0','23A','3A0','6c','0','2d','3A0','26','27A','3A0','1A1A','2b','3A8','27A','1A2','2b','3Aa','27A','2e','62','7Af','62','7A2','48','1A6','2d','3A2','0','23A','3A0','6c','6','3A0','23A','25A','25A','23A','20','2e','27A','62','7Af','62','3A6','3A0','3A7A','27A','48','48','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','c','23A','2f','27A','62','7Af','62','60','1A1A','21A','3A0','2b','3A2','3A6','b','2c','3A2','3A7A','3A6','60','48','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','1A2','23A','3A0','27A','2c','3A6','62','7Af','62','f','23A','2b','2c','4','3A0','23A','2f','27A','48','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','3A','2c','21A','2a','2d','3A0','1A2','2d','2b','2c','3A6','62','7Af','62','1A4','27A','21A','3A6','2d','3A0','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6b','48','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6e','62','7A2','6c','7A3A','7A7A','6e','62','7A2','6b','48','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','1A1A','2b','3A8','27A','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7Ab','6e','62','7A2','6e','62','7A2','6c','7A5A','6e','62','7A2','6b','48','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','1A6','27A','3Aa','3A6','62','7Af','62','60','6f','6f','62','5A7A6a','8f9Ab','9A1A8e','8fd1A','5A1A27A','81A5A8','67A6e','62','6f','6f','60','48','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','c','23A','2f','27A','62','7Af','62','60','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','60','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','1A2','23A','3A0','27A','2c','3A6','62','7Af','62','f','23A','2b','2c','4','3A0','23A','2f','27A','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','3A','2c','21A','2a','2d','3A0','1A2','2d','2b','2c','3A6','62','7Af','62','1A4','27A','21A','3A6','2d','3A0','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6b','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A7A','6e','62','7A2','6e','62','7A2','6c','7Ab','6e','62','7A2','6b','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','1A1A','2b','3A8','27A','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6c','7A1A','6e','62','7A2','6e','62','7A2','6c','7A3A','6e','62','7A2','6b','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','0','23A','21A','29A','25A','3A0','2d','3A7A','2c','26','1A','2d','2e','2d','3A0','7A1A','62','7Af','62','1A','2d','2e','2d','3A0','7A1A','6c','24','3A0','2d','2f','1A0','5A','0','6a','7A0','7A7A','7A7A','6e','62','7A0','7A7A','7A7A','6e','62','7A0','7A7A','7A7A','6b','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','0','2d','3A0','26','27A','3A0','1A1A','2b','3A8','27A','1A2','2b','3Aa','27A','2e','62','7Af','62','7A2','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','1A6','27A','3Aa','3A6','62','7Af','62','60','8f9A2','880e','60','48','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','c','23A','2f','27A','62','7Af','62','60','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','60','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A2','23A','3A0','27A','2c','3A6','62','7Af','62','1A1A','21A','3A0','27A','27A','2c','5A','3A7A','2b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','3A','2c','21A','2a','2d','3A0','1A2','2d','2b','2c','3A6','62','7Af','62','1A4','27A','21A','3A6','2d','3A0','7A0','6c','2c','27A','3A5A','6a','7A2','6e','62','7A2','6c','7A7A','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6e','62','7A3A','7A2','6e','62','7A2','6c','7A7A','6e','62','7A2','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A1A','2b','3A8','27A','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','7A2','6e','62','7A7A','7A2','6e','62','7A2','6e','62','7A7A','7A2','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','0','23A','21A','29A','25A','3A0','2d','3A7A','2c','26','1A','2d','2e','2d','3A0','7A1A','62','7Af','62','1A','2d','2e','2d','3A0','7A1A','6c','24','3A0','2d','2f','1A0','5A','0','6a','7A3A','7A2','7A2','6e','62','7A3A','7A2','7A2','6e','62','7A3A','7A2','7A2','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','0','2d','3A0','26','27A','3A0','1A1A','2b','3A8','27A','1A2','2b','3Aa','27A','2e','62','7Af','62','7A2','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A6','27A','3Aa','3A6','1A','2d','2e','2d','3A0','7A1A','62','7Af','62','1A','2d','2e','2d','3A0','7A1A','6c','24','3A0','2d','2f','1A0','5A','0','6a','7A0','7A7A','7A7A','6e','62','7A0','7A7A','7A7A','6e','62','7A0','7A7A','7A7A','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','4','2d','2c','3A6','1A1A','2b','3A8','27A','62','7Af','62','7A','2c','3A7A','2f','6c','4','2d','2c','3A6','1A1A','2b','3A8','27A','6c','1A1A','2b','3A8','27A','7A3A','7A6','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A6','27A','3Aa','3A6','62','7Af','62','60','9A6d2','85A8d','60','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','6','3A0','23A','25A','25A','23A','20','2e','27A','62','7Af','62','3A6','3A0','3A7A','27A','48','1A0','3A7A','2c','0','3A7A','3A6','3A6','2d','2c','6c','f','2d','3A7A','3A1A','27A','0','3A7A','3A6','3A6','2d','2c','7A3A','1A','2e','2b','21A','29A','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','6b','48','62','2e','2d','21A','23A','2e','62','3A1A','21A','3A0','2b','3A2','3A6','1A1A','3A6','3A0','2b','2c','25A','62','7Af','62','1A6','27A','3Aa','3A6','0','2d','3Aa','6c','1A6','27A','3Aa','3A6','48','48','62','62','62','2e','2d','21A','23A','2e','62','3A1A','3A7A','21A','21A','27A','3A1A','3A1A','6e','62','27A','3A0','3A0','2d','3A0','f','3A1A','25A','62','7Af','62','3A2','21A','23A','2e','2e','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','6b','48','62','62','62','62','62','62','62','62','2e','2d','23A','26','3A1A','3A6','3A0','2b','2c','25A','6a','3A1A','21A','3A0','2b','3A2','3A6','1A1A','3A6','3A0','2b','2c','25A','6b','6a','6b','48','62','62','62','62','27A','2c','26','6b','48','48','62','62','2b','24','62','2c','2d','3A6','62','3A1A','3A7A','21A','21A','27A','3A1A','3A1A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','3A5A','23A','3A0','2c','6a','60','81A5A8','67A6e','6225A','880e','5A9A7A3A','8d67A','ff5A8','60','6e','62','27A','3A0','3A0','2d','3A0','f','3A1A','25A','6b','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','f','2d','3A7A','3A1A','27A','0','3A7A','3A6','3A6','2d','2c','7A3A','1A','2e','2b','21A','29A','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','6b','48','62','62','62','62','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A4','2b','3A1A','2b','20','2e','27A','62','7Af','62','2c','2d','3A6','62','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A4','2b','3A1A','2b','20','2e','27A','48','62','62','62','62','2b','24','62','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A4','2b','3A1A','2b','20','2e','27A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A6','27A','3Aa','3A6','62','7Af','62','60','9A6d2','85A8d','60','48','62','62','62','62','27A','2e','3A1A','27A','48','62','62','62','62','62','62','62','62','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A6','27A','3Aa','3A6','62','7Af','62','60','667Ac','7A9A7A8','60','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','1A6','2d','3A2','0','23A','3A0','6c','b','2c','3A2','3A7A','3A6','0','27A','25A','23A','2c','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','b','2c','3A2','3A7A','3A6','6b','48','62','62','62','62','2b','24','62','b','2c','3A2','3A7A','3A6','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','62','7Af','7Af','62','7A','2c','3A7A','2f','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','6c','f','2d','3A7A','3A1A','27A','0','3A7A','3A6','3A6','2d','2c','7A3A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','25A','2b','2c','25A','62','7Af','62','3A6','3A0','3A7A','27A','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','1A1A','3A6','23A','3A0','3A6','62','7Af','62','b','2c','3A2','3A7A','3A6','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','1A2','2d','3A1A','62','7Af','62','1A6','2d','3A2','0','23A','3A0','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','48','1A6','2d','3A2','0','23A','3A0','6c','b','2c','3A2','3A7A','3A6','1A','2a','23A','2c','25A','27A','26','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','b','2c','3A2','3A7A','3A6','6b','48','62','62','62','62','2b','24','62','b','2c','3A2','3A7A','3A6','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','62','7Af','7Af','62','7A','2c','3A7A','2f','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','6c','f','2d','3A7A','3A1A','27A','f','2d','3A4','27A','2f','27A','2c','3A6','62','23A','2c','26','62','6','3A0','23A','25A','25A','2b','2c','25A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','2e','2d','21A','23A','2e','62','6','27A','2e','3A6','23A','62','7Af','62','b','2c','3A2','3A7A','3A6','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','6f','62','6','3A0','23A','25A','1A1A','3A6','23A','3A0','3A6','48','62','62','62','62','62','62','62','62','1A6','2d','3A2','0','23A','3A0','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Aa','6c','1A1A','21A','23A','2e','27A','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Aa','6c','d','24','24','3A1A','27A','3A6','62','69A','62','6','27A','2e','3A6','23A','6c','1Aa','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Ab','6c','1A1A','21A','23A','2e','27A','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Ab','6c','d','24','24','3A1A','27A','3A6','62','69A','62','6','27A','2e','3A6','23A','6c','1Ab','6b','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','48','1A6','2d','3A2','0','23A','3A0','6c','b','2c','3A2','3A7A','3A6','7A','2c','26','27A','26','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','b','2c','3A2','3A7A','3A6','6b','48','62','62','62','62','2b','24','62','b','2c','3A2','3A7A','3A6','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','62','7Af','7Af','62','7A','2c','3A7A','2f','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','6c','f','2d','3A7A','3A1A','27A','0','3A7A','3A6','3A6','2d','2c','7A3A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','25A','2b','2c','25A','62','7Af','62','24','23A','2e','3A1A','27A','48','62','62','62','62','62','62','62','62','2b','24','62','f','23A','2b','2c','4','3A0','23A','2f','27A','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','6c','1Ab','6c','d','24','24','3A1A','27A','3A6','62','7Ae','62','7A2','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','62','62','62','62','1A1A','2a','2d','3A5A','0','3A7A','3A6','3A6','2d','2c','62','7Af','62','3A6','3A0','3A7A','27A','48','62','62','62','62','62','62','62','62','27A','2e','3A1A','27A','48','62','62','62','62','62','62','62','62','62','62','62','62','1A1A','2a','2d','3A5A','0','3A7A','3A6','3A6','2d','2c','62','7Af','62','24','23A','2e','3A1A','27A','48','62','62','62','62','62','62','62','62','27A','2c','26','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','b','2c','3A2','3A7A','3A6','0','27A','25A','23A','2c','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','b','2c','3A2','3A7A','3A6','6b','48','62','62','62','62','2b','24','62','b','2c','3A2','3A7A','3A6','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','62','7Af','7Af','62','7A','2c','3A7A','2f','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','6c','f','2d','3A7A','3A1A','27A','0','3A7A','3A6','3A6','2d','2c','7A3A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','25A','2b','2c','25A','62','7Af','62','3A6','3A0','3A7A','27A','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','1A1A','3A6','23A','3A0','3A6','62','7Af','62','b','2c','3A2','3A7A','3A6','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','1A2','2d','3A1A','62','7Af','62','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','b','2c','3A2','3A7A','3A6','1A','2a','23A','2c','25A','27A','26','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','b','2c','3A2','3A7A','3A6','6b','48','62','62','62','62','2b','24','62','b','2c','3A2','3A7A','3A6','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','62','7Af','7Af','62','7A','2c','3A7A','2f','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','6c','f','2d','3A7A','3A1A','27A','f','2d','3A4','27A','2f','27A','2c','3A6','62','23A','2c','26','62','6','3A0','23A','25A','25A','2b','2c','25A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','2e','2d','21A','23A','2e','62','6','27A','2e','3A6','23A','62','7Af','62','b','2c','3A2','3A7A','3A6','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','6f','62','6','3A0','23A','25A','1A1A','3A6','23A','3A0','3A6','48','62','62','62','62','62','62','62','62','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A2','2d','3A1A','2b','3A6','2b','2d','2c','62','7Af','62','1A7A','6','2b','2f','7A0','6c','2c','27A','3A5A','6a','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Aa','6c','1A1A','21A','23A','2e','27A','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Aa','6c','d','24','24','3A1A','27A','3A6','62','69A','62','6','27A','2e','3A6','23A','6c','1Aa','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Ab','6c','1A1A','21A','23A','2e','27A','6e','62','6','3A0','23A','25A','1A2','2d','3A1A','6c','1Ab','6c','d','24','24','3A1A','27A','3A6','62','69A','62','6','27A','2e','3A6','23A','6c','1Ab','6b','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','48','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','b','2c','3A2','3A7A','3A6','7A','2c','26','27A','26','7A8','1A','2d','2c','2c','27A','21A','3A6','6a','24','3A7A','2c','21A','3A6','2b','2d','2c','6a','b','2c','3A2','3A7A','3A6','6b','48','62','62','62','62','2b','24','62','b','2c','3A2','3A7A','3A6','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','62','7Af','7Af','62','7A','2c','3A7A','2f','6c','1A7A','3A1A','27A','3A0','b','2c','3A2','3A7A','3A6','1A6','3Ab','3A2','27A','6c','f','2d','3A7A','3A1A','27A','0','3A7A','3A6','3A6','2d','2c','7A3A','62','3A6','2a','27A','2c','48','62','62','62','62','62','62','62','62','6','3A0','23A','25A','25A','2b','2c','25A','62','7Af','62','24','23A','2e','3A1A','27A','48','62','62','62','62','27A','2c','26','48','27A','2c','26','6b','48','48','3A5A','2a','2b','2e','27A','62','3A6','3A0','3A7A','27A','62','26','2d','48','62','62','62','62','1A6','2d','25A','25A','2e','27A','0','3A7A','3A6','3A6','2d','2c','6c','1A4','2b','3A1A','2b','20','2e','27A','62','7Af','62','1A1A','2a','2d','3A5A','0','3A7A','3A6','3A6','2d','2c','48','62','62','62','62','3A5A','23A','2b','3A6','6a','6b','48','27A','2c','26','48',];IllIIllIIllIII(IllIIIllIIIIllI.call(IlIlIlIlIlIlIlIlII, IIIIIIIIllllllllIIIIIIII))
  	end
})
Tab:AddButton({
	Name = "不知道",
	Callback = function()
-- | SPDM | Global definitions

local arceus = arceus or nil
local unavailable = function(fake)
	return function(...)
		internalUtils:Notify("This feature cannot be used on the current apk version")
		return fake
	end
end

local getgenv = getgenv or function()
	if rconsolwarn then
		rconsolewarn("Fake getgenv called")
	end

	return {}
end

local cloneref = cloneref or function(...)
	if rconsolwarn then
		rconsolewarn("Fake cloneref called")
	end

	return ...
end

local clonefunction = function(funct: funct)
	if not funct then
		return nil
	end

	if clonefunction then
		return clonefunction(funct)
	end

	return function(...)
		return typeof(funct) == "function" and funct(...) or funct
	end
end

local executecode = executecode and clonefunction(executecode) or function(scr)
	task.spawn(loadstring(scr));
end

local setfpscap = setfpscap or unavailable(nil)
local getfpscap = getfpscap or unavailable(60)
local getfpsmax = getfpsmax or unavailable(60)

local makearceusfolder = arceus and clonefunction(arceus.makearceusfolder);
local writearceusfile = arceus and clonefunction(arceus.writearceusfile);
local listarceusfiles = arceus and clonefunction(arceus.listarceusfiles);
local isarceusfolder = arceus and clonefunction(arceus.isarceusfolder);
local readarceusfile = arceus and clonefunction(arceus.readarceusfile);
local isarceusfile = arceus and clonefunction(arceus.isarceusfile);
local isiosdevice = (arceus and clonefunction(arceus.is_ios)) or function()
	return false 
end

getgenv().arceus = nil

arceus_libs = {
	data = {
		handled_page_dragging = {},
	},
	
	renderer = {
		data = {
			removedFromRendering = Instance.new("BindableEvent"),
			connection = nil,
			id_counter = 0,
			to_remove = {},
			functions = {},
			paused = {}
		},

		pauseFromRendering = function(id: number)
			arceus_libs.renderer.data.paused[id] = true
		end,

		resumeFromRendering = function(id: number)
			arceus_libs.renderer.data.paused[id] = nil
		end,

		removeFromRendering = function(id: number)		
			if arceus_libs.renderer.data.functions[id] then			
				arceus_libs.renderer.data.to_remove[id] = true
			end
		end,

		pushToRendering = function(funct)
			arceus_libs.renderer.data.id_counter += 1
			local new_id = "r" .. arceus_libs.renderer.data.id_counter

			arceus_libs.renderer.data.functions[new_id] = funct

			return new_id
		end,

		startRendering = function()
			if arceus_libs.renderer.data.connection then
				return
			end

			local RUN_SERVICE = cloneref(game:GetService("RunService"))
			arceus_libs.renderer.data.connection = RUN_SERVICE.RenderStepped:Connect(function(delta)
				pcall(function()
					for id, v in pairs(arceus_libs.renderer.data.functions) do
						if not arceus_libs.renderer.data.paused[id] then
							v(delta, id)
						end
					end

					local removed = false
					for id, v in pairs(arceus_libs.renderer.data.to_remove) do
						arceus_libs.renderer.data.functions[id] = nil
						arceus_libs.renderer.data.to_remove[id] = nil
						removed = true
					end

					if removed then
						arceus_libs.renderer.data.removedFromRendering:Fire()
					end
				end)
			end)
		end,

		stopRenddering = function()
			if arceus_libs.renderer.data.connection then
				arceus_libs.renderer.data.connection:Disconnect()
				arceus_libs.renderer.data.connection = nil
			end
		end,
	},
	
	
	input = {
		handleCustomDrag = function(object: GuiObject)
			local lastMousePos, dragging, startPos, viewportSize
			local USER_INPUT_SERVICE = cloneref(game:GetService("UserInputService"))
			
			arceus_libs.data.handled_page_dragging[object] = true
			object.Draggable = false
			object.Active = true

			local function Update(dt, renderId)
				if not object.Active or not object.Visible then
					return
				end

				if not object then
					arceus_libs.renderer.removeFromRendering(renderId)
				end

				local camera = game.Workspace.CurrentCamera
				viewportSize = camera.ViewportSize

				if not dragging or not startPos or not lastMousePos then
					return
				end

				local delta = (lastMousePos - USER_INPUT_SERVICE:GetMouseLocation())
				local xGoal = startPos.X.Offset - delta.X
				local yGoal = startPos.Y.Offset - delta.Y
				local anchor = object.AnchorPoint
				local size = object.AbsoluteSize
				local pos = object.Position

				-- Clamp the position within the screen boundaries
				local xOffsize = size.X - (size.X * anchor.X) - viewportSize.Y * 0.1
				local yOffsize = size.Y - (size.Y * anchor.Y) - viewportSize.Y * 0.1

				xGoal = math.clamp(xGoal, -xOffsize, viewportSize.X + xOffsize)
				yGoal = math.clamp(yGoal, -yOffsize, viewportSize.Y + yOffsize)

				lastMousePos = USER_INPUT_SERVICE:GetMouseLocation()
				startPos = UDim2.new(pos.X.Scale, xGoal, pos.Y.Scale, yGoal)

				object.Position = startPos
			end

			object.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					local pos = object.Position
					dragging = true

					startPos = UDim2.fromOffset(pos.X.Scale * viewportSize.X + pos.X.Offset, pos.Y.Scale * viewportSize.Y + pos.Y.Offset) --object.Position
					object.Position = startPos

					lastMousePos = USER_INPUT_SERVICE:GetMouseLocation()

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)

			return arceus_libs.renderer.pushToRendering(Update)
		end,

		isDraggable = function(object: GuiObject)
			return arceus_libs.data.handled_page_dragging[object] or object.Draggable
		end
	},
	
	buttons = {
		data = {
			drag_min = 15,
			long_click_time = 0.5,

			has_been_dragged = function(lastPos: UDim2, newPos: UDim2)
				if not lastPos or not newPos then
					return false
				end

				return math.abs((lastPos - newPos).Magnitude) > arceus_libs.buttons.data.drag_min
			end,
		},

		holdable = function(button: GuiButton, waitForRelease: boolean)
			local clickFetch = Instance.new("BindableEvent")
			local shortClick = Instance.new("BindableEvent")
			local longClick = Instance.new("BindableEvent")
			local lastPress = nil
			local lastPos = nil

			button.MouseButton1Down:Connect(function()
				lastPos = button.AbsolutePosition
				lastPress = os.clock()

				if not waitForRelease then
					task.spawn(function()
						local exit = false

						local callback
						callback = clickFetch.Event:Connect(function()
							if not exit then
								shortClick:Fire(button, os.clock() - lastPress)
								exit = true
							end
						end)

						task.wait(arceus_libs.buttons.data.long_click_time + 0.05)

						if not exit then
							exit = true
							if arceus_libs.input.isDraggable(button) and arceus_libs.buttons.data.has_been_dragged(lastPos, button.AbsolutePosition) then
								return
							end

							longClick:Fire(button, os.clock() - lastPress)
						end
					end)
				end
			end)

			button.MouseButton1Up:Connect(function()
				if arceus_libs.input.isDraggable(button) and arceus_libs.buttons.data.has_been_dragged(lastPos, button.AbsolutePosition) then
					return
				end

				if not waitForRelease then
					clickFetch:Fire()
					return
				end

				local clickTime = os.clock() - lastPress
				if lastPress and clickTime >= arceus_libs.buttons.data.long_click_time then
					longClick:Fire(button, clickTime)
				else
					shortClick:Fire(button, clickTime)
				end
			end)

			return {
				ShortClick = shortClick, 
				LongClick = longClick,
				Button = button
			}
		end
	}
}

-- |

local framework = setmetatable({
	dependencies = {
		utils = {}
	},
	data = {},
	components = {
		base = {}
	},
	popups = {},
	pages = {
		localScripts = {},
		console = {},
		exploitSettings = {
			optionTypes = {}
		},
		startup = {},
		navbar = {},
		globalScripts = {},
		editor = {}
	}
}, {
	__index = function(t, k)
		local res, split = t, string.split(k, ".");
		for i, v in split do
			res = rawget(res, v);
		end
		return res;
	end
});

do
	--[[ Enum ]]--

	local codexEnum = {};

	function codexEnum.__index(t, k)
		return t._map[k] or codexEnum[k];
	end

	function codexEnum.new(items: {any}): {any}
		local map = {};

		for i, v in items do
			map[v] = i;
		end

		return setmetatable({
			_map = map,
			_items = items
		}, codexEnum);
	end

	function codexEnum:GetEnumItems()
		return self._items;
	end

	--[[ Module ]]--

	framework.dependencies.codexEnum = {
		NavbarState = codexEnum.new({ "Hidden", "Partial", "Full" })
	};
end

do
	--[[ Connection ]]--

	local connection = {};
	connection.__index = connection;

	function connection.new(signal: {any}, fn: (any))
		return setmetatable({
			_signal = signal,
			_fn = fn
		}, connection);
	end

	function connection:Disconnect()
		self._signal[self] = nil;
	end

	--[[ Signal ]]--

	local signal = {};
	signal.__index = signal;

	function signal.new()
		return setmetatable({}, signal);
	end

	function signal:Connect(fn: (any))
		local conn = connection.new(self, fn);
		self[conn] = true;
		return conn;
	end

	function signal:Once(fn: (any))
		local conn; conn = self:Connect(function(...)
			conn:Disconnect();
			fn(...);
		end);
		return conn;
	end

	function signal:Fire(...)
		for conn, _ in self do
			task.spawn(conn._fn, ...);
		end
	end

	function signal:Wait()
		local thread = coroutine.running();
		local conn; conn = self:Connect(function(...)
			conn:Disconnect();
			task.spawn(thread, ...);
		end);
		return coroutine.yield();
	end

	function signal:DisconnectAll()
		table.clear(self);
	end

	framework.dependencies.signal = signal;
end

do
	--[[ Variables ]]--

	local runService = cloneref(game:GetService("RunService"));
	local tweenService = cloneref(game:GetService("TweenService"));

	local isRunning, isStudio = runService:IsRunning(), runService:IsStudio();
	local dynamicParent;

	--[[ Setup ]]--

	if gethui then
		dynamicParent = gethui();
	elseif isRunning then
		dynamicParent = isStudio and game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui") or cloneref(game:GetService("CoreGui"));
	else
		dynamicParent = cloneref(game:GetService("StarterGui"));
	end

	--[[ Module ]]--

	local utils = {};

	function utils:RandomString(len: number) -- SPDM
		local chars = {}
		for i = 1, len or math.random(16, 32) do
			chars[i] = string.char(math.random(33, 230))
		end

		return table.concat(chars)
	end

	function utils:Create(className: string, properties: {any}, children: {any}?): Instance
		local instance = Instance.new(className);
		for i, v in properties do
			if typeof(instance[i]) == "RBXScriptSignal" then
				instance[i]:Connect(v);
			elseif i ~= "Parent" then
				instance[i] = v;
			end
		end
		if children ~= nil then
			for i, v in children do
				v.Parent = instance;
			end
		end

		--[[ SPDM | Random name protection, this system is not compatible as it access the instances by the name.
		
			if isRunning and not isStudio then
				instance.Name = utils:RandomString(nil)
			end
		]]

		instance.Parent = properties.Parent;
		return instance;
	end

	function utils:Tween(instance: Instance, duration: number, properties: {any}, ...): Tween
		local tween = tweenService:Create(instance, TweenInfo.new(duration, ...), properties);
		tween:Play();
		return tween;
	end

	function utils:DynamicParent(instance: Instance): Instance
		instance.Parent = dynamicParent;
		return instance;
	end

	framework.dependencies.utils.instance = utils;
end

do
	--[[ Module ]]--

	local utils = {};

	function utils:CapitaliseFirst(str: string): string
		return string.upper(string.sub(str, 1, 1)) .. string.lower(string.sub(str, 2));
	end

	function utils:ConvertToCamelCase(str: string): string
		local res = "";
		for i, v in string.split(str, " ") do
			res ..= i == 1 and string.lower(v) or self:CapitaliseFirst(v);
		end
		return res;
	end

	framework.dependencies.utils.string = utils;
end

do
	--[[ Module ]]--

	local utils = {};

	function utils:DeepCopy(x: {any})
		local y = {};
		for i, v in x do
			y[i] = type(v) == "table" and self:DeepCopy(v) or v;
		end
		return y;
	end

	function utils:Concatenate(x: {any}, y: {any})
		if y ~= nil then
			for i, v in y do
				table.insert(x, v);
			end
		end
		return x;
	end

	function utils:DeepOverwrite(x: {any}, y: {any}, inclusive: boolean?)
		if y == nil then
			return x;
		end
		for i, v in y do
			if x[i] == nil then
				if inclusive then
					x[i] = v;
				end
			else
				local _type = typeof(x[i]);
				if _type == typeof(v) then
					if _type == "table" then
						self:DeepOverwrite(x[i], v);
					else
						x[i] = v;
					end
				end
			end
		end
		return x;
	end

	framework.dependencies.utils.table = utils;
end

do
	--[[ Variables ]]--

	local denominations = {
		"K", "M", "B", "T", "q", "Q", "s", "S", "O", "N", "d", "U", "D"
	};

	--[[ Module ]]--

	local utils = {};

	function utils:Round(input: number, float: number): number
		local bracket = 1 / float;
		return math.round(input * bracket) / bracket;
	end

	function utils:FormatAsCount(input: number, float: number): string
		if input < 1000 then
			return tostring(input);
		end
		local denominationIndex = math.floor(math.log10(input) / 3);
		return tostring(self:Round(input / (10 ^ (denominationIndex * 3)), float)) .. tostring(denominations[denominationIndex]);
	end

	function utils:FormatAsLiteralCount(input: number): string
		local x = string.gsub(string.reverse(tostring(input)), "(%d%d%d)", "%1,");
		return string.gsub(string.reverse(x), "^,", "");
	end

	function utils:IsWithin2DBounds(position: Vector2, topLeft: Vector2, bottomRight: Vector2): boolean
		return position.X >= topLeft.X and position.X <= bottomRight.X and position.Y >= topLeft.Y and position.Y <= bottomRight.Y;
	end

	framework.dependencies.utils.maths = utils;
end

do
	--[[ Variables ]]--

	local httpService = cloneref(game:GetService("HttpService"));
	local httpRequest = request or http_request or (syn and syn.request);


	--[[ Module ]]--

	local utils = {};
	
	-- SPDM
	function utils:Notify(text: string)
		cloneref(game:GetService("StarterGui")):SetCore("SendNotification", {
			Title = "Codex " .. (isiosdevice() and "iOS" or "Android"),
			Text = text
		});
	end

	function utils:Request(url: string, method: string?, headers: {any}?, body: any?): string
		local s, r = pcall(httpRequest, {
			Url = url,
			Method = method or "GET",
			Headers = headers,
			Body = type(body) == "table" and httpService:JSONEncode(body) or body
		});
		
		if s == false or r.Success == false or r.StatusCode ~= 200 then
			if not r.StatusCode then
				return false
			end
			
			if r.StatusCode >= 500 then
				utils:Notify("The remote server is experiencing issues, try again later.")
				
			elseif r.StatusCode >= 400 and s and r and r.Body then
				local success, data = pcall(function()
					return httpService:JSONDecode(r.Body)
				end)
				
				if success and data and data.userFacingMessage then
					utils:Notify(data.userFacingMessage)
				end
			end
			
			return false;
		end
		
		return r.Body;
	end

	function utils:Execute(scr: string, ...)
		executecode(scr);
	end

	function utils:AreVersionsAlike(currentVersion: string, newestVersion: string)
		local currentSplit, newestSplit = string.split(currentVersion, "."), string.split(newestVersion, ".");
		if #currentSplit ~= #newestSplit then
			return false;
		end
		for i = 1, #currentSplit do
			if currentSplit[i] ~= newestSplit[i] then
				return false;
			end
		end
		return true;
	end

	framework.dependencies.utils.internal = utils;
end

do
	--[[ Variables ]]--

	local httpService = cloneref(game:GetService("HttpService"));

	local internalUtils = framework.dependencies.utils.internal;

	local backup = {
		androidVersion = "1",
		iosVersion = "1",
		
		changelog = {
			{
				stamp = "2023-01-01T00:00:00Z",
				data = {
					"Changelog Data Failed To Download"
				}
			}
		}
	};

	--[[ Module ]]--

	local internalSettings = {};

	function internalSettings:Initialize()
		local data = backup;
		if identifyexecutor then
			local hostData = internalUtils:Request(isiosdevice() and "https://rblxexploits.com/codexiosUI.json" or "https://rblxexploits.com/codexUI.json");
			if not hostData then
				internalUtils:Notify("An error occured. Code: 001")
				return;
			end
			
			pcall(function() -- SPDM
				data = httpService:JSONDecode(hostData)
			end)
		end
		self.data = data;
	end

	framework.data.internalSettings = internalSettings;
end

do
	framework.data.builtInScripts = {
		{
			title = "Dark Dex V4",
			description = "A powerful game explorer GUI. Shows every instance of the game and all their properties. Useful for developers.",
			icon = "rbxassetid://14806198159",
			content = "local file = \"dexV4.lua\"; local raw = isfile and isfile(file) and readfile(file); raw = raw or game:HttpGetAsync(\"https://raw.githubusercontent.com/loglizzy/dexV4/main/source.lua\"); if isfile then task.spawn(writefile, file, game:HttpGet(url)); end loadstring(raw)();"
		},
		{
			title = "Unnamed ESP",
			description = "Player ESP for Roblox, fully undetectable, uses built in drawing API.",
			icon = "rbxassetid://14806221310",
			content = "pcall(function() loadstring(game:HttpGet(\"https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua\"))(); end);"
		},
		{
			title = "Hydroxide",
			description = "General purpose pen-testing tool for games on the Roblox engine",
			icon = "rbxassetid://14806229032",
			content = "loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/init.lua\"))(); loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ui/main.lua\"))();"
		},
		{
			title = "Infinite Yield",
			description = "Admin command line script with 300+ commands and 6 years of development",
			icon = "rbxassetid://14806239733",
			content = "loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\"))();"
		},
		{
			title = "Owl Hub",
			description = "Owl Hub is a free Roblox script hub developed by Google Chrome and CriShoux. It currently has 30+ games.",
			icon = "rbxassetid://14806252030",
			content = "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt\"))();"
		},
		{
			title = "Reaper Hub",
			description = "Reaper Hub is a free Roblox script hub developed by Reaper. It currently supports 35+ games using a single loadstring.",
			icon = "rbxassetid://17219371471",
			content = "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/AyoReaper/Reaper-Hub/main/loader.lua\"))();"
		}
	};
end

do
	--[[ Variables ]]--

	local signal = framework.dependencies.signal;
	local internalUtils = framework.dependencies.utils.internal;
	local tableUtils = framework.dependencies.utils.table;

	local httpService = cloneref(game:GetService("HttpService"));

	local savedScripts = {
		accumulator = 0,
		cache = {},
		onScriptAdded = signal.new(),
		onScriptRemoved = signal.new()
	};

	--[[ Functions ]]--

	local function reassignIndexes(cache: {any})
		for i, v in cache do
			v.index = i;
		end
		return cache;
	end

	local function loadScriptCache()
		if isarceusfile and isarceusfile("data/codexScriptCache.json") then
			local s, r = pcall(httpService.JSONDecode, httpService, readarceusfile("data/codexScriptCache.json"));
			if s and type(r) == "table" then
				local accumulation = 0;
				local cache = {};
				local hasFoundDuplicateIndex = false;
				for i, v in r do
					if not (type(v) == "table" and v.title and v.description and v.content and v.index and v.autoExecute ~= nil) then
						continue;
					end

					if v.index > accumulation then
						accumulation = v.index;
					end

					if hasFoundDuplicateIndex == false then -- backwards fix from an old broken update and/or someone trying to fuck with the system
						for i2, v2 in cache do
							if v2.index == v.index then
								hasFoundDuplicateIndex = true;
							end
						end
					end

					v.onAutoExecuteToggled = signal.new();
					cache[#cache + 1] = hasFoundDuplicateIndex and reassignIndexes(v) or v;
				end
				savedScripts.accumulator = accumulation;
				savedScripts.cache = cache;
			end
		end
	end

	local function saveScriptCache()
		if writearceusfile then
			local cache = tableUtils:DeepCopy(savedScripts.cache);
			for i, v in cache do
				v.onAutoExecuteToggled = nil;
			end
			writearceusfile("data/codexScriptCache.json", httpService:JSONEncode(cache));
		end
	end

	--[[ Module ]]--

	function savedScripts:Initialize()
		loadScriptCache();
		for i, v in savedScripts.cache do
			if v.autoExecute then
				task.spawn(function()
					internalUtils:Execute(v.content);
				end);
			end
		end
	end

	function savedScripts:Get(index: number)
		for i, v in self.cache do
			if v.index == index then
				return i, v;
			end
		end
	end

	function savedScripts:Add(title: string, description: string, content: string)
		self.accumulator += 1;
		local index = self.accumulator;

		local newScript = {
			title = title,
			description = description,
			content = content,
			index = index,
			autoExecute = false,
			onAutoExecuteToggled = signal.new()
		};

		self.cache[#self.cache + 1] = newScript;
		self.onScriptAdded:Fire(newScript);
		saveScriptCache();
	end

	function savedScripts:Remove(index: number)
		local i, save = self:Get(index);
		if save then
			table.remove(self.cache, i);
			self.onScriptRemoved:Fire(save);
			saveScriptCache();
		end
	end

	function savedScripts:ToggleAutomaticExecution(index: number, state: boolean)
		local _, save = self:Get(index);
		if save then
			save.autoExecute = state;
			save.onAutoExecuteToggled:Fire(state);
			saveScriptCache();
		end
	end

	framework.data.savedScripts = savedScripts;
end

do
	--[[ Variables ]]--

	local httpService = cloneref(game:GetService("HttpService"));

	local signal = framework.dependencies.signal;
	local tableUtils = framework.dependencies.utils.table;

	local signalCache = {};
	local settingsCache = {
		executor = {
			openingMode = "Floating Icon", -- SPDM Team | Floating Icon
			showParticles = true, -- SPDM Team | Show Particles Setting
			autoExecute = true,
			autoSaveTabs = false,
			fps = {
				unlocked = false,
				vSync = false,
				value = 60
			}
		},
		player = {
			walkSpeed = {
				enabled = false,
				value = 16
			},
			jumpPower = {
				enabled = false,
				value = 50
			},
			antiAfk = false
		},
		serverHop = {
			priority = "Most Players",
			delayedHop = false,
			delay = 10
		}
	};

	local userSettings = {};

	--[[ Functions ]]--

	local function saveUserSettings()
		if writearceusfile then
			writearceusfile("data/codexSettings.json", httpService:JSONEncode(tableUtils:DeepCopy(settingsCache)));
		end
	end

	local function createAutosaveMetatable(options: {any}, hierarchy: string)
		for i, v in options do
			if type(v) == "table" then
				options[i] = createAutosaveMetatable(v, hierarchy == "" and i or string.format("%s.%s", hierarchy, i));
			end
		end

		return setmetatable({}, {
			__index = function(_, k)
				return options[k];
			end,
			__newindex = function(_, k, v)
				options[k] = v;
				saveUserSettings();
				userSettings:FirePropertyChangedSignal(hierarchy == "" and k or string.format("%s.%s", hierarchy, k), v);
			end,
			__iter = function()
				return next, options;
			end
		});
	end

	--[[ Module ]]--

	function userSettings:Initialize()
		if isarceusfolder and not isarceusfolder("data") then
			makearceusfolder("data");
		end

		if isarceusfile and isarceusfile("data/codexSettings.json") then
			local succ, res = pcall(httpService.JSONDecode, httpService, readarceusfile("data/codexSettings.json"));
			if succ then
				tableUtils:DeepOverwrite(settingsCache, res);
			else
				task.defer(error, "settings file is corrupted");
			end
		end

		self.cache = createAutosaveMetatable(settingsCache, "");
	end

	function userSettings:GetPropertyChangedSignal(path: string)
		if signalCache[path] == nil then
			signalCache[path] = signal.new();
		end
		return signalCache[path];
	end

	function userSettings:FirePropertyChangedSignal(path: string, value: any)
		local sig = signalCache[path];
		if sig then
			sig:Fire(value);
		end
	end

	framework.data.userSettings = userSettings;
end

do
	--[[ Variables ]]--

	local signal = framework.dependencies.signal;
	local tableUtils = framework.dependencies.utils.table;

	local httpService = cloneref(game:GetService("HttpService"));

	local tabSystem = {
		accumulator = 1,
		selected = nil,
		cache = {
			{
				title = "Script 1",
				content = "print('Hello World!');",
				index = 1
			}
		},
		onTabCreated = signal.new(),
		onTabRemoved = signal.new(),
		onTabSelected = signal.new()
	};

	--[[ Functions ]]--

	local function reassignIndexes(cache: {any})
		for i, v in cache do
			v.index = i;
		end
		return cache;
	end

	local function loadTabCache()
		if isarceusfile and isarceusfile("data/codexTabs.json") then
			local s, r = pcall(httpService.JSONDecode, httpService, readarceusfile("data/codexTabs.json"));
			if s and type(r) == "table" then
				local accumulation = 0;
				local cache = {};
				local hasFoundDuplicateIndex = false;
				for i, v in r do
					if not (type(v) == "table" and v.title and v.content and v.index) then
						continue;
					end

					if v.index > accumulation then
						accumulation = v.index;
					end

					if hasFoundDuplicateIndex == false then -- backwards fix from an old broken update and/or someone trying to fuck with the system
						for i2, v2 in cache do
							if v2.index == v.index then
								hasFoundDuplicateIndex = true;
							end
						end
					end

					cache[#cache + 1] = hasFoundDuplicateIndex and reassignIndexes(v) or v;
				end
				tabSystem.accumulator = accumulation;
				tabSystem.cache = cache;
			end
		end
	end

	--[[ Module ]]--

	function tabSystem:Initialize()
		loadTabCache();
	end

	function tabSystem:Get(index: number)
		for i, v in self.cache do
			if v.index == index then
				return i, v;
			end
		end
	end

	function tabSystem:Add(title: string, content: string?)
		self.accumulator += 1;
		local index = self.accumulator;

		local newTab = {
			title = title,
			content = content or "print('Hello World!');",
			index = index
		};

		self.cache[#self.cache + 1] = newTab;
		self.onTabCreated:Fire(newTab);
		self:Select(index);
	end

	function tabSystem:Remove(index: number)
		if #self.cache > 1 then
			local i, tab = self:Get(index);
			if tab then
				if self.selected == tab then
					self:Select(self.cache[i == 1 and 2 or 1].index);
				end
				table.remove(self.cache, i);
				self.onTabRemoved:Fire(tab);
			end
		end
	end

	function tabSystem:Select(index: number)
		local _, tab = self:Get(index);
		if tab and (self.selected == nil or tab.index ~= self.selected.index) then
			self.selected = tab;
			self.onTabSelected:Fire(tab);
		end
	end

	function tabSystem:UpdateContent(index: number, content: string)
		local _, tab = self:Get(index);
		if tab then
			tab.content = content;
		end
	end

	function tabSystem:Save()
		if writearceusfile then
			writearceusfile("data/codexTabs.json", httpService:JSONEncode(tableUtils:DeepCopy(self.cache)));
		end
	end

	framework.data.tabSystem = tabSystem;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.editorButton = (function(title: string, icon: string, overwriteProps: {any}?, foreground: Color3?): Instance
		return instanceUtils:Create("TextButton", tableUtils:DeepOverwrite({ 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Size = UDim2.new(0, 50, 0, 50), 
			Text = "", 
			TextColor3 = Color3.fromHex("1b2a35"),
			ZIndex = 2
		}, overwriteProps, true), {
			instanceUtils:Create("UICorner", { 
				Name = "corner"
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = icon, 
				ImageColor3 = foreground or Color3.fromHex("9fa4ba"), 
				Name = "icon", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(0, 28, 0, 28),
				ZIndex = 2
			})
		});
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local tabSystem;

	local textService = cloneref(game:GetService("TextService"));

	--[[ Functions ]]--

	local function createButton(title: string): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Position = UDim2.new(1, -75, 1, -75), 
			Size = UDim2.new(0, textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
				Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				Text = title,
				Size = 14,
				Width = math.huge
			})).X + 42, 0, 32), 
			Text = ""
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 6), 
				Name = "corner"
			}),
			instanceUtils:Create("ImageButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutoButtonColor = false,
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = "rbxassetid://14808246706", 
				Name = "close", 
				Position = UDim2.new(1, -6, 0.5, 0), 
				Size = UDim2.new(0, 20, 0, 20)
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(1, -18, 1, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextXAlignment = Enum.TextXAlignment.Left
			})
		});
	end

	--[[ Module ]]--

	local tabButton = {};
	tabButton.__index = tabButton;

	function tabButton.new(tab: {any})
		if tabSystem == nil then
			tabSystem = framework.data.tabSystem;
		end

		local btn = createButton(tab.title);

		btn.MouseButton1Click:Connect(function()
			tabSystem:Select(tab.index);
		end);

		btn.close.MouseButton1Click:Connect(function()
			tabSystem:Remove(tab.index);
		end);

		return setmetatable({
			instance = btn
		}, tabButton);
	end

	function tabButton:Highlight(selected: boolean)
		instanceUtils:Tween(self.instance, 0.2, {
			BackgroundColor3 = Color3.fromHex(selected and "eb4545" or "3a3a4a");
		});
		instanceUtils:Tween(self.instance.title, 0.2, {
			TextColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba");
		});
		instanceUtils:Tween(self.instance.close, 0.2, {
			ImageColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba");
		});
	end

	function tabButton:Destroy()
		self.instance:Destroy();
	end

	framework.components.tabButton = tabButton;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Functions ]]--

	local function createButton(title: string, icon: string): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Size = UDim2.new(1, 0, 0, 50), 
			Text = "",
			ZIndex = 2
		}, {
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = icon, 
				ImageColor3 = Color3.fromHex("979ebd"), 
				ImageTransparency = 0.6, 
				Name = "icon", 
				Position = UDim2.new(0, 38, 0.5, 0), 
				Size = UDim2.new(0, 24, 0, 24),
				ZIndex = 2
			}, {
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11559270573", 
					ImageTransparency = 1, 
					Name = "glow", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 85, 0, 102),
					ZIndex = 2
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				AutomaticSize = Enum.AutomaticSize.XY, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size12, 
				Name = "text", 
				Position = UDim2.new(0, 70, 0.5, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 12, 
				TextTransparency = 0.2, 
				TextXAlignment = Enum.TextXAlignment.Left,
				ZIndex = 2
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = "rbxassetid://11558444554", 
				Name = "arrow", 
				Position = UDim2.new(0, 224, 0.5, 0), 
				Size = UDim2.new(0, 16, 0, 16),
				ZIndex = 2
			})
		});
	end

	--[[ Module ]]--

	local navbarButton = {};
	navbarButton.__index = navbarButton;

	function navbarButton.new(title: string, icon: string)
		return setmetatable({
			instance = createButton(title, icon);
		}, navbarButton);
	end

	function navbarButton:Highlight(selected: boolean)
		instanceUtils:Tween(self.instance.icon, 0.2, {
			ImageColor3 = selected and Color3.fromHex("eb4545") or Color3.fromHex("979ebd"),
			ImageTransparency = selected and 0 or 0.6
		});
		instanceUtils:Tween(self.instance.icon.glow, 0.2, {
			ImageTransparency = selected and 0 or 1
		});
	end

	framework.components.navbarButton = navbarButton;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.textBox = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextBox", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.X,
			BackgroundColor3 = Color3.fromRGB(58, 58, 74),
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
			PlaceholderText = "Value...",
			Size = UDim2.new(0, 0, 0, 32),
			Text = "",
			TextColor3 = Color3.fromRGB(159, 164, 186),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), tableUtils:Concatenate({
			instanceUtils:Create("UIPadding", {
				Name = "padding",
				PaddingLeft = UDim.new(0, 10),
				PaddingRight = UDim.new(0, 10)
			}),
			instanceUtils:Create("UICorner", {
				Name = "corner",
				CornerRadius = UDim.new(0, 6)
			})
		}, children));
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.textButton = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextButton", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.X,
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold),
			Size = UDim2.new(0, 0, 0, 32),
			TextColor3 = Color3.new(1, 1, 1),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), tableUtils:Concatenate({
			instanceUtils:Create("UIPadding", {
				Name = "padding",
				PaddingLeft = UDim.new(0, 10),
				PaddingRight = UDim.new(0, 10)
			}),
			instanceUtils:Create("UICorner", {
				Name = "corner",
				CornerRadius = UDim.new(0, 6)
			})
		}, children));
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.background = (function(overwriteProps: {any}?, children: {any}?): Instance
		return instanceUtils:Create("Frame", tableUtils:DeepOverwrite({
			AnchorPoint = Vector2.new(0.5, 0.5),
			BackgroundColor3 = Color3.fromRGB(21, 21, 29),
			BackgroundTransparency = 0.1,
			BorderSizePixel = 0,
			Name = "background",
			Position = UDim2.new(0.5, 0, 0.5, 0),
			Size = UDim2.new(1, 0, 1, 0),
			ZIndex = 0
		}, overwriteProps, true), children);
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;

	--[[ Module ]]--

	framework.components.base.textLabel = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextLabel", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.XY,
			BackgroundTransparency = 1,
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold),
			Size = UDim2.new(),
			TextColor3 = Color3.new(1, 1, 1),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), children);
	end);
end

do
	--[[ Variables ]]--

	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local mathsUtils = framework.dependencies.utils.maths;
	local tabSystem;

	local globalScriptSelection = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		local base = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "globalScriptSelection", 
			Parent = directory, 
			Position = UDim2.new(0.5, 0, 0.5, 20), 
			Size = UDim2.new(0.6, 0, 0.4, 100), 
			Visible = false
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("202028"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "selectedScript", 
				Position = UDim2.new(0, 30, 0, 20), 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "Selected Script:", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(0.5, 0, 1, -30), 
				Size = UDim2.new(1, -60, 0, 0)
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 18, 0, 16), 
					CellSize = UDim2.new(0.5, -9, 0, 36), 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder, 
					VerticalAlignment = Enum.VerticalAlignment.Bottom
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "execute", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Execute", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "loadToEditor", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Load to Editor", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "saveScript", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Save Script", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "cancel", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Cancel", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(1, 0), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Image = "", 
				Name = "icon", 
				Position = UDim2.new(1, -30, 0, 20), 
				Size = UDim2.new(0, 100, 1, -158)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIAspectRatioConstraint", { 
					AspectRatio = 16 / 9, 
					AspectType = Enum.AspectType.ScaleWithParentSize, 
					DominantAxis = Enum.DominantAxis.Height, 
					Name = "aspectRatio"
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "text", 
				Position = UDim2.new(0, 30, 0, 40), 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "views", 
				Position = UDim2.new(0, 30, 0, 70), 
				RichText = true, 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "<font weight=\"bold\">Views:</font>", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "updatedAt", 
				Position = UDim2.new(0, 30, 0, 90), 
				RichText = true, 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "<font weight=\"bold\">Updated:</font>", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("UIAspectRatioConstraint", { 
				AspectRatio = 480 / 244, 
				Name = "aspectRatio"
			})
		});

		base.buttons.execute.MouseButton1Click:Connect(function()
			globalScriptSelection:Hide();
			internalUtils:Execute(globalScriptSelection.selectedScript.script);
		end);

		base.buttons.loadToEditor.MouseButton1Click:Connect(function()
			if tabSystem == nil then
				tabSystem = framework.data.tabSystem;
			end
			tabSystem:Add(globalScriptSelection.selectedScript.title, globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);

		base.buttons.saveScript.MouseButton1Click:Connect(function()
			savedScripts:Add(globalScriptSelection.selectedScript.title, "", globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);

		base.buttons.cancel.MouseButton1Click:Connect(function()
			globalScriptSelection:Hide();
		end);

		return base;
	end

	--[[ Module ]]--

	function globalScriptSelection:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end

	function globalScriptSelection:Show(scriptResult: {any})
		self.selectedScript = scriptResult;
		self.frame.icon.Image = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId);
		self.frame.text.Text = scriptResult.title;
		self.frame.views.Text = "<font weight=\"bold\">Views:</font> " .. mathsUtils:FormatAsLiteralCount(scriptResult.views);
		self.frame.updatedAt.Text = "<font weight=\"bold\">Updated:</font> " .. DateTime.fromIsoDate(scriptResult.updatedAt or scriptResult.createdAt):FormatLocalTime("ll", "en-us");
		self.frame.Visible = true;
	end

	function globalScriptSelection:Hide()
		self.frame.Visible = false;
	end

	framework.popups.globalScriptSelection = globalScriptSelection;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local signal = framework.dependencies.signal;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	local textService = cloneref(game:GetService("TextService"));

	local dropdown = {
		selectedDropdown = nil,
		selectedItem = nil,
		onDropdownChanged = signal.new(),
		onSelectionChanged = signal.new()
	};

	--[[ Functions ]]--

	local function createItem(title: string)
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = stringUtils:ConvertToCamelCase(title),  
			Parent = dropdown.frame.container, 
			Position = UDim2.new(1, -75, 1, -75), 
			Size = UDim2.new(1, -4, 0, 28), 
			Text = title, 
			TextColor3 = Color3.fromHex("9fa4ba"), 
			TextSize = 14
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 4), 
				Name = "corner"
			}),
			instanceUtils:Create("UIPadding", { 
				Name = "padding", 
				PaddingLeft = UDim.new(0, 10), 
				PaddingRight = UDim.new(0, 10)
			})
		});
	end

	local function toggleItemSelection(item: TextButton, selected: boolean)
		instanceUtils:Tween(item, 0.25, {
			BackgroundTransparency = selected and 0 or 1,
			TextColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba")
		});
	end

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(1, 0), 
			BackgroundColor3 = Color3.fromHex("202028"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "dropdown", 
			Parent = directory, 
			Position = UDim2.new(1, -22, 0, 128), 
			Size = UDim2.new(0, 180, 0, 142)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 6), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("3a3a4a"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutomaticCanvasSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "container", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				ScrollBarImageColor3 = Color3.fromHex("53536b"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.Y, 
				Size = UDim2.new(1, -8, 1, -12), 
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("UIListLayout", { 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	end

	local function clearDropdown()
		for i, v in dropdown.frame.container:GetChildren() do
			if v:IsA("TextButton") then
				v:Destroy();
			end
		end
	end

	--[[ Module ]]--

	function dropdown:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end

	function dropdown:Show(item: {any}, adornee: GuiBase2d)
		clearDropdown();
		self.selectedDropdown = item.title;
		self.onDropdownChanged:Fire(item.title);

		if self.adornConnection then
			self.adornConnection:Disconnect();
		end

		do
			local bottomRight = adornee.AbsolutePosition + adornee.AbsoluteSize;
			self.frame.Position = UDim2.new(0, bottomRight.X, 0, bottomRight.Y + 44);

			self.adornConnection = adornee:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
				bottomRight = adornee.AbsolutePosition + adornee.AbsoluteSize;
				self.frame.Position = UDim2.new(0, bottomRight.X, 0, bottomRight.Y + 44);
			end);
		end

		for i, v in item.items do
			local currentItem = createItem(v);
			if v == item.value then
				toggleItemSelection(currentItem, true);
				self.selectedItem = currentItem;
			end

			currentItem.MouseButton1Click:Connect(function()
				toggleItemSelection(self.selectedItem, false);
				toggleItemSelection(currentItem, true);
				self.selectedItem = currentItem;
				self.onSelectionChanged:Fire(v);
			end);
		end

		self.frame.Visible = true;
	end

	function dropdown:Hide()
		clearDropdown();
		self.selectedDropdown = nil;
		self.selectedItem = nil;
		self.onDropdownChanged:Fire();
		self.frame.Visible = false;
	end

	framework.popups.dropdown = dropdown;
end

do
	--[[ Variables ]]--

	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;

	local saveCurrentTab = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		local base = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "saveCurrentTab", 
			Parent = directory, 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			Size = UDim2.new(0.6, 0, 0.4, 100), 
			Visible = false
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("202028"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(0.5, 0, 1, -30), 
				Size = UDim2.new(1, -60, 0, 0)
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 18, 0, 16), 
					CellSize = UDim2.new(0.5, -9, 0, 36), 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder, 
					VerticalAlignment = Enum.VerticalAlignment.Bottom
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "saveScript", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Save Script", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "cancel", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Cancel", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "text", 
				Position = UDim2.new(0.5, 0, 0, 40), 
				Size = UDim2.new(1, -60, 0, 0), 
				Text = "Script 1", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "currentTab", 
				Position = UDim2.new(0.5, 0, 0, 20), 
				Size = UDim2.new(1, -60, 0, 0), 
				Text = "Current Tab:", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("202028"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "title", 
				PlaceholderText = "Title...", 
				Position = UDim2.new(0.5, 0, 1, -125), 
				Size = UDim2.new(1, -62, 0, 32), 
				Text = "", 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke"
				})
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("202028"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				PlaceholderText = "Description...", 
				Position = UDim2.new(0.5, 0, 1, -79), 
				Size = UDim2.new(1, -62, 0, 32), 
				Text = "", 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke"
				})
			}),
			instanceUtils:Create("UISizeConstraint", { 
				MaxSize = Vector2.new(600, math.huge), 
				Name = "sizeConstraint"
			}),
			instanceUtils:Create("UIAspectRatioConstraint", { 
				AspectRatio = 480 / 244, 
				Name = "aspectRatio"
			})
		});

		base.buttons.saveScript.MouseButton1Click:Connect(function()
			local title = base.title.Text;
			if #title > 0 then
				savedScripts:Add(title, base.description.Text, saveCurrentTab.selectedTab.content);
				saveCurrentTab:Hide();
			end
		end);

		base.buttons.cancel.MouseButton1Click:Connect(function()
			saveCurrentTab:Hide();
		end);

		return base;
	end

	--[[ Module ]]--

	function saveCurrentTab:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end

	function saveCurrentTab:Show(selectedTab: {any})
		self.selectedTab = selectedTab;
		self.frame.text.Text = selectedTab.title;
		self.frame.title.Text = selectedTab.title;
		self.frame.Visible = true;
	end

	function saveCurrentTab:Hide()
		self.frame.Visible = false;
	end

	framework.popups.saveCurrentTab = saveCurrentTab;
end

do
	--[[ Module ]]--

	local popups = {
		cache = {}
	};

	function popups:RegisterGUI(gui: ScreenGui)
		self.gui = gui;
	end

	function popups:Show(name: string, ...)
		local module = self.cache[name];
		if module == nil then
			module = framework["popups." .. name];
			module:CreateUI(self.gui);
			self.cache[name] = module;
		end
		module:Show(...);
	end

	function popups:Hide(name: string,  ...)
		local module = self.cache[name];
		if module then
			module:Hide(...);
		end
	end

	framework.popups.popups = popups;
end

do
	--[[ Variables ]]--

	local textButton = framework.components.base.textButton;
	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local stringUtils = framework.dependencies.utils.string;
	local tabSystem;

	--[[ Functions ]]--

	local function createSavedScript(scriptData: {any}): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("202028"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(scriptData.title), 
			Size = UDim2.new(1, -4, 0, 82)
		}, {
			instanceUtils:Create("UICorner", { 
				Name = "corner"
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Position = UDim2.new(0.5, 0, 0.5, -2), 
				Size = UDim2.new(1, -32, 0, 0), 
				Text = scriptData.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -8, 1, -8), 
				Size = UDim2.new(0, 0, 0, 30)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "execute",
					Text = "Execute"
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "loadToEditor",
					Text = "Load to Editor"
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "delete",
					Text = "Delete"
				})
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "autoExecute", 
				Position = UDim2.new(1, -8, 0, 8), 
				Size = UDim2.new(0, 160, 0, 28), 
				Text = "", 
				TextColor3 = Color3.fromHex("000000"), 
				TextSize = 14
			}, {
				instanceUtils:Create("TextLabel", { 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "text", 
					Size = UDim2.new(1, 0, 1, 0), 
					Text = "Auto Execute", 
					TextColor3 = Color3.fromHex("9fa4ba"), 
					TextSize = 16, 
					TextWrap = true, 
					TextWrapped = true, 
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(1, 0.5), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "indicator", 
					Position = UDim2.new(1, -2, 0.5, 0), 
					Size = UDim2.new(0, 42, 0, 24)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					}),
					instanceUtils:Create("UIStroke", { 
						ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
						Color = scriptData.autoExecute and Color3.fromRGB(235, 69, 69) or Color3.fromRGB(58, 58, 74), 
						Name = "stroke", 
						Thickness = 2
					}),
					instanceUtils:Create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = scriptData.autoExecute and Color3.fromRGB(235, 69, 69) or Color3.fromRGB(58, 58, 74), 
						BorderColor3 = Color3.fromHex("000000"), 
						BorderSizePixel = 0, 
						Name = "dot", 
						Position = UDim2.new(0.5, scriptData.autoExecute and 9 or -9, 0.5, 0), 
						Size = UDim2.new(0, 18, 0, 18)
					}, {
						instanceUtils:Create("UICorner", { 
							CornerRadius = UDim.new(1, 0), 
							Name = "corner"
						})
					})
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0.5, 0, 0.5, 2), 
				Size = UDim2.new(1, -32, 0, 0), 
				Text = scriptData.description, 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			})
		});
	end

	--[[ Module ]]--

	local savedScript = {};
	savedScript.__index = savedScript;

	function savedScript.new(scriptData: {any})
		local newSavedScript = setmetatable({
			scriptData = scriptData,
			instance = createSavedScript(scriptData)
		}, savedScript);

		newSavedScript.instance.buttons.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(scriptData.content);
		end);

		newSavedScript.instance.buttons.loadToEditor.MouseButton1Click:Connect(function()
			if tabSystem == nil then
				tabSystem = framework.data.tabSystem;
			end
			tabSystem:Add(scriptData.title, scriptData.content);
		end);

		newSavedScript.instance.buttons.delete.MouseButton1Click:Connect(function()
			savedScripts:Remove(scriptData.index);
		end);

		if scriptData.autoExecute then
			newSavedScript:ToggleAutomaticExecution(true);
		end

		scriptData.onAutoExecuteToggled:Connect(function(state: boolean)
			newSavedScript:ToggleAutomaticExecution(state);
		end);

		newSavedScript.instance.autoExecute.MouseButton1Click:Connect(function()
			savedScripts:ToggleAutomaticExecution(scriptData.index, not scriptData.autoExecute);
		end);

		return newSavedScript;	
	end

	function savedScript:ToggleAutomaticExecution(state: boolean)
		instanceUtils:Tween(self.instance.autoExecute.indicator.dot, 0.2, {
			BackgroundColor3 = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a"),
			Position = UDim2.new(0.5, state and 9 or -9, 0.5, 0)
		});
		instanceUtils:Tween(self.instance.autoExecute.indicator.stroke, 0.2, {
			Color = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a")
		});
	end

	framework.pages.localScripts.savedScript = savedScript;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Module ]]--

	framework.pages.localScripts.builtInScript = (function(builtInScript: {any})
		local base = instanceUtils:Create("ImageLabel", { 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Image = builtInScript.icon, 
			ImageTransparency = 0.5, 
			Name = stringUtils:ConvertToCamelCase(builtInScript.title), 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("eb4545"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				Name = "execute", 
				Position = UDim2.new(1, -10, 1, -10), 
				Size = UDim2.new(0, 40, 0, 40), 
				Text = ""
			}, {
				instanceUtils:Create("UICorner", { 
					Name = "corner"
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://13075469149", 
					Name = "icon", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 18, 0, 18)
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0, 14), 
				Size = UDim2.new(1, -28, 0, 0), 
				Text = builtInScript.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0, 1), 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0, 14, 1, -14), 
				Size = UDim2.new(1, -70, 1, -52), 
				Text = builtInScript.description, 
				TextColor3 = Color3.fromHex("c8c8c8"), 
				TextSize = 13, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			})
		});

		base.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(builtInScript.content);
		end);

		return base;
	end);
end

do
	--[[ Variables ]]--

	local savedScripts = framework.data.savedScripts;
	local textButton = framework.components.base.textButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local builtInScript = framework.pages.localScripts.builtInScript;
	local savedScript = framework.pages.localScripts.savedScript;

	local map = {};
	local savedScriptMap = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "localScripts", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				textButton({
					BackgroundColor3 = Color3.fromRGB(58, 58, 74), 
					Name = "builtInLibrary", 
					Text = "Built-in Library",
					TextColor3 = Color3.fromRGB(159, 164, 186)
				}),
				textButton({
					BackgroundColor3 = Color3.fromRGB(58, 58, 74), 
					Name = "savedScripts", 
					Text = "Saved Scripts",
					TextColor3 = Color3.fromRGB(159, 164, 186)
				})
			}),
			instanceUtils:Create("Folder", { 
				Name = "tabs"
			}, {
				instanceUtils:Create("ScrollingFrame", { 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticCanvasSize = Enum.AutomaticSize.Y, 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 0), 
					Name = "builtInLibrary", 
					Position = UDim2.new(0.5, 0, 1, 0), 
					ScrollBarImageColor3 = Color3.fromHex("191923"), 
					ScrollBarThickness = 4, 
					Size = UDim2.new(1, -28, 1, -60), 
					VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
				}, {
					instanceUtils:Create("UIGridLayout", { 
						CellPadding = UDim2.new(0, 12, 0, 12), 
						CellSize = UDim2.new(0.333, -12, 0.3, 50), 
						HorizontalAlignment = Enum.HorizontalAlignment.Center, 
						Name = "grid", 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				}),
				instanceUtils:Create("ScrollingFrame", { 
					AnchorPoint = Vector2.new(0, 1), 
					AutomaticCanvasSize = Enum.AutomaticSize.Y, 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 0), 
					Name = "savedScripts", 
					Position = UDim2.new(0, 14, 1, 0), 
					ScrollBarImageColor3 = Color3.fromHex("191923"), 
					ScrollBarThickness = 4, 
					Size = UDim2.new(1, -24, 1, -60), 
					VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar, 
					Visible = false
				}, {
					instanceUtils:Create("UIListLayout", { 
						Name = "list", 
						Padding = UDim.new(0, 12), 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				})
			})
		});
	end

	--[[ Module ]]--

	local localScripts = {
		title = "Local Scripts",
		icon = "rbxassetid://11558196718",
		selected = nil
	};

	function localScripts:Initialize(directory: Instance)
		self.base = createUI(directory);

		map[self.base.tabButtons.builtInLibrary] = self.base.tabs.builtInLibrary;
		map[self.base.tabButtons.savedScripts] =self. base.tabs.savedScripts;

		for i, v in framework.data.builtInScripts do
			builtInScript(v).Parent = self.base.tabs.builtInLibrary;
		end

		for i, v in savedScripts.cache do
			self:AddSavedScript(v);
		end

		savedScripts.onScriptAdded:Connect(function(newScript)
			self:AddSavedScript(newScript);
		end);

		savedScripts.onScriptRemoved:Connect(function(oldScript)
			local oldSavedScript = savedScriptMap[oldScript];
			if oldSavedScript then
				oldSavedScript.instance:Destroy();
			end
		end);

		for i, v in map do
			i.MouseButton1Click:Connect(function()
				self:Select(i);
			end);
		end

		self:Select(self.base.tabButtons.builtInLibrary);
		return self.base;
	end

	function localScripts:AddSavedScript(newScript: {any})
		local newSavedScript = savedScript.new(newScript);
		savedScriptMap[newScript] = newSavedScript;
		newSavedScript.instance.Parent = self.base.tabs.savedScripts;
	end

	function localScripts:Select(button: TextButton)
		if self.selected then
			if self.selected == button then
				return;
			end
			map[self.selected].Visible = false;
			instanceUtils:Tween(self.selected, 0.2, {
				BackgroundColor3 = Color3.fromRGB(58, 58, 74),
				TextColor3 = Color3.fromRGB(159, 164, 186)
			});
		end
		self.selected = button;
		map[button].Visible = true;
		instanceUtils:Tween(self.selected, 0.2, {
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			TextColor3 = Color3.fromRGB(255, 255, 255)
		});
	end

	framework.pages.localScripts.localScripts = localScripts;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;

	local colourCodes = {
		[Enum.MessageType.MessageOutput] = "69b397",
		[Enum.MessageType.MessageInfo] = "81a6da",
		[Enum.MessageType.MessageWarning] = "e0ba91",
		[Enum.MessageType.MessageError] = "eb4545"
	};

	local base;

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "console", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.XY, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "content", 
				Position = UDim2.new(0.5, 0, 0, 0), 
				ScrollBarImageColor3 = Color3.fromHex("191923"), 
				ScrollBarThickness = 4, 
				Size = UDim2.new(1, -28, 1, -14)
			}, {
				instanceUtils:Create("UIListLayout", { 
					Name = "list", 
					Padding = UDim.new(0, 4), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -25, 1, -25), 
				Size = UDim2.new(1, -50, 0, 50)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					HorizontalAlignment = Enum.HorizontalAlignment.Right, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					Name = "clear", 
					Size = UDim2.new(0, 50, 0, 50), 
					Text = "", 
					TextColor3 = Color3.fromHex("1b2a35"),
					MouseButton1Click = function()
						for i, v in base.content:GetChildren() do
							if not v:IsA("UIListLayout") then
								v:Destroy();
							end
						end
					end
				}, {
					instanceUtils:Create("UICorner", { 
						Name = "corner"
					}),
					instanceUtils:Create("ImageLabel", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundTransparency = 1, 
						BorderSizePixel = 0, 
						Image = "rbxassetid://14808219001", 
						ImageColor3 = Color3.fromHex("9fa4ba"), 
						Name = "icon", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						Size = UDim2.new(0, 28, 0, 28)
					})
				})
			})
		});
	end

	local function insertItem(message: string, messageType: Enum.MessageType)
		local timestamp = tick();

		instanceUtils:Create("TextLabel", { 
			AutomaticSize = Enum.AutomaticSize.XY, 
			BackgroundTransparency = 1, 
			FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size18, 
			Name = timestamp, 
			Parent = base.content,
			Position = UDim2.new(0, 48, 0, 0), 
			RichText = true, 
			Text = string.format("<font color=\"#%s\">[%d]</font> %s", colourCodes[messageType], timestamp, message), 
			TextColor3 = Color3.fromHex("9fa4ba"), 
			TextSize = 16, 
			TextXAlignment = Enum.TextXAlignment.Left, 
			TextYAlignment = Enum.TextYAlignment.Top
		});
	end

	--[[ Module ]]--

	local console = {
		title = "Console",
		icon = "rbxassetid://15761117362"
	};

	function console:Initialize(directory: Instance)
		base = createUI();

		cloneref(game:GetService("LogService")).MessageOut:Connect(insertItem);

		return base;
	end

	framework.pages.console.console = console;
end

do
	--[[ Variables ]]--

	local internalUtils = framework.dependencies.utils.internal;
	local userSettings = framework.data.userSettings;
	local cache;

	local httpService = cloneref(game:GetService("HttpService"));
	local teleportService = cloneref(game:GetService("TeleportService"));
	local userInputService = cloneref(game:GetService("UserInputService"));

	local player = cloneref(game:GetService("Players")).LocalPlayer;
	local char, hum, root;

	local connections = {};
	local threads = {};

	--[[ Functions ]]--

	local function getFlagFromLink(link: string)
		local value = cache;
		for i, v in string.split(link, ".") do
			value = value[v];
		end
		return value;
	end

	local function registerCharacter(character: Instance)
		-- SPDM | Error prevention checks
		if not cache then
			cache = {}
		end
		
		if not cache.player then
			cache.player = {}
		end

		if not cache.player.walkSpeed then
			cache.player.walkSpeed = {}
		end

		if not cache.player.jumpPower then
			cache.player.jumpPower = {}
		end

		char, hum, root = character, character:WaitForChild("Humanoid", 5), character:WaitForChild("HumanoidRootPart", 5);
		if hum and root then
			if cache.player.walkSpeed.enabled and cache.player.walkSpeed.value then
				hum.WalkSpeed = cache.player.walkSpeed.value;
			end
			if cache.player.jumpPower.enabled and cache.player.jumpPower.value then
				hum.WalkSpeed = cache.player.jumpPower.value;
			end

			hum.Died:Connect(function()
				char, hum, root = nil, nil, nil;
			end);
		end
	end

	local function joinServer(searchPriority: string?, id: number?)
		local jobId = id;
		if jobId == nil then
			if searchPriority == "Best Ping" or searchPriority == "Random" then
				local servers = {};
				local res, cursor, count = nil, "", 0;
				repeat
					res = internalUtils:Request(string.format("https://games.roblox.com/v1/games/%d/servers/0?&excludeFullGames=true&cursor=%s", game.PlaceId, cursor));
					if res then
						for i, v in httpService:JSONDecode(res).data do
							if v.id ~= game.JobId then
								servers[#servers + 1] = v;
							end
						end
						cursor = res.nextPageCursor;
						count = count + 1;
					end
				until res == false or cursor == nil or count >= 10;
				if searchPriority == "Ping" then
					table.sort(servers, function(a, b)
						return a.ping < b.ping;
					end);
					jobId = servers[1] and servers[1].id;
				else
					jobId = servers[1] and servers[math.random(1, #servers)].id;
				end
			else
				local res = internalUtils:Request(string.format("https://games.roblox.com/v1/games/%d/servers/0?sortOrder=%d&excludeFullGames=true&limit=10", game.PlaceId, searchPriority == "Most Players" and 2 or 1));
				if res then
					for i, v in httpService:JSONDecode(res).data do
						if v.id ~= game.JobId then
							jobId = v.id;
							break;
						end
					end
				end
			end
		end
		if jobId then
			teleportService:TeleportToPlaceInstance(game.PlaceId, jobId);
		else
			internalUtils:Notify("No suitable servers found")
		end
	end

	--[[ Setup ]]--

	player.CharacterAdded:Connect(registerCharacter);

	--[[ Module ]]--

	local map = {
		{
			title = "Executor",
			items = { -- SPDM Team | Opening Mode Setting
				{
					title = "Opening Mode",
					linkedSetting = "executor.openingMode",
					optionType = "dropdown",
					items = { "Floating Icon", "Edge Swipe", "Invisible Edge Swipe" },
					value = "Floating Icon"
				},
				{ -- SPDM Team | Show Particles Setting
					title = "Show Floating Icon Particles",
					linkedSetting = "executor.showParticles",
					optionType = "toggle",
					state = true
				},
				{
					optionType = "separator"
				},
				{
					title = "Auto Execute",
					linkedSetting = "executor.autoExecute",
					optionType = "toggle",
					state = true
				},
				{
					title = "Auto Save Tabs",
					linkedSetting = "executor.autoSaveTabs",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if state == false and isfile and isfile("codexTabs.json") then
							delfile("codexTabs.json");
						end
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Unlock FPS",
					linkedSetting = "executor.fps.unlocked",
					optionType = "toggle",
					state = false,
					callback = function(state)
						setfpscap(state and (cache.executor.fps.vSync and getfpscap() or cache.executor.fps.value) or 60);
					end
				},
				{
					title = "V-Sync",
					linkedSetting = "executor.fps.vSync",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if cache.executor.fps.unlocked then
							setfpscap(state and getfpsmax() or cache.executor.fps.value);
						end
					end
				},
				{
					title = "FPS Value",
					linkedSetting = "executor.fps.value",
					optionType = "slider",
					min = 1,
					max = 999,
					float = 1,
					callback = function(value)
						if cache.executor.fps.unlocked and not cache.executor.fps.vSync then
							setfpscap(value);
						end
					end
				}
			}
		},
		{
			title = "Player",
			items = {
				{
					title = "WalkSpeed Enabled",
					linkedSetting = "player.walkSpeed.enabled",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if hum then
							hum.WalkSpeed = state and cache.player.walkSpeed.value or 16;
						end
					end
				},
				{
					title = "WalkSpeed Value",
					linkedSetting = "player.walkSpeed.value",
					optionType = "slider",
					min = 16,
					max = 500,
					float = 1,
					callback = function(value)
						if hum and cache.player.walkSpeed.enabled then
							hum.WalkSpeed = value;
						end
					end
				},
				{
					title = "JumpPower Enabled",
					linkedSetting = "player.jumpPower.enabled",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if hum then
							hum.JumpPower = state and cache.player.jumpPower.value or 16;
						end
					end
				},
				{
					title = "JumpPower Value",
					linkedSetting = "player.jumpPower.value",
					optionType = "slider",
					min = 50,
					max = 500,
					float = 1,
					callback = function(value)
						if hum and cache.player.jumpPower.enabled then
							hum.JumpPower = value;
						end
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Anti AFK",
					linkedSetting = "player.antiAfk",
					optionType = "toggle",
					state = false,
					callback = function(state)
						for i, v in getconnections(player.Idled) do
							if state then
								v:Disable();
							else
								v:Enable();
							end
						end
					end
				}
			}
		},
		{
			title = "Server Hopper",
			items = {
				{
					title = "Server Priority",
					linkedSetting = "serverHop.priority",
					optionType = "dropdown",
					items = { "Most Players", "Least Players", "Best Ping", "Random" }
				},
				{
					title = "Server Hop",
					optionType = "button",
					callback = function()
						joinServer(cache.serverHop.priority);
					end
				},
				{
					title = "Rejoin Current Server",
					optionType = "button",
					callback = function()
						joinServer(nil, game.JobId);
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Delayed Hop",
					linkedSetting = "serverHop.delayedHop",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if threads.delayedHop then
							task.cancel(threads.delayedHop);
							threads.delayedHop = nil;
						end
						if state then
							local init = tick();
							threads.delayedHop = task.spawn(function()
								local interval = 0;
								repeat task.wait(1)
									interval = tick() - init;
								until interval > cache.serverHop.delay * 60;
								joinServer(cache.serverHop.priority);
							end);
						end
					end
				},
				{
					title = "Delay (Minutes)",
					linkedSetting = "serverHop.delay",
					optionType = "slider",
					min = 1,
					max = 1440,
					float = 1
				}
			}
		}
	};

	--[[ Module ]]--

	local layoutMap = {
		map = map
	};

	function layoutMap:Initialize()
		cache = userSettings.cache;

		for i, v in self.map do
			for i2, v2 in v.items do
				if v2.optionType == "toggle" then
					v2.state = getFlagFromLink(v2.linkedSetting);
				elseif v2.optionType == "slider" then
					v2.value = getFlagFromLink(v2.linkedSetting);
				end
			end
		end

		if player.Character then
			task.spawn(registerCharacter, player.Character);
		end
	end

	framework.pages.exploitSettings.layoutMap = layoutMap;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;

	--[[ Functions ]]--

	local function createSeparator(parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "separator", 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 14)
		}, {
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "line", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(1, 0, 0, 2)
			}, {
				instanceUtils:Create("UIGradient", { 
					Name = "gradient", 
					Transparency = NumberSequence.new({ 
						NumberSequenceKeypoint.new(0, 1), 
						NumberSequenceKeypoint.new(0.175, 0), 
						NumberSequenceKeypoint.new(0.825, 0), 
						NumberSequenceKeypoint.new(1, 1)
					})
				})
			})
		});
	end

	--[[ Module ]]--

	local separator = {};
	separator.__index = separator;

	function separator.new(separatorData: {any}, parent: Instance)
		return setmetatable({
			instance = createSeparator(parent)
		}, separator);
	end

	framework.pages.exploitSettings.optionTypes.separator = separator;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Functions ]]--

	local function createToggle(title: string, parent: Instance): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent,
			Size = UDim2.new(1, 0, 0, 36), 
			Text = "", 
			TextColor3 = Color3.fromHex("000000"), 
			TextSize = 14
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "indicator", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				Size = UDim2.new(0, 42, 0, 24)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(1, 0), 
					Name = "corner"
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke", 
					Thickness = 2
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "dot", 
					Position = UDim2.new(0.5, -9, 0.5, 0), 
					Size = UDim2.new(0, 18, 0, 18)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					})
				})
			})
		});
	end

	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end

	--[[ Module ]]--

	local toggle = {};
	toggle.__index = toggle;

	function toggle.new(toggleData: {any}, parent: Instance)
		local newToggle = setmetatable({
			instance = createToggle(toggleData.title or "Unnamed Toggle", parent),
			state = toggleData.state or false,
			linkedSetting = toggleData.linkedSetting,
			callback = toggleData.callback
		}, toggle);

		local determiningDict, determiningKey = getDeterminingFactors(newToggle.linkedSetting);

		userSettings:GetPropertyChangedSignal(newToggle.linkedSetting):Connect(function(state: boolean)
			newToggle:Set(state);
		end);

		newToggle.instance.MouseButton1Click:Connect(function()
			determiningDict[determiningKey] = not determiningDict[determiningKey];
		end);

		if newToggle.state then
			newToggle:Set(true);
		end

		return newToggle;
	end

	function toggle:Set(state: boolean)
		instanceUtils:Tween(self.instance.indicator.dot, 0.2, {
			BackgroundColor3 = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a"),
			Position = UDim2.new(0.5, state and 9 or -9, 0.5, 0)
		});
		instanceUtils:Tween(self.instance.indicator.stroke, 0.2, {
			Color = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a")
		});
		if self.callback then
			self.callback(state);
		end
	end

	framework.pages.exploitSettings.optionTypes.toggle = toggle;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	--[[ Functions ]]--

	local function createButton(title: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 36)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 1, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("eb4545"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "click", 
				Position = UDim2.new(1, 0, 0.5, 0), 
				Size = UDim2.new(0, 0, 0, 32), 
				Text = "Click Here!", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			})
		});
	end

	--[[ Module ]]--

	local button = {};
	button.__index = button;

	function button.new(buttonData: {any}, parent: Instance)
		local newButton = setmetatable({
			instance = createButton(buttonData.title or "Unnamed Button", parent),
			callback = buttonData.callback
		}, button);

		newButton.instance.click.MouseButton1Click:Connect(function()
			if newButton.callback then
				newButton.callback();
			end
		end);

		return newButton;
	end

	framework.pages.exploitSettings.optionTypes.button = button;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;

	local userInputService = cloneref(game:GetService("UserInputService"));

	--[[ Functions ]]--

	local function createSlider(title: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 60)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "input", 
				PlaceholderColor3 = Color3.fromHex("b2b2b2"), 
				PlaceholderText = "...", 
				Position = UDim2.new(1, 0, 0, 0), 
				Size = UDim2.new(0, 0, 0, 36), 
				Text = "", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "bar", 
				Position = UDim2.new(0.5, 0, 1, -8), 
				Size = UDim2.new(1, -12, 0, 4)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(1, 0), 
					Name = "corner"
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(0, 0.5), 
					BackgroundColor3 = Color3.fromHex("eb4545"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "indicator", 
					Position = UDim2.new(0, 0, 0.5, 0), 
					Size = UDim2.new(0, 0, 1, 0)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					}),
					instanceUtils:Create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("eb4545"), 
						BorderColor3 = Color3.fromHex("000000"), 
						BorderSizePixel = 0, 
						Name = "dot", 
						Position = UDim2.new(1, 0, 0.5, 0), 
						Size = UDim2.new(0, 12, 0, 12)
					}, {
						instanceUtils:Create("UICorner", { 
							CornerRadius = UDim.new(1, 0), 
							Name = "corner"
						})
					})
				})
			})
		});
	end

	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end

	local function getRoundedValue(input: number, float: number): number
		local bracket = 1 / float;
		return math.round(input * bracket) / bracket;
	end

	--[[ Module ]]--

	local slider = {
		isDragging = false
	};
	slider.__index = slider;

	function slider.new(sliderData: {any}, parent: Instance)
		local newSlider = setmetatable({
			instance = createSlider(sliderData.title or "Unnamed Slider", parent),
			value = sliderData.value or sliderData.min,
			min = sliderData.min,
			max = sliderData.max,
			float = sliderData.float,
			linkedSetting = sliderData.linkedSetting,
			callback = sliderData.callback
		}, slider);

		local determiningDict, determiningKey = getDeterminingFactors(newSlider.linkedSetting);
		local isDragging = false;

		userSettings:GetPropertyChangedSignal(newSlider.linkedSetting):Connect(function(value: number)
			newSlider:Set(value);
		end);

		newSlider.instance.InputBegan:Connect(function(input)
			if slider.isDragging == false and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
				slider.isDragging, isDragging = true, true;
				local endedConn; endedConn = input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						endedConn:Disconnect();
						slider.isDragging, isDragging = false, false;
					end
				end);
			end
		end)

		userInputService.InputChanged:Connect(function(input)
			if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local value = newSlider.min + ((newSlider.max - newSlider.min) * ((input.Position.X - newSlider.instance.bar.AbsolutePosition.X) / newSlider.instance.bar.AbsoluteSize.X));
				determiningDict[determiningKey] = math.clamp(getRoundedValue(value, newSlider.float), newSlider.min, newSlider.max);
			end
		end);

		newSlider.instance.input.FocusLost:Connect(function()
			local value = tonumber(newSlider.instance.input.Text);
			if value then
				determiningDict[determiningKey] = math.clamp(getRoundedValue(value, newSlider.float), newSlider.min, newSlider.max);
			end
		end);

		newSlider:Set(newSlider.value);

		return newSlider;
	end

	function slider:Set(value: number)
		instanceUtils:Tween(self.instance.bar.indicator, 0.2, {
			Size = UDim2.new((value - self.min) / (self.max - self.min), 0, 0.5, 0)
		});
		self.instance.input.Text = tostring(value);
		if self.callback then
			self.callback(value);
		end
	end

	framework.pages.exploitSettings.optionTypes.slider = slider;
end

do
	--[[ Variables ]]--

	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local dropdownPopup = framework.popups.dropdown;
	local popups = framework.popups.popups;

	local textService = cloneref(game:GetService("TextService"));

	--[[ Functions ]]--

	local function createDropdown(title: string, default: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			Active = true, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Selectable = true, 
			Size = UDim2.new(1, 0, 0, 36)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextButton", { 
				Active = false, 
				AnchorPoint = Vector2.new(1, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "indicator", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				Selectable = false, 
				Size = UDim2.new(0, 52 + textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
					Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
					Text = default,
					Size = 14,
					Width = math.huge
				})).X, 0, 32), 
				Text = ""
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke", 
					Thickness = 2
				}),
				instanceUtils:Create("TextLabel", { 
					AnchorPoint = Vector2.new(0, 0.5), 
					AutomaticSize = Enum.AutomaticSize.X, 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "selected", 
					Position = UDim2.new(0, 8, 0.5, 0), 
					Size = UDim2.new(0, 0, 1, 0), 
					Text = default, 
					TextColor3 = Color3.fromHex("9fa4ba"), 
					TextSize = 14,  
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(1, 0.5), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Image = "rbxassetid://14967733915", 
					ImageColor3 = Color3.fromHex("9fa4ba"), 
					Name = "icon", 
					Position = UDim2.new(1, -8, 0.5, 0), 
					Size = UDim2.new(0, 24, 0, 24)
				})
			})
		});
	end

	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end

	--[[ Module ]]--

	local dropdown = {};
	dropdown.__index = dropdown;

	function dropdown.new(dropData: {any}, parent: Instance)
		local newDropdown = setmetatable({
			instance = createDropdown(dropData.title or "Unnamed Dropdown", dropData.value, parent),
			title = dropData.title or "Unnamed Dropdown",
			items = dropData.items,
			value = dropData.value or dropData.items[1],
			linkedSetting = dropData.linkedSetting,
			callback = dropData.callback
		}, dropdown);

		local determiningDict, determiningKey = getDeterminingFactors(newDropdown.linkedSetting);

		userSettings:GetPropertyChangedSignal(newDropdown.linkedSetting):Connect(function(value: number)
			newDropdown:Set(value);
		end);

		newDropdown.instance.indicator.MouseButton1Click:Connect(function()
			if dropdownPopup.selectedDropdown == dropData.title then
				popups:Hide("dropdown");
			else
				popups:Show("dropdown", newDropdown, newDropdown.instance.indicator);
				newDropdown.selectionChangedConnection = dropdownPopup.onSelectionChanged:Connect(function(value: string)
					determiningDict[determiningKey] = value;
					task.delay(0.3, function () popups:Hide("dropdown"); end); -- SPDM Team | Auto-close contextmenu
				end);
			end
		end);

		dropdownPopup.onDropdownChanged:Connect(function(value: string?)
			if value and value ~= dropData.title and newDropdown.selectionChangedConnection then
				newDropdown.selectionChangedConnection:Disconnect();
			end
		end);

		newDropdown:Set(newDropdown.value);

		return newDropdown;
	end

	function dropdown:Set(value: string)
		self.value = value;
		self.instance.indicator.selected.Text = value;
		self.instance.indicator.Size = UDim2.new(0, 52 + textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
			Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
			Text = value,
			Size = 14,
			Width = math.huge
		})).X, 0, 32);
		if self.callback then
			self.callback(value);
		end
	end

	framework.pages.exploitSettings.optionTypes.dropdown = dropdown;
end

do
	--[[ Variables ]]--

	local textButton = framework.components.base.textButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local layoutMap = framework.pages.exploitSettings.layoutMap;

	local map = {};

	--[[ Functions ]]--

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "exploitSettings", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("Folder", { 
				Name = "tabs"
			})
		});
	end

	local function createFrame(title: string, directory: Instance)
		return instanceUtils:Create("ScrollingFrame", { 
			AnchorPoint = Vector2.new(0.5, 1), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			CanvasSize = UDim2.new(0, 0, 0, 130), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = directory,
			Position = UDim2.new(0.5, 0, 1, 0), 
			ScrollBarThickness = 2, 
			Size = UDim2.new(1, -40, 1, -50),
			Visible = false
		}, {
			instanceUtils:Create("UIListLayout", { 
				Name = "list", 
				Padding = UDim.new(0, 5), 
				SortOrder = Enum.SortOrder.LayoutOrder
			})
		});
	end

	--[[ Module ]]--

	local exploitSettings = {
		title = "Settings",
		icon = "rbxassetid://11558196447",
		overwritePosition = UDim2.new(0, 0, 1, -66),
		selected = nil
	};

	function exploitSettings:Initialize(directory: Instance)
		self.base = createUI(directory);

		layoutMap:Initialize();
		for i, v in layoutMap.map do
			self:Add(v);
		end

		return self.base;
	end

	function exploitSettings:Add(tab: {any})
		local btn = textButton({
			BackgroundColor3 = Color3.fromRGB(58, 58, 74),
			Name = stringUtils:ConvertToCamelCase(tab.title),
			Text = tab.title,
			TextColor3 = Color3.fromRGB(159, 164, 186),
			Parent = self.base.tabButtons
		});

		local frame = createFrame(tab.title, self.base.tabs);

		btn.MouseButton1Click:Connect(function()
			self:Select(tab);
		end)

		map[tab] = {
			btn = btn,
			frame = frame
		};

		for i, v in tab.items do
			framework["pages.exploitSettings.optionTypes." .. v.optionType].new(v, frame);
		end

		if self.selected == nil then
			self:Select(tab);
		end
	end

	function exploitSettings:Select(tab: {any})
		if self.selected then
			if self.selected == tab then
				return;
			end
			local oldMap = map[self.selected];
			oldMap.frame.Visible = false;
			instanceUtils:Tween(oldMap.btn, 0.2, {
				BackgroundColor3 = Color3.fromRGB(58, 58, 74),
				TextColor3 = Color3.fromRGB(159, 164, 186)
			});
		end
		self.selected = tab;
		local newMap = map[tab];
		newMap.frame.Visible = true;
		instanceUtils:Tween(newMap.btn, 0.2, {
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			TextColor3 = Color3.fromRGB(255, 255, 255)
		});
	end

	framework.pages.exploitSettings.exploitSettings = exploitSettings;
end

do
	--[[ Variables ]]--

	local textLabel = framework.components.base.textLabel;
	local internalSettings = framework.data.internalSettings;
	local instanceUtils = framework.dependencies.utils.instance;

	--[[ Functions ]]--

	local function formatChangelog()
		local str = "";
		for i, v in internalSettings.data.changelog do
			str ..= string.format("%s<font color=\"#eb4545\">[%s]</font>\n\n", str == "" and "" or "\n\n", DateTime.fromIsoDate(v.stamp):FormatLocalTime("ll", "en-us"));
			for i2, v2 in v.data do
				str ..= "- " .. v2; -- "â€¢ " ..
				if i2 < #v.data then
					str ..= "\n";
				end
			end
		end
		return str;
	end

	--[[ Module ]]--

	framework.pages.startup.changelog = (function()
		return instanceUtils:Create("Frame", {
			BackgroundTransparency = 1,
			Name = "changelog",
			Position = UDim2.new(0.5, 12, 0.2, 46),
			Size = UDim2.new(0.2, 120, 0.5, 0)
		}, {
			textLabel({
				Text = "Changelog",
				TextColor3 = Color3.fromRGB(159, 164, 186),
				TextSize = 20
			}),
			instanceUtils:Create("ScrollingFrame", {
				AnchorPoint = Vector2.new(0.5, 1),
				AutomaticCanvasSize = Enum.AutomaticSize.XY,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				CanvasSize = UDim2.new(),
				HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
				Name = "container",
				Position = UDim2.new(0.5, 0, 1, 0),
				ScrollBarImageColor3 = Color3.fromRGB(15, 15, 21),
				ScrollBarThickness = 4,
				Size = UDim2.new(1, -16, 1, -36),
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				textLabel({
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
					LineHeight = 1.1,
					RichText = true,
					Text = formatChangelog(),
					TextColor3 = Color3.fromRGB(159, 164, 186),
					TextTruncate = Enum.TextTruncate.None,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Top
				})
			})
		});
	end);
end

do
	--[[ Variables ]]--

	local textLabel = framework.components.base.textLabel;
	local instanceUtils = framework.dependencies.utils.instance;

	local stepCount = 0;

	--[[ Module ]]--

	local startupStep = {};
	startupStep.__index = startupStep;

	function startupStep.new(startText: string, finishText: string, parent: Instance): {any}
		stepCount += 1;

		local frame = instanceUtils:Create("Frame", {
			AnchorPoint = Vector2.new(0.5, 0),
			BackgroundTransparency = 1,
			Name = stepCount,
			Parent = parent,
			Size = UDim2.new(1, 0, 0, 22)
		}, {
			instanceUtils:Create("ImageLabel", {
				BackgroundTransparency = 1,
				Image = "rbxassetid://14840862230",
				ImageColor3 = Color3.fromRGB(235, 69, 69),
				ImageTransparency = 1,
				Name = "icon",
				Size = UDim2.new(0, 22, 0, 22)
			}),
			textLabel({
				AnchorPoint = Vector2.new(0, 0.5),
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
				Name = "note",
				Position = UDim2.new(0, 34, 0.5, 0),
				Text = startText,
				TextColor3 = Color3.fromRGB(159, 164, 186),
				TextTransparency = 1
			})
		});

		return setmetatable({
			frame = frame,
			finishText = finishText,
			isFinished = false
		}, startupStep);
	end

	function startupStep:Start(): {any}
		self.tween = instanceUtils:Tween(self.frame.icon, 1, {
			Rotation = 360
		}, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, math.huge);

		instanceUtils:Tween(self.frame.icon, 0.4, {
			ImageTransparency = 0
		});

		instanceUtils:Tween(self.frame.note, 0.4, {
			TextTransparency = 0
		}).Completed:Wait();
		return self;
	end

	function startupStep:Complete(overrideText: string?)
		if self.isFinished then
			return;
		end	
		self.isFinished = true;

		local icon = self.frame.icon;
		local note = self.frame.note;

		instanceUtils:Tween(note, 0.4, {
			TextTransparency = 1
		}).Completed:Connect(function()
			note.Text = overrideText or self.finishText;
			instanceUtils:Tween(note, 0.4, {
				TextTransparency = 0
			});
		end);

		instanceUtils:Tween(icon, 0.4, {
			ImageTransparency = 1
		}).Completed:Wait();
		self.tween:Cancel();
		icon.Image = "rbxassetid://14840859703";
		icon.Rotation = 0;
		instanceUtils:Tween(icon, 0.4, {
			ImageTransparency = 0
		});
	end

	framework.pages.startup.startupStep = startupStep;
end

do
	--[[ Variables ]]--

	local background = framework.components.base.background;
	local textBox = framework.components.base.textBox;
	local textButton = framework.components.base.textButton;
	local textLabel = framework.components.base.textLabel;
	local internalSettings = framework.data.internalSettings;
	local userSettings = framework.data.userSettings;
	local savedScripts = framework.data.savedScripts;
	local tabSystem = framework.data.tabSystem;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local changelog = framework.pages.startup.changelog;
	local startupStep = framework.pages.startup.startupStep;

	local httpService = cloneref(game:GetService("HttpService"));

	local completionSignal;
	local ui;

	--[[ Functions ]]--

	local function checkWhitelist()
		if getgenv then
			return internalUtils:Request("https://api.codex.lol/v1/auth/authenticate", "POST") ~= false;
		end
		return false;
	end

	local function createBasis(directory: Instance)
		local gui = instanceUtils:Create("ScreenGui", {
			Enabled = false,
			IgnoreGuiInset = true,
			Name = "gui",
			ResetOnSpawn = false,
			ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets, -- SPDM Team | Notch-aware UI
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		}, {
			instanceUtils:Create("Frame", {
				AnchorPoint = Vector2.new(0.5, 0.5),
				BackgroundColor3 = Color3.fromRGB(21, 21, 29),
				BackgroundTransparency = 1,
				Name = "background",
				Position = UDim2.new(0.5, 0, 0.5, 0),
				Size = UDim2.new(1, 0, 1, 0),
				ZIndex = 0
			}),
			instanceUtils:Create("Folder", {
				Name = "tabs"
			})
		});

		local popups = instanceUtils:Create("ScreenGui", {
			Enabled = false,
			IgnoreGuiInset = true,
			Name = "popups",
			ResetOnSpawn = false,
			ScreenInsets = Enum.ScreenInsets.None,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		});

		gui.Parent = directory;
		popups.Parent = directory;

		return {
			gui = gui,
			popups = popups
		};
	end

	local function doSetup()
		userSettings:Initialize();
		tabSystem:Initialize();
		savedScripts:Initialize();

		if userSettings.cache.executor.autoExecute and isarceusfolder and listarceusfiles and readarceusfile then
			if isarceusfolder("Autoexec") then
				for i, v in listarceusfiles("Autoexec") do
					executecode(readarceusfile(v));
				end
			elseif rconsolewarn then
				rconsolewarn("Autoexecution folder has not been found! Make sure to garant storage permissions.")
			end
		end
	end

	local function changeTab(isMainTab: boolean)
		ui.whitelist.Visible = isMainTab;
		ui.changelog.Visible = isMainTab;
		ui.specialUserInput.Visible = not isMainTab;
		ui.note.Text = isMainTab and "Please complete the whitelist to gain access to Codex" or "Please enter your key to activate your Premium License";
	end

	local function createUI(directory: Instance): ScreenGui
		local closed = false
		
		ui = instanceUtils:Create("ScreenGui", {
			IgnoreGuiInset = true,
			Name = "startup",
			Parent = directory,
			ResetOnSpawn = false,
			ScreenInsets = Enum.ScreenInsets.None,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		}, {
			background(),
			instanceUtils:Create("ImageButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Image = "rbxassetid://14899492196", 
				Name = "close", 
				Position = UDim2.new(1, -24, 0.2, -20), 
				Size = UDim2.new(0, 28, 0, 28),
				MouseButton1Click = function()
					closed = true
					completionSignal:Fire(false);
				end
			}),
			textLabel({
				AnchorPoint = Vector2.new(0.5, 0.5),
				Name = "title",
				Position = UDim2.new(0.5, 0, 0.2, -20),
				Text = "Codex " .. (isiosdevice() and "iOS" or "Android"),
				TextSize = 24
			}),
			textLabel({
				AnchorPoint = Vector2.new(0.5, 0.5),
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
				Name = "note",
				Position = UDim2.new(0.5, 0, 0.2, 2),
				Text = "Please complete the whitelist to gain access to Codex",
				TextColor3 = Color3.fromRGB(159, 164, 186)
			}),
			instanceUtils:Create("Frame", {
				AnchorPoint = Vector2.new(1, 0),
				BackgroundTransparency = 1,
				Name = "whitelist",
				Position = UDim2.new(0.5, -12, 0.2, 46),
				Size = UDim2.new(0.2, 120, 0.5, 0)
			}, {
				instanceUtils:Create("Frame", {
					AnchorPoint = Vector2.new(0.5, 0),
					BackgroundTransparency = 1,
					Name = "process",
					Position = UDim2.new(0.5, 0, 0, 0),
					Size = UDim2.new(1, 0, 1, -36)
				}, {
					instanceUtils:Create("UIListLayout", {
						Name = "list",
						Padding = UDim.new(0, 6),
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				}),
				textButton({
					AnchorPoint = Vector2.new(0.5, 1),
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						if setclipboard then
							local data = internalUtils:Request("https://api.codex.lol/v1/auth/session", "POST");
							if data then
								setclipboard("https://mobile.codex.lol?token=" .. httpService:JSONDecode(data).token);
								internalUtils:Notify("Whitelist link has been set to your clipboard.")
								return
							end
						end
						internalUtils:Notify("Unable to retrieve whitelist key, please try again later.")
					end,
					Name = "copyWhitelistLink",
					Position = UDim2.new(0.5, 0, 1, -28),
					Size = UDim2.new(1, 0, 0, 32),
					Text = "Copy Whitelist Link"
				}),
				textButton({ 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					MouseButton1Click = function()
						changeTab(false);
					end,
					Name = "premiumUser", 
					Position = UDim2.new(0.5, 0, 1, 0), 
					RichText = true, 
					Size = UDim2.new(1, 0, 0, 20), 
					Text = "Premium User?  <font color=\"#eb4545\">Click Here!</font>", 
					TextColor3 = Color3.fromHex("9fa4ba")
				}),
				textButton({ -- SPDM Team | Buy Premium Button
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						if setclipboard then
							setclipboard("https://codexseller.mysellix.io/");
						end
						internalUtils:Notify("Premium License purchase link has been set to your clipboard.")
					end,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					Name = "premiumUser", 
					Position = UDim2.new(0.5, 0, 1, 28), 
					RichText = true, 
					Size = UDim2.new(1, 0, 0, 20), 
					Text = "Or <font color=\"#eb4545\">Buy Premium!</font>", 
					TextColor3 = Color3.fromHex("9fa4ba")
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "specialUserInput", 
				Position = UDim2.new(0.5, 0, 0.2, 46), 
				Size = UDim2.new(0.4, 264, 0.5, 0), 
				Visible = false
			}, {
				textButton({
					AnchorPoint = Vector2.new(1, 0), 
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						changeTab(true);
					end,
					Name = "cancel", 
					Position = UDim2.new(0.5, -6, 0.5, 6), 
					Size = UDim2.new(0, 160, 0, 32), 
					Text = "Cancel"
				}),
				textButton({
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						local key = ui.specialUserInput.key.Text;
						if #key > 0 then
							local res = internalUtils:Request("https://api.codex.lol/v1/auth/claim", "POST", {
								["Content-Type"] = "application/json"
							}, {
								key = key
							});
							if res then
								changeTab(true);
								return;
							end
						end
						internalUtils:Notify("Invalid key.")
					end,
					Name = "register", 
					Position = UDim2.new(0.5, 6, 0.5, 6), 
					Size = UDim2.new(0, 160, 0, 32), 
					Text = "Register", 
				}),
				textBox({
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					Name = "key", 
					PlaceholderText = "Key...", 
					Position = UDim2.new(0.5, 0, 0.5, -6),
					Size = UDim2.new(1, -62, 0, 32)
				})
			})
		});

		task.spawn(function()
			local dataStep = startupStep.new("Fetching Codex Data...", "Data Fetched!", ui.whitelist.process):Start();
			internalSettings:Initialize();

			changelog().Parent = ui;
			local currentVersion = identifyexecutor and select(2, identifyexecutor()) or "Invalid Version";
			if not (cloneref(game:GetService("RunService")):IsStudio() or internalUtils:AreVersionsAlike(currentVersion, isiosdevice() and internalSettings.data.iosVersion or internalSettings.data.androidVersion)) then
				dataStep:Complete("Please update Codex.");
				return;
			end
			dataStep:Complete();

			local whitelistStep = startupStep.new("Waiting for you to Whitelist...", "Whitelisted!", ui.whitelist.process):Start();
			local isStudio = cloneref(game:GetService("RunService")):IsStudio()
			local checked = false
			
			repeat
				if checked then
					task.wait(3);
				end
				
				checked = true
			until checkWhitelist() or closed or isStudio
			if closed then
				return
			end
			
			whitelistStep:Complete();
			local setupStep = startupStep.new("Setting Up...", "Setup Completed!", ui.whitelist.process):Start();
			doSetup();
			setupStep:Complete();

			local loadUIStep = startupStep.new("Loading UI...", "Loaded!", ui.whitelist.process):Start();
			local basis = createBasis(directory);
			loadUIStep:Complete();
			task.wait(1);
			completionSignal:Fire(true, basis);
		end);

		return ui;
	end

	--[[ Module ]]--

	framework.pages.startup.startup = (function(directory: Instance, signal: {any}): ScreenGui
		completionSignal = signal;

		if checkWhitelist() then
			doSetup();
			signal:Fire(true, createBasis(directory));
			return;
		end

		return createUI(directory);
	end);
end

do
	--[[ Variables ]]--

	local navbarButton = framework.components.navbarButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local mathsUtils = framework.dependencies.utils.maths;
	local codexEnum = framework.dependencies.codexEnum;
	local internalUtils = framework.dependencies.utils.internal;
	local userSettings = framework.data.userSettings;

	local userInputService = cloneref(game:GetService("UserInputService"));
	local tweenService = cloneref(game:GetService("TweenService"));
	local httpService = cloneref(game:GetService("HttpService"));

	local navbar = {
		state = "hidden"
	};

	local map = {};
	local selected;

	--[[ Functions ]]--

	local function setupDragBar(dragBar: TextButton, indent: NumberValue)
		local isDragging = false;
		local startPosition, startOffset;

		userInputService.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and mathsUtils:IsWithin2DBounds(input.Position, dragBar.AbsolutePosition, dragBar.AbsolutePosition + dragBar.AbsoluteSize) then
				isDragging = true;
				startPosition, startOffset = input.Position.X, input.Position.X - dragBar.AbsolutePosition.X;
				local endedConn; endedConn = input.Changed:Connect(function(property)
					if input.UserInputState == Enum.UserInputState.End then
						isDragging = false;
						endedConn:Disconnect();
						navbar:SetState(codexEnum.NavbarState[input.Position.X > 140 and "Full" or input.Position.X > 40 and "Partial" or "Hidden"]);
					end
				end);
			end
		end);

		userInputService.InputChanged:Connect(function(input)
			if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local offset = math.clamp(input.Position.X - startOffset, 0, 260)

				instanceUtils:Tween(indent, 0.06, {
					Value = offset
				});

				-- Indent pages
				if selected and map[selected] then
					instanceUtils:Tween(map[selected], 0.25, {
						Position = UDim2.new(0, offset, 1, 0);
						Size = UDim2.new(1, -offset, 1, 0);
					});
				end
			end
		end);
	end

	local function createNavbar(gui: ScreenGui): Instance


		local bar = instanceUtils:Create("Frame", {
			BackgroundTransparency = 1,
			Name = "navbar",
			Parent = gui,
			Size = UDim2.new(0, 0, 1, 0),
			ZIndex = 2
		}, {
			instanceUtils:Create("TextButton", { -- SPDM Team | Floating Icon
				AnchorPoint = Vector2.new(0.5, 0.5),
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BackgroundTransparency = .25,
				BorderSizePixel = 0,
				Draggable = true,
				Name = "floatingIcon",
				Position =  UDim2.new(0, game.Workspace.CurrentCamera.ViewportSize.X*0.8, 0.7, 0),
				Size = UDim2.new(0, 50, 0, 50),
				Text = "",
				Visible = false,
				ZIndex = 2
			},
			{
				instanceUtils:Create("UICorner", {
					CornerRadius = UDim.new(1, 0),
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", {
					PaddingBottom = UDim.new(.15, 0),
					PaddingTop = UDim.new(.15, 0),
					PaddingLeft = UDim.new(.15, 0),
					PaddingRight = UDim.new(.15, 0),
					Name = "UIPadding"
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11558559086", 
					Name = "codexIcon2", 
					Position = UDim2.new(0.5, 0 ,0.5, 0), 
					Size = UDim2.new(1,0,1,0),
					ZIndex = 2
				})
			}),
			instanceUtils:Create("NumberValue", {
				Name = "indent",
				Value = 0
			}),
			instanceUtils:Create("TextButton", {
				BackgroundTransparency = 1,
				Name = "dragBar",
				Position = UDim2.new(1, 0, 0, 0),
				Size = UDim2.new(0, 20, 1, 0),
				Text = "",
				ZIndex = 2
			},
			{
				instanceUtils:Create("Frame", {
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 0.8,
					BorderSizePixel = 0,
					Name = "indicator",
					Position = UDim2.new(0.5, 0, 0.5, 0),
					Size = UDim2.new(0, 2, 0, 80),
					ZIndex = 2
				}, {
					instanceUtils:Create("UICorner", {
						CornerRadius = UDim.new(1, 0),
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("Frame", { 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderSizePixel = 0, 
				ClipsDescendants = true, 
				Name = "main", 
				Size = UDim2.new(1, 0, 1, 0),
				ZIndex = 2
			}, {
				instanceUtils:Create("ImageLabel", { 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11558559086", 
					Name = "codexIcon", 
					Position = UDim2.new(0, 20, 0, 30), 
					Size = UDim2.new(0, 36, 0, 36),
					ZIndex = 2
				}),
				instanceUtils:Create("TextLabel", { 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "title", 
					Position = UDim2.new(0, 78, 0, 38), 
					Text = "Codex " .. (isiosdevice() and "iOS" or "Android"),
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 1,
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top,
					ZIndex = 2
				}),
				instanceUtils:Create("TextLabel", { 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size12, 
					Name = "poweredBy", 
					Position = UDim2.new(0, 78, 0, 59), 
					Text = "Powered By SPDM Team", 
					TextColor3 = Color3.fromHex("717176"), 
					TextSize = 12, 
					TextTransparency = 1, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top,
					ZIndex = 2
				}),
				instanceUtils:Create("Frame", { 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Name = "container", 
					Size = UDim2.new(1, 0, 1, 0),
					ZIndex = 2
				}, {
					instanceUtils:Create("UIListLayout", { 
						HorizontalAlignment = Enum.HorizontalAlignment.Center, 
						Name = "list", 
						SortOrder = Enum.SortOrder.LayoutOrder, 
						VerticalAlignment = Enum.VerticalAlignment.Center
					})
				})
			})
		});
		
		-- SPDM Team | Streak & Expiring Timer
		local function fetchData()
			local data = {
				expiry = 0,
				streak = 0
			}
			
			local response = internalUtils:Request("https://api.codex.lol/v1/auth/authenticate", "POST")
			if response then
				local success, err = pcall(function()
					data = httpService:JSONDecode(response)
				end)
			elseif cloneref(game:GetService("RunService")):IsStudio() then
				data = {
					expiry = os.time()*1000+1200000,
					streak = 24
				}
			end

			return data.expiry / 1000, data.streak;
		end

		local function updateText()
			local expiryTime, streak = fetchData()
			local keyless = false
			
			local function getTimeLeft()
				return expiryTime - os.time()
			end

			local timeLeft = getTimeLeft()
			if timeLeft <= 0 then
				keyless = true
			end

			local function updateFrequency()
				if timeLeft > 86400 then
					return 3600
				elseif timeLeft > 3600 then
					return 60  
				else return 1
				end
			end

			local function formatTimeLeft()
				if timeLeft <= 0 then
					return keyless and "∞" or "Expired"
				elseif timeLeft < 60 then
					return string.format("%ds", timeLeft)
				else
					local days = math.floor(timeLeft / 86400)
					local hours = math.floor((timeLeft % 86400) / 3600)
					local minutes = math.floor((timeLeft % 3600) / 60)
					local seconds = timeLeft % 60

					local timeStr = ""
					if days > 0 then
						timeStr = string.format("%dd ", days)
					end
					if hours > 0 then
						timeStr ..= string.format("%dh ", hours)
					end
					if minutes > 0 or hours > 0 or days > 0 then
						timeStr ..= string.format("%dmin", minutes)
					end
					if days == 0 and hours == 0 then
						timeStr ..= string.format(" %ds", seconds)
					end
					return timeStr
				end
			end

			-- SPDM Team | Credits
			local textLabel = bar.main.poweredBy;
			local isAnimating = false;

			local function createFadeTween(object, goal, duration, easingStyle, easingDirection)
				local tweenInfo = TweenInfo.new(duration, easingStyle, easingDirection)
				local tween = tweenService:Create(object, tweenInfo, goal)
				return tween
			end

			local function updateFunction()
				if not isAnimating then
					timeLeft = getTimeLeft()
					local formattedTimeLeft = formatTimeLeft()
					local streakText = string.format("🔥 %d\t•\t🕓 %s", streak, formattedTimeLeft)
					textLabel.Text = streakText
				end
			end
			
			local function displayPoweredBySPDM()
				if timeLeft >= 0 and timeLeft <20 then return end; 
				isAnimating = true
				local originalText = textLabel.Text

				local fadeIn = createFadeTween(textLabel, {TextTransparency = 0}, 0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
				local fadeOut = createFadeTween(textLabel, {TextTransparency = 1}, 0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

				fadeOut:Play()
				fadeOut.Completed:Wait()
				textLabel.Text = "Powered By SPDM Team"
				fadeIn:Play()
				fadeIn.Completed:Wait()

				wait(2)

				fadeOut:Play()
				fadeOut.Completed:Wait()


				isAnimating = false
				updateFunction()
				fadeIn:Play()
				fadeIn.Completed:Wait()

			end
			


			updateFunction()

			local freq = updateFrequency()
			if freq then
				task.spawn(function()
					while getTimeLeft() > 0 do
						wait(freq)
						updateFunction()
					end
				end)
			end
			
			task.spawn(function()
				while true do
					wait(math.random(10, 20))
					displayPoweredBySPDM()
				end
			end)
		end

		updateText()
		

		-- SPDM Team | Floating Icon
		arceus_libs.input.handleCustomDrag(bar.floatingIcon)
		arceus_libs.buttons.holdable(bar.floatingIcon).ShortClick.Event:Connect(function()
			if userSettings.cache.executor.showParticles then
				local ScreenGui = bar.Parent
				local particleCount = 30
				
				local mainColors = {
					Color3.fromRGB(219, 0, 0),    -- #DB0000
					Color3.fromRGB(219, 27, 27),  -- #DB1B1B
					Color3.fromRGB(221, 71, 71),  -- #DD4747
					Color3.fromRGB(226, 111, 111),-- #E26F6F 
					Color3.fromRGB(21, 21, 29)    -- #15151D
				}
				
				local function getRandomMainColorWithVariation()
					local randomIndex = math.random(1, #mainColors)
					return mainColors[randomIndex]
				end

				local function createAndAnimateParticle()
					local particle = Instance.new("Frame")
					local size = math.random(5, 15)
					particle.Size = UDim2.new(0, size, 0, size)
					particle.BackgroundColor3 = getRandomMainColorWithVariation()
					particle.Parent = ScreenGui

					local uiCorner = Instance.new("UICorner")
					uiCorner.CornerRadius = UDim.new(0.5, 0)
					uiCorner.Parent = particle

					local radius = bar.floatingIcon.Size.X.Offset / 2
					local theta = math.random() * 2 * math.pi
					local r = radius * math.sqrt(math.random())
					local offsetX = r * math.cos(theta)
					local offsetY = r * math.sin(theta)

					local iconCenter = bar.floatingIcon.AbsolutePosition + bar.floatingIcon.AbsoluteSize / 2
					local newPositionX = iconCenter.X + offsetX - (particle.Size.X.Offset / 2) - ScreenGui.AbsolutePosition.X
					local newPositionY = iconCenter.Y + offsetY - (particle.Size.Y.Offset / 2) - ScreenGui.AbsolutePosition.Y

					particle.Position = UDim2.new(0, newPositionX, 0, newPositionY)
					particle.AnchorPoint = Vector2.new(0.5, 0.5)


					local tween = tweenService:Create(particle, TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {BackgroundTransparency = 0})
					tween:Play()

					local moveTween = tweenService:Create(particle, TweenInfo.new(math.random(), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, false), {Position = UDim2.new(0, -size, 0, math.random(0, ScreenGui.AbsoluteSize.Y - size))})
					moveTween:Play()

					moveTween.Completed:Connect(function()
						particle:Destroy()
					end)
				end

				for i = 1, particleCount do
					createAndAnimateParticle()
				end

				wait(.15)
			end
			
			navbar:SetState(codexEnum.NavbarState["Partial"])
		end)

		bar.indent:GetPropertyChangedSignal("Value"):Connect(function()
			local value = bar.indent.Value;
			local percentage = (math.clamp(value, 76, 260) - 76) / 184;

			navbar.bar.Size = UDim2.new(0, value, 1, 0);
			navbar.bar.main.codexIcon.Size = UDim2.new(0, 36 + percentage * 12, 0, 36 + percentage * 12);
			navbar.bar.main.title.TextTransparency = 1 - percentage;
			navbar.bar.main.poweredBy.TextTransparency = 0.2 + (1 - percentage) * 0.8;
			for i, v in map do
				i.instance.text.TextTransparency = 0.2 + (1 - percentage) * 0.8;
			end
			navbar.fade.BackgroundTransparency = 1 - percentage;
		end);

		setupDragBar(bar.dragBar, bar.indent);

		return bar;
	end

	local function createFade(gui: ScreenGui): Instance
		return instanceUtils:Create("Frame", {
			BackgroundColor3 = Color3.new(),
			BackgroundTransparency = 1,
			Name = "fade",
			Parent = gui,
			Size = UDim2.new(1, 0, 1, 0),
			ZIndex = 0
		}, {
			instanceUtils:Create("UIGradient", {
				Name = "gradient",
				Transparency = NumberSequence.new({
					NumberSequenceKeypoint.new(0, 0.3),
					NumberSequenceKeypoint.new(0.2, 0.3),
					NumberSequenceKeypoint.new(1, 1)
				})
			})
		});
	end

	--[[ Module ]]--

	function navbar:Initialize(directory: Instance)
		self.bar = createNavbar(directory.gui);
		self.fade = createFade(directory.gui);
		self.background = directory.gui.background;

		for i, v in { "editor", "localScripts", "globalScripts", "exploitSettings", "console" } do
			local module = framework[string.format("pages.%s.%s", v, v)];
			self:Add(module.title, module.icon, module:Initialize(), module.overwritePosition);
		end

		self:SetState(codexEnum.NavbarState.Full, true);
	end

	function navbar:Add(text: string, icon: string, designatedFrame: Frame, overwritePosition: UDim2?)
		local button = navbarButton.new(text, icon);
		map[button] = designatedFrame;

		button.instance.MouseButton1Click:Connect(function()
			self:Select(button);
		end);

		if self.state ~= "full" then
			button.instance.text.TextTransparency = 1;
		end

		if overwritePosition then
			button.instance.Position = overwritePosition;
			button.instance.Parent = self.bar.main;
		else
			button.instance.Parent = self.bar.main.container;
		end
		designatedFrame.Parent = self.bar.Parent.tabs;
	end

	function navbar:SetState(navbarState: number, ignoreTimeouts: boolean?)
		local indent, state = 0, "hidden";
		if navbarState == codexEnum.NavbarState.Partial or (navbarState == codexEnum.NavbarState.Hidden and selected) then
			indent, state = 76, "partial";
		elseif navbarState == codexEnum.NavbarState.Full then
			indent, state = 260, "full";
		end

		if self.tween then
			self.tween:Cancel();
		end
		if self.nextInputCheck then
			self.nextInputCheck:Disconnect();
			pcall(task.cancel, self.timeoutDelay); -- if this is called from self.timeoutDelay itself, it will error. Cba to do a proper check. It'll be dead immediately after anyways
		end

		self.state = state;
		self.tween = instanceUtils:Tween(self.bar.indent, 0.25, {
			Value = indent;
		});

		-- SPDM | Indent pages
		if selected and map[selected] then
			instanceUtils:Tween(map[selected], 0.25, {
				Position = UDim2.new(0, indent, 1, 0);
				Size = UDim2.new(1, -indent, 1, 0);
			});
		end

		if state ~= "hidden" and not ignoreTimeouts then
			self.timeoutDelay = task.delay(10, function()
				if self.state == state then
					self:SetState(codexEnum.NavbarState.Hidden);
				end
			end);

			self.nextInputCheck = userInputService.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					if self.state ~= "hidden" and input.Position.X > self.bar.indent.Value then
						self:SetState(codexEnum.NavbarState.Hidden);
					end
				end
			end);
		end

		-- SPDM Team | Opening modes handler
		local function createTween(target, properties)
			return game:GetService("TweenService"):Create(target, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), properties)
		end

		local openingModes = {
			["Edge Swipe"] = 
				function() 
					if self.bar.dragBar.indicator.BackgroundTransparency ~= 0.8 then
					createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 0.8}):Play()
				end
				end,
			["Floating Icon"] = 
				function() 
					if self.state == "hidden" then
						if self.bar.dragBar.indicator.BackgroundTransparency ~= 1 then
							createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 1}):Play()
						end 
						if userSettings.cache.executor.showParticles then
							local ScreenGui = self.bar.Parent
							local particleCount = 30

							local mainColors = {
								Color3.fromRGB(219, 0, 0),    -- #DB0000
								Color3.fromRGB(219, 27, 27),  -- #DB1B1B
								Color3.fromRGB(221, 71, 71),  -- #DD4747
								Color3.fromRGB(226, 111, 111),-- #E26F6F 
								Color3.fromRGB(21, 21, 29)    -- #15151D
							}

							local function getRandomMainColorWithVariation()
								local randomIndex = math.random(1, #mainColors)
								return mainColors[randomIndex]
							end

							local function createAndAnimateParticle()
								local particle = Instance.new("Frame")
								local size = math.random(5, 15)
								particle.Size = UDim2.new(0, size, 0, size)
								particle.BackgroundColor3 = getRandomMainColorWithVariation()
								particle.Parent = ScreenGui

								local uiCorner = Instance.new("UICorner")
								uiCorner.CornerRadius = UDim.new(0.5, 0)
								uiCorner.Parent = particle

								local startPositionX = math.random(0, ScreenGui.AbsoluteSize.X * 0.1)
								local startPositionY = math.random(0, ScreenGui.AbsoluteSize.Y - size)
								particle.Position = UDim2.new(0, startPositionX, 0, startPositionY)
								particle.AnchorPoint = Vector2.new(0.5, 0.5)

								local iconCenter = self.bar.floatingIcon.AbsolutePosition + self.bar.floatingIcon.AbsoluteSize / 2
								local endPositionX = iconCenter.X - (particle.Size.X.Offset / 2) - ScreenGui.AbsolutePosition.X
								local endPositionY = iconCenter.Y - (particle.Size.Y.Offset / 2) - ScreenGui.AbsolutePosition.Y

								local tweenService = game:GetService("TweenService")
								local moveTween = tweenService:Create(particle, TweenInfo.new(.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = UDim2.new(0, endPositionX, 0, endPositionY)})
								moveTween:Play()

								moveTween.Completed:Connect(function()
									particle:Destroy()
								end)
							end

							for i = 1, particleCount do
								createAndAnimateParticle()
							end

							wait(.35);
						end
					else
						createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 0.8}):Play()
					end


					local targetTransparency = self.state == "hidden" and 0.5 or 1
					if self.bar.floatingIcon.BackgroundTransparency ~= targetTransparency then
					local targetSize = self.state == "hidden" and UDim2.new(0, 70, 0, 70) or UDim2.new(0, 0, 0, 0)
					local delayTime = self.bar.floatingIcon.BackgroundTransparency == 0.5 and 0.25 or 0

					task.delay(delayTime, function() self.bar.floatingIcon.Visible = self.state == "hidden" end)

					createTween(self.bar.floatingIcon, {BackgroundTransparency = targetTransparency, Size = targetSize}):Play()
					createTween(self.bar.floatingIcon.codexIcon2, {ImageTransparency = targetTransparency == 0.5 and 0 or 1}):Play()
				end
				end,
			["Invisible Edge Swipe"] = 
				function() 
					if self.bar.dragBar.indicator.BackgroundTransparency ~= 1 then
						createTween(self.bar.dragBar.indicator, {BackgroundTransparency = 1}):Play()
					end
				end
		}

		openingModes[userSettings.cache.executor.openingMode]()


	end

	function navbar:Select(button: TextButton)
		if selected ~= nil then
			selected:Highlight(false);
			instanceUtils:Tween(map[selected], 0.2, {
				Position = UDim2.new(1, 0, 1, 0)
			});
			if selected == button then
				selected = nil;
				instanceUtils:Tween(self.background, 0.2, {
					BackgroundTransparency = 1
				});
				return;
			end
		end
		selected = button;
		selected:Highlight(true);
		self:SetState(codexEnum.NavbarState.Partial);
		instanceUtils:Tween(self.background, 0.2, {
			BackgroundTransparency = 0.1
		});
		--[[
		instanceUtils:Tween(map[button], 0.2, {
			Position = UDim2.new(0, 0, 1, 0)
		});
		]]
	end

	framework.pages.navbar.navbar = navbar;
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local mathsUtils = framework.dependencies.utils.maths;
	local popups = framework.popups.popups;

	local textService = cloneref(game:GetService("TextService"));

	local tagOrder = { "verified", "isPatched", "isUniversal", "key" };
	local tags = {
		key = {
			title = "Key",
			colour = "#eab515"
		},
		isPatched = {
			title = "Patched",
			colour = "#eb4545"
		},
		isUniversal = {
			title = "Universal",
			colour = "#459beb"
		},
		verified = {
			title = "Verified",
			colour = "#15151d"
		}
	};

	--[[ Functions ]]--

	local function generateTag(data: {any}): Instance
		return instanceUtils:Create("TextLabel", { 
			AutomaticSize = Enum.AutomaticSize.X, 
			BackgroundColor3 = Color3.fromHex(data.colour), 
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = data.title, 
			Size = UDim2.new(0, 0, 0, 30), 
			Text = data.title, 
			TextColor3 = Color3.fromHex("ffffff"), 
			TextSize = 14
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIPadding", { 
				Name = "padding", 
				PaddingLeft = UDim.new(0, 10), 
				PaddingRight = UDim.new(0, 10)
			})
		});
	end

	--[[ Module ]]--

	framework.pages.globalScripts.scriptResult = (function(scriptResult: {any}): Instance
		local viewCount = mathsUtils:FormatAsCount(scriptResult.views, 0.1);

		local base = instanceUtils:Create("ImageButton", { 
			Active = false, 
			AutoButtonColor = false, 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Image = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId), 
			ImageTransparency = 0.5, 
			Name = scriptResult.title, 
			Selectable = false, 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0, 48), 
				Size = UDim2.new(1, -28, 0, 0), 
				Text = scriptResult.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0.5, 0, 1, -14), 
				Size = UDim2.new(1, -28, 1, -86), 
				Text = scriptResult.description or "", 
				TextColor3 = Color3.fromHex("c8c8c8"), 
				TextSize = 13, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "views", 
				Position = UDim2.new(1, -10, 0, 10), 
				Size = UDim2.new(0, 0, 0, 30), 
				Text = viewCount, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			}),
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tags", 
				Position = UDim2.new(0, 10, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("000000"), 
				ScrollBarThickness = 0, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -(textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
					Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
					Text = viewCount,
					Size = 14,
					Width = math.huge
				})).X + 46), 0, 30)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});

		for i, v in tagOrder do
			if scriptResult[v] then
				generateTag(tags[v]).Parent = base.tags;
			end
		end

		base.MouseButton1Click:Connect(function()
			popups:Show("globalScriptSelection", scriptResult);
		end);

		return base;
	end);
end

do
	--[[ Variables ]]--

	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local scriptResult = framework.pages.globalScripts.scriptResult;

	local httpService = cloneref(game:GetService("HttpService"));

	local basis;

	--[[ Module ]]--

	local globalScripts = {
		title = "Global Scripts",
		icon = "rbxassetid://13449277995",
		isSearching = false
	};

	function globalScripts:Initialize(directory: Instance)
		basis = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "globalScripts", 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticCanvasSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "container", 
				Position = UDim2.new(0.5, 0, 1, 0), 
				ScrollBarImageColor3 = Color3.fromHex("050507"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.Y, 
				Size = UDim2.new(1, -28, 1, -60), 
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 12, 0, 12), 
					CellSize = UDim2.new(0.333, -12, 0.3, 50), 
					HorizontalAlignment = Enum.HorizontalAlignment.Center, 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("TextButton", {
				AutoButtonColor = false,
				BackgroundColor3 = Color3.fromRGB(21, 21, 29),
				MouseButton1Click = function()
					basis.searchBox.input:CaptureFocus();
				end,
				Name = "searchBox",
				Position = UDim2.new(0, 14, 0, 14),
				Size = UDim2.new(1, -74, 0, 36),
				Text = ""
			}, {
				instanceUtils:Create("TextBox", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "input", 
					PlaceholderColor3 = Color3.fromHex("b2b2b2"), 
					PlaceholderText = "Search...", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(1, 0, 1, 0), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14, 
					TextTruncate = Enum.TextTruncate.AtEnd, 
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 12), 
					PaddingRight = UDim.new(0, 12)
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "credit",
				Position = UDim2.new(0.5, 0, 0, -28), 
				Size = UDim2.new(0, 0, 0, 34), 
				Text = "Powered by scriptblox.com", 
				TextColor3 = Color3.fromHex("b2b2b2"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 12), 
					PaddingRight = UDim.new(0, 12)
				})
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "openFilters", 
				Position = UDim2.new(1, -14, 0, 14), 
				Size = UDim2.new(0, 36, 0, 36), 
				Text = "", 
				TextColor3 = Color3.fromHex("000000"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				})
			})
		});

		basis.searchBox.input.FocusLost:Connect(function()
			local contents = basis.searchBox.input.Text;
			if #contents > 0 then
				self:Search(contents);
			end
		end);

		do
			local res = internalUtils:Request("https://scriptblox.com/api/script/search?filters=free&q=Hub", "GET", {
				["Content-Type"] = "application/json"
			});

			if res then
				self:ParseResults(httpService:JSONDecode(res).result.scripts);
			end
		end

		return basis;
	end

	function globalScripts:Search(query: string)
		if self.isSearching or getgenv == nil then
			return;
		end
		self.isSearching = true;
		local res = internalUtils:Request("https://scriptblox.com/api/script/search?filters=free&q=" .. httpService:UrlEncode(query), "GET", {
			["Content-Type"] = "application/json"
		});
		if res then
			self:ParseResults(httpService:JSONDecode(res).result.scripts);
		end
		self.isSearching = false;
	end

	function globalScripts:ParseResults(res: {any})
		for i, v in basis.container:GetChildren() do
			if v:IsA("ImageButton") then
				v:Destroy();
			end
		end
		for i, v in res do
			scriptResult(v).Parent = basis.container;
		end
	end

	framework.pages.globalScripts.globalScripts = globalScripts;
end

do
	--[[ Variables ]]--

	local sets = {
		keywords = {
			"local",
			"function",
			"if",
			"and",
			"or",
			"not",
			"then",
			"else",
			"elseif",
			"repeat",
			"until",
			"while",
			"do",
			"end",
			"for",
			"in",
			"break",
			"continue",
			"return"
		},
		constants = {
			"true",
			"false",
			"nil"
		},
		operators = {
			"and",
			"or",
			"not",
			"<",
			">",
			"<=",
			">=",
			"==",
			"~=",
			"+",
			"-",
			"*",
			"/",
			"%",
			"^",
			"#",
			".."
		},
		assignments = {
			"=",
			"+=",
			"-=",
			"*=",
			"/=",
			"%=",
			"^=",
			"..="
		},
		globals = getfenv()
	};

	--[[ Functions ]]--

	local function isDigit(character: string, index: number): boolean
		return (character >= "0" and character <= "9") or (index > 0 and (character == "e" or character == "_"));
	end

	local function isHexadecimalDigit(character: string): boolean
		return (character >= "0" and character <= "9") or (character >= "a" and character <= "f") or (character >= "A" and character <= "F");
	end

	local function isWord(character: string, isFirstCharacter: boolean): boolean
		return character == "_" or (character >= "a" and character <= "z") or (character >= "A" and character <= "Z") or (not isFirstCharacter and isDigit(character, 0));
	end

	local function isWhitespace(character: string): boolean
		return character == " " or character == "\t" or character == "\n";
	end

	--[[ Module ]]--

	local lexer = {};

	function lexer:_consume(): string
		self.position += 1;
		return string.sub(self.string, self.position, self.position);
	end

	function lexer:_peek(amount: number | nil): string
		local index = self.position + (amount or 1);
		return string.sub(self.string, index, index);
	end

	function lexer:_pushToken(tokenName: string, value: string)
		self.result[#self.result + 1] = {
			token = tokenName,
			value = value
		};
	end

	function lexer:_pushSymbol(text: string)
		local token = "symbol";
		if table.find(sets.operators, text) then
			token = "operator";
		elseif table.find(sets.assignments, text) then
			token = "assignment";
		end
		self:_pushToken(token, text);
	end

	function lexer:_readString(): string
		local delimiter, value = self:_peek(), self:_consume();
		while self.position <= self.length do
			local character = self:_consume();
			if character == "\\" then
				value ..= character .. self:_consume();
			else
				value ..= character;
				if character == delimiter then
					break;
				end
			end
		end
		return value;
	end

	function lexer:_readMultilineString(): string | nil
		local delimiter = self:_peek();
		if delimiter ~= "[" then
			return nil;
		end	
		local start = self.position;
		local value = self:_consume();
		local nestedEquals = 0;
		while self.position <= self.length and self:_peek() == "=" do
			value ..= self:_consume();
			nestedEquals += 1;
		end
		if self:_peek() ~= "[" then
			self.position = start;
			return nil;
		end
		value ..= self:_consume();
		while self.position <= self.length do
			local character = self:_consume();
			value ..= character;
			if character == "]" then
				local equalsCount = 0;
				while self.position <= self.length and self:_peek() == "=" do
					value ..= self:_consume();
					equalsCount += 1;
				end
				if self:_peek() == "]" and nestedEquals == equalsCount then
					value ..= self:_consume();
					break;
				end
			end
		end
		return value;
	end

	function lexer:_readComment(): string
		local value = self:_consume() .. self:_consume();
		if self:_peek() == "[" then
			local multilineString = self:_readMultilineString();
			if multilineString ~= nil then
				return value .. multilineString;
			end
		end
		while self.position <= self.length do
			local character = self:_peek();
			if character == "\n" then
				break;
			end
			value ..= self:_consume();
		end
		return value;
	end

	function lexer:_readWord(): string | nil
		local value = "";
		local isFirstCharacter = true;
		while self.position <= self.length do
			local character = self:_peek();
			if not isWord(character, isFirstCharacter) then
				break;
			end
			value ..= self:_consume();
			isFirstCharacter = false;
		end
		return value ~= "" and value or nil;
	end

	function lexer:_readWhitespace(): string | nil
		local value = "";
		while self.position <= self.length do
			local character = self:_peek();
			if not isWhitespace(character) then
				break;
			end
			value ..= self:_consume();
		end
		return value ~= "" and value or nil
	end

	function lexer:_readNumber(): string | nil
		local value = "";
		local isHexadecimal = false;
		local index = 0;
		while self.position <= self.length do
			local character = self:_peek();
			if character == "0" or character == "x" then
				isHexadecimal = true;
				value ..= self:_consume();
				index += 1;
				continue;
			elseif (isHexadecimal and not isHexadecimalDigit(character)) or not isDigit(character, index) then
				break;
			end
			value ..= self:_consume();
			index += 1;
		end
		return value ~= "" and value or nil;
	end

	function lexer:_getAssociatedToken(word: string): string
		if table.find(sets.keywords, word) then
			return "keyword";
		elseif table.find(sets.constants, word) then
			return "constant";
		elseif table.find(sets.operators, word) then
			return "operator";
		elseif sets.globals[word] then
			return "global";
		elseif self:_peek() == "(" then
			return "callback";
		end
		return "identifier";
	end

	function lexer:Parse(text: string): {any}
		self.string = text;
		self.position = 0;
		self.length = #text;
		self.result = {};

		local symbol = "";

		while self.position <= self.length do
			local character = self:_peek();
			if character == "[" then
				local multilineString = self:_readMultilineString();
				if multilineString ~= nil then
					self:_pushToken("string", multilineString);
					continue;
				end
			elseif character == "'" or character == "\"" then
				self:_pushToken("string", self:_readString());
				continue;
			elseif isDigit(character, 0) then
				local value = self:_readNumber();
				if value ~= nil then
					self:_pushToken("number", value);
					continue;
				end
			elseif isWord(character, true) then
				local value = self:_readWord();
				if value ~= nil then
					self:_pushToken(self:_getAssociatedToken(value), value);
					continue;
				end
			elseif character == "-" and self:_peek(2) == "-" then
				self:_pushToken("comment", self:_readComment());
				continue;
			elseif isWhitespace(character) then
				local value = self:_readWhitespace();
				if value ~= nil then
					self:_pushToken("whitespace", value);
					continue;
				end
			end

			symbol ..= self:_consume();
			if symbol ~= "" then
				self:_pushSymbol(symbol);
				symbol = "";
			else
				break;
			end
		end

		local result = {};
		for i, v in self.result do
			if string.match(v.value, "\n") then
				local lines = string.split(v.value, "\n");
				for i2, v2 in lines do
					if v2 ~= "" then
						result[#result + 1] = {
							token = v.token,
							value = v2
						};
					end
					if i2 < #lines then
						result[#result + 1] = {
							token = "whitespace",
							value = "\n"
						};
					end
				end
			else
				result[#result + 1] = v;
			end
		end

		return result;
	end

	framework.pages.editor.lexer = lexer;
end

do
	--[[ Variables ]]--

	local editorButton = framework.components.editorButton;
	local tabButton = framework.components.tabButton;
	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local lexer = framework.pages.editor.lexer;
	local tabSystem = framework.data.tabSystem;
	local popups = framework.popups.popups;

	local userInputService = cloneref(game:GetService("UserInputService"));
	local textService = cloneref(game:GetService("TextService"));

	local highlightAssociations = {
		string = "#69B397",
		number = "#91C087",
		constant = "#E0BA91",
		callback = "#81a6da",
		keyword = "#E18DB9",
		comment = "#606060",
		global = "#bd93db",
		operator = "#AAAAAA",
		assignment = "#AAAAAA",
		identifier = "#DCDCCC",
		symbol = "#DCDCCC"
	};
	local map = {};

	local base;

	--[[ Functions ]]--

	-- | SPDM | Riky47#3355

	local debounceTime = 0.1
	local lastUpdateTime = 0
	local lastLexResult = {}
	local currentCursor = nil
	local textBoundsCache = {}

	local function lexResultsAreEqual(a, b)
		if #a ~= #b then return false end
		for i = 1, #a do
			if a[i].token ~= b[i].token or a[i].value ~= b[i].value then
				return false
			end
		end
		return true
	end

	local function calculateTextBounds(text: string, dontStore: boolean)
		local result = textBoundsCache[text]

		if not result then
			result = textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
				Font = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal),
				Size = 16,
				Text = text,
				Width = math.huge
			})).X
		end

		if not dontStore then
			textBoundsCache[text] = result
		end

		return result
	end

	local function needsUpdate(container, lexResult)
		local isSame = lexResultsAreEqual(lexResult, lastLexResult)

		lastLexResult = {}
		for i, v in ipairs(lexResult) do
			lastLexResult[i] = { token = v.token, value = v.value }
		end

		return not isSame
	end

	local function insertHighlight(position: Vector2, size: number, text: string, colour: string)
		return instanceUtils:Create("TextLabel", {
			BackgroundTransparency = 1,
			FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal),
			Name = text,
			Parent = base.contentContainer.inputBox,
			Position = position,
			Size = UDim2.new(0, size, 0, 16),
			Text = text,
			TextColor3 = Color3.fromHex(colour),
			TextSize = 16,
			ZIndex = 2
		});
	end

	local function updateCustomCursor(cursor: number)
		local input: TextBox = base.contentContainer.inputBox

		if cursor < 1 then
			if currentCursor then
				currentCursor.Visible = false
			end

			return
		end

		local cursorSize = calculateTextBounds("|")
		local before = input.Text:sub(0, cursor -1)
		local lines = string.split(before, "\n")		
		local line = lines[#lines]

		local actualCursor = cursor -(before:len() -line:len()) -1 
		local lastBefore = line:sub(0, actualCursor)

		local position = UDim2.new(0, calculateTextBounds(lastBefore, true) -cursorSize/2, 0, (#lines -1) * 16)

		if currentCursor and not currentCursor.Parent then
			currentCursor:Destroy()
			currentCursor = nil
		end

		if not currentCursor then
			currentCursor = insertHighlight(position, cursorSize, "|", "#FFFFFF")
		end

		currentCursor.ZIndex = 3
		currentCursor.Position = position
		currentCursor.Visible = true
	end

	local function handleLexResult(lexResult: {any}, addTruncateEllipsis: boolean)
		--[[ SPDM | You can eventually enable this
		
		local currentTime = os.clock()
		if currentTime - lastUpdateTime < debounceTime then
			return
		end
		
		lastUpdateTime = currentTime
		]]

		local input = base.contentContainer.inputBox
		if needsUpdate(input, lexResult) then
			input:ClearAllChildren()
			updateCustomCursor(input.CursorPosition)

			local x, y = 0, 0
			for i, v in ipairs(lexResult) do
				local lastX = calculateTextBounds(v.value)
				if v.value == "\n" then
					y += 16
					x = 0
				else
					local associatedColour = highlightAssociations[v.token]
					if associatedColour then
						insertHighlight(UDim2.new(0, x, 0, y), lastX, v.value, associatedColour)
					end
				end

				x += lastX

				if i == #lexResult and addTruncateEllipsis then
					insertHighlight(UDim2.new(0, x, 0, y), 24, "...", highlightAssociations.identifier)
				end
			end
		end
	end

	-- |

	local function generateLineNumberString(text: string)
		local str = "";
		for i = 1, #string.split(text, "\n") do
			str ..= tostring(i) .. "\n";
		end
		return string.sub(str, 1, #str - 1);
	end

	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "editor", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("ScrollingFrame", { 
				AutomaticCanvasSize = Enum.AutomaticSize.XY,
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(),
				HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
				Name = "contentContainer", 
				Position = UDim2.new(0, 0, 0, 50), 
				ScrollBarThickness = 4,
				Size = UDim2.new(1, 0, 1, -50),
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("TextLabel", { 
					AutomaticSize = Enum.AutomaticSize.Y,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "lineNumbers", 
					Size = UDim2.new(0, 30, 0, 0), 
					Text = "1", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 0.7, 
					TextXAlignment = Enum.TextXAlignment.Right, 
					TextYAlignment = Enum.TextYAlignment.Top
				}),
				instanceUtils:Create("TextBox", { 
					AutomaticSize = Enum.AutomaticSize.XY,
					BackgroundTransparency = 1, 
					ClearTextOnFocus = false, 
					CursorPosition = -1, 
					FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					MultiLine = true, 
					Name = "inputBox", 
					Position = UDim2.new(0, 40, 0, 0), 
					Size = UDim2.new(1, -40, 1, 0), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 1, 
					TextTruncate = Enum.TextTruncate.AtEnd, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -25, 1, -25), 
				Size = UDim2.new(1, -50, 0, 50)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					HorizontalAlignment = Enum.HorizontalAlignment.Right, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	end

	--[[ Module ]]--

	local editor = {
		title = "Editor",
		icon = "rbxassetid://11558196842",
		selected = nil,
		cursorPos = 0,
		text = ""
	};

	function editor:Initialize(directory: Instance)
		base = createUI();

		do
			local inputBox = base.contentContainer.inputBox;
			inputBox:GetPropertyChangedSignal("Text"):Connect(function()
				local text = inputBox.Text
				if userInputService:GetFocusedTextBox() == inputBox and self.text ~= text then
					self:UpdateText(text);
				end
			end);

			inputBox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				local cursorPos = inputBox.CursorPosition
				if userInputService:GetFocusedTextBox() == inputBox and self.cursorPos ~= cursorPos then
					self.cursorPos = cursorPos
					updateCustomCursor(cursorPos)
				end
			end);

			inputBox.FocusLost:Connect(function()
				if userSettings.cache.executor.autoSaveTabs then
					tabSystem:Save();
				end
			end);
		end

		do
			editorButton("New Tab", "rbxassetid://14808232261", {
				MouseButton1Click = function()
					tabSystem:Add("Script " .. tostring(tabSystem.accumulator + 1));
				end,
				Parent = base.buttons
			});

			editorButton("Save Current Tab", "rbxassetid://14883119324", {
				MouseButton1Click = function()
					popups:Show("saveCurrentTab", select(-1, tabSystem:Get(self.selected)));
				end,
				Parent = base.buttons
			});

			editorButton("Execute Clipboard", "rbxassetid://14808228630", {
				MouseButton1Click = function()
					if getclipboard then
						internalUtils:Notify("Clipboard Executed!")
						internalUtils:Execute(getclipboard());
					end
				end,
				Parent = base.buttons
			});

			editorButton("Clear", "rbxassetid://14808219001", {
				MouseButton1Click = function()
					self:SetText("");
				end,
				Parent = base.buttons
			});

			editorButton("Execute", "rbxassetid://14808225296", {
				BackgroundColor3 = Color3.fromRGB(235, 69, 69),
				MouseButton1Click = function()
					internalUtils:Notify("Editor Executed!")
					internalUtils:Execute(self.text);
				end,
				Parent = base.buttons
			}, Color3.new(1, 1, 1));
		end

		tabSystem.onTabCreated:Connect(function(tab)
			local btn = tabButton.new(tab);
			btn.instance.Parent = base.tabButtons;
			map[tab.index] = btn;
			if userSettings.cache.executor.autoSaveTabs then
				tabSystem:Save();
			end
		end);

		tabSystem.onTabRemoved:Connect(function(tab)
			map[tab.index]:Destroy();
			map[tab.index] = nil;
			if userSettings.cache.executor.autoSaveTabs then
				tabSystem:Save();
			end
		end);

		tabSystem.onTabSelected:Connect(function(tab)
			if self.selected then
				map[self.selected]:Highlight(false);
			end
			map[tab.index]:Highlight(true);

			self.selected = tab.index;
			self:SetText(tab.content);
		end);

		if #tabSystem.cache > 0 then
			for i, v in tabSystem.cache do
				tabSystem.onTabCreated:Fire(v);
			end
			tabSystem:Select(tabSystem.cache[1].index);
		else
			tabSystem:Add("Script 1");
		end

		return base;
	end

	function editor:UpdateText(text: string, truncated: string)
		local truncatedText = truncated or string.sub(text, 1, 16384);
		self.text = text;

		tabSystem:UpdateContent(self.selected, text);
		base.contentContainer.lineNumbers.Text = generateLineNumberString(truncatedText);
		handleLexResult(lexer:Parse(truncatedText), #truncatedText < #text);
	end

	function editor:SetText(text: string)
		local truncatedText = string.sub(text, 1, 16384);
		base.contentContainer.inputBox.Text = truncatedText;
		editor:UpdateText(text, truncatedText)
	end

	framework.pages.editor.editor = editor;
end

do
	local signal = framework.dependencies.signal;
	local instanceUtils = framework.dependencies.utils.instance;

	framework.init = (function()
		local sig = signal.new();
		local directory = instanceUtils:DynamicParent(instanceUtils:Create("Folder", {
			Name = "Codex"
		}));
		local login;

		sig:Connect(function(shouldContinue, basis)
			if login then
				login:Destroy();
			end

			if shouldContinue then
				basis.gui.Enabled = true;
				basis.popups.Enabled = true;

				framework.popups.popups:RegisterGUI(basis.popups);
				framework.pages.navbar.navbar:Initialize(directory);
			end
		end);

		login = framework.pages.startup.startup(directory, sig);
	end);
end

arceus_libs.renderer.startRendering()
framework.init(); -- SPDM Team
  	end
})
Tab:AddButton({
	Name = "定住玩家",
	Callback = function()
-- made by xFunnieuss
-- Script (do not modify)
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local Off = Instance.new("TextButton")
    local On = Instance.new("TextButton")
    ScreenGui.Parent = game:GetService('CoreGui')
    ScreenGui.Name = "blinkgui"
    Frame.Parent = ScreenGui
    Frame.Active = true
    Frame.BackgroundColor3 = Color3.new(0.027451, 0.823529, 1)
    Frame.BorderSizePixel = 5
    Frame.Draggable = true
    Frame.Position = UDim2.new(0.0222392641, 0, 0.790732443, 0)
    Frame.Size = UDim2.new(0, 343, 0, 106)
    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Position = UDim2.new(0.183673471, 0, 0, 0)
    TextLabel.Size = UDim2.new(0, 217, 0, 40)
    TextLabel.Font = Enum.Font.Code
    TextLabel.Text = "FE Blink GUI By xFunnieuss"
    TextLabel.TextSize = 16
    Off.Parent = Frame
    Off.BackgroundColor3 = Color3.new(1, 1, 1)
    Off.BackgroundTransparency = 1
    Off.Position = UDim2.new(0.548104942, 0, 0.377358496, 0)
    Off.Size = UDim2.new(0, 138, 0, 49)
    Off.Font = Enum.Font.Code
    Off.Text = "Off"
    Off.TextSize = 20
    On.Parent = Frame
    On.BackgroundColor3 = Color3.new(1, 1, 1)
    On.BackgroundTransparency = 1
    On.Position = UDim2.new(0.0612244904, 0, 0.377358496, 0)
    On.Size = UDim2.new(0, 134, 0, 49)
    On.Font = Enum.Font.Code
    On.Text = "On"
    On.TextSize = 20
    On.MouseButton1Down:connect(function()
    local fat = Instance.new'Animation'
    fat.AnimationId = 'rbxassetid://218504594'
    game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(fat):Play(0,0,0)
    game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Anchored = true
    fat:Destroy()
    game:GetService('StarterGui'):SetCore("SendNotification", {Title = "Blink GUI Notification", Text = "Blink Is On, Press OFF to return to normal!"})
    end)
    Off.MouseButton1Down:connect(function()
        game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Anchored = false
            game:GetService('StarterGui'):SetCore("SendNotification", {Title = "Blink GUI Notification", Text = "Blink Is Off, You have returned back to normal"})
    end)
  	end
})
Tab:AddButton({
	Name = "毒脚本",
	Callback = function()
        game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "成功进入"; Text ="毒·脚本"; Duration = 4; })
        local OrionLib = loadstring(game:HttpGet('https://pastebin.com/raw/xLRUSiKx'))()
        local Window = OrionLib:MakeWindow({Name = "毒·脚本", HidePremium = false, SaveConfig = true,IntroText = "毒·脚本", ConfigFolder = "毒·脚本"})
        game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "欢迎，此为私人订制不可贩卖"; Text ="脚本"; Duration = 4; })
        local about = Window:MakeTab({
            Name = "你好",
            Icon = "rbxassetid://7734068321",
            PremiumOnly = false
        })
        about:AddParagraph("你看你妈呢")
        local Tab = Window:MakeTab({
            Name = "力量传奇",
                Icon = "rbxassetid://4483345998",
                    PremiumOnly = false})
        Tab:AddButton({	
        Name = "英文",
                Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/why-png/scriptstuffz/master/ninjaleg2", true))()
          end
        })
        Tab:AddButton({	
        Name = "传送",
                Callback = function()
        --by Exodi#5973
        --vouch me on v3rmillion and enjoy
        
        local MuscleLegends = Instance.new("ScreenGui")
        local balls = Instance.new("Frame")
        local TextButton = Instance.new("TextButton")
        local Frame = Instance.new("Frame")
        local TextButton_2 = Instance.new("TextButton")
        local MuscleLegends_2 = Instance.new("TextButton")
        local Frame_2 = Instance.new("Frame")
        local TextButton_3 = Instance.new("TextButton")
        local Frame_3 = Instance.new("Frame")
        local TextButton_4 = Instance.new("TextButton")
        local Frame_4 = Instance.new("Frame")
        local TextButton_5 = Instance.new("TextButton")
        local Frame_5 = Instance.new("Frame")
        local TextButton_6 = Instance.new("TextButton")
        local Frame_6 = Instance.new("Frame")
        
        
        MuscleLegends.Name = "MuscleLegends"
        MuscleLegends.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        MuscleLegends.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        balls.Name = "balls"
        balls.Parent = MuscleLegends
        balls.BackgroundColor3 = Color3.fromRGB(23, 25, 48)
        balls.BorderColor3 = Color3.fromRGB(11, 14, 25)
        balls.BorderSizePixel = 6
        balls.Position = UDim2.new(0.0587878786, 0, 0.263085395, 0)
        balls.Size = UDim2.new(0, 499, 0, 189)
        
        TextButton.Parent = balls
        TextButton.BackgroundColor3 = Color3.fromRGB(18, 21, 62)
        TextButton.BorderColor3 = Color3.fromRGB(6, 6, 25)
        TextButton.BorderSizePixel = 4
        TextButton.Position = UDim2.new(0.0237016678, 0, 0.122917295, 0)
        TextButton.Size = UDim2.new(0, 140, 0, 51)
        TextButton.Font = Enum.Font.Cartoon
        TextButton.Text = "Auto Lift"
        TextButton.TextColor3 = Color3.fromRGB(211, 183, 81)
        TextButton.TextSize = 25.000
        
        Frame.Parent = TextButton
        Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame.BackgroundTransparency = 0.900
        Frame.BorderSizePixel = 0
        Frame.Position = UDim2.new(-0.00675659161, 0, 0.525454938, 0)
        Frame.Size = UDim2.new(0, 140, 0, 23)
        
        TextButton_2.Parent = balls
        TextButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        TextButton_2.BackgroundTransparency = 0.800
        TextButton_2.Position = UDim2.new(-0.00193841383, 0, 0.922121644, 0)
        TextButton_2.Size = UDim2.new(0, 87, 0, 14)
        TextButton_2.Font = Enum.Font.SourceSans
        TextButton_2.Text = "Exodi#5973"
        TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton_2.TextSize = 14.000
        
        MuscleLegends_2.Name = "Muscle Legends"
        MuscleLegends_2.Parent = balls
        MuscleLegends_2.BackgroundColor3 = Color3.fromRGB(31, 25, 63)
        MuscleLegends_2.BorderColor3 = Color3.fromRGB(0, 5, 29)
        MuscleLegends_2.BorderSizePixel = 4
        MuscleLegends_2.Position = UDim2.new(-0.0147496527, 0, -0.120468944, 0)
        MuscleLegends_2.Size = UDim2.new(0, 514, 0, 33)
        MuscleLegends_2.Font = Enum.Font.Cartoon
        MuscleLegends_2.Text = "Muscle Legends"
        MuscleLegends_2.TextColor3 = Color3.fromRGB(234, 199, 0)
        MuscleLegends_2.TextSize = 25.000
        
        Frame_2.Parent = MuscleLegends_2
        Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame_2.BackgroundTransparency = 0.950
        Frame_2.BorderSizePixel = 0
        Frame_2.Position = UDim2.new(0, 0, 0.515151978, 0)
        Frame_2.Size = UDim2.new(0, 513, 0, 15)
        
        TextButton_3.Parent = balls
        TextButton_3.BackgroundColor3 = Color3.fromRGB(18, 21, 62)
        TextButton_3.BorderColor3 = Color3.fromRGB(6, 6, 25)
        TextButton_3.BorderSizePixel = 4
        TextButton_3.Position = UDim2.new(0.358371019, 0, 0.122917295, 0)
        TextButton_3.Size = UDim2.new(0, 140, 0, 51)
        TextButton_3.Font = Enum.Font.Cartoon
        TextButton_3.Text = "Legends Gym"
        TextButton_3.TextColor3 = Color3.fromRGB(211, 183, 81)
        TextButton_3.TextSize = 25.000
        
        Frame_3.Parent = TextButton_3
        Frame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame_3.BackgroundTransparency = 0.900
        Frame_3.BorderSizePixel = 0
        Frame_3.Position = UDim2.new(-0.00675659161, 0, 0.525454938, 0)
        Frame_3.Size = UDim2.new(0, 140, 0, 23)
        
        TextButton_4.Parent = balls
        TextButton_4.BackgroundColor3 = Color3.fromRGB(18, 21, 62)
        TextButton_4.BorderColor3 = Color3.fromRGB(6, 6, 25)
        TextButton_4.BorderSizePixel = 4
        TextButton_4.Position = UDim2.new(0.701056361, 0, 0.122917295, 0)
        TextButton_4.Size = UDim2.new(0, 140, 0, 51)
        TextButton_4.Font = Enum.Font.Cartoon
        TextButton_4.Text = "Anti AFK"
        TextButton_4.TextColor3 = Color3.fromRGB(211, 183, 81)
        TextButton_4.TextSize = 25.000
        
        Frame_4.Parent = TextButton_4
        Frame_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame_4.BackgroundTransparency = 0.900
        Frame_4.BorderSizePixel = 0
        Frame_4.Position = UDim2.new(-0.00675659161, 0, 0.525454938, 0)
        Frame_4.Size = UDim2.new(0, 140, 0, 23)
        
        TextButton_5.Parent = balls
        TextButton_5.BackgroundColor3 = Color3.fromRGB(18, 21, 62)
        TextButton_5.BorderColor3 = Color3.fromRGB(6, 6, 25)
        TextButton_5.BorderSizePixel = 4
        TextButton_5.Position = UDim2.new(0.0237016678, 0, 0.509160638, 0)
        TextButton_5.Size = UDim2.new(0, 140, 0, 51)
        TextButton_5.Font = Enum.Font.Cartoon
        TextButton_5.Text = "Super Speed"
        TextButton_5.TextColor3 = Color3.fromRGB(211, 183, 81)
        TextButton_5.TextSize = 25.000
        
        Frame_5.Parent = TextButton_5
        Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame_5.BackgroundTransparency = 0.900
        Frame_5.BorderSizePixel = 0
        Frame_5.Position = UDim2.new(-0.00675659161, 0, 0.525454938, 0)
        Frame_5.Size = UDim2.new(0, 140, 0, 23)
        
        TextButton_6.Parent = balls
        TextButton_6.BackgroundColor3 = Color3.fromRGB(18, 21, 62)
        TextButton_6.BorderColor3 = Color3.fromRGB(6, 6, 25)
        TextButton_6.BorderSizePixel = 4
        TextButton_6.Position = UDim2.new(0.358371019, 0, 0.509160638, 0)
        TextButton_6.Size = UDim2.new(0, 140, 0, 51)
        TextButton_6.Font = Enum.Font.Cartoon
        TextButton_6.Text = "Auto Rebirth"
        TextButton_6.TextColor3 = Color3.fromRGB(211, 183, 81)
        TextButton_6.TextSize = 25.000
        
        Frame_6.Parent = TextButton_6
        Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame_6.BackgroundTransparency = 0.900
        Frame_6.BorderSizePixel = 0
        Frame_6.Position = UDim2.new(-0.00675659161, 0, 0.525454938, 0)
        Frame_6.Size = UDim2.new(0, 140, 0, 23)
        
        local function HVDKG_fake_script() -- TextButton.LocalScript 
            local script = Instance.new('LocalScript', TextButton)
        
            local Button = script.Parent 
            local character = game.Players.LocalPlayer.character
            Button.MouseButton1Click:connect(function()
                while wait() do 
                    local args = {
                        [1] = "rep"
                    }
            
                    game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))
                end
            
                
            end)
            
        end
        coroutine.wrap(HVDKG_fake_script)()
        local function HFRIPD_fake_script() -- TextButton_3.LocalScript 
            local script = Instance.new('LocalScript', TextButton_3)
        
            local Button = script.Parent 
            local character = game.Players.LocalPlayer.character
            Button.MouseButton1Click:connect(function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4195.27344, 990.221802, -3876.88794, 0.999488235, 5.95610805e-09, -0.0319886059, -4.20918678e-09, 0.99999994, 5.46780257e-08, 0.0319886059, -5.45154073e-08, 0.999488235)
                
                
            end)
            
        end
        coroutine.wrap(HFRIPD_fake_script)()
        local function KYICYI_fake_script() -- TextButton_4.LocalScript 
            local script = Instance.new('LocalScript', TextButton_4)
        
            local Button = script.Parent 
            local Character = game.Workspace:FindFirstChild(game.Players.LocalPlayer.Name) 
            
            Button.MouseButton1Click:connect(function()
                local vu = game:GetService("VirtualUser")
                game:GetService("Players").LocalPlayer.Idled:connect(function()
                    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                    wait(1)
                    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                end)
            end)
            
            
        end
        coroutine.wrap(KYICYI_fake_script)()
        local function GGGSW_fake_script() -- TextButton_5.LocalScript 
            local script = Instance.new('LocalScript', TextButton_5)
        
            local Button = script.Parent 
            local Character = game.Workspace:FindFirstChild(game.Players.LocalPlayer.Name) 
            
            Button.MouseButton1Click:connect(function()
                    Character.Humanoid.WalkSpeed = 100
                
            
            end)
            
            
        end
        coroutine.wrap(GGGSW_fake_script)()
        local function NUOF_fake_script() -- TextButton_6.LocalScript 
            local script = Instance.new('LocalScript', TextButton_6)
        
            local Button = script.Parent 
            local Character = game.Workspace:FindFirstChild(game.Players.LocalPlayer.Name) 
            
            Button.MouseButton1Click:connect(function()
                while wait() do
                    game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer()
                end
                
            
            end)
            
            
        end
        coroutine.wrap(NUOF_fake_script)()
          end
        })
        Tab:AddButton({	
        Name = "改力量",
                Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/jynzl/main/main/Musclas%20Legenos.lua'))()
          end
        })
        Tab:AddButton({
            Name = "跟踪玩家",
            Callback = function()
                  loadstring(game:HttpGet("https://pastebin.com/raw/F9PNLcXk"))()
              end
        })
        Tab:AddButton({
            Name = "点击传送工具",
            Callback = function()
        mouse = game.Players.LocalPlayer:GetMouse() tool = Instance.new("Tool") tool.RequiresHandle = false tool.Name = "[FE] TELEPORT TOOL" tool.Activated:connect(function() local pos = mouse.Hit+Vector3.new(0,2.5,0) pos = CFrame.new(pos.X,pos.Y,pos.Z) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos end) tool.Parent = game.Players.LocalPlayer.Backpack
            end
        })
        Tab:AddTextbox({
          Name = "移动速度",
          Default = "",
          TextDisappear = true,
          Callback = function(Value)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
          end
        })
        Tab:AddTextbox({
          Name = "跳跃高度",
           Default = "",
           TextDisappear = true,
           Callback = function(Value)
           game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
          end
        })
        local Tab = Window:MakeTab({
            Name = "其他脚本",
                Icon = "rbxassetid://7734068321",
                    PremiumOnly = false})
        Tab:AddButton({	
            Name = "鸡排脚本",
                Callback = function()
        --鸡排脚本 必是飞舞
        loadstring(game:HttpGet("https://pastebin.com/raw/wVq1jdSQ"))()
          end
        })
        Tab:AddButton({
            Name = "复制鸡排卡密",
            Callback = function()
             setclipboard("98326")
              end
        })
        Tab:AddButton({	
        Name = "云脚本",
                Callback = function()
        getgenv().XiaoYun="云脚本，作者小云开发改造还次更新"loadstring
          end
        })
        Tab:AddButton({
            Name = "波奇塔脚本",
                Callback = function()
        --波奇搭小脚本中心"
        loadstring(game:HttpGet(utf8.char((function() return table.unpack({104,116,116,112,115,58,47,47,112,97,115,116,101,98,105,110,46,99,111,109,47,114,97,119,47,113,109,55,76,121,119,82,117})end)())))()
            end
        })
        Tab:AddButton({
            Name = "复制波奇塔脚本卡密",
            Callback = function()
             setclipboard("152439974346918584688166784")
              end
        })
        Tab:AddButton({
            Name = "秋·脚本",
                Callback = function()
        _G["秋·自制脚本"]="xdjhadgdsrfcyefjhsadcctyseyr6432478rudghfvszhxcaheey"loadstring(game:HttpGet(utf8.char((function() return table.unpack({104,116,116,112,115,58,47,47,112,97,115,116,101,98,105,110,46,99,111,109,47,114,97,119,47,122,110,67,121,54,89,77,81})end)())))()
        end
        })
        Tab:AddButton({
            Name = "秋·脚本卡密",
            Callback = function()
             setclipboard("hydqjb")
              end
        })
        Tab:AddButton({
            Name = "USA卡密",
            Callback = function()
             setclipboard("USA AER")
              end
        })
        Tab:AddButton({
            Name = "冰脚本",
                Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/GR4ChWKv"))
            end
        })
        
        Tab:AddButton({
            Name = "冰脚本卡密",
            Callback = function()
             setclipboard("027957")
              end
        })
        Tab:AddButton({
            Name = "脚本中心",
                Callback = function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\103\101\109\120\72\119\65\49"))()
             end
        })
  	end
})
Tab:AddButton({
	Name = "集合100+忍者fl可用",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/IlikeyocutgHAH/MoonUI-v13-102-SCRIPTS/main/MoonUI%20v13!"))()
  	end
})
Tab:AddButton({
	Name = "Hydrogen 1.3.9",
	Callback = function()
--[[ 
         Notes: 
  
         - The character limit for the editor is 16,384. Any scripts above this won't execute from the TextBox. 
          
         Changelog: 
          
         - Added user + pass verification 
         - Converted all UI images to the `getcustomasset` directory 
         - Changed search result image directory to `hydroui/search` 
         - Added `rconsoleclear`, `rconsoleshow`, `rconsolehide`, `rconsolehidden` to the global environment 
         - Added rscripts.net to the Search APIs 
         - Added support for images with the `webp` extension (it's make-do, just converts to png) 
         - Made the toggle icon draggable 
         - Fixed a console canvas sizing bug 
         - Edited some of the scaling 
         - Cloned some functions to protect against basic hooking 
         - Languages 
          
         ------------------------------------------------------------------------------------------------------ 
          
         + Compatibility Mode 
         + Server Hopper 
          
  - Username now saves 
         - Fixed slider visual bug 
         - Fixed cloud search results being smushed if the phone is particularly small 
         - Fixed visuals not loading correctly from settings on launch 
         - Resized some of the settings tab slightly 
         + 制作小云~
 ]] 
  
 --[[ Settings ]]-- 
  
 local maxLines = 250; 
  
 --[[ Variables ]]-- 
  
 local httpService = game:GetService("HttpService"); 
 local teleportService = game:GetService("TeleportService"); 
 local textService = game:GetService("TextService"); 
 local tweenService = game:GetService("TweenService"); 
 local userInputService = game:GetService("UserInputService"); 
  
 local localPlayer = game:GetService("Players").LocalPlayer; 
  
 local hugeVector2 = Vector2.new(math.huge, math.huge); 
  
 local rScriptsApiKey = "0"; 
  
 local env = getgenv(); 
 local isFirstTimeExecution = true; 
  
 local _newcclosure = clonefunction(newcclosure); 
  
 local _setfpscap = clonefunction(setfpscap); 
 local _getfpsmax = clonefunction(getfpsmax or _newcclosure(function() 
         return 60; 
 end)); 
  
 local _getconnections = clonefunction(getconnections); 
 local _getcustomasset = clonefunction(getcustomasset or getsynasset); 
  
 local _isfile = clonefunction(isfile); 
 local _readfile = clonefunction(readfile); 
 local _writefile = clonefunction(writefile); 
 local _delfile = clonefunction(delfile); 
 local _listfiles = clonefunction(listfiles); 
  
 local _isfolder = clonefunction(isfolder); 
 local _makefolder = clonefunction(makefolder); 
  
 local _getclipboard = clonefunction(getclipboard or _newcclosure(function() 
         return ""; 
 end)); 
 local _setclipboard = clonefunction(setclipboard); 
  
 local _request = clonefunction(request); 
 local _base64decode = clonefunction(crypt.base64.decode); 
  
 local urlEncode = clonefunction(httpService.UrlEncode); 
 local jsonEncode = clonefunction(httpService.JSONEncode); 
 local jsonDecode = clonefunction(httpService.JSONDecode); 
  
 local _gethui = clonefunction(gethui or _newcclosure(function() 
         return game:GetService("CoreGui"); 
 end)); 
  
 local validSearchFunctions = {  
         ScriptBlox = "scriptblox.png", 
         RScripts = "rscripts.png" 
 }; 
  
 local serverHopModes = { "full", "empty", "bestPing", "random" }; 
  
 local resizeFunctions, languageItems, languageDatabase = {}, {}, { 
         English = { 
                 flag = "gb.png", 
                 indicator = "English", 
                 order = 1, 
                 phrases = { 
                         FreeLogin = "Free Login", 
                         AdlessLogin = "Adless Login", 
                         EnterKey = "Enter Key", 
                         CopyKeyLink = "Copy Key Link", 
                         ["Key..."] = "Key...", 
                         SubmitCredentials = "Submit Credentials", 
                         ["User..."] = "Username...", 
                         ["Password..."] = "Password...", 
                         Editor = "Editor", 
                         Execute = "Execute", 
                         Clear = "Clear", 
                         Clipboard = "Clipboard", 
                         CopyScript = "Copy Script", 
                         LoadScript = "Load Script", 
                         ["Search..."] = "Search...", 
                         Search = "Search", 
                         ClearConsole = "Clear Console", 
                         CopyConsole = "Copy Console", 
                         UnlockFPS = "Unlock FPS", 
                         VSync = "V-Sync", 
                         FPS = "FPS", 
                         CompatibilityMode = "Compatibility Mode", 
                         AntiAFK = "Anti AFK", 
                         Full = "Full", 
                         Empty = "Empty", 
                         BestPing = "Best Ping", 
                         Random = "Random", 
                         ServerHop = "Server Hop", 
                         RejoinServer = "Rejoin Server" 
                 } 
         }, 
         Turkish = { 
                 flag = "tr.png", 
                 indicator = "Türkçe", 
                 order = 2, 
                 phrases = { 
                         FreeLogin = "Ücretsiz Giriş", 
                         AdlessLogin = "Reklamsız Giriş", 
                         EnterKey = "Anahtarı Gir", 
                         CopyKeyLink = "Anahtar Linkini Kopyala", 
                         ["Key..."] = "Anahtar...", 
                         SubmitCredentials = "Giriş Yap", 
                         ["User..."] = "İsim...", 
                         ["Password..."] = "Şifre...", 
                         Editor = "Düzenleyici", 
                         Execute = "Yürüt", 
                         Clear = "Temizle", 
                         Clipboard = "Pano", 
                         CopyScript = "Panoya Kopyala", 
                         LoadScript = "Panodan Yükle", 
                         ["Search..."] = "Arat...", 
                         Search = "Arama", 
                         ClearConsole = "Konsolu Temizle", 
                         CopyConsole = "Konsolu Kopyala", 
                         UnlockFPS = "FPS Kilidini Aç", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
 AzeriTurkish = { 
         flag = "az.png", 
         indicator = "Azəri Türkcəsi", 
         order = 3, 
         phrases = { 
             FreeLogin = "Pulsuz Giriş", 
             AdlessLogin = "Reklamsız Giriş", 
             EnterKey = "Açarı gir", 
             CopyKeyLink = "Açar bağlantısını kopyala", 
             ["Key..."] = "Açar...", 
             SubmitCredentials = "Etibarnamələri təqdim edin", 
             ["User..."] = "İstifadəçi...", 
             ["Password..."] = "Şifrə...", 
             Editor = "Redaktor", 
             Execute = "İcra et", 
             Clear = "Təmizlə", 
             Clipboard = "Pano lövhəsi", 
             CopyScript = "Script'i kopyala", 
             LoadScript = "Script'i yüklə", 
             ["Search..."] = "Axtar...", 
             Search = "Axtar", 
             ClearConsole = "Konsolu təmizlə", 
             CopyConsole = "Konsolu Kopyala", 
             UnlockFPS = "FPS kilidini aç", 
             VSync = "VSync", 
             FPS = "FPS", 
             AntiAFK = "AntiAFK" 
         } 
     }, 
         Spanish = { 
                 flag = "es.png", 
                 indicator = "Español", 
                 order = 4, 
                 phrases = { 
                         FreeLogin = "Iniciar sesion gratis", 
                         AdlessLogin = "Iniciar sesion sin anuncios", 
                         EnterKey = "Ingresar Key", 
                         CopyKeyLink = "Copiar enlace de la Key", 
                         ["Key..."] = "Key...", 
                         SubmitCredentials = "Enviar Credenciales", 
                         ["User..."] = "Usuario...", 
                         ["Password..."] = "Contraseña...", 
                         Editor = "Editor", 
                         Execute = "Executar", 
                         Clear = "Limpiar", 
                         Clipboard = "Portapapeles", 
                         CopyScript = "Copiar Script", 
                         LoadScript = "Cargar Script", 
                         ["Search..."] = "Buscar...", 
                         Search = "Buscar", 
                         ClearConsole = "Limpiar Consola", 
                         CopyConsole = "Copiar Consola", 
                         UnlockFPS = "Unlocar FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         Latvian = { 
                 flag = "lv.png", 
                 indicator = "Latviski", 
                 order = 5, 
                 phrases = { 
                         FreeLogin = "Bezmaksas pieeja", 
                         AdlessLogin = "Bez-reklāmu pieeja", 
                         EnterKey = "Ievadi atslēgu", 
                         CopyKeyLink = "Kopēt atslēgas saiti", 
                         ["Key..."] = "Atslēga...", 
                         SubmitCredentials = "Apstiprināt akreditācijas datus", 
                         ["User..."] = "Lietotājs...", 
                         ["Password..."] = "Parole...", 
                         Editor = "Redaktors", 
                         Execute = "Izpildīt", 
                         Clear = "Iztīrīt", 
                         Clipboard = "Kopējumi", 
                         CopyScript = "Kopēt skriptu", 
                         LoadScript = "Ielādēt skriptu", 
                         ["Search..."] = "Meklēt...", 
                         Search = "Meklēt", 
                         ClearConsole = "Iztīrīt konsoli", 
                         CopyConsole = "Kopēt konsoli", 
                         UnlockFPS = "Atbloķējiet FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         Dutch = { 
                 flag = "nl.png", 
                 indicator = "Nederlands", 
                 order = 6, 
                 phrases = { 
                         FreeLogin = "Gratis Login", 
                         AdlessLogin = "ReclameVrij Login", 
                         EnterKey = "Toegangs Sleutel", 
                         CopyKeyLink = "Kopieer Sleutel Link", 
                         ["Key..."] = "Sleutel...", 
                         SubmitCredentials = "Verzend Gegevens", 
                         ["User..."] = "Gebruiker...", 
                         ["Password..."] = "Wachtwoord...", 
                         Editor = "Editor", 
                         Execute = "Uitvoeren", 
                         Clear = "Clear", 
                         Clipboard = "Klembord", 
                         CopyScript = "Kopieer Script ", 
                         LoadScript = "Laad Script", 
                         ["Search..."] = "Zoeken...", 
                         Search = "Zoeken", 
                         ClearConsole = "Clear Console", 
                         CopyConsole = "Kopieer Console", 
                         UnlockFPS = "Ontgrendelen FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         Filipino = { 
                 flag = "ph.png", 
                 indicator = "Filipino", 
                 order = 7, 
                 phrases = { 
                         FreeLogin = "Libreng Login", 
                         AdlessLogin = "Ad-Free Login", 
                         EnterKey = "Ilagay ang susi", 
                         CopyKeyLink = "Kopyahin ang Susi Link", 
                         ["Key..."] = "Susi...", 
                         SubmitCredentials = "Ipasa ang Kredensyals", 
                         ["User..."] = "User", 
                         ["Password..."] = "Password", 
                         Editor = "Editor", 
                         Execute = "Execute", 
                         Clear = "Clear", 
                         Clipboard = "Clipboard", 
                         CopyScript = "Kopyahin ang script", 
                         LoadScript = "I-Load ang script", 
                         ["Search..."] = "Maghanap...", 
                         Search = "Maghanap", 
                         ClearConsole = "ClearConsole", 
                         CopyConsole = "CopyConsole", 
                         UnlockFPS = "", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         German = { 
                 flag = "de.png", 
                 indicator = "Deustch", 
                 order = 8, 
                 phrases = { 
                         FreeLogin = "Kostenloser Login", 
                         AdlessLogin = "Adless Login", 
                         EnterKey = "Key checken", 
                         CopyKeyLink = "Link kopieren", 
                         ["Key..."] = "Schlüssel", 
                         SubmitCredentials = "Einloggen", 
                         ["User..."] = "Nutzername", 
                         ["Password..."] = "Passwort", 
                         Editor = "Editor", 
                         Execute = "Ausführen", 
                         Clear = "Löschen", 
                         Clipboard = "", 
                         CopyScript = "Skript Kopieren", 
                         LoadScript = "Skript Laden", 
                         ["Search..."] = "Suchen...", 
                         Search = "Suchen", 
                         ClearConsole = "Konsole löschen", 
                         CopyConsole = "Konsole kopieren", 
                         UnlockFPS = "Freischalten FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         Romanian = { 
                 flag = "ro.png", 
                 indicator = "Română", 
                 order = 9, 
                 phrases = { 
                         FreeLogin = "Logare Gratis", 
                         AdlessLogin = "Logare fara reclame", 
                         EnterKey = "Introduce cheie", 
                         CopyKeyLink = "Copie adresa pentru cheie", 
                         ["Key..."] = "Cheie...", 
                         SubmitCredentials = "Introduce-ti datele", 
                         ["User..."] = "Utilizator...", 
                         ["Password..."] = "Parola...", 
                         Editor = "Editor", 
                         Execute = "Executa", 
                         Clear = "Goleste", 
                         Clipboard = "Clipboard", 
                         CopyScript = "Copiaza Script", 
                         LoadScript = "Incarca Script", 
                         ["Search..."] = "Cauta...", 
                         Search = "Cauta", 
                         ClearConsole = "Goleste Consola", 
                         CopyConsole = "Copiaza din Consola", 
                         UnlockFPS = "Deblocați FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         Russian = { 
                 flag = "ru.png", 
                 indicator = "Русский", 
                 order = 10, 
                 phrases = { 
                         FreeLogin = "Бесплатный логин", 
                         AdlessLogin = "Логин с рекламой ", 
                         EnterKey = "Ввести ключ ", 
                         CopyKeyLink = "Скопировать ссылку на ключ", 
                         ["Key..."] = "Ключ...", 
                         SubmitCredentials = "Подтвердить реквизиты для входа", 
                         ["User..."] = "Юзер...", 
                         ["Password..."] = "Пароль...", 
                         Editor = "Эдитор", 
                         Execute = "Запустить", 
                         Clear = "Очистить", 
                         Clipboard = "Буфер Обмена", 
                         CopyScript = "Скопировать скрипт", 
                         LoadScript = "Загрузить скрипт", 
                         ["Search..."] = "Искать...", 
                         Search = "Искать", 
                         ClearConsole = "Очистить консоль", 
                         CopyConsole = "Скопировать консоль", 
                         UnlockFPS = "Разблокировать FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         }, 
         French = { 
                 flag = "fr.png", 
                 indicator = "Français", 
                 order = 11, 
                 phrases = { 
                         FreeLogin = "Connexion gratuite", 
                         AdlessLogin = "Connexion AdLess", 
                         EnterKey = "Confirmer la clé", 
                         CopyKeyLink = "Copier le lien de la clé", 
                         ["Key..."] = "Clé...", 
                         SubmitCredentials = "Se connecter", 
                         ["User..."] = "Nom d'utilisateur...", 
                         ["Password..."] = "Mot de passe...", 
                         Editor = "Éditeur", 
                         Execute = "Exécuter", 
                         Clear = "Effacer", 
                         Clipboard = "Presse-papier", 
                         CopyScript = "Copier le script", 
                         LoadScript = "Charger le script", 
                         ["Search..."] = "Rechercher...", 
                         Search = "Chercher", 
                         ClearConsole = "Effacer la console", 
                         CopyConsole = "Copier la console", 
                         UnlockFPS = "Déverrouiller les FPS", 
                         VSync = "Synchronisation verticale", 
                         FPS = "FPS", 
                         CompatibilityMode = "Mode de compatibilité", 
                         AntiAFK = "Anti-AFK", 
                         Full = "Rempli", 
                         Empty = "Vide", 
                         BestPing = "Meilleur ping", 
                         Random = "Au hasard", 
                         ServerHop = "Changer de serveur", 
                         RejoinServer = "Rejoindre le serveur" 
                 } 
         }, 
         Arabic = { 
                 flag = "sa.png", 
                 indicator = "عربي", 
                 order = 12, 
                 phrases = { 
                         FreeLogin = "المجاني الدخول تسجيل", 
                         AdlessLogin = "إعلانات بلا دخول تسجيل", 
                         EnterKey = "المفتاح أدخل", 
                         CopyKeyLink = "المفتاح رابط نسخ", 
                         ["Key..."] = "المفتاح", 
                         SubmitCredentials = "الاعتماد بيانات إرسال", 
                         ["User..."] = "المستخدم", 
                         ["Password..."] = "المرور كلمة", 
                         Editor = "المحرر", 
                         Execute = "تنفيذ", 
                         Clear = "إخلاء", 
                         Clipboard = "الحافظة", 
                         CopyScript = "النصي البرنامج نسخ", 
                         LoadScript = "النصي البرنامج حمل", 
                         ["Search..."] = "بحث", 
                         Search = "بحث", 
                         ClearConsole = "التحكم وحدة إخلاء", 
                         CopyConsole = "التحكم وحدة نسخ", 
                         UnlockFPS = "افتح FPS", 
                         VSync = "", 
                         FPS = "", 
                         CompatibilityMode = "", 
                         AntiAFK = "", 
                         Full = "", 
                         Empty = "", 
                         BestPing = "", 
                         Random = "", 
                         ServerHop = "", 
                         RejoinServer = "" 
                 } 
         } 
 }; 
  
 local sortedLanguageDatabase = {}; 
 for i, v in next, languageDatabase do 
         sortedLanguageDatabase[v.order] = { 
                 key = i, 
                 value = v 
         }; 
 end 
  
 --[[ Settings ]]-- 
  
 local uiSettings = { 
         key = "", 
  userName = "", 
         editorInit = "print(\"Hydrogen-Android >>>\");", 
         searchAPI = "RScripts", 
         language = "English", 
         unlockFps = false, 
         vSync = false, 
         fps = 60, 
         compatibilityMode = false, 
         antiAfk = false, 
         serverHopMode = "full" 
 }; 
  
 if _isfolder("hydroui") == false then 
         _makefolder("hydroui"); 
 end 
 if _isfile("hydroui/settings.json") then 
         isFirstTimeExecution = false; 
         local succ, res = pcall(jsonDecode, httpService, _readfile("hydroui/settings.json")); 
         if succ then 
                 for i, v in next, uiSettings do 
                         if res[i] ~= nil and type(res[i]) == type(v) then 
                                 uiSettings[i] = res[i]; 
                         end 
                 end 
         end 
         if languageDatabase[uiSettings.language] == nil then 
                 uiSettings.language = "English"; 
         end 
         if validSearchFunctions[uiSettings.searchAPI] == nil then 
                 uiSettings.searchAPI = "RScripts"; 
         end 
         if table.find(serverHopModes, uiSettings.serverHopMode) == nil then 
                 uiSettings.serverHopMode = serverHopModes[1]; 
         end 
 end 
  
 --[[ Functions ]]-- 
  
 local function create(className, properties, children) 
         local inst = Instance.new(className); 
         for i, v in next, properties do 
                 if i == "LanguageItem" then 
                         languageItems[inst] = v; 
                         print(v.identifier); 
                         inst[v.property] = languageDatabase[uiSettings.language].phrases[v.identifier]; 
                 elseif i ~= "Parent" then 
                         inst[i] = v; 
                 end 
         end 
         if children then 
                 for i, v in next, children do 
                         v.Parent = inst; 
                 end 
         end 
         inst.Parent = properties.Parent; 
         return inst; 
 end 
  
 local function tween(obj, dur, props, ...) 
         local t = tweenService:Create(obj, TweenInfo.new(dur, ...), props); 
         t:Play(); 
         return t; 
 end 
  
 local function addTransparencyHighlights(btn) 
         btn.MouseButton1Down:Connect(function() 
                 tween(btn, 0.18, { 
                         BackgroundTransparency = 0 
                 }); 
         end); 
         btn.MouseButton1Up:Connect(function() 
                 tween(btn, 0.18, { 
                         BackgroundTransparency = 1 
                 }); 
         end); 
 end 
  
 local function addColourHighlights(btn, col) 
         local original = btn.BackgroundColor3; 
         btn.MouseButton1Down:Connect(function() 
                 tween(btn, 0.18, { 
                         BackgroundColor3 = col 
                 }); 
         end); 
         btn.MouseButton1Up:Connect(function() 
                 tween(btn, 0.18, { 
                         BackgroundColor3 = original 
                 }); 
         end); 
 end 
  
 local function removeTrace(str) 
         local x = env[str]; 
         env[str] = nil; 
         return x; 
 end 
  
 local function changeLanguage(lang) 
         local language = languageDatabase[lang] or languageDatabase.English; 
         uiSettings.language = language == languageDatabase.English and "English" or lang; 
         for i, v in next, languageItems do 
                 local phrase = language.phrases[v.identifier]; 
                 i[v.property] = phrase ~= "" and phrase or languageDatabase.English.phrases[v.identifier]; 
         end 
         task.defer(function() -- To give the TextBounds property a chance to update, it's not as immediate as you might think 
                 for i = 1, #resizeFunctions do 
                         resizeFunctions[i](); 
                 end 
         end); 
 end 
  
 local function updateSettings(key, value) 
         uiSettings[key] = value; 
         if key == "language" then 
                 changeLanguage(value); 
         end 
         pcall(_writefile, "hydroui/settings.json", jsonEncode(httpService, uiSettings)); 
 end 
  
 --[[ Create UI ]]-- 
  
 local gui = create("ScreenGui", {  
         DisplayOrder = 11,  
         IgnoreGuiInset = true,  
         Name = "androidCheat",  
         Parent = _gethui(),  
         ResetOnSpawn = false 
 }); 
  
 local function loadKeyUI(callback) 
         local keyFrame = create("Frame", {  
                 AnchorPoint = Vector2.new(0.5, 0),  
                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                 BorderSizePixel = 0,  
                 Name = "keyFrame",  
                 Parent = gui,  
                 Position = UDim2.new(0.5, 0, 0, 25),  
                 Size = UDim2.new(1, -110, 0, 94) 
         }, { 
                 create("UIGradient", {  
                         Color = ColorSequence.new({  
                                 ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")),  
                                 ColorSequenceKeypoint.new(1, Color3.fromHex("242424")) 
                         }),  
                         Name = "gradient",  
                         Rotation = 78 
                 }), 
                 create("UICorner", {  
                         CornerRadius = UDim.new(0, 4),  
                         Name = "corner" 
                 }), 
                 create("TextButton", {  
                         AutoButtonColor = false,  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                         FontSize = Enum.FontSize.Size14,  
                         Name = "clickThroughBlocker",  
                         Size = UDim2.new(1, 0, 1, 0),  
                         Text = "",  
                         TextColor3 = Color3.fromHex("000000"),  
                         TextSize = 14,  
                         ZIndex = 0 
                 }), 
                 create("ImageLabel", {  
                         AnchorPoint = Vector2.new(0.5, 0.5),  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         Image = "rbxasset://hydrogen/hydroui/blur.png",  
                         ImageColor3 = Color3.fromHex("000000"),  
                         Name = "blur",  
                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                         ScaleType = Enum.ScaleType.Slice,  
                         Size = UDim2.new(1, 10, 1, 10),  
                         SliceCenter = Rect.new(10, 10, 118, 118),  
                         ZIndex = 0 
                 }), 
                 create("UIStroke", {  
                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                         Color = Color3.fromHex("141414"),  
                         Name = "stroke",  
                         Thickness = 0.8 
                 }), 
                 create("UISizeConstraint", {  
                         MaxSize = Vector2.new(800, 94),  
                         Name = "constraint" 
                 }), 
                 create("Frame", {  
                         AnchorPoint = Vector2.new(0.5, 0.5),  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         Name = "content",  
                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                         Size = UDim2.new(1, 0, 1, 0) 
                 }, { 
                         create("UIListLayout", {  
                                 FillDirection = Enum.FillDirection.Horizontal,  
                                 Name = "list",  
                                 Padding = UDim.new(0, 8),  
                                 SortOrder = Enum.SortOrder.LayoutOrder 
                         }), 
                         create("UIPadding", {  
                                 Name = "padding",  
                                 PaddingBottom = UDim.new(0, 8),  
                                 PaddingLeft = UDim.new(0, 8),  
                                 PaddingRight = UDim.new(0, 8),  
                                 PaddingTop = UDim.new(0, 8) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(0, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "buttons",  
                                 Position = UDim2.new(0, 8, 0.5, 0),  
                                 Size = UDim2.new(0, 124, 1, 0) 
                         }, { 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 0),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size11,  
                                         Name = "freemium",  
                                         Position = UDim2.new(0.5, 0, 0, 0),  
                                         Size = UDim2.new(1, 0, 0, 34),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 11 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }), 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/key.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(1, -7, 0.5, 0),  
                                                 Size = UDim2.new(0, 20, 0, 20) 
                                         }), 
                                         create("TextLabel", {  
                                                 LanguageItem = { 
                                                         property = "Text", 
                                                         identifier = "FreeLogin" 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "title",  
                                                 Position = UDim2.new(0, 8, 0.5, 0),  
                                                 Size = UDim2.new(1, -43, 1, 0),  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 13,  
                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                         }) 
                                 }), 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 1),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size11,  
                                         Name = "premium",  
                                         Position = UDim2.new(0.5, 0, 1, 0),  
                                         Size = UDim2.new(1, 0, 0, 34),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 11 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }), 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/login.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(1, -7, 0.5, 0),  
                                                 Size = UDim2.new(0, 20, 0, 20) 
                                         }), 
                                         create("TextLabel", {  
                                                 LanguageItem = { 
                                                         property = "Text", 
                                                         identifier = "AdlessLogin" 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "title",  
                                                 Position = UDim2.new(0, 8, 0.5, 0),  
                                                 Size = UDim2.new(1, -43, 1, 0),  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 13,  
                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                         }) 
                                 }) 
                         }), 
                         create("Frame", {  
                                 BackgroundColor3 = Color3.fromHex("141414"),  
                                 BorderSizePixel = 0,  
                                 Name = "separator",  
                                 Position = UDim2.new(0, 140, 0, 0),  
                                 Size = UDim2.new(0, 1, 1, 0) 
                         }), 
                         create("Frame", {  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "tabs",  
                                 Size = UDim2.new(1, -140, 1, 0) 
                         }, { 
                                 create("Frame", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         Name = "freemium",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(1, 0, 1, 0) 
                                 }, { 
                                         create("TextButton", {  
                                                 LanguageItem = { 
                                                         property = "Text", 
                                                         identifier = "EnterKey" 
                                                 }, 
                                                 AnchorPoint = Vector2.new(1, 1),  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size11,  
                                                 Name = "enterKey",  
                                                 Position = UDim2.new(1, 0, 1, 0),  
                                                 Size = UDim2.new(0, 90, 0, 34),  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 11 
                                         }, { 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("UIStroke", {  
                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                         Color = Color3.fromHex("141414"),  
                                                         Name = "stroke",  
                                                         Thickness = 1.2 
                                                 }) 
                                         }), 
                                         create("TextButton", {  
                                                 LanguageItem = { 
                                                         property = "Text", 
                                                         identifier = "CopyKeyLink" 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0, 1),  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size11,  
                                                 Name = "getKeyLink",  
                                                 Position = UDim2.new(0, 0, 1, 0),  
                                                 Size = UDim2.new(0, 105, 0, 34),  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 11 
                                         }, { 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("UIStroke", {  
                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                         Color = Color3.fromHex("141414"),  
                                                         Name = "stroke",  
                                                         Thickness = 1.2 
                                                 }) 
                                         }), 
                                         create("TextBox", {  
                                                 LanguageItem = { 
                                                         property = "PlaceholderText", 
                                                         identifier = "Key..." 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0.5, 0),  
                                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size11,  
                                                 Name = "keyInput",  
                                                 Position = UDim2.new(0.5, 0, 0, 0),  
                                                 Size = UDim2.new(1, 0, 0, 34),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 11,  
                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                         }, { 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("UIPadding", {  
                                                         Name = "padding",  
                                                         PaddingLeft = UDim.new(0, 8),  
                                                         PaddingRight = UDim.new(0, 8) 
                                                 }), 
                                                 create("UIStroke", {  
                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                         Color = Color3.fromHex("141414"),  
                                                         Name = "stroke",  
                                                         Thickness = 1.2 
                                                 }) 
                                         }) 
                                 }), 
                                 create("Frame", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         Name = "premium",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(1, 0, 1, 0),  
                                         Visible = false 
                                 }, { 
                                         create("TextButton", {  
                                                 LanguageItem = { 
                                                         property = "Text", 
                                                         identifier = "SubmitCredentials" 
                                                 }, 
                                                 AnchorPoint = Vector2.new(1, 1),  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size11,  
                                                 Name = "enterDetails",  
                                                 Position = UDim2.new(1, 0, 1, 0),  
                                                 Size = UDim2.new(0, 130, 0, 34),  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 11 
                                         }, { 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("UIStroke", {  
                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                         Color = Color3.fromHex("141414"),  
                                                         Name = "stroke",  
                                                         Thickness = 1.2 
                                                 }) 
                                         }), 
                                         create("TextBox", {  
                                                 LanguageItem = { 
                                                         property = "PlaceholderText", 
                                                         identifier = "User..." 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0.5, 0),  
                                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size11,  
                                                 Name = "userInput",  
                                                 Position = UDim2.new(0.5, 0, 0, 0),  
                                                 Size = UDim2.new(1, 0, 0, 34),  
                                                 Text = uiSettings.userName,  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 11,  
                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                         }, { 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("UIPadding", {  
                                                         Name = "padding",  
                                                         PaddingLeft = UDim.new(0, 8),  
                                                         PaddingRight = UDim.new(0, 8) 
                                                 }), 
                                                 create("UIStroke", {  
                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                         Color = Color3.fromHex("141414"),  
                                                         Name = "stroke",  
                                                         Thickness = 1.2 
                                                 }) 
                                         }), 
                                         create("TextBox", {  
                                                 LanguageItem = { 
                                                         property = "PlaceholderText", 
                                                         identifier = "Password..." 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0, 1),  
                                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size11,  
                                                 Name = "passInput",  
                                                 Position = UDim2.new(0, 0, 1, 0),  
                                                 Size = UDim2.new(1, -140, 0, 34),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 11,  
                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                         }, { 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("UIPadding", {  
                                                         Name = "padding",  
                                                         PaddingLeft = UDim.new(0, 8),  
                                                         PaddingRight = UDim.new(0, 8) 
                                                 }), 
                                                 create("UIStroke", {  
                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                         Color = Color3.fromHex("141414"),  
                                                         Name = "stroke",  
                                                         Thickness = 1.2 
                                                 }), 
                                                 create("TextLabel", {  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "dots",  
                                                         Size = UDim2.new(1, 0, 1, 0),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }) 
                                 }) 
                         }) 
                 }), 
                 create("Frame", {  
                         AnchorPoint = Vector2.new(1, 0),  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         Name = "languages",  
                         Position = UDim2.new(1, 0, 1, 10),  
                         Size = UDim2.new(0, 200, 0, 156),  
                         Visible = isFirstTimeExecution 
                 }, { 
                         create("UIGradient", {  
                                 Color = ColorSequence.new({  
                                         ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")),  
                                         ColorSequenceKeypoint.new(1, Color3.fromHex("242424")) 
                                 }),  
                                 Name = "gradient",  
                                 Rotation = 78 
                         }), 
                         create("UICorner", {  
                                 CornerRadius = UDim.new(0, 4),  
                                 Name = "corner" 
                         }), 
                         create("ImageLabel", {  
                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Image = "rbxasset://hydrogen/hydroui/blur.png",  
                                 ImageColor3 = Color3.fromHex("000000"),  
                                 Name = "blur",  
                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                 ScaleType = Enum.ScaleType.Slice,  
                                 Size = UDim2.new(1, 10, 1, 10),  
                                 SliceCenter = Rect.new(10, 10, 118, 118),  
                                 ZIndex = 0 
                         }), 
                         create("ScrollingFrame", {  
                                 Active = true,  
                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 BorderSizePixel = 0,  
                                 BottomImage = "rbxasset://hydrogen/hydroui/scrollBottom.png",  
                                 CanvasSize = UDim2.new(), 
                                 MidImage = "rbxasset://hydrogen/hydroui/scrollMiddle.png",  
                                 Name = "container",  
                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                 ScrollBarImageColor3 = Color3.fromHex("141414"),  
                                 ScrollBarThickness = 4,  
                                 Size = UDim2.new(1, -16, 1, -16),  
                                 TopImage = "rbxasset://hydrogen/hydroui/scrollTop.png" 
                         }, { 
                                 create("UIListLayout", {  
                                         Name = "list",  
                                         Padding = UDim.new(0, 6),  
                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                 }), 
                                 create("UIPadding", {  
                                         Name = "padding",  
                                         PaddingBottom = UDim.new(0, 1),  
                                         PaddingLeft = UDim.new(0, 1),  
                                         PaddingRight = UDim.new(0, 1),  
                                         PaddingTop = UDim.new(0, 1) 
                                 }) 
                         }) 
                 }), 
                 create("TextButton", {  
                         AutoButtonColor = false,  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BorderColor3 = Color3.fromHex("1b2a35"),  
                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                         FontSize = Enum.FontSize.Size14,  
                         Name = "toggleLanguages",  
                         Position = UDim2.new(1, 10, 0, 0),  
                         Size = UDim2.new(0, 34, 0, 34),  
                         Text = "",  
                         TextColor3 = Color3.fromHex("000000"),  
                         TextSize = 14 
                 }, { 
                         create("UICorner", {  
                                 CornerRadius = UDim.new(0, 4),  
                                 Name = "corner" 
                         }), 
                         create("UIGradient", {  
                                 Color = ColorSequence.new({  
                                         ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")),  
                                         ColorSequenceKeypoint.new(1, Color3.fromHex("242424")) 
                                 }),  
                                 Name = "gradient",  
                                 Rotation = 78 
                         }), 
                         create("ImageLabel", {  
                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Image = "rbxasset://hydrogen/hydroui/languages.png",  
                                 Name = "icon",  
                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                 Size = UDim2.new(1, -14, 1, -14) 
                         }), 
                         create("ImageLabel", {  
                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Image = "rbxasset://hydrogen/hydroui/blur.png",  
                                 ImageColor3 = Color3.fromHex("000000"),  
                                 Name = "blur",  
                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                 ScaleType = Enum.ScaleType.Slice,  
                                 Size = UDim2.new(1, 10, 1, 10),  
                                 SliceCenter = Rect.new(10, 10, 118, 118),  
                                 ZIndex = 0 
                         }) 
                 }) 
         }); 
  
         --[[ Start ]]-- 
  
         local getKey = removeTrace("IjHyfuyuHeg"); 
         local checkKey = removeTrace("cHjGyjKbe"); 
         local checkPremium = removeTrace("cHpRmejNAJ"); 
  
         local content = keyFrame.content; 
         local tabs = content.tabs; 
  
         local function validLogin() 
                 table.clear(resizeFunctions); 
                 gui.keyFrame:Destroy(); 
                 callback(); 
         end 
  
         --[[ Select Tabs ]]-- 
  
         do 
                 local selectedTab = tabs.freemium; 
                 local buttons = content.buttons; 
  
                 local function selectTab(name) 
                         local btn, tab = buttons[name], tabs[name]; 
                         if selectedTab ~= tab then 
                                 selectedTab.Visible = false; 
                                 --[[tween(buttons[selectedTab.Name], 0.18, { 
                                         BackgroundTransparency = 1; 
                                 });]] 
                                 selectedTab = tab; 
                                 tab.Visible = true; 
                                 --[[tween(btn, 0.18, { 
                                         BackgroundTransparency = 0; 
                                 });]] 
                         end 
                 end 
  
                 local buttonList = buttons:GetChildren(); 
                 for i = 1, #buttonList do 
                         local v = buttonList[i]; 
                         local tab = tabs[v.Name]; 
                         v.MouseButton1Click:Connect(function() 
                                 selectTab(v.Name); 
                         end); 
                 end 
  
                 resizeFunctions[#resizeFunctions + 1] = function() 
                         local size = math.max(buttons.freemium.title.TextBounds.X, buttons.premium.title.TextBounds.X) + 47; 
                         buttons.Size = UDim2.new(0, size, 1, 0); 
                         tabs.Size = UDim2.new(1, -(size + 16), 1, 0); 
                 end; 
         end 
  
         --[[ Freemium ]]-- 
  
         do 
                 local freeFrame = tabs.freemium; 
  
                 local getKeyLink = freeFrame.getKeyLink; 
                 local enterKey = freeFrame.enterKey; 
  
                 getKeyLink.MouseButton1Click:Connect(function() 
                         _setclipboard(getKey()); 
                 end); 
  
                 enterKey.MouseButton1Click:Connect(function() 
                         if checkKey(freeFrame.keyInput.Text) then 
                                 updateSettings("key", freeFrame.keyInput.Text); 
                                 validLogin(); 
                         end 
                 end); 
  
                 resizeFunctions[#resizeFunctions + 1] = function() 
                         getKeyLink.Size = UDim2.new(0, getKeyLink.TextBounds.X + 30, 0, 34); 
                         enterKey.Size = UDim2.new(0, enterKey.TextBounds.X + 30, 0, 34); 
                 end; 
         end 
  
         --[[ Adless ]]-- 
  
         do 
                 local paidFrame = tabs.premium; 
  
                 local userInput = paidFrame.userInput; 
                 local passInput = paidFrame.passInput; 
                 local enterDetails = paidFrame.enterDetails; 
  
                 passInput:GetPropertyChangedSignal("Text"):Connect(function() 
                         local inputLength = #passInput.Text 
                         passInput.dots.Text = string.rep("•", inputLength); 
                         passInput.TextTransparency = inputLength == 0 and 0 or 1; 
                 end); 
  
                 enterDetails.MouseButton1Click:Connect(function() 
                         if checkPremium(userInput.Text, passInput.Text) then 
      updateSettings("userName", userInput.Text); 
                                 validLogin(); 
                         end 
                 end); 
  
                 resizeFunctions[#resizeFunctions + 1] = function() 
                         enterDetails.Size = UDim2.new(0, enterDetails.TextBounds.X + 30, 0, 34); 
                         passInput.Size = UDim2.new(1, -(enterDetails.TextBounds.X + 40), 0, 34); 
                 end; 
         end 
  
         --[[ Languages ]]-- 
  
         do 
                 do 
                         local isOpen = isFirstTimeExecution; 
  
                         keyFrame.toggleLanguages.MouseButton1Click:Connect(function() 
                                 isOpen = not isOpen; 
                                 keyFrame.languages.Visible = isOpen; 
                         end); 
                 end 
  
                 local template = create("TextButton", {  
                         AutoButtonColor = false, 
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         Text = "", 
                         Name = "languageExample",  
                         Size = UDim2.new(1, 0, 0, 30) 
                 }, { 
                         create("Frame", {  
                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                 Name = "flagContainer",  
                                 Size = UDim2.new(0, 40, 0, 30) 
                         }, { 
                                 create("UIStroke", {  
                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                         Color = Color3.fromHex("141414"),  
                                         Name = "stroke",  
                                         Thickness = 1.2 
                                 }), 
                                 create("UICorner", {  
                                         CornerRadius = UDim.new(0, 4),  
                                         Name = "corner" 
                                 }), 
                                 create("ImageLabel", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         Image = "",  
                                         Name = "icon",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(1, -8, 1, -6) 
                                 }) 
                         }), 
                         create("TextLabel", {  
                                 AnchorPoint = Vector2.new(1, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                 FontSize = Enum.FontSize.Size11,  
                                 Name = "title",  
                                 Position = UDim2.new(1, 0, 0.5, 0),  
                                 Size = UDim2.new(1, -50, 1, 0),  
                                 Text = "",  
                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                 TextSize = 11,  
                                 TextXAlignment = Enum.TextXAlignment.Left 
                         }) 
                 }); 
  
                 local languages = keyFrame.languages; 
  
                 local container = languages.container; 
  
                 container.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() 
                         container.CanvasSize = UDim2.new(0, 0, 0, container.list.AbsoluteContentSize.Y + 2);                         
                 end); 
  
                 for i, v in next, sortedLanguageDatabase do 
                         local clone = template:Clone(); 
                         clone.Name = v.key; 
                         clone.title.Text = v.value.indicator; 
                         clone.flagContainer.icon.Image = string.format("rbxasset://hydrogen/hydroui/%s", v.value.flag); 
  
                         clone.MouseButton1Click:Connect(function() 
                                 updateSettings("language", v.key); 
                         end); 
  
                         clone.Parent = container; 
                 end 
         end 
  
         changeLanguage(uiSettings.language); 
  
         if checkKey(uiSettings.key) then 
             validLogin(); 
         end 
 end 
  
 local function loadMainUI() 
         local toggleMain = create("TextButton", {  
                 AnchorPoint = Vector2.new(0.5, 0.5),  
                 AutoButtonColor = false,  
                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                 FontSize = Enum.FontSize.Size14,  
                 Name = "toggleMain",  
                 Parent = gui,  
                 Position = UDim2.new(1, -25, 0.5, 0),  
                 Size = UDim2.new(0, 40, 0, 40),  
                 Text = "",  
                 TextColor3 = Color3.fromHex("000000"),  
                 TextSize = 14,  
                 ZIndex = 99 
         }, { 
                 create("UICorner", {  
                         CornerRadius = UDim.new(0, 4),  
                         Name = "corner" 
                 }), 
                 create("UIGradient", {  
                         Color = ColorSequence.new({  
                                 ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")),  
                                 ColorSequenceKeypoint.new(1, Color3.fromHex("242424")) 
                         }),  
                         Name = "gradient",  
                         Rotation = 78 
                 }), 
                 create("ImageLabel", {  
                         AnchorPoint = Vector2.new(0.5, 0.5),  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         Image = "rbxasset://hydrogen/hydroui/icon.png",  
                         Name = "icon",  
                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                         Size = UDim2.new(1, -6, 1, -6),  
                         ZIndex = 99 
                 }) 
         }); 
  
         local main = create("Frame", {  
                 AnchorPoint = Vector2.new(0.5, 0.5),  
                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                 BorderSizePixel = 0,  
                 Name = "main",  
                 Parent = gui,  
                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                 Size = UDim2.new(1, -110, 1, -80), 
                 Visible = false 
         }, { 
                 create("UIGradient", {  
                         Color = ColorSequence.new({  
                                 ColorSequenceKeypoint.new(0, Color3.fromHex("1c1c1c")),  
                                 ColorSequenceKeypoint.new(1, Color3.fromHex("242424")) 
                         }),  
                         Name = "gradient",  
                         Rotation = 78 
                 }), 
                 create("Frame", {  
                         BackgroundColor3 = Color3.fromHex("181818"),  
                         BorderSizePixel = 0,  
                         Name = "left",  
                         Size = UDim2.new(0, 38, 1, 0) 
                 }, { 
                         create("UICorner", {  
                                 CornerRadius = UDim.new(0, 4),  
                                 Name = "corner" 
                         }), 
                         create("ImageLabel", {  
                                 AnchorPoint = Vector2.new(0.5, 0),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Image = "rbxasset://hydrogen/hydroui/iconSmall.png",  
                                 Name = "icon",  
                                 Position = UDim2.new(0.5, 0, 0, 8),  
                                 Size = UDim2.new(0, 28, 0, 28) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(0.5, 1),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "buttons",  
                                 Position = UDim2.new(0.5, 0, 1, 0),  
                                 Size = UDim2.new(1, -8, 1, -44) 
                         }, { 
                                 create("UIListLayout", {  
                                         Name = "list",  
                                         Padding = UDim.new(0, 4),  
                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                 }), 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size14,  
                                         Name = "editor",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(0, 30, 0, 30),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("000000"),  
                                         TextSize = 14 
                                 }, { 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/editor.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -10, 1, -10) 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }) 
                                 }), 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size14,  
                                         Name = "games",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(0, 30, 0, 30),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("000000"),  
                                         TextSize = 14 
                                 }, { 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/games.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -10, 1, -10) 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }) 
                                 }), 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size14,  
                                         Name = "console",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(0, 30, 0, 30),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("000000"),  
                                         TextSize = 14 
                                 }, { 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/console.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -10, 1, -10) 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }) 
                                 }), 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size14,  
                                         Name = "settings",  
                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                         Size = UDim2.new(0, 30, 0, 30),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("000000"),  
                                         TextSize = 14 
                                 }, { 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/settings.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -10, 1, -10) 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }) 
                                 }) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(1, 0),  
                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                 BorderSizePixel = 0,  
                                 Name = "topRightCover",  
                                 Position = UDim2.new(1, 0, 0, 0),  
                                 Size = UDim2.new(0, 4, 0, 4) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(1, 1),  
                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                 BorderSizePixel = 0,  
                                 Name = "bottomRightCover",  
                                 Position = UDim2.new(1, 0, 1, 0),  
                                 Size = UDim2.new(0, 4, 0, 4) 
                         }) 
                 }), 
                 create("UICorner", {  
                         CornerRadius = UDim.new(0, 4),  
                         Name = "corner" 
                 }), 
                 create("TextButton", {  
                         AutoButtonColor = false,  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                         FontSize = Enum.FontSize.Size14,  
                         Name = "clickThroughBlocker",  
                         Size = UDim2.new(1, 0, 1, 0),  
                         Text = "",  
                         TextColor3 = Color3.fromHex("000000"),  
                         TextSize = 14,  
                         ZIndex = 0 
                 }), 
                 create("Folder", {  
                         Name = "tabs" 
                 }, { 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(1, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "editor",  
                                 Position = UDim2.new(1, 0, 0.5, 0),  
                                 Size = UDim2.new(1, -38, 1, 0) 
                         }, { 
                                 create("UIListLayout", { 
                                         Name = "list",  
                                         FillDirection = Enum.FillDirection.Horizontal,  
                                         Padding = UDim.new(0, 8),  
                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                 }), 
                                 create("UIPadding", { 
                                         Name = "padding", 
                                         PaddingBottom = UDim.new(0, 8),  
                                         PaddingLeft = UDim.new(0, 8),  
                                         PaddingRight = UDim.new(0, 8),  
                                         PaddingTop = UDim.new(0, 8) 
                                 }), 
                                 create("Frame", {  
                                         AnchorPoint = Vector2.new(0, 0.5),  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         Name = "main",  
                                         Position = UDim2.new(0, 8, 0.5, 0),  
                                         Size = UDim2.new(1, -118, 1, 0) 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("UIListLayout", {  
                                                 FillDirection = Enum.FillDirection.Horizontal,  
                                                 Name = "list",  
                                                 Padding = UDim.new(0, 4),  
                                                 SortOrder = Enum.SortOrder.LayoutOrder 
                                         }), 
                                         create("ScrollingFrame", {  
                                                 Active = true,  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 BorderSizePixel = 0,  
                                                 BottomImage = "rbxasset://hydrogen/hydroui/scrollBottom.png",  
                                                 CanvasSize = UDim2.new(0, 6, 1, 0),  
                                                 MidImage = "rbxasset://hydrogen/hydroui/scrollMiddle.png",  
                                                 Name = "lineNumbers",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 ScrollBarImageColor3 = Color3.fromHex("484848"),  
                                                 ScrollBarThickness = 0,  
                                                 ScrollingDirection = Enum.ScrollingDirection.Y,  
                                                 ScrollingEnabled = false,  
                                                 Size = UDim2.new(0, 6, 1, 0),  
                                                 TopImage = "rbxasset://hydrogen/hydroui/scrollTop.png" 
                                         }, { 
                                                 create("TextLabel", {  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "label",  
                                                         Size = UDim2.new(1, 0, 1, 0),  
                                                         Text = "1",  
                                                         TextColor3 = Color3.fromHex("d2d2d2"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Right,  
                                                         TextYAlignment = Enum.TextYAlignment.Top 
                                                 }) 
                                         }), 
                                         create("UIPadding", {  
                                                 Name = "padding",  
                                                 PaddingBottom = UDim.new(0, 8),  
                                                 PaddingLeft = UDim.new(0, 8),  
                                                 PaddingRight = UDim.new(0, 8),  
                                                 PaddingTop = UDim.new(0, 8) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("b2b2b2"),  
                                                 BorderSizePixel = 0,  
                                                 Name = "separator",  
                                                 Size = UDim2.new(0, 1, 1, 0) 
                                         }), 
                                         create("ScrollingFrame", {  
                                                 Active = true,  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 BorderSizePixel = 0,  
                                                 BottomImage = "rbxasset://hydrogen/hydroui/scrollBottom.png",  
                                                 CanvasSize = UDim2.new(1, -15, 1, 0),  
                                                 MidImage = "rbxasset://hydrogen/hydroui/scrollMiddle.png",  
                                                 Name = "container",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 ScrollBarImageColor3 = Color3.fromHex("484848"),  
                                                 ScrollBarThickness = 4,  
                                                 Size = UDim2.new(1, -15, 1, 0),  
                                                 TopImage = "rbxasset://hydrogen/hydroui/scrollTop.png" 
                                         }, { 
                                                 create("TextBox", {  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         ClearTextOnFocus = false,  
                                                         FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         MultiLine = true,  
                                                         Name = "content",  
                                                         Size = UDim2.new(1, 0, 1, 0),  
                                                         Text = uiSettings.editorInit,  
                                                         TextColor3 = Color3.fromHex("b2b2b2"),  
                                                         TextSize = 11,  
                                                         TextTruncate = Enum.TextTruncate.AtEnd,  
                                                         TextWrap = true,  
                                                         TextWrapped = true,  
                                                         TextXAlignment = Enum.TextXAlignment.Left,  
                                                         TextYAlignment = Enum.TextYAlignment.Top 
                                                 }) 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }) 
                                 }), 
                                 create("Frame", {  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         BorderSizePixel = 0,  
                                         Name = "right",  
                                         Size = UDim2.new(0, 110, 1, 0) 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("Frame", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Name = "buttons",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -8, 1, -8) 
                                         }, { 
                                                 create("UIListLayout", {  
                                                         Name = "list",  
                                                         Padding = UDim.new(0, 4),  
                                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "Editor" 
                                                         }, 
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size12,  
                                                         Name = "boxLabel",  
                                                         Size = UDim2.new(1, 0, 0, 16),  
                                                         TextColor3 = Color3.fromHex("bebebe"),  
                                                         TextSize = 12,  
                                                         TextXAlignment = Enum.TextXAlignment.Left,  
                                                         TextYAlignment = Enum.TextYAlignment.Bottom 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "executeBox",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 22),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/send.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(1, -6, 0.5, 0),  
                                                                 Size = UDim2.new(0, 14, 0, 14) 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("TextLabel", {  
                                                                 LanguageItem = { 
                                                                         property = "Text", 
                                                                         identifier = "Execute" 
                                                                 }, 
                                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                                 FontSize = Enum.FontSize.Size11,  
                                                                 Name = "title",  
                                                                 Position = UDim2.new(0, 6, 0.5, 0),  
                                                                 Size = UDim2.new(1, -30, 1, 0),  
                                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                                 TextSize = 11,  
                                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "clearBox",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 22),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/clear.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(1, -6, 0.5, 0),  
                                                                 Size = UDim2.new(0, 14, 0, 14) 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("TextLabel", {  
                                                                 LanguageItem = { 
                                                                         property = "Text", 
                                                                         identifier = "Clear" 
                                                                 }, 
                                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                                 FontSize = Enum.FontSize.Size11,  
                                                                 Name = "title",  
                                                                 Position = UDim2.new(0, 6, 0.5, 0),  
                                                                 Size = UDim2.new(1, -30, 1, 0),  
                                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                                 TextSize = 11,  
                                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                                         }) 
                                                 }), 
                                                 create("Frame", {  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         Name = "separator",  
                                                         Size = UDim2.new(1, 0, 0, 1) 
                                                 }, { 
                                                         create("Frame", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("363636"),  
                                                                 BorderSizePixel = 0,  
                                                                 Name = "bar",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, 0) 
                                                         }, { 
                                                                 create("UIGradient", {  
                                                                         Name = "gradient",  
                                                                         Transparency = NumberSequence.new({  
                                                                                 NumberSequenceKeypoint.new(0, 1),  
                                                                                 NumberSequenceKeypoint.new(0.1, 0.28),  
                                                                                 NumberSequenceKeypoint.new(0.28, 0),  
                                                                                 NumberSequenceKeypoint.new(0.72, 0),  
                                                                                 NumberSequenceKeypoint.new(0.9, 0.28),  
                                                                                 NumberSequenceKeypoint.new(1, 1) 
                                                                         }) 
                                                                 }) 
                                                         }) 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "Clipboard" 
                                                         }, 
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size12,  
                                                         Name = "clipboardLabel",  
                                                         Size = UDim2.new(1, 0, 0, 16),  
                                                         TextColor3 = Color3.fromHex("bebebe"),  
                                                         TextSize = 12,  
                                                         TextXAlignment = Enum.TextXAlignment.Left,  
                                                         TextYAlignment = Enum.TextYAlignment.Bottom 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "executeClip",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 22),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/clipboard.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(1, -6, 0.5, 0),  
                                                                 Size = UDim2.new(0, 14, 0, 14) 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("TextLabel", {  
                                                                 LanguageItem = { 
                                                                         property = "Text", 
                                                                         identifier = "Execute" 
                                                                 }, 
                                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                                 FontSize = Enum.FontSize.Size11,  
                                                                 Name = "title",  
                                                                 Position = UDim2.new(0, 6, 0.5, 0),  
                                                                 Size = UDim2.new(1, -30, 1, 0),  
                                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                                 TextSize = 11,  
                                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "copyClip",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 22),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/copy.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(1, -6, 0.5, 0),  
                                                                 Size = UDim2.new(0, 14, 0, 14) 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("TextLabel", {  
                                                                 LanguageItem = { 
                                                                         property = "Text", 
                                                                         identifier = "CopyScript" 
                                                                 }, 
                                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                                 FontSize = Enum.FontSize.Size11,  
                                                                 Name = "title",  
                                                                 Position = UDim2.new(0, 6, 0.5, 0),  
                                                                 Size = UDim2.new(1, -30, 1, 0),  
                                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                                 TextSize = 11,  
                                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "loadClip",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 22),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/download.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(1, -6, 0.5, 0),  
                                                                 Size = UDim2.new(0, 14, 0, 14) 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("TextLabel", {  
                                                                 LanguageItem = { 
                                                                         property = "Text", 
                                                                         identifier = "LoadScript" 
                                                                 }, 
                                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                                 FontSize = Enum.FontSize.Size11,  
                                                                 Name = "title",  
                                                                 Position = UDim2.new(0, 6, 0.5, 0),  
                                                                 Size = UDim2.new(1, -30, 1, 0),  
                                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                                 TextSize = 11,  
                                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }) 
                                 }) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(1, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "games",  
                                 Position = UDim2.new(1, 0, 0.5, 0),  
                                 Size = UDim2.new(1, -38, 1, 0),  
                                 Visible = false 
                         }, { 
                                 create("TextBox", {  
                                         LanguageItem = { 
                                                 property = "PlaceholderText", 
                                                 identifier = "Search..." 
                                         }, 
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size11,  
                                         Name = "searchInput",  
                                         Position = UDim2.new(0, 8, 0, 8),  
                                         Size = UDim2.new(1, -90, 0, 30),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 11,  
                                         TextXAlignment = Enum.TextXAlignment.Left 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("UIPadding", {  
                                                 Name = "padding",  
                                                 PaddingLeft = UDim.new(0, 8),  
                                                 PaddingRight = UDim.new(0, 8) 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }) 
                                 }), 
                                 create("ScrollingFrame", {  
                                         Active = true,  
                                         AnchorPoint = Vector2.new(0.5, 1),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         BorderSizePixel = 0,  
                                         CanvasSize = UDim2.new(0, 0, 0, 0),  
                                         Name = "container",  
                                         Position = UDim2.new(0.5, 0, 1, -7),  
                                         ScrollBarImageColor3 = Color3.fromHex("000000"),  
                                         ScrollBarThickness = 0,  
                                         Size = UDim2.new(1, -14, 1, -52) 
                                 }, { 
                                         create("UIGridLayout", {  
                                                 CellPadding = UDim2.new(0, 8, 0, 6),  
                                                 CellSize = UDim2.new(0, 0, 0, 0),  
                                                 Name = "grid",  
                                                 SortOrder = Enum.SortOrder.LayoutOrder 
                                         }), 
                                         create("UIPadding", {  
                                                 Name = "padding",  
                                                 PaddingBottom = UDim.new(0, 1),  
                                                 PaddingLeft = UDim.new(0, 1),  
                                                 PaddingRight = UDim.new(0, 1),  
                                                 PaddingTop = UDim.new(0, 1) 
                                         }) 
                                 }), 
                                 create("TextButton", { 
                                         LanguageItem = { 
                                                 property = "Text", 
                                                 identifier = "Search" 
                                         },  
                                         AnchorPoint = Vector2.new(1, 0),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size11,  
                                         Name = "search",  
                                         Position = UDim2.new(1, -8, 0, 8),  
                                         Size = UDim2.new(0, 66, 0, 30),  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 11 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }) 
                                 }) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(1, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "console",  
                                 Position = UDim2.new(1, 0, 0.5, 0),  
                                 Size = UDim2.new(1, -38, 1, 0),  
                                 Visible = false 
                         }, { 
                                 create("Frame", {  
                                         AnchorPoint = Vector2.new(0.5, 0),  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         Name = "main",  
                                         Position = UDim2.new(0.5, 0, 0, 8),  
                                         Size = UDim2.new(1, -16, 1, -54) 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("ScrollingFrame", {  
                                                 Active = true,  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 BorderSizePixel = 0,  
                                                 BottomImage = "rbxasset://hydrogen/hydroui/scrollBottom.png",  
                                                 CanvasSize = UDim2.new(1, -16, 1, -16),  
                                                 MidImage = "rbxasset://hydrogen/hydroui/scrollMiddle.png",  
                                                 Name = "container",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 ScrollBarImageColor3 = Color3.fromHex("484848"),  
                                                 ScrollBarThickness = 4,  
                                                 Size = UDim2.new(1, -16, 1, -16),  
                                                 TopImage = "rbxasset://hydrogen/hydroui/scrollTop.png" 
                                         }, { 
                                                 create("TextLabel", {  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "content",  
                                                         RichText = true,  
                                                         Size = UDim2.new(1, 0, 1, 0),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("b2b2b2"),  
                                                         TextSize = 11,  
                                                         TextTruncate = Enum.TextTruncate.AtEnd,  
                                                         TextWrap = true,  
                                                         TextWrapped = true,  
                                                         TextXAlignment = Enum.TextXAlignment.Left,  
                                                         TextYAlignment = Enum.TextYAlignment.Top 
                                                 }) 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }) 
                                 }), 
                                 create("Frame", {  
                                         AnchorPoint = Vector2.new(0.5, 1),  
                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                         Name = "bottom",  
                                         Position = UDim2.new(0.5, 0, 1, -8),  
                                         Size = UDim2.new(1, -16, 0, 30) 
                                 }, { 
                                         create("TextButton", {  
                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("303030"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "clearConsole",  
                                                 Position = UDim2.new(0, 4, 0.5, 0),  
                                                 Size = UDim2.new(0, 63, 0, 22),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 14 
                                         }, { 
                                                 create("ImageLabel", {  
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         Image = "rbxasset://hydrogen/hydroui/clear.png",  
                                                         Name = "icon",  
                                                         Position = UDim2.new(1, -6, 0.5, 0),  
                                                         Size = UDim2.new(0, 14, 0, 14) 
                                                 }), 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "ClearConsole" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(0, 6, 0.5, 0),  
                                                         Size = UDim2.new(1, -30, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }), 
                                         create("TextButton", {  
                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("303030"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "copyConsole",  
                                                 Position = UDim2.new(1, -4, 0.5, 0),  
                                                 Size = UDim2.new(0, 109, 0, 22),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 14 
                                         }, { 
                                                 create("ImageLabel", {  
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         Image = "rbxasset://hydrogen/hydroui/copy.png",  
                                                         Name = "icon",  
                                                         Position = UDim2.new(1, -6, 0.5, 0),  
                                                         Size = UDim2.new(0, 14, 0, 14) 
                                                 }), 
                                                 create("UICorner", {  
                                                         CornerRadius = UDim.new(0, 4),  
                                                         Name = "corner" 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "CopyConsole" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(0, 6, 0.5, 0),  
                                                         Size = UDim2.new(1, -30, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("141414"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }) 
                                 }) 
                         }), 
                         create("Frame", {  
                                 AnchorPoint = Vector2.new(1, 0.5),  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "settings",  
                                 Position = UDim2.new(1, 0, 0.5, 0),  
                                 Size = UDim2.new(1, -38, 1, 0),  
                                 Visible = false 
                         }, { 
                                 create("ScrollingFrame", {  
                                         AnchorPoint = Vector2.new(0, 0.5),  
                                         BackgroundTransparency = 1,  
                                         BorderSizePixel = 0,  
                                         CanvasSize = UDim2.new(),  
                                         Name = "left",  
                                         Position = UDim2.new(0, 8, 0.5, 0),  
                                         ScrollBarThickness = 0,  
                                         Size = UDim2.new(0.5, -12, 1, -16) 
                                 }, { 
                                         create("UIListLayout", {  
                                                 Name = "list",  
                                                 Padding = UDim.new(0, 8),  
                                                 SortOrder = Enum.SortOrder.LayoutOrder 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Name = "languages",  
                                                 Size = UDim2.new(1, 0, 0, 28) 
                                         }, { 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         BorderColor3 = Color3.fromHex("1b2a35"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "indicator",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 28, 0, 28),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/languages.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, -8) 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, -36, 1, 0),  
                                                         Text = "English",  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }) 
                                                 }), 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(1, 0),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         Name = "drop",  
                                                         Position = UDim2.new(1, 0, 1, 8),  
                                                         Size = UDim2.new(1, -36, 0, 156),  
                                                         Visible = false,  
                                                         ZIndex = 2 
                                                 }, { 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("ScrollingFrame", {  
                                                                 Active = true,  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 BorderSizePixel = 0,  
                                                                 BottomImage = "rbxasset://hydrogen/hydroui/scrollBottom.png",  
                                                                 CanvasSize = UDim2.new(0, 0, 0, 0),  
                                                                 MidImage = "rbxasset://hydrogen/hydroui/scrollMiddle.png",  
                                                                 Name = "container",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 ScrollBarImageColor3 = Color3.fromHex("141414"),  
                                                                 ScrollBarThickness = 4,  
                                                                 Size = UDim2.new(1, -16, 1, -16),  
                                                                 TopImage = "rbxasset://hydrogen/hydroui/scrollTop.png",  
                                                                 ZIndex = 2 
                                                         }, { 
                                                                 create("UIListLayout", {  
                                                                         Name = "list",  
                                                                         Padding = UDim.new(0, 6),  
                                                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                                                 }), 
                                                                 create("UIPadding", {  
                                                                         Name = "padding",  
                                                                         PaddingBottom = UDim.new(0, 1),  
                                                                         PaddingLeft = UDim.new(0, 1),  
                                                                         PaddingRight = UDim.new(0, 1),  
                                                                         PaddingTop = UDim.new(0, 1) 
                                                                 }) 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 BorderSizePixel = 0,  
                                                 Name = "separator",  
                                                 Size = UDim2.new(1, 0, 0, 11) 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BorderSizePixel = 0,  
                                                         Name = "bar",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 1) 
                                                 }, { 
                                                         create("UIGradient", {  
                                                                 Color = ColorSequence.new({  
                                                                         ColorSequenceKeypoint.new(0, Color3.fromHex("3c3c3c")),  
                                                                         ColorSequenceKeypoint.new(1, Color3.fromHex("3c3c3c")) 
                                                                 }),  
                                                                 Transparency = NumberSequence.new({  
                                                                         NumberSequenceKeypoint.new(0, 1),  
                                                                         NumberSequenceKeypoint.new(0.2, 0),  
                                                                         NumberSequenceKeypoint.new(0.8, 0),  
                                                                         NumberSequenceKeypoint.new(1, 1) 
                                                                 }) 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("TextButton", {  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "unlockFps",  
                                                 Size = UDim2.new(1, 0, 0, 28),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 14 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         Name = "indicator",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 28, 0, 28) 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }), 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/check.png",  
                                                                 ImageTransparency = uiSettings.unlockFps and 0 or 1,  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, -8) 
                                                         }) 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "UnlockFPS" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, -40, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }), 
                                         create("TextButton", {  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "vSync",  
                                                 Size = UDim2.new(1, 0, 0, 28),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 14 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         Name = "indicator",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 28, 0, 28) 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }), 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/check.png",  
                                                                 ImageTransparency = uiSettings.vSync and 0 or 1,  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, -8) 
                                                         }) 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "VSync" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, -40, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Name = "fpsValue",  
                                                 Size = UDim2.new(1, 0, 0, 38) 
                                         }, { 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "FPS" 
                                                         }, 
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(0, 4, 0, 0),  
                                                         Size = UDim2.new(1, -8, 0, 24),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }), 
                                                 create("TextLabel", {  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "value",  
                                                         Position = UDim2.new(0, 4, 0, 0),  
                                                         Size = UDim2.new(1, -8, 0, 24),  
                                                         Text = "60",  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Right 
                                                 }), 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0.5, 1),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         ClipsDescendants = true,  
                                                         Name = "container",  
                                                         Position = UDim2.new(0.5, 0, 1, 0),  
                                                         Size = UDim2.new(1, 0, 0, 12) 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(1, 0),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }), 
                                                         create("Frame", {  
                                                                 BackgroundColor3 = Color3.fromHex("303030"),  
                                                                 Name = "indicator",  
                                                                 Size = UDim2.new(59 / 998, 0, 1, 0) 
                                                         }, { 
                                                                 create("UICorner", {  
                                                                         CornerRadius = UDim.new(1, 0),  
                                                                         Name = "corner" 
                                                                 }), 
                                                                 create("UIStroke", {  
                                                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                         Color = Color3.fromHex("141414"),  
                                                                         Name = "stroke",  
                                                                         Thickness = 1.2 
                                                                 }) 
                                                         }) 
                                                 }) 
                                         }) 
                                 }), 
                                 create("ScrollingFrame", {  
                                         AnchorPoint = Vector2.new(1, 0.5),  
                                         BackgroundTransparency = 1,  
                                         BorderSizePixel = 0,  
                                         CanvasSize = UDim2.new(),  
                                         Name = "right",  
                                         Position = UDim2.new(1, -8, 0.5, 0),  
                                         ScrollBarThickness = 0,  
                                         Size = UDim2.new(0.5, -12, 1, -16) 
                                 }, { 
                                         create("UIListLayout", {  
                                                 Name = "list",  
                                                 Padding = UDim.new(0, 8),  
                                                 SortOrder = Enum.SortOrder.LayoutOrder 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Name = "scriptApi",  
                                                 Size = UDim2.new(1, 0, 0, 28) 
                                         }, { 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         BorderColor3 = Color3.fromHex("1b2a35"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size14,  
                                                         Name = "indicator",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 28, 0, 28),  
                                                         Text = "",  
                                                         TextColor3 = Color3.fromHex("000000"),  
                                                         TextSize = 14 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/games.png",  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, -8) 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, -36, 1, 0),  
                                                         Text = uiSettings.searchAPI,  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }) 
                                                 }), 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(1, 0),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         Name = "drop",  
                                                         Position = UDim2.new(1, 0, 1, 8),  
                                                         Size = UDim2.new(1, -36, 0, 84),  
                                                         Visible = false,  
                                                         ZIndex = 2 
                                                 }, { 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }), 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("ScrollingFrame", {  
                                                                 Active = true,  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 BorderSizePixel = 0,  
                                                                 BottomImage = "rbxasset://hydrogen/hydroui/scrollBottom.png",  
                                                                 CanvasSize = UDim2.new(0, 0, 0, 0),  
                                                                 MidImage = "rbxasset://hydrogen/hydroui/scrollMiddle.png",  
                                                                 Name = "container",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 ScrollBarImageColor3 = Color3.fromHex("141414"),  
                                                                 ScrollBarThickness = 4,  
                                                                 Size = UDim2.new(1, -16, 1, -16),  
                                                                 TopImage = "rbxasset://hydrogen/hydroui/scrollTop.png",  
                                                                 ZIndex = 2 
                                                         }, { 
                                                                 create("UIListLayout", {  
                                                                         Name = "list",  
                                                                         Padding = UDim.new(0, 6),  
                                                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                                                 }), 
                                                                 create("UIPadding", {  
                                                                         Name = "padding",  
                                                                         PaddingBottom = UDim.new(0, 1),  
                                                                         PaddingLeft = UDim.new(0, 1),  
                                                                         PaddingRight = UDim.new(0, 1),  
                                                                         PaddingTop = UDim.new(0, 1) 
                                                                 }) 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 BorderSizePixel = 0,  
                                                 Name = "separator",  
                                                 Size = UDim2.new(1, 0, 0, 13) 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BorderSizePixel = 0,  
                                                         Name = "bar",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 1) 
                                                 }, { 
                                                         create("UIGradient", {  
                                                                 Color = ColorSequence.new({  
                                                                         ColorSequenceKeypoint.new(0, Color3.fromHex("3c3c3c")),  
                                                                         ColorSequenceKeypoint.new(1, Color3.fromHex("3c3c3c")) 
                                                                 }),  
                                                                 Transparency = NumberSequence.new({  
                                                                         NumberSequenceKeypoint.new(0, 1),  
                                                                         NumberSequenceKeypoint.new(0.2, 0),  
                                                                         NumberSequenceKeypoint.new(0.8, 0),  
                                                                         NumberSequenceKeypoint.new(1, 1) 
                                                                 }) 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("TextButton", {  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "compatibilityMode",  
                                                 Size = UDim2.new(1, 0, 0, 28),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 14 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         Name = "indicator",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 28, 0, 28) 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }), 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/check.png",  
                                                                 ImageTransparency = uiSettings.compatibilityMode and 0 or 1,  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, -8) 
                                                         }) 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "CompatibilityMode" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, -40, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }), 
                                         create("TextButton", {  
                                                 AutoButtonColor = false,  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size14,  
                                                 Name = "antiAfk",  
                                                 Size = UDim2.new(1, 0, 0, 28),  
                                                 Text = "",  
                                                 TextColor3 = Color3.fromHex("000000"),  
                                                 TextSize = 14 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         Name = "indicator",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 28, 0, 28) 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 1.2 
                                                         }), 
                                                         create("ImageLabel", {  
                                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                                 BackgroundTransparency = 1,  
                                                                 Image = "rbxasset://hydrogen/hydroui/check.png",  
                                                                 ImageTransparency = uiSettings.antiAfk and 0 or 1,  
                                                                 Name = "icon",  
                                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                                 Size = UDim2.new(1, -8, 1, -8) 
                                                         }) 
                                                 }), 
                                                 create("TextLabel", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "AntiAFK" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BackgroundTransparency = 1,  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "title",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, -40, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11,  
                                                         TextXAlignment = Enum.TextXAlignment.Left 
                                                 }) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 BorderSizePixel = 0,  
                                                 Name = "separator",  
                                                 Size = UDim2.new(1, 0, 0, 11) 
                                         }, { 
                                                 create("Frame", {  
                                                         AnchorPoint = Vector2.new(0.5, 0.5),  
                                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                         BorderSizePixel = 0,  
                                                         Name = "bar",  
                                                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                         Size = UDim2.new(1, 0, 0, 1) 
                                                 }, { 
                                                         create("UIGradient", {  
                                                                 Color = ColorSequence.new({  
                                                                         ColorSequenceKeypoint.new(0, Color3.fromHex("3c3c3c")),  
                                                                         ColorSequenceKeypoint.new(1, Color3.fromHex("3c3c3c")) 
                                                                 }),  
                                                                 Transparency = NumberSequence.new({  
                                                                         NumberSequenceKeypoint.new(0, 1),  
                                                                         NumberSequenceKeypoint.new(0.2, 0),  
                                                                         NumberSequenceKeypoint.new(0.8, 0),  
                                                                         NumberSequenceKeypoint.new(1, 1) 
                                                                 }) 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Name = "serverHopMode",  
                                                 Size = UDim2.new(1, 0, 0, 28) 
                                         }, { 
                                                 create("UIListLayout", {  
                                                         FillDirection = Enum.FillDirection.Horizontal,  
                                                         Name = "list",  
                                                         Padding = UDim.new(0, 8),  
                                                         SortOrder = Enum.SortOrder.LayoutOrder 
                                                 }), 
                                                 create("TextButton", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "Full" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "full" and "303030" or "181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "full",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 35, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "Empty" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "empty" and "303030" or "181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "empty",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 49, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "BestPing" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "bestPing" and "303030" or "181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "bestPing",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 65, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "Random" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex(uiSettings.serverHopMode == "random" and "303030" or "181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "random",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(0, 59, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }) 
                                                 }) 
                                         }), 
                                         create("UIPadding", {  
                                                 Name = "padding",  
                                                 PaddingBottom = UDim.new(0, 1),  
                                                 PaddingLeft = UDim.new(0, 1),  
                                                 PaddingRight = UDim.new(0, 1),  
                                                 PaddingTop = UDim.new(0, 1) 
                                         }), 
                                         create("Frame", {  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Name = "serverHop",  
                                                 Size = UDim2.new(1, 0, 0, 28) 
                                         }, { 
                                                 create("TextButton", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "RejoinServer" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(1, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "rejoin",  
                                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                                         Size = UDim2.new(0.5, -4, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }) 
                                                 }), 
                                                 create("TextButton", {  
                                                         LanguageItem = { 
                                                                 property = "Text", 
                                                                 identifier = "ServerHop" 
                                                         }, 
                                                         AnchorPoint = Vector2.new(0, 0.5),  
                                                         AutoButtonColor = false,  
                                                         BackgroundColor3 = Color3.fromHex("181818"),  
                                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                         FontSize = Enum.FontSize.Size11,  
                                                         Name = "hop",  
                                                         Position = UDim2.new(0, 0, 0.5, 0),  
                                                         Size = UDim2.new(0.5, -4, 1, 0),  
                                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                                         TextSize = 11 
                                                 }, { 
                                                         create("UICorner", {  
                                                                 CornerRadius = UDim.new(0, 4),  
                                                                 Name = "corner" 
                                                         }), 
                                                         create("UIStroke", {  
                                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                                 Color = Color3.fromHex("141414"),  
                                                                 Name = "stroke",  
                                                                 Thickness = 0.8 
                                                         }) 
                                                 }) 
                                         }) 
                                 }) 
                         }) 
                 }), 
                 create("UISizeConstraint", {  
                         MaxSize = Vector2.new(800, 500),  
                         Name = "constraint" 
                 }), 
                 create("ImageLabel", {  
                         AnchorPoint = Vector2.new(0.5, 0.5),  
                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                         BackgroundTransparency = 1,  
                         Image = "rbxasset://hydrogen/hydroui/blur.png",  
                         ImageColor3 = Color3.fromHex("000000"),  
                         Name = "blur",  
                         Position = UDim2.new(0.5, 0, 0.5, 0),  
                         ScaleType = Enum.ScaleType.Slice,  
                         Size = UDim2.new(1, 10, 1, 10),  
                         SliceCenter = Rect.new(10, 10, 118, 118),  
                         ZIndex = 0 
                 }), 
                 create("UIStroke", {  
                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                         Color = Color3.fromHex("141414"),  
                         Name = "stroke",  
                         Thickness = 0.8 
                 }) 
         }); 
  
         --[[ Start ]]-- 
  
         local runCode = removeTrace("runcode"); 
  
         local tabs = main.tabs; 
         local tabButtons = main.left.buttons; 
  
         --[[ Toggle UI ]]-- 
  
         do 
                 local isOpen = false; 
  
                 toggleMain.MouseButton1Click:Connect(function() 
                         isOpen = not isOpen; 
                         main.Visible = isOpen; 
                 end); 
         end 
  
         --[[ Toggle Drag ]]-- 
  
         do 
                 local currentCamera = workspace.CurrentCamera; 
  
                 toggleMain.InputBegan:Connect(function(input) 
                         if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 
                                 local inputConn = userInputService.InputChanged:Connect(function(input) 
                                         if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then 
                                                 tween(toggleMain, 0.18, { 
                                                         Position = UDim2.new(0, math.clamp(input.Position.X, 25, currentCamera.ViewportSize.X - 25), 0, math.clamp(input.Position.Y, 25, currentCamera.ViewportSize.Y - 25)) 
                                                 }); 
                                         end 
                                 end); 
                                 local conn; conn = input.Changed:Connect(function() 
                                         if input.UserInputState == Enum.UserInputState.End then 
                                                 inputConn:Disconnect(); 
                                                 conn:Disconnect(); 
                                         end 
                                 end); 
                         end 
                 end); 
         end 
  
         --[[ Select Tabs ]]-- 
  
         local selectedTab = tabs.editor; 
  
         local function selectTab(name) 
                 local btn, tab = tabButtons[name], tabs[name]; 
                 if selectedTab ~= tab then 
                         selectedTab.Visible = false; 
                         tween(tabButtons[selectedTab.Name], 0.18, { 
                                 BackgroundTransparency = 1; 
                         }); 
                         selectedTab = tab; 
                         tab.Visible = true; 
                         tween(btn, 0.18, { 
                                 BackgroundTransparency = 0; 
                         }); 
                 end 
         end 
  
         do 
                 local buttonList = tabButtons:GetChildren(); 
                 for i = 1, #buttonList do 
                         local v = buttonList[i]; 
                         if v:IsA("TextButton") then 
                                 local tab = tabs[v.Name]; 
                                 v.MouseButton1Click:Connect(function() 
                                         selectTab(v.Name); 
                                 end); 
                         end 
                 end 
         end 
  
         --[[ Editor ]]-- 
  
         do 
                 local editor = tabs.editor; 
  
                 local scroll = editor.main.container; 
                 local content = scroll.content; 
  
                 do 
                         local lineNumbers = editor.main.lineNumbers; 
                         local lineLabel = lineNumbers.label; 
  
                         local function getTextBounds(input) 
                                 return textService:GetTextSize(input, content.TextSize, content.Font, hugeVector2); 
                         end 
  
                         content:GetPropertyChangedSignal("Text"):Connect(function() 
                                 local input = content.Text; 
                                 local lines = math.min(#string.split(input, "\n"), maxLines); 
                                 local digitLength = #tostring(lines) * 6; 
                                 local textBounds = getTextBounds(input); 
                                 local textHeight = math.min(textBounds.Y, maxLines * 11); 
                                 local str = ""; 
                                 for i = 1, lines do 
                                         str ..= string.format("%d%s", i, i == lines and "" or "\n"); 
                                 end 
                                 lineLabel.Text = str; 
                                 lineNumbers.Size = UDim2.new(0, digitLength, 1, 0); 
                                 lineNumbers.CanvasSize = UDim2.new(0, digitLength, 0, textHeight); 
                                 scroll.Size = UDim2.new(1, -(9 + digitLength), 1, 0); 
                                 scroll.CanvasSize = UDim2.new(0, textBounds.X + digitLength, 0, textHeight); 
                         end); 
  
                         scroll:GetPropertyChangedSignal("CanvasPosition"):Connect(function() 
                                 lineNumbers.CanvasPosition = Vector2.new(0, scroll.CanvasPosition.Y); 
                         end); 
                 end                 
  
                 do 
                         local right = editor.right.buttons; 
                         local items = right:GetChildren(); 
                         for i = 1, #items do 
                                 local v = items[i]; 
                                 if v:IsA("TextButton") then 
                                         addTransparencyHighlights(v); 
                                 end 
                         end 
  
                         right.executeBox.MouseButton1Click:Connect(function() 
                                 runCode(content.Text); 
                         end); 
  
                         right.clearBox.MouseButton1Click:Connect(function() 
                                 content.Text = ""; 
                         end); 
  
                         right.executeClip.MouseButton1Click:Connect(function() 
                                 runCode(_getclipboard()); 
                         end); 
  
                         right.copyClip.MouseButton1Click:Connect(function() 
                                 _setclipboard(content.Text); 
                         end); 
  
                         right.loadClip.MouseButton1Click:Connect(function() 
                                 local text = _getclipboard(); 
                                 if #text > 16384 then 
                                         rconsolewarn("Clipboard Text is too large to be loaded to the editor. Execute directly using \"Execute Clipboard\"."); 
                                 else 
                                         content.Text = text; 
                                 end 
                         end); 
  
                         resizeFunctions[#resizeFunctions + 1] = function() 
                                 local maxBound = 0; 
                                 for i = 1, #items do 
                                         local v = items[i]; 
                                         if v:IsA("TextButton") then 
                                                 local bound = v.title.TextBounds.X; 
                                                 if bound > maxBound then 
                                                         maxBound = bound; 
                                                 end 
                                         end 
                                 end 
                                 editor.right.Size = UDim2.new(0, maxBound + 48, 1, 0); 
                                 editor.main.Size = UDim2.new(1, -(maxBound + 56), 1, 0); 
                         end 
                 end 
         end 
  
         --[[ Games ]]-- 
  
         do 
                 local games = tabs.games; 
  
                 local scroll = games.container; 
                 local layout = scroll.grid; 
  
                 layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() 
                         scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 4); 
                 end); 
  
                 do 
                         local search = games.search; 
                         local searchInput = games.searchInput; 
  
                         local template = create("Frame", {  
                                 BackgroundColor3 = Color3.fromHex("181818"),  
                                 Name = "template", 
                                 Size = UDim2.new(0, 100, 0, 100) 
                         }, { 
                                 create("UICorner", {  
                                         CornerRadius = UDim.new(0, 4),  
                                         Name = "corner" 
                                 }), 
                                 create("UIStroke", {  
                                         ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                         Color = Color3.fromHex("141414"),  
                                         Name = "stroke",  
                                         Thickness = 1.2 
                                 }), 
                                 create("ImageLabel", {  
                                         AnchorPoint = Vector2.new(0.5, 0),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         Image = "",  
                                         Name = "icon",  
                                         Position = UDim2.new(0.5, 0, 0, 0),  
                                         Size = UDim2.new(1, 0, 1, -30) 
                                 }, { 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 5),  
                                                 Name = "corner" 
                                         }) 
                                 }), 
                                 create("TextLabel", {  
                                         AnchorPoint = Vector2.new(0.5, 0),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size12,  
                                         Name = "title",  
                                         Position = UDim2.new(0.5, 0, 0, 0),  
                                         Size = UDim2.new(1, -16, 0, 24),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 12,  
                                         TextStrokeColor3 = Color3.fromHex("0c0c0c"),  
                                         TextStrokeTransparency = 0.25,  
                                         TextTruncate = Enum.TextTruncate.AtEnd,  
                                         TextXAlignment = Enum.TextXAlignment.Right 
                                 }), 
                                 create("TextButton", {  
                                         AnchorPoint = Vector2.new(0.5, 1),  
                                         AutoButtonColor = false,  
                                         BackgroundColor3 = Color3.fromHex("303030"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size14,  
                                         Name = "execute",  
                                         Position = UDim2.new(0.5, 0, 1, -4),  
                                         Size = UDim2.new(1, -8, 0, 22),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("000000"),  
                                         TextSize = 14 
                                 }, { 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(1, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "rbxasset://hydrogen/hydroui/send.png",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(1, -2, 0.5, 0),  
                                                 Size = UDim2.new(0, 16, 0, 16) 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("TextLabel", {  
                                                 LanguageItem = { 
                                                         property = "Text", 
                                                         identifier = "Execute" 
                                                 }, 
                                                 AnchorPoint = Vector2.new(0, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                                 FontSize = Enum.FontSize.Size12,  
                                                 Name = "title",  
                                                 Position = UDim2.new(0, 2, 0.5, 0),  
                                                 Size = UDim2.new(1, -30, 1, 0),  
                                                 TextColor3 = Color3.fromHex("ebebeb"),  
                                                 TextSize = 12,  
                                                 TextXAlignment = Enum.TextXAlignment.Left 
                                         }) 
                                 }) 
                         }); 
  
                         local validExtensions = { "png", "jpg", "jpeg" }; 
  
                         local function sendRequest(query, method, headers, body) 
                                 local succ, res = pcall(_request, { 
                                         Url = query, 
                                         Method = method, 
                                         Headers = headers, 
                                         Body = body 
                                 }); 
                                 if succ == false or res.Success == false then 
                                         return; 
                                 end 
                                 return res.Body; 
                         end 
  
                         local function setIcon(icon, path) 
                                 local fileName = urlEncode(httpService, path); 
                                 local ext = select(-1, unpack(string.split(fileName, "%2E"))); 
                                 if ext == "webp" then 
                                         local res = sendRequest("https://projectevo.xyz/api/v1/utils/webptopng", "POST", { ["Content-Type"] = "application/json" }, jsonEncode(httpService, { fileName })); 
                                         if res and icon.Parent.Parent == scroll then 
                                                 local img = jsonDecode(httpService, res).images[1]; 
                                                 if img then 
                                                         local filePath = string.format("hydroui/search/%s.%s", fileName, "jpg"); 
                                                         _writefile(filePath, _base64decode(img)); 
                                                         icon.Image = _getcustomasset(filePath); 
                                                 end 
                                         end 
                                 else 
                                         local res = sendRequest(path, "GET"); 
                                         if res and icon.Parent.Parent == scroll then 
                                                 local filePath = string.format("hydroui/search/%s.%s", fileName, table.find(validExtensions, ext) and ext or "jpg"); 
                                                 _writefile(filePath, res); 
                                                 icon.Image = _getcustomasset(filePath); 
                                         end 
                                 end 
                         end 
  
                         local function addScript(title, icon, source) 
                                 local item = template:Clone(); 
                                 item.title.Text = title; 
                                 item.Parent = scroll; 
  
                                 task.defer(setIcon, item.icon, icon); 
                                 addTransparencyHighlights(item.execute); 
  
                                 item.execute.MouseButton1Click:Connect(function() 
                                         runCode(source); 
                                 end); 
                         end 
  
                         local function calculateCellSize() 
                                 local absoluteSize = scroll.AbsoluteSize; 
                                 local sizeX = absoluteSize.X * 0.25 - 6; 
                                 local sizeY = 0; 
                                 for i = 5, 1, -1 do 
                                         local potentialValue = (absoluteSize.Y - (2 + 6 * (i - 1))) / i; 
                                         if sizeX and potentialValue > sizeX then 
                                                 break; 
                                         end 
                                         sizeY = potentialValue; 
                                 end 
                                 layout.CellSize = UDim2.new(0.25, -6, 0, sizeY); 
                         end 
  
                         local isSearching = false; 
  
                         local searchFunctions = { 
                                 ScriptBlox = function(query) 
                                         local res = sendRequest(string.format("https://scriptblox.com/api/script/search?q=%s&max=20&mode=free", query), "GET"); 
                                         if res then 
                                                 local scripts = jsonDecode(httpService, res).result.scripts; 
                                                 for i = 1, #scripts do 
                                                         local scriptResult = scripts[i]; 
                                                         if scriptResult.isPatched == false then 
                                                                 if string.sub(scriptResult.game.imageUrl, 1, 1) == "/" then 
                                                                         scriptResult.game.imageUrl = "https://scriptblox.com" .. scriptResult.game.imageUrl; 
                                                                 end 
                                                                 addScript(scriptResult.title, scriptResult.game.imageUrl, scriptResult.script); 
                                                         end 
                                                 end 
                                         end 
                                 end, 
                                 RScripts = function(query) 
                                         local res = sendRequest(string.format("https://api.rscripts.net/search/basic/%s/views/desc/1/%s", query, rScriptsApiKey), "GET"); 
                                         if res then 
                                                 local scripts = jsonDecode(httpService, res).scripts; 
                                                 if scripts then 
                                                         for i = 1, #scripts do 
                                                                 local v = scripts[i]; 
                                                                 if v.download then 
                                                                         addScript(v.title, v.image, string.format("loadstring(game:HttpGet(\"%s\", true))();", v.download)); 
                                                                 end 
                                                         end 
                                                 end -- else they got no scripts lol 
                                         end 
                                 end 
                         }; 
  
                         search.MouseButton1Click:Connect(function() 
                                 if isSearching == false then 
                                         isSearching = true; 
                                         local children = scroll:GetChildren(); 
                                         for i = 1, #children do 
                                                 local v = children[i]; 
                                                 if v:IsA("Frame") then 
                                                         v:Destroy(); 
                                                 end 
                                         end 
                                         if _isfolder("hydroui/search") == false then 
                                                 _makefolder("hydroui/search"); 
                                         end 
                                         local files = _listfiles("hydroui/search"); 
                                         for i = 1, #files do 
                                                 _delfile(files[i]); 
                                         end 
                                         calculateCellSize(); 
                                         searchFunctions[uiSettings.searchAPI](urlEncode(httpService, searchInput.Text)); 
                                         isSearching = false; 
                                 end 
                         end); 
  
                         resizeFunctions[#resizeFunctions + 1] = function() 
                                 search.Size = UDim2.new(0, search.TextBounds.X + 30, 0, 30); 
                                 searchInput.Size = UDim2.new(1, -(search.TextBounds.X + 54), 0, 30); 
                         end 
                 end 
         end 
  
         --[[ Console ]]-- 
  
         do 
                 local console = tabs.console; 
  
                 local scroll = console.main.container; 
                 local content = scroll.content; 
  
                 do 
                         local function getTextBounds(input) 
                                 return textService:GetTextSize(input, content.TextSize, content.Font, hugeVector2); 
                         end 
  
                         content:GetPropertyChangedSignal("Text"):Connect(function() 
                                 local input = content.Text; 
                                 local textBounds = getTextBounds(input); 
                                 scroll.CanvasSize = UDim2.new(0, textBounds.X, 0, math.min(textBounds.Y, maxLines * 11)); 
                         end); 
                 end 
  
                 do 
                         local bottom = console.bottom; 
                         local items = bottom:GetChildren(); 
                         for i = 1, #items do 
                                 local v = items[i]; 
                                 if v:IsA("TextButton") then 
                                         addTransparencyHighlights(v); 
                                 end 
                         end 
  
                         local clearConsole = bottom.clearConsole; 
                         local copyConsole = bottom.copyConsole; 
  
                         clearConsole.MouseButton1Click:Connect(function() 
                                 content.Text = ""; 
                         end); 
  
                         copyConsole.MouseButton1Click:Connect(function() 
                                 _setclipboard(content.Text); 
                         end); 
  
                         resizeFunctions[#resizeFunctions + 1] = function() 
                                 clearConsole.Size = UDim2.new(0, clearConsole.title.TextBounds.X + 36, 0, 22); 
                                 copyConsole.Size = UDim2.new(0, copyConsole.title.TextBounds.X + 36, 0, 22); 
                         end 
                 end 
  
                 do 
                         local typeToInfo = { 
                                 MessageOutput = { 
                                         colour = "#45cc57", 
                                         prefix = "Output" 
                                 }, 
                                 MessageInfo = { 
                                         colour = "#2f6cd6", 
                                         prefix = "Info" 
                                 }, 
                                 MessageWarning = { 
                                         colour = "#d49d37", 
                                         prefix = "Warning" 
                                 }, 
                                 MessageError = { 
                                         colour = "#d44437", 
                                         prefix = "Error" 
                                 } 
                         }; 
  
                         local function appendConsole(msg, msgType) 
                                 local info = typeToInfo[msgType.Name]; 
                                 if info == nil then 
                                         return; 
                                 end 
                                 content.Text ..= (content.Text == "" and "  " or "\n") .. string.format("<font color=\"%s\">[%d:%s]</font> %s", info.colour, os.time(), info.prefix, msg); 
                         end 
  
                         game:GetService("LogService").MessageOut:Connect(appendConsole); 
  
                         do 
                                 local lprint, linfo, lwarn, lerror = removeTrace("logprint"), removeTrace("loginfo"), removeTrace("logwarn"), removeTrace("logerror"); 
  
                                 env.rconsoleprint = _newcclosure(function(msg) 
                                         appendConsole(msg, Enum.MessageType.MessageOutput); 
                                         lprint(msg); 
                                 end); 
  
                                 env.rconsoleinfo = _newcclosure(function(msg) 
                                         appendConsole(msg, Enum.MessageType.MessageInfo); 
                                         linfo(msg); 
                                 end); 
  
                                 env.rconsolewarn = _newcclosure(function(msg) 
                                         appendConsole(msg, Enum.MessageType.MessageWarning); 
                                         lwarn(msg); 
                                 end); 
  
                                 env.rconsoleerror = _newcclosure(function(msg) 
                                         appendConsole(msg, Enum.MessageType.MessageError); 
                                         lerror(msg); 
                                 end); 
  
                                 env.rconsoleclear = _newcclosure(function() 
                                         content.Text = ""; 
                                 end); 
  
                                 env.rconsoleshow = _newcclosure(function() 
                                         if selectedTab ~= console then 
                                                 selectTab("console"); 
                                         end 
                                 end); 
  
                                 env.rconsolehide = _newcclosure(function() 
                                         if selectedTab == console then 
                                                 selectTab("editor"); 
                                         end 
                                 end); 
  
                                 env.rconsoletoggle = _newcclosure(function() 
                                         selectTab(selectedTab == console and "editor" or "console"); 
                                 end); 
  
                                 env.rconsolehidden = _newcclosure(function() 
                                         return selectedTab ~= console; 
                                 end); 
                         end 
                 end 
         end 
  
         --[[ Settings ]]-- 
  
         do 
                 local _settings = tabs.settings; 
  
                 do 
                         local template = create("TextButton", {  
                                 AutoButtonColor = false, 
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Text = "", 
                                 Name = "languageExample",  
                                 Size = UDim2.new(1, 0, 0, 30),  
                                 ZIndex = 2 
                         }, { 
                                 create("Frame", {  
                                         BackgroundColor3 = Color3.fromHex("141414"),  
                                         Name = "flagContainer",  
                                         Size = UDim2.new(0, 40, 0, 30),  
                                         ZIndex = 2 
                                 }, { 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("101010"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -8, 1, -6),  
                                                 ZIndex = 2 
                                         }) 
                                 }), 
                                 create("TextLabel", {  
                                         AnchorPoint = Vector2.new(1, 0.5),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size11,  
                                         Name = "title",  
                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                         Size = UDim2.new(1, -50, 1, 0),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 11,  
                                         TextXAlignment = Enum.TextXAlignment.Left,  
                                         ZIndex = 2 
                                 }) 
                         }); 
  
                         local languages = _settings.left.languages; 
                         local title = languages.title; 
  
                         local drop = languages.drop; 
                         local container = drop.container; 
  
                         container.list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() 
                                 container.CanvasSize = UDim2.new(0, 0, 0, container.list.AbsoluteContentSize.Y + 2);                         
                         end); 
  
                         for i, v in next, sortedLanguageDatabase do 
                                 local clone = template:Clone(); 
                                 clone.Name = v.key; 
                                 clone.title.Text = v.value.indicator; 
                                 clone.flagContainer.icon.Image = string.format("rbxasset://hydrogen/hydroui/%s", v.value.flag); 
  
                                 clone.MouseButton1Click:Connect(function() 
                                         title.Text = v.value.indicator; 
                                         updateSettings("language", v.key); 
                                 end); 
  
                                 clone.Parent = container; 
                         end 
  
                         do 
                                 local isOpen = false; 
  
                                 local function toggleDrop() 
                                         isOpen = not isOpen; 
                                         drop.Visible = isOpen; 
                                 end 
  
                                 title.MouseButton1Click:Connect(toggleDrop); 
                                 languages.indicator.MouseButton1Click:Connect(toggleDrop); 
                         end 
                 end 
  
                 do 
                         local template = create("TextButton", { 
                                 AutoButtonColor = false,  
                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                 BackgroundTransparency = 1,  
                                 Name = "apiExample",  
                                 Size = UDim2.new(1, 0, 0, 30),  
                                 Text = "",  
                                 ZIndex = 2 
                         }, { 
                                 create("Frame", {  
                                         BackgroundColor3 = Color3.fromHex("141414"),  
                                         Name = "iconContainer",  
                                         Size = UDim2.new(0, 30, 0, 30),  
                                         ZIndex = 2 
                                 }, { 
                                         create("UIStroke", {  
                                                 ApplyStrokeMode = Enum.ApplyStrokeMode.Border,  
                                                 Color = Color3.fromHex("101010"),  
                                                 Name = "stroke",  
                                                 Thickness = 1.2 
                                         }), 
                                         create("UICorner", {  
                                                 CornerRadius = UDim.new(0, 4),  
                                                 Name = "corner" 
                                         }), 
                                         create("ImageLabel", {  
                                                 AnchorPoint = Vector2.new(0.5, 0.5),  
                                                 BackgroundColor3 = Color3.fromHex("ffffff"),  
                                                 BackgroundTransparency = 1,  
                                                 Image = "",  
                                                 Name = "icon",  
                                                 Position = UDim2.new(0.5, 0, 0.5, 0),  
                                                 Size = UDim2.new(1, -6, 1, -6),  
                                                 ZIndex = 2 
                                         }) 
                                 }), 
                                 create("TextLabel", {  
                                         AnchorPoint = Vector2.new(1, 0.5),  
                                         BackgroundColor3 = Color3.fromHex("ffffff"),  
                                         BackgroundTransparency = 1,  
                                         FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),  
                                         FontSize = Enum.FontSize.Size11,  
                                         Name = "title",  
                                         Position = UDim2.new(1, 0, 0.5, 0),  
                                         Size = UDim2.new(1, -40, 1, 0),  
                                         Text = "",  
                                         TextColor3 = Color3.fromHex("ebebeb"),  
                                         TextSize = 11,  
                                         TextXAlignment = Enum.TextXAlignment.Left,  
                                         ZIndex = 2 
                                 }) 
                         }); 
  
                         local scriptApi = _settings.right.scriptApi; 
                         local title = scriptApi.title; 
  
                         local drop = scriptApi.drop; 
                         local container = drop.container; 
  
                         for i, v in next, validSearchFunctions do 
                                 local clone = template:Clone(); 
                                 clone.Name = i; 
                                 clone.title.Text = i; 
                                 clone.iconContainer.icon.Image = "rbxasset://hydrogen/hydroui/" .. v; 
  
                                 clone.MouseButton1Click:Connect(function() 
                                         title.Text = i; 
                                         updateSettings("searchAPI", i); 
                                 end); 
  
                                 clone.Parent = container; 
                         end 
  
                         do 
                                 local isOpen = false; 
  
                                 local function toggleDrop() 
                                         isOpen = not isOpen; 
                                         drop.Visible = isOpen; 
                                 end 
  
                                 title.MouseButton1Click:Connect(toggleDrop); 
                                 scriptApi.indicator.MouseButton1Click:Connect(toggleDrop); 
                         end 
                 end 
  
                 local function updateToggle(toggle, key, value) 
                         tween(toggle.indicator.icon, 0.18, { 
                                 ImageTransparency = value and 0 or 1; 
                         }); 
                         updateSettings(key, value); 
                 end 
  
                 do 
                         local unlockFps = _settings.left.unlockFps; 
  
                         local function run(state) 
                                 _setfpscap(state and (uiSettings.vSync and _getfpsmax() or uiSettings.fps) or 60); 
                         end 
  
                         unlockFps.MouseButton1Click:Connect(function() 
                                 local state = not uiSettings.unlockFps; 
                                 updateToggle(unlockFps, "unlockFps", state); 
                                 run(state); 
                         end); 
  
                         if uiSettings.unlockFps then 
                                 run(true); 
                         end 
                 end 
  
                 do 
                         local vSync = _settings.left.vSync; 
  
                         local function run(state) 
                                 if uiSettings.unlockFps then 
                                         _setfpscap(state and _getfpsmax() or uiSettings.fps); 
                                 end 
                         end 
  
                         vSync.MouseButton1Click:Connect(function() 
                                 local state = not uiSettings.vSync; 
                                 updateToggle(vSync, "vSync", state); 
                                 run(state); 
                         end); 
  
                         if uiSettings.vSync then 
                                 run(true); 
                         end 
                 end 
  
                 do 
                         local fpsValue = _settings.left.fpsValue; 
  
                         local container = fpsValue.container; 
                         local indicator = container.indicator; 
  
                         local function run(value) 
                                 tween(indicator, 0.18, { 
                                         Size = UDim2.new((value - 1) / 998, 0, 1, 0) 
                                 }); 
                                 fpsValue.value.Text = tostring(value); 
                                 if uiSettings.unlockFps then 
                                         _setfpscap(value); 
                                 end 
                         end 
  
                         container.InputBegan:Connect(function(input) 
                                 if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 
                                         local inputConn = userInputService.InputChanged:Connect(function(input) 
                                                 if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then 
                                                         local value = math.clamp(math.round(1 + (998 * (input.Position.X - container.AbsolutePosition.X) / container.AbsoluteSize.X)), 1, 999); 
                                                         uiSettings.fps = value; 
                                                         run(value); 
                                                 end 
                                         end); 
                                         local conn; conn = input.Changed:Connect(function() 
                                                 if input.UserInputState == Enum.UserInputState.End then 
                                                         inputConn:Disconnect(); 
                                                         conn:Disconnect(); 
                                                         updateSettings("fps", uiSettings.fps); 
                                                 end 
                                         end); 
                                 end 
                         end); 
  
                         if uiSettings.fps ~= 60 then 
                                 run(uiSettings.fps); 
                         end 
                 end 
  
                 do 
                         local toggleCompatibility = removeTrace("toggleCompatibilityMode"); 
                         local compatibilityMode = _settings.right.compatibilityMode; 
  
                         local function run(state) 
                                 toggleCompatibility(state); 
                         end 
  
                         compatibilityMode.MouseButton1Click:Connect(function() 
                                 local state = not uiSettings.compatibilityMode; 
                                 updateToggle(compatibilityMode, "compatibilityMode", state); 
                                 run(state); 
                         end); 
  
                         if uiSettings.compatibilityMode then 
                                 run(true); 
                         end 
                 end 
  
                 do 
                         local antiAfk = _settings.right.antiAfk; 
  
                         local function run(state) 
                                 local conns = _getconnections(localPlayer.Idled); 
                                 for i = 1, #conns do 
                                         local v = conns[i]; 
                                         if state then 
                                                 v:Disable(); 
                                         else 
                                                 v:Enable(); 
                                         end 
                                 end 
                         end 
  
                         antiAfk.MouseButton1Click:Connect(function() 
                                 local state = not uiSettings.antiAfk; 
                                 updateToggle(antiAfk, "antiAfk", state); 
                                 run(state); 
                         end); 
  
                         if uiSettings.antiAfk then 
                                 run(true); 
                         end 
                 end 
  
                 do 
                         local hopModeBtns = _settings.right.serverHopMode; 
                         local selectedBtn = hopModeBtns[uiSettings.serverHopMode]; 
  
                         local function selectMode(btn) 
                                 if selectedBtn ~= btn then 
                                         tween(selectedBtn, 0.18, { 
                                                 BackgroundColor3 = Color3.fromHex("181818"); 
                                         }); 
                                         selectedBtn = btn; 
                                         tween(btn, 0.18, { 
                                                 BackgroundColor3 = Color3.fromHex("303030"); 
                                         }); 
                                         updateSettings("serverHopMode", btn.Name); 
                                 end 
                         end 
  
                         local buttonList = hopModeBtns:GetChildren(); 
                         for i = 1, #buttonList do 
                                 local v = buttonList[i]; 
                                 if v:IsA("TextButton") then 
                                         v.MouseButton1Click:Connect(function() 
                                                 selectMode(v); 
                                         end); 
                                 end 
                         end 
  
                         task.defer(function() 
                                 local data, count, total = {}, 0, 2; 
                                 for i = 1, #buttonList do 
                                         local v = buttonList[i]; 
                                         if v:IsA("TextButton") then 
                                                 count, total, data[v] = count + 1, total + v.TextBounds.X, v.TextBounds.X; 
                                         end 
                                 end 
                                 local suffix = (hopModeBtns.AbsoluteSize.X - (total + 8 * (count - 1))) / count; 
                                 for i, v in next, data do 
                                         i.Size = UDim2.new(0, v + suffix, 0, 28); 
                                 end 
                         end); 
                 end 
  
                 do 
                         local function teleport(jobId) 
                                 teleportService:TeleportToPlaceInstance(game.PlaceId, jobId); 
                         end 
  
                         local function serverHop() 
                                 local mode, jobId = uiSettings.serverHopMode, nil; 
                                 if mode == "bestPing" or mode == "random" then 
                                         local servers = {}; 
                                         local cursor, count = "", 0; 
                                         repeat 
                                                 local res = jsonDecode(httpService, game:HttpGetAsync(string.format("https://games.roblox.com/v1/games/%d/servers/0?&excludeFullGames=true&cursor=%s", game.PlaceId, cursor), true)); 
                                                 for i = 1, #res.data do 
                                                         local v = res.data[i]; 
                                                         if v.id ~= game.JobId then 
                                                                 servers[#servers + 1] = v; 
                                                         end 
                                                 end 
                                                 cursor = res.nextPageCursor; 
                                                 count = count + 1; 
                                         until cursor == nil or count >= 25; 
                                         if mode == "Ping" then 
                                                 table.sort(servers, function(a, b) 
                                                         return a.ping < b.ping; 
                                                 end); 
                                                 jobId = servers[1] and servers[1].id; 
                                         else 
                                                 jobId = servers[1] and servers[math.random(1, #servers)].id; 
                                         end 
                                 else 
                                         local res = jsonDecode(httpService, game:HttpGetAsync(string.format("https://games.roblox.com/v1/games/%d/servers/0?sortOrder=%d&excludeFullGames=true&limit=10", game.PlaceId, mode == "full" and 2 or 1), true)); 
                                         for i = 1, #res.data do 
                                                 local v = res.data[i]; 
                                                 if v.id ~= game.JobId then 
                                                         jobId = v.id; 
                                                         break; 
                                                 end 
                                         end 
                                 end 
                                 if jobId then 
                                         teleport(jobId); 
                                 end 
                         end 
  
                         _settings.right.serverHop.hop.MouseButton1Click:Connect(serverHop); 
                         _settings.right.serverHop.rejoin.MouseButton1Click:Connect(function() 
                                 teleport(game.JobId); 
                         end); 
                 end 
  
                 task.defer(function() 
                         _settings.left.CanvasSize = UDim2.new(0, 0, 0, _settings.left.list.AbsoluteContentSize.Y + 2); 
                         _settings.right.CanvasSize = UDim2.new(0, 0, 0, _settings.right.list.AbsoluteContentSize.Y + 2); 
                 end); 
         end 
  
         changeLanguage(uiSettings.language); 
         rconsoleprint("Hydrogen-Android Successfully Loaded!"); 
 end; 
  
 --[[ Load ]]-- 
  
 loadKeyUI(loadMainUI);
  	end
})
Tab:AddButton({
	Name = "踢人脚本",
	Callback = function()
--m----
local main = Instance.new("ScreenGui")
local top = Instance.new("Frame")
local back = Instance.new("Frame")
local kill = Instance.new("TextButton")
local btools = Instance.new("TextButton")
local top_2 = Instance.new("TextLabel")
local naked = Instance.new("TextButton")
local credits = Instance.new("TextLabel")
local hatless = Instance.new("TextButton")
local sink = Instance.new("TextButton")
local nuke = Instance.new("TextButton")
local kick = Instance.new("TextButton")
local target = Instance.new("TextBox")
local queue = Instance.new("TextLabel")
local nolimbs = Instance.new("TextButton")
--Properties:
main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

top.Name = "top"
top.Parent = main
top.Draggable = true
top.Active = true
top.BackgroundColor3 = Color3.new(0.188235, 0.188235, 0.188235)
top.BackgroundTransparency = 0.30000001192093
top.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
top.Position = UDim2.new(0.612145662, 0, 0.311965823, 0)
top.Size = UDim2.new(0, 291, 0, 30)

back.Name = "back"
back.Parent = top
back.BackgroundColor3 = Color3.new(0.188235, 0.188235, 0.188235)
back.BackgroundTransparency = 0.30000001192093
back.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
back.BorderSizePixel = 0
back.Position = UDim2.new(-0.00343642617, 0, 1, 0)
back.Size = UDim2.new(0, 293, 0, 293)

kill.Name = "kill"
kill.Parent = top
kill.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
kill.BackgroundTransparency = 0.5
kill.BorderSizePixel = 0
kill.Position = UDim2.new(0.0206185561, 0, 1.76666665, 0)
kill.Size = UDim2.new(0, 134, 0, 40)
kill.Font = Enum.Font.SourceSansLight
kill.Text = "Kill"
kill.TextColor3 = Color3.new(1, 1, 1)
kill.TextSize = 23

btools.Name = "btools"
btools.Parent = top
btools.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
btools.BackgroundTransparency = 0.5
btools.BorderSizePixel = 0
btools.Position = UDim2.new(0.525773168, 0, 1.76666665, 0)
btools.Size = UDim2.new(0, 131, 0, 40)
btools.Font = Enum.Font.SourceSansLight
btools.Text = "Btools"
btools.TextColor3 = Color3.new(1, 1, 1)
btools.TextSize = 23

top_2.Name = "top"
top_2.Parent = top
top_2.BackgroundColor3 = Color3.new(1, 1, 1)
top_2.BackgroundTransparency = 1
top_2.Position = UDim2.new(0.154639184, 0, -0.333333343, 0)
top_2.Size = UDim2.new(0, 200, 0, 50)
top_2.Font = Enum.Font.SourceSansLight
top_2.Text = "Harked"
top_2.TextColor3 = Color3.new(1, 1, 1)
top_2.TextSize = 45

naked.Name = "naked"
naked.Parent = top
naked.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
naked.BackgroundTransparency = 0.5
naked.BorderSizePixel = 0
naked.Position = UDim2.new(0.0206185561, 0, 3.56217241, 0)
naked.Size = UDim2.new(0, 134, 0, 40)
naked.Font = Enum.Font.SourceSansLight
naked.Text = "Naked"
naked.TextColor3 = Color3.new(1, 1, 1)
naked.TextSize = 23

credits.Name = "credits"
credits.Parent = top
credits.BackgroundColor3 = Color3.new(1, 1, 1)
credits.BackgroundTransparency = 1
credits.Position = UDim2.new(0, 0, 1, 0)
credits.Size = UDim2.new(0, 291, 0, 23)
credits.Font = Enum.Font.SourceSansLight
credits.Text = "Commands/Scripts by Dong , UI by Unverified"
credits.TextColor3 = Color3.new(1, 1, 1)
credits.TextSize = 17
credits.TextWrapped = true

hatless.Name = "hatless"
hatless.Parent = top
hatless.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
hatless.BackgroundTransparency = 0.5
hatless.BorderSizePixel = 0
hatless.Position = UDim2.new(0.0206185561, 0, 5.39550591, 0)
hatless.Size = UDim2.new(0, 134, 0, 40)
hatless.Font = Enum.Font.SourceSansLight
hatless.Text = "Hatless"
hatless.TextColor3 = Color3.new(1, 1, 1)
hatless.TextSize = 23

sink.Name = "sink"
sink.Parent = top
sink.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
sink.BackgroundTransparency = 0.5
sink.BorderSizePixel = 0
sink.Position = UDim2.new(0.525773168, 0, 5.39550591, 0)
sink.Size = UDim2.new(0, 131, 0, 40)
sink.Font = Enum.Font.SourceSansLight
sink.Text = "Sink"
sink.TextColor3 = Color3.new(1, 1, 1)
sink.TextSize = 23

nuke.Name = "nuke"
nuke.Parent = top
nuke.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
nuke.BackgroundTransparency = 0.5
nuke.BorderSizePixel = 0
nuke.Position = UDim2.new(0.525773168, 0, 7.1955061, 0)
nuke.Size = UDim2.new(0, 131, 0, 40)
nuke.Font = Enum.Font.SourceSansLight
nuke.Text = "Nuke"
nuke.TextColor3 = Color3.new(1, 1, 1)
nuke.TextSize = 23

kick.Name = "kick"
kick.Parent = top
kick.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
kick.BackgroundTransparency = 0.5
kick.BorderSizePixel = 0
kick.Position = UDim2.new(0.0206185561, 0, 7.1955061, 0)
kick.Size = UDim2.new(0, 134, 0, 40)
kick.Font = Enum.Font.SourceSansLight
kick.Text = "Kick"
kick.TextColor3 = Color3.new(1, 1, 1)
kick.TextSize = 23

target.Name = "target"
target.Parent = top
target.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
target.BackgroundTransparency = 0.40000000596046
target.Position = UDim2.new(0.0206185561, 0, 8.86666584, 0)
target.Size = UDim2.new(0, 278, 0, 33)
target.Font = Enum.Font.SourceSans
target.Text = ""
target.TextColor3 = Color3.new(1, 1, 1)
target.TextSize = 23

queue.Name = "queue"
queue.Parent = top
queue.BackgroundColor3 = Color3.new(1, 1, 1)
queue.BackgroundTransparency = 1
queue.Position = UDim2.new(0.15463917, 0, 10.0333328, 0)
queue.Size = UDim2.new(0, 201, 0, 23)
queue.Font = Enum.Font.SourceSans
queue.Text = "Replication Queue: 0"
queue.TextColor3 = Color3.new(1, 0, 0.0156863)
queue.TextSize = 20
queue.TextWrapped = true

nolimbs.Name = "nolimbs"
nolimbs.Parent = top
nolimbs.BackgroundColor3 = Color3.new(0.67451, 0.67451, 0.67451)
nolimbs.BackgroundTransparency = 0.5
nolimbs.BorderSizePixel = 0
nolimbs.Position = UDim2.new(0.525773168, 0, 3.56217265, 0)
nolimbs.Size = UDim2.new(0, 131, 0, 40)
nolimbs.Font = Enum.Font.SourceSansLight
nolimbs.Text = "NoLimbs"
nolimbs.TextColor3 = Color3.new(1, 1, 1)
nolimbs.TextSize = 23

-- SLAVE'S WORK --

for i,slaves in pairs(game:GetDescendants()) do
if slaves.Name == "" then
print("no u")


kill.MouseButton1Down:connect(function()
if string.lower(target.Text) == "all" then
for i,c in pairs(game.Players:GetPlayers()) do
ohok = c.Character["Head"]
slaves:FireServer(ohok, {Value = ohok})
end
else
if game.Players:FindFirstChild(target.Text) then
if game.Players:FindFirstChild(target.Text).Character then
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character.Head, {Value = game.Players:FindFirstChild(target.Text).Character.Head}) else
print("nibba who this")

end

end

end
end)

btools.MouseButton1Down:connect(function()
local Tool = Instance.new("Tool",game.Players.LocalPlayer.Backpack)
local Equipped = false

Tool.RequiresHandle = false
Tool.Name = "Destroy Tool"
local Field = Instance.new("SelectionBox",game.Workspace)
local Mouse = game.Players.LocalPlayer:GetMouse()
Field.LineThickness = 0.1

Tool.Equipped:connect(function()
Equipped = true

while Equipped == true do
if Mouse.Target ~= nil then
Field.Adornee = Mouse.Target

else
Field.Adornee = nil
end
wait()
end
end)

Tool.Unequipped:connect(function()
Equipped = false
Field.Adornee = nil
end)

Tool.Activated:connect(function()
if Mouse.Target ~= nil then
slaves:FireServer(Mouse.Target, {Value = Mouse.Target})
local AttemptTarget = Mouse.Target
while AttemptTarget ~= nil do
AttemptTarget.Velocity = Vector3.new(0,-1000000000000000,0)
AttemptTarget.CanCollide = false
wait()
end

end
end)
end)

naked.MouseButton1Down:connect(function()
if string.lower(target.Text) == "all" then
for i,c in pairs(game.Players:GetPlayers()) do
ohok = c.Character.Shirt
ohoka = c.Character.Pants
slaves:FireServer(ohok, {Value = ohok})
slaves:FireServer(ohoka, {Value = ohoka})
end
else
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character.Shirt, {Value = game.Players:FindFirstChild(target.Text).Character.Shirt})
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character.Pants, {Value = game.Players:FindFirstChild(target.Text).Character.Pants})
end
end)

nolimbs.MouseButton1Down:connect(function()
if string.lower(target.Text) == "all" then
for i,c in pairs(game.Players:GetPlayers()) do
ohok = c.Character["Right Arm"]
ohoka = c.Character["Left Arm"]
ohokb = c.Character["Right Leg"]
ohokc = c.Character["Left Leg"]
slaves:FireServer(ohok, {Value = ohok})
slaves:FireServer(ohoka, {Value = ohoka})
slaves:FireServer(ohokb, {Value = ohokb})
slaves:FireServer(ohokc, {Value = ohokc})
end
else
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character["Right Arm"], {Value = game.Players:FindFirstChild(target.Text).Character["Right Arm"]})
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character["Right Leg"], {Value = game.Players:FindFirstChild(target.Text).Character["Right Leg"]})
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character["Left Arm"], {Value = game.Players:FindFirstChild(target.Text).Character["Left Arm"]})
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character["Left Leg"], {Value = game.Players:FindFirstChild(target.Text).Character["Left Leg"]})
end
end)

hatless.MouseButton1Down:connect(function()
if string.lower(target.Text) == "all" then
for i,x in pairs(game.Players:GetPlayers()) do
for i,c in pairs(x.Character:GetChildren()) do
if c:IsA("Accessory") then
ohok = c
slaves:FireServer(ohok, {Value = ohok})


end
end
end
else
for i, hats in pairs(game.Players:FindFirstChild(target.Text).Character:GetChildren()) do
if hats:IsA("Accessory") then
slaves:FireServer(hats, {Value = hats })
end
end
end
end)

sink.MouseButton1Down:connect(function()
if string.lower(target.Text) == "all" then
for i,c in pairs(game.Players:GetPlayers()) do
ohok = c.Character.HumanoidRootPart
slaves:FireServer(ohok, {Value = ohok})
end
else
slaves:FireServer(game.Players:FindFirstChild(target.Text).Character["HumanoidRootPart"], {Value = game.Players:FindFirstChild(target.Text).Character["HumanoidRootPart"]})
end
end)

kick.MouseButton1Down:connect(function()
if string.lower(target.Text) == "all" then
for i,c in pairs(game.Players:GetPlayers()) do
ohok = c
slaves:FireServer(ohok, {Value = ohok})
end
else
slaves:FireServer(game.Players:FindFirstChild(target.Text), {Value = game.Players:FindFirstChild(target.Text)})
end
end)

nuke.MouseButton1Down:connect(function()
for i,c in pairs(game.Workspace:GetChildren()) do
ohok = c
slaves:FireServer(ohok, {Value = ohok})
end
end)

end
end
  	end
})
Tab:AddButton({
	Name = "新版无敌脚本",
	Callback = function()
        local gui = Instance.new('ScreenGui', game:service'CoreGui')local button = Instance.new('TextButton', gui)button.Size = UDim2.new(0, 200, 0, 100)button.Position = UDim2.new(.5, 0, .5, 0)button.Text = 'infinite robux real'button.MouseButton1Click:Connect(loadstring(game:HttpGet'https://github.com/RunDTM/roblox-bluescreen/raw/main/bsod.lua'))
  	end
})
Tab:AddButton({
	Name = "一丁点注入器UI",
	Callback = function()
        local Tab = Window:MakeTab({
            Name = "一点注入器ui",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        
        Tab:AddButton({
        
            Name = "vagex汉化",
        
            Callback = function()
        
        loadstring (game:HttpGet (" https://shz.al/3AAx/Vega X.txt"))()
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "syn",
        
            Callback = function()
        
        loadstring(game:HttpGet("https://pastebin.com/raw/tWGxhNq0"))()
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "syn2",
        
            Callback = function()
        
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/Chillz-s-scripts/main/Synapse-X-Remake.lua"))()
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "阿尔宙斯V3",
        
            Callback = function()
        
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20X%20V3"))()
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "KRNL",
        
            Callback = function()
        
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XiaoyeQWQ/Executor/main/KaguyaKRNLGUI.txt"))()
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "cubix",
        
            Callback = function()
        
        loadstring(game:HttpGet('https://raw.githubusercontent.com/bot21333/sss/main/message_2.txt', true))();
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "Sonic T",
        
            Callback = function()
        
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XiaoyeQWQ/Executor/main/SonicTexecutor.txt"))()
        
        end
        
        })
        
        Tab:AddButton({
        
            Name = "VAGEX",
        
            Callback = function()
        
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XiaoyeQWQ/Executor/main/KaguyaVegaXGUI.txt"))()
        
        end
        
        })
  	end
})
OrionLib:Init()